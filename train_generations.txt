<class 'dict'>
500
dict_keys(['192566765501753493345497975333407772913', '144826315316768374173692130587208321807', '318988216362178306401487701037247664573', '252491322485057417671863025229240060490', '300302960101875530025611370484339798872', '73942423953321228930194732700203702763', '127405269566050263240082980988971794064', '206865124014160866006334145581105887551', '276022737814801557236603657563903291530', '146041382781843151309943583842476878405', '45096472343826651446095107748312803118', '105450655671891765775490572252870768368', '16995382464582584603001219352329872199', '253645208191160918627550358624861503365', '306899696324794934554438398647872015297', '90802376553055510434825222912642764024', '163253315705630916128547411891325493364', '300332967360249423035223918083705385715', '184858692485181861109930880160209958960', '247779724035570137361318661217593455738', '233086516018861420173853199482489798024', '320893582517647281576262121316948748394', '135658736759552543974668859108798582601', '196856727008913026828772628800502836163', '178518457440810724135197632631752915438', '243961761631778784274803218701641692478', '41646431874729323981674074789947631340', '138619452816654392010171033279107778251', '68370943988147696545458075982090652448', '144517269965593658162921329947363271461', '302885358029123359633304891032815667654', '121614553431962287789970670737176338163', '276661339488905452418133643034404742666', '123824808440534981830277054767715858766', '43719036245228933814349708539677635651', '282165350712001499709903877059286765627', '160240484577993282159604066154906820320', '145732201166315032203165061438723890565', '4002544065385692370631602937620156105', '168006412715185156036821738494381204181', '255749630304793004609172428017250520357', '21853083108770756378834560008172198066', '98125762700425547512337024627292480172', '211834833514264067819618047124103821429', '68253144028380128918616534733933436531', '323563735345956029941176144195105218928', '333597564054129115162605069983064115255', '167610813939300460861054993907759624787', '320055430866320295958709776981664299747', '211958119303777843176176348207140663034', '196168567317702710612261720488645759670', '139566501576575618039115175274670282314', '322028746654654665756847932195004492378', '196985574513020705262105449380613604309', '10881289729456216200873296904560161752', '235876136254617275667572987595450556287', '25911169994715296157711298168308041513', '148252821328110070762037412177102348432', '235296375412834410324859687738575233732', '186550072179518908282014546151610400762', '260007600736825237725044267312891853119', '35664396824955691290957553979939168049', '339148907142639500979517450004500548231', '322237329832965163966007924447953526427', '30393751189916050532485451961784191288', '141527528992617758986938082421649661082', '13567368464897662334830381845358852501', '177998405774535793944990725760638330972', '264175855792719724671714833676858700599', '3669695212600559155447723462326271508', '153023692105618789346702632406289344096', '21824530588489607946399377907283853870', '27380348263737540923052007422421784519', '208799331739458533017705133176449996028', '242366912056136646150507630339397215678', '179346468034032003704523951025792443436', '238161062601069238420618588666373091125', '24417326290741017340790453872538106747', '16613882892830467806546304374288024567', '21781055362267300220747160657050769608', '309273492966215528970942131797154850720', '186123598465144826251467318872342578276', '335023223780136362376951443964298221404', '135113573813980774356105673568454822992', '198451490229312318176250709688118112954', '47406603659318375826783680606456994248', '241678550976756653580899220731445313393', '213216769864260958552302958462104687805', '156374179212552768350401489190454700275', '128057339182170355751883246785499552494', '96614960828336329336745350067670580350', '18100826639000837003152275054635383201', '46978202400019995803048513936387167406', '192425824554876041957222139665425232026', '83528968516445433453509617831911615884', '156104970120579737519646627577605740239', '68838839744752530396341501700714733790', '29378418603318134791438896766579904102', '87636550321878124806882135170994952130', '45563207209849371914229685966159771508', '265936098235039201803308785227704747102', '285930570199144441957972182976824804501', '8475934722060553222040500605260637358', '238843502758165140964368546019388873295', '334581350296120480367261421563983705765', '129907964634810605453053246002237295560', '111522334749473954153894703786029711775', '308452239157841251341747657848628630640', '300688691761695500776736798416786589757', '56462358204221785575671081393392641828', '264492954299989567625230528469723869397', '123031215552768465947489488321763433747', '70034138503071488307301302515512325491', '159076132732291635240524174499427090219', '291144255699344419357989041002854457781', '13854996707291025586055527354124847190', '168490295988734405249390154131935185029', '6776802769051769365953897353838604966', '123242803959710812315202709532554288982', '42833698102290676464874163448767640135', '295095979444912691559926912168029105931', '252033550515368521307117691557852573643', '310174766979311185253216366138103365715', '181774374650396046242406734049900143390', '331660614590016778135287642191726165628', '324820970302933751186028874494426228771', '130687210507135138158397592755308049218', '53274303663405083422116175541800204370', '250059352026955696053245304517372455893', '189672046327043991060952109915984920985', '233018890745564144579465153960735729748', '31781941835902499588679515450999201167', '234968202379226996441421362140775104446', '76545929122918191764793905510970574497', '173636007320763489677299490209460787318', '229170318474524719034067957991549861814', '93369735893925749978024214535270699686', '44056024413547951322767394569150314419', '81483122158632463877292180554803528640', '176684862188527662861425262290944169427', '168274180611813134957082784511671141146', '52723763469763288755377731346050960500', '43767945769929223522955726760482847946', '291271294390939978563718792459306252976', '32660404714146261594017691111433642169', '38745243617510227643125850154034057959', '217830041305300218403148931824146830234', '192141693044942637706426934830526506075', '81487294908951603256996264237055243450', '180318084724149222772728840765574049122', '181239352665575668831079258707160831262', '311057583501653341701886449639705592032', '214550783653833022571217369943323361592', '296535751176580299810137014679253839657', '100936852714345790077248097197540882670', '284630851124990253489091957857153631101', '1683011395530086565720315096853711022', '150083440388240843763314275937542066776', '81244332995537692179587915743895783266', '307530010586069259921202592019591083231', '17662878964593709817063920693736136015', '237872808202852723530784495625826864930', '152675490732111985212646801409407210227', '180498256462196551773436965902946247899', '39420177020957877944393328083549366158', '250902319081714487332886945583981914965', '124179341112811498960819783087715892391', '320222099055156391546097176572902011225', '232423417736115427988669265503815216208', '294927688423627277710155037956184964832', '213701650377957415909845329583462630559', '216197810693029640402091533550140169337', '206318651501085105639972272208241462796', '111897038798621056518831427631517755303', '147779174368667496048909218673937204395', '291970198749930624026268518020421452676', '215734200375757970156916895600656412142', '69473551309042707517281865305853677895', '198583945725721991674938870176852415309', '60991571921365122885230986129027391995', '112439347889379293097987252864404903518', '11680331785068515148456340105560861847', '261254170806543673861855075642184546795', '78497034924490418530805762271807404193', '299581464679262681850763517209068774618', '253715240938783311741038917831173056854', '208489583093401191465113517026624910295', '46647447193045795628323596244589048931', '10966074543901517477364732942015778808', '339149744893660285137218492256137297395', '218275342711631337856973563624839051277', '175365714901545549037744153837609809091', '207405623594446908613910160083214920906', '295721133551313037003218385038645841971', '153087901943400500082408407976902961664', '147580453735844122318139985719229352195', '230252488792271781604711703219630814128', '94472712112606296234129770326955987808', '107490582488842314494253911039828007872', '338491303436063744531418221079735244352', '291282290886535409978909703339803815873', '328447259032384053761863265516174750681', '233558502341880634634735511533470717872', '55263147172295123017909560426286568332', '237687854910576507567971273498027949574', '16202945781029922120160777797256517657', '123584650545463914068196490215293723253', '112512653525576048371295925030598196931', '45755384076082091870849779112089745287', '55494487028716034782981453564402901944', '87853895163434729299833218199025839501', '292684906998794697216328865562232074749', '195303369408133964774489111183950190455', '268402708432426830177707196375572718936', '80036803484421873569794968191345607563', '156845925365979044438433254302190351098', '43814329345678189933879252960679007558', '76846769095736674064929847593683346275', '315960496772872662530234073742748693691', '315933313220252838540973137195040072500', '322405567974317541848831685930586294097', '43606630774321893798265684732537957406', '70752152378013812315822982763783822665', '305108324243777914518778592783408768615', '283031692528067279999929630903321078117', '299951613067303540681201935228417999477', '71195401009200096103012987519539618692', '242428669277065383800244648522680264114', '4083821256679784276648544188586882958', '179500919441214507777366254358643215743', '106672582804728343686434178520485926656', '276056006835250280929354383841995492109', '297686009442561819588224118862021257564', '83340959084944608675596273728971843621', '187841829121333818463300276451201285999', '24985165128638620145160621829735847022', '142380867537269483316262219590494673257', '99726541484321600103649435140893656675', '152839722919546948976103852745059232497', '177223386861074003791905051369493153848', '228675833131199846721054374212830680327', '80212411259148466639955645343916635416', '153256292016964463443728984144206544304', '134829948687202818572589460385578331208', '244333762587516390385450239948625689676', '337522999038418189640469009530678824485', '104847848039824276425096391399031703872', '66993385727059141259201975501285124633', '74005814613361634380303201665114635117', '12146232797421686173302789665794077167', '292015171333082662839991725743703126216', '101448505624018060527723288489005141638', '222834287041971500716170819521959227536', '161800859772386730977746924386748438294', '317392834670341283338937660944642671091', '220114823797530422479613664235492973818', '296061616975693079742725890138030707089', '82380072878334709551789764190468102902', '31646887928656831682804429014150804823', '69166693196422708753888601844846509758', '81397792270458025916087351257338446815', '94778603903644324200835741443076382878', '52332608898712027033396783383356001165', '196864679396378089813647532371966589890', '109960501429823556753511885200987861139', '134029215028438592027055662214418344169', '11110009608968042593656899603872158858', '77506916900047788238958554595438049547', '252669435748910899623263754414312690896', '17045368034541867220548974201820633708', '167200520357687557394268844053969708623', '90647169565663770435649390074455838336', '214171447194455008324172539811036652175', '144446484166853296547792704745560379337', '322903503459104039778253693027568287887', '72110887102142614205440589573441924887', '296872415682283940678852136686230882255', '104146792580125066021016972289598001726', '88429078320492598381044410827950508049', '85286463986533970642614509758082100138', '88958774668608811073473067547267050289', '59693379031259720215479941060194179579', '311962492123096900289948659360878686863', '69173108873872114886616497958100476857', '121033822342009854936179535069547388125', '261947350263286873709591640621320515056', '288135975970724884702204693024559148054', '195664885257877191041129408973687882665', '174558705266526467237165414233895069150', '14889918131517653356417178535904509760', '187806677267255526399494688412642008595', '111331075781019898258115626082852126745', '146309341802822935535420821108889041446', '299840508447821089855369866240440724753', '6285281377900569448923298952423180194', '77865379524049111309272063660799097961', '6469076388733372854115999629787206983', '262307002069435293253338666165237699635', '154998781240909760849730960724170257860', '63601322601270515266656822792125783476', '145011758783578328989203926872722943800', '246120728694926540317017558027516956275', '225941412994868541563013298848715525610', '75396728442104296703947216153334871904', '58760419811873730114451738515348744826', '100153390631380258388116990866273230528', '39437776274176571007543378867113033501', '193922828259217390007194120027606505159', '250217648133966092798016996660493888130', '236776199463644069794603593839212480613', '185023696551027618739728991234467789199', '29698349225308754320918897774555060403', '113824320962058306970124055392943517183', '193556839092800788621042905204362648334', '202955777115811987280699418513788322856', '206956624581510942917270636149714907337', '250704740436419171438903828785577035864', '209521623797531935144211717584153494097', '174263786485275069263006587250021091571', '190219522625102596786086398618155153356', '204421269293614587598805783541708928077', '94881720502138050605234386150286378445', '146183214139809971300961889467848906483', '125221220887649825200727101574185473087', '62024499569425870685725457815635055178', '179160722281282151782102708865808211900', '155511134717832663689479930712972377722', '14745668222360339467712488372613992161', '251617701328195827460292184419158579844', '212775761963234218058773512393806725948', '40905379070197253418111629514092720277', '264093883578664907058924731295477895800', '307660029220089726176986829460726011041', '9845967260448918489962827911867810225', '313875409464007107671048909662043149050', '263364351530236104529878618221356339280', '131370138589744861108877479913920041808', '134823944242563590540537969890392563995', '104919144256012515767018783668691366367', '96233378685820066177191275564384480587', '125362217489750988104121721680772121615', '231849347051036993919710383258998616470', '212277403717066527502764818418537101893', '59091154192150993839033613441229543530', '160976786736071627638273556586770509819', '263171183636945526207966135033027933846', '186500353307380592323903339731287435565', '113337858649939442265671630985285610422', '122056861407679908085468613626097755985', '49149507427707804655075809432066385847', '60470791367772132573084208911304249826', '205289216442866536138187278701515307724', '330407022483926413160105664294134650049', '49352685196184792937678106306393922036', '113872322750394112454757816259262059079', '39170248099916900558289586686058872864', '229727392527608249897353591410444346570', '57562942092118846267439472803201849858', '331621212332039734995336435581409108222', '1580797465582322765419462436601517782', '268758124969872175167926290803148213661', '339903417967038959524902862720727815523', '251430741191328300808124836569128187120', '156993193520069748257208725735874595891', '301786368865695038725593009141202656879', '122725637288521254644216841310314437296', '146896398869692673297925107012236880676', '4216313867758261359858286331956722274', '24301856585106039922705646957603912112', '53493738472169836672569973090797325790', '103796998466908453438328071639281647336', '2598872478169432329643955533398354143', '243465557792269031725477188344184851905', '31154385772208322335914570337316954002', '267955960749948228661903725027690629845', '20315429774617782646624378592628173322', '304930938478382788720383996921358992904', '33280640827102717689957007688881802682', '274249608338242007964661802160466087296', '162856310908236233701211693920335344708', '254904469063646884659019138994202922335', '96245766234754081845274940633608643614', '237627328673549738776281532618222920236', '179027564765484031394933204870708983636', '128644870202509778169425799164530212377', '182828260099965194252017383877802339988', '60173673388890333035322288342789261387', '77531749597658564846103506982483162066', '326539575882893164728030538997132406953', '106593083475505750836729952728881582620', '210851585520982376468564665992688936844', '335464748566950050198478317646551808700', '197450559298194012679339395682072343849', '11764063432336950932290147533638348686', '230229352980133600316057024601341158341', '311195634190467684485689015458781618372', '248848692362025694205260992811040104034', '278178236903659359332998521751266861672', '8063326310999489857006450982497195180', '332535048030433131277634229561133705196', '120897105411395266991933240638091599007', '84285215038753726249545095547437641050', '122537270215681954247623527813271837955', '156438298418092728929811262073534774106', '19118866562102393806109529524355418438', '307518824175457082030858663647596463009', '149186725975161984472544802090937999789', '81328885281548666794110735425775135138', '176838896580123091534625122789634146552', '334408083050207523278510833473432068002', '319074744005416958627764075674726877142', '111828181098033545264522473987556850882', '52137381648763898586560821224474263500', '294962527403216860646916587605866786876', '122198653356206234434244673865354792132', '338613061531723216179057620367084413268', '40516185208434270662182022415134392972', '182738438937466943671076140354946281774', '148096088184709529121250936179422321136', '326790128592703342928678224758863951639', '194110398842607821572025177204660611877', '88814033403828465235509704196191027271', '80155366273318938326794963246910030417', '127381100577386363177225480136719250130', '224812378216949517283439716760912399137', '179107895711269720461807915593659596417', '288367942961643881465726120092568230009', '179756318009511142507628572961364908440', '279979582935656760007246914605323215224', '79974073255878754178828429521012675763', '4702651428855226319458067758043103616', '232861013281196204453792394444385469419', '206874134562640033879086795966563508343', '294255499588660911297806806987036370470', '98367182678807292798741336081368154220', '152236925587542896734317026329795781446', '221890514532704585195938169608646909635', '35476941957340041085050290222235843276', '237258070974547432667437290565435978421', '82678587731806814010819305671138695619', '124260990177341235496889431083083897600', '265924860364727688643032453922686888013', '268222498102407144939205649296948911944', '196134602360483132967352780905596711332', '159078860897131170897912649699703862635', '307851238542101931599530145732638197308', '290066546548647106909862790481745839219', '288074179395323601639927433601895660754', '171900842470072161729775133695082264500', '132462669459840330187021531713365647946', '311639562193110474642817049589052948057', '17618108878313622845203590258290222405', '201626797463778288844465772289575099014', '139569287102954419832356661336159618606', '162018681089579160483307994706050259994', '26700230961085068997014200729846470904', '231966425157872201535229128918966973598', '222845490348177567908780836878781808889', '133415777412843876455131661572149103340', '206048988084187081166961380959641954550', '40243996919479275282745825598398755699', '28498979740954328694639780805553282835', '293734612520689255272682687730766392419', '20675158005487116313140304369763255047', '321830251965098813327794683585653114734', '79578698876076704977975493904880280024', '36070154396712154643653036594315999644', '36622441507917707257721454485516711226', '312589320640282127554878433659917910685', '124774877716016870596617776307572335909', '221494145827526289462458716220507483890', '106201516426833113297956256161784471258', '260342534036238364135277911986073399379', '249093719641925845835948156585155931547', '249419115553623093756983007819816491547', '132532817351745135020936454935011230836', '124102255095464627206439794718749384932', '241716708195553408401475408183604654975', '218795540985323367096234144983786424140', '128915403974730318764757286641373842558', '3776806781845316900668396464531678982', '156389365689999926360140935408621548462', '191655695193997094037739397194130001083', '153641513820618293740328822374027395913', '302994331910760981268139265879348494673', '112336655863953727289151152239041489640', '251615365013322300496785118359100654136', '112621010749114873344690779061520400943', '278153753257599531809888903373395552443', '110718371274451688667629004812406078422', '42541121178534249598581172585996043635', '36754556358022080508633952530327595840', '55649484334040535808025618933499393668', '180448380045309061665862502836458131534', '319998578712037567647451627927394052926', '91263013124951831420564963122303849014', '85558074199962147582474503274110867743', '114911040170031719467127176814513378046', '118403327119291304726338423794480953093', '41386005276256069827578514489489948666'])
Key: 192566765501753493345497975333407772913
Value: {'question': 'Which American-born Sinclair won the Nobel Prize for Literature in 1930?', 'responses': [('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sinclair Lewis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Sinclair Lewis'}

Key: 144826315316768374173692130587208321807
Value: {'question': 'Where in England was Dame Judi Dench born?', 'responses': [('Berkshire', [-4.466684341430664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-1.0369967222213745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.630746841430664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kent', [-3.115121841430664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sussex', [-4.036996841430664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surrey', [-1.9432467222213745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-1.0369967222213745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-1.0369967222213745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Birmingham', [-3.958871841430664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kent', [-3.115121841430664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Berkshire', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'York'}

Key: 318988216362178306401487701037247664573
Value: {'question': 'In which decade did Billboard magazine first publish and American hit chart?', 'responses': [('1950', [-0.04858732968568802, 0.0, -0.1602240949869156, -1.535528302192688, -0.21808095276355743, -1.3146722316741943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("1950'", [-0.04858732968568802, 0.0, -0.1602240949869156, -1.535528302192688, -0.21808095276355743, -1.8146722316741943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [-0.04858732968568802, 0.0, -0.1602240949869156, -1.535528302192688, -0.21808095276355743, -0.5646722912788391], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1890', [-0.04858732968568802, 0.0, -1.9102240800857544, -0.2511267364025116, -0.2722393870353699, -0.9752782583236694], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("1940'", [-0.04858732968568802, 0.0, -0.1602240949869156, -0.910528302192688, -0.05908667668700218, -1.6614840030670166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("1950'", [-0.04858732968568802, 0.0, -0.1602240949869156, -1.535528302192688, -0.21808095276355743, -1.8146722316741943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1894', [-0.04858732968568802, 0.0, -1.9102240800857544, -0.2511267364025116, -2.0222394466400146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1941', [-0.04858732968568802, 0.0, -0.1602240949869156, -0.910528302192688, -3.434086561203003, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1883', [-0.04858732968568802, 0.0, -1.9102240800857544, -1.876126766204834, -1.4172630310058594, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940', [-0.04858732968568802, 0.0, -0.1602240949869156, -0.910528302192688, -0.05908667668700218, -1.0364840030670166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1950', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': '30s'}

Key: 252491322485057417671863025229240060490
Value: {'question': 'From which country did Angola achieve independence in 1975?', 'responses': [('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Angola', [-3.231687545776367, -0.08960910886526108], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Portugal', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Portugal'}

Key: 300302960101875530025611370484339798872
Value: {'question': 'Which city does David Soul come from?', 'responses': [('Baltimore', [-3.9740662574768066, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baltimore,', [-3.9740662574768066, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-2.0990662574768066, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Los Angeles', [-3.4740662574768066, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago,', [-2.0990662574768066, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toronto', [-4.099066257476807, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.849066138267517, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philadelphia', [-2.8490662574768066, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queens,', [-4.099066257476807, -0.31378084421157837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-2.7240662574768066, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Baltimore', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Chicago'}

Key: 73942423953321228930194732700203702763
Value: {'question': 'Who won Super Bowl XX?', 'responses': [('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chicago Bears', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Chicago Bears'}

Key: 127405269566050263240082980988971794064
Value: {'question': 'Which was the first European country to abolish capital punishment?', 'responses': [('Great Britain', [-3.7707300186157227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-1.458229899406433, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-2.8332300186157227, -0.22234700620174408], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-3.7707300186157227, -0.17251379787921906], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-2.8332300186157227, -0.22234700620174408], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [-2.0832300186157227, -0.13139772415161133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-2.4582300186157227, -0.26216238737106323], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-2.5832300186157227, -0.15872353315353394], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-1.458229899406433, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium (', [-2.8332300186157227, -3.2843880653381348], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Great Britain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Norway'}

Key: 206865124014160866006334145581105887551
Value: {'question': 'In which country did he widespread use of ISDN begin in 1988?', 'responses': [('Japan', [-2.0033185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-3.0033185482025146, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-2.7533185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-2.7533185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [-2.5033185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-2.0033185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [-2.5033185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-3.3783185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Finland', [-3.7533185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-1.8783185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Japan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Japan'}

Key: 276022737814801557236603657563903291530
Value: {'question': "What is Bruce Willis' real first name?", 'responses': [('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eric', [-4.843710899353027, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Walter', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Walter'}

Key: 146041382781843151309943583842476878405
Value: {'question': 'Which William wrote the novel Lord Of The Flies?', 'responses': [('Golding', [-0.3132617473602295, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Golding', [-1.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.3132617473602295, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.3132617473602295, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.3132617473602295, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Golding', [-1.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.3132617473602295, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Golding', [-1.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.3132617473602295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.3132617473602295, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Golding', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Golding'}

Key: 45096472343826651446095107748312803118
Value: {'question': 'Which innovation for the car was developed by Prince Henry of Prussia in 1911?', 'responses': [('The pneumatic tire', [-1.2288886308670044, -2.098222494125366, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Disc brakes', [-3.603888511657715, -0.815571665763855, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the pneumatic tire', [-3.478888511657715, -1.9319546222686768, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four-wheel', [-3.228888511657715, -0.4740769863128662, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The shock absorber', [-1.2288886308670044, -3.723222494125366, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shock absorber', [-3.978888511657715, -1.3200695514678955, -0.08422516286373138], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Automobile safety glass', [-4.103888511657715, -3.3192191123962402, -1.0335993766784668], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Self-starter', [-2.478888511657715, 0.0, -1.039428949356079], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Safety belts', [-3.728888511657715, -3.4339730739593506, -0.08066273480653763], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The pneumatic tire', [-1.2288886308670044, -2.098222494125366, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The pneumatic tire', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Windshield wipers'}

Key: 105450655671891765775490572252870768368
Value: {'question': 'How is musician William Lee Conley better known?', 'responses': [('As Willy De', [-2.135575771331787, -4.277963638305664, -0.7527126669883728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as Willie Nelson', [-2.635575771331787, -3.1263527870178223, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as DJ Khaled', [-2.635575771331787, -4.001352787017822, -4.718169689178467], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His stage name', [-3.760575771331787, -0.6336528062820435, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He used to', [-1.7605756521224976, -4.285202980041504, -2.3578834533691406], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("He's", [-1.7605756521224976, -1.910203218460083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('he is better', [-4.635575771331787, -0.751386821269989, -0.9167948961257935], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billy Conley', [-1.8855756521224976, -2.880919933319092, -0.14768841862678528], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As "Billy', [-2.135575771331787, -2.277963638305664, -2.358125686645508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('by his stage', [-3.260575771331787, -0.1602240949869156, -0.1759754717350006], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'As Willy De', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580787, 'reference': 'Big Bill Broonzy'}

Key: 16995382464582584603001219352329872199
Value: {'question': 'How is Joan Molinsky better known?', 'responses': [('She is', [-1.5818334817886353, -1.104893445968628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As J', [-1.4568334817886353, -4.692058563232422], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('She starred', [-1.5818334817886353, -4.479893684387207], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Actress', [-4.081833362579346, -0.8190361261367798], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As Joan', [-1.4568334817886353, -1.3170583248138428], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('She was', [-1.5818334817886353, -0.8548934459686279], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Rivers', [-1.4568334817886353, -0.7454741597175598], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Ba', [-1.4568334817886353, -2.245474100112915], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as a', [-1.9568334817886353, -1.4738165140151978], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as the', [-1.9568334817886353, -1.3488165140151978], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'She is', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Joan Rivers'}

Key: 253645208191160918627550358624861503365
Value: {'question': 'In which branch of the arts is Patricia Neary famous?', 'responses': [('Photography', [-2.984382390975952, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-2.609382390975952, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('dance', [-3.609382390975952, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dance', [-2.484382390975952, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Visual', [-3.859382390975952, -2.664741277694702], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Opera', [-2.859382390975952, -0.06816448271274567], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Visual', [-3.859382390975952, -2.664741277694702], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('music', [-4.484382629394531, -0.05782408267259598], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('opera singing', [-3.859382390975952, -2.9002060890197754], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fashion designer', [-3.984382390975952, -3.3279991149902344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Photography', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': 'Ballet'}

Key: 306899696324794934554438398647872015297
Value: {'question': "Which country is Europe's largest silk producer?", 'responses': [('China', [-0.340294748544693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-2.40279483795166, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-0.340294748544693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-3.90279483795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-0.340294748544693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-0.340294748544693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-3.96529483795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-0.340294748544693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-2.34029483795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-0.340294748544693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'China', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Italy'}

Key: 90802376553055510434825222912642764024
Value: {'question': 'The VS-300 was a type of what?', 'responses': [('Aircraft', [-2.6226115226745605, -0.16051004827022552], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Satellite', [-3.7476115226745605, -0.11303999274969101], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sub', [-3.7476115226745605, -1.4132976531982422], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('jet engine', [-3.2476115226745605, -1.4533071517944336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Airplane', [-2.9976115226745605, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Submer', [-3.7476115226745605, -1.5382976531982422], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('aircraft', [-3.4976115226745605, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Missile', [-3.8726115226745605, -0.09537652134895325], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Computer', [-3.2476115226745605, -0.13189548254013062], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helicopter', [-2.7476115226745605, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Aircraft', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Helicopter'}

Key: 163253315705630916128547411891325493364
Value: {'question': 'At which university did Joseph Goebbels become a doctor of philosophy?', 'responses': [('Freiburg', [-3.041588306427002, -0.45338624715805054], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('University of', [-1.9165881872177124, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Munich', [-3.166588306427002, -0.3789835274219513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leipzig', [-2.916588306427002, -0.42447182536125183], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heidelberg', [-1.7915881872177124, -0.42447182536125183], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jena University', [-3.916588306427002, -1.379534125328064], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freiburg', [-3.041588306427002, -0.45338624715805054], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('University of', [-1.9165881872177124, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('University of', [-1.9165881872177124, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('University of', [-1.9165881872177124, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Freiburg', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Heidelberg'}

Key: 300332967360249423035223918083705385715
Value: {'question': "Which prince is Queen Elizabeth II's youngest son?", 'responses': [('Prince Edward', [-0.6402212977409363, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew', [-2.202721357345581, -0.11008840054273605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Andrew', [-0.6402212977409363, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward of', [-1.015221357345581, -2.1699154376983643], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Edward', [-0.6402212977409363, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Edward', [-0.6402212977409363, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-1.015221357345581, -0.41991549730300903], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-1.015221357345581, -0.41991549730300903], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Edward', [-0.6402212977409363, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-1.015221357345581, -0.41991549730300903], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Prince Edward', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Edward'}

Key: 184858692485181861109930880160209958960
Value: {'question': "When did the founder of Jehovah's Witnesses say the world would end?", 'responses': [('1914', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -0.18358570337295532, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1975', [-0.220838725566864, 0.0, -0.2014133334159851, -1.2234445810317993, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1918', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -2.3085856437683105, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1914', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -0.18358570337295532, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1975', [-0.220838725566864, 0.0, -0.2014133334159851, -1.2234445810317993, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1914', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -0.18358570337295532, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1914', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -0.18358570337295532, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -2.6835856437683105, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -2.6835856437683105, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('October 23,', [-3.595838785171509, 0.0, -0.2014133334159851, -1.8195332288742065, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1914', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': '1914'}

Key: 247779724035570137361318661217593455738
Value: {'question': 'Who found the remains of the Titanic?', 'responses': [('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert Ballard', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Robert Ballard'}

Key: 233086516018861420173853199482489798024
Value: {'question': 'Who was the only Spice Girl not to have a middle name?', 'responses': [('Melanie Brown', [-1.2219417095184326, -0.8041943311691284], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel B', [-1.9719417095184326, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Geri', [-1.5969417095184326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel B', [-1.9719417095184326, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel B', [-1.9719417095184326, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emma B', [-1.8469417095184326, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Victoria Beckham', [-2.3469417095184326, -1.1526339054107666], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emma', [-1.8469417095184326, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie Brown', [-1.2219417095184326, -0.8041943311691284], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel B', [-1.9719417095184326, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Melanie Brown', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Posh Spice'}

Key: 320893582517647281576262121316948748394
Value: {'question': 'What are the international registration letters of a vehicle from Algeria?', 'responses': [('A.', [-1.665157675743103, -2.3545894622802734], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L', [-4.540157794952393, -0.8870145082473755], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A', [-1.665157675743103, -1.4795894622802734], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AA', [-3.5401577949523926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AZ', [-2.7901577949523926, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AL', [-1.290157675743103, -0.2618614137172699], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A.', [-1.665157675743103, -2.3545894622802734], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AL', [-1.290157675743103, -0.2618614137172699], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AL', [-1.290157675743103, -0.2618614137172699], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AG', [-4.290157794952393, -0.09427091479301453], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.193549604098133, 'reference': 'DZ'}

Key: 135658736759552543974668859108798582601
Value: {'question': 'How did Jock die in Dallas?', 'responses': [('Poisoned', [-4.492990970611572, -0.842820405960083, -0.9875714778900146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was killed', [-0.8679909110069275, -0.8270969986915588, -1.9317923784255981], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stabbed in', [-3.6179909706115723, 0.0, -1.1367416381835938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In the', [-3.4929909706115723, -1.5745810270309448, -2.525545835494995], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poisonous snake', [-4.492990970611572, -2.717820405960083, -1.8824845552444458], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He fell from', [-0.8679909110069275, -2.577096939086914, -1.9407824277877808], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stabbed in', [-3.6179909706115723, 0.0, -1.1367416381835938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('From an embolism', [-4.367990970611572, -2.4944629669189453, -4.270832061767578], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He tripped and', [-0.8679909110069275, -5.077096939086914, -1.0680314302444458], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was hit', [-0.8679909110069275, -0.8270969986915588, -2.0567922592163086], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Poisoned', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Helicopter accident'}

Key: 196856727008913026828772628800502836163
Value: {'question': 'What star sign is Michael Caine?', 'responses': [('Leo', [-2.264141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capricorn', [-2.764141321182251, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.139141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.139141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scorpio', [-2.826641321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [-2.326641321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.139141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.139141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.139141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo', [-2.264141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Leo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': 'Pisces'}

Key: 178518457440810724135197632631752915438
Value: {'question': 'Who wrote the novel Evening Class?', 'responses': [('Kingsley Amis', [-2.843869209289551, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Salman Rushdie', [-3.781369209289551, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Higgins', [-4.468869209289551, -0.30696916580200195, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kingsley Amis', [-2.843869209289551, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Higgins', [-4.468869209289551, -0.30696916580200195, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anthony Burgess', [-3.718869209289551, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ken Follett', [-3.218869209289551, -1.137794017791748, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Orwell', [-3.093869209289551, -0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Clavell', [-3.968869209289551, -2.0225868225097656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Caryl Churchill', [-3.468869209289551, -1.8296610116958618, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kingsley Amis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Maeve Binchy'}

Key: 243961761631778784274803218701641692478
Value: {'question': 'Which country does the airline Air Pacific come from?', 'responses': [('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Fiji', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Fiji'}

Key: 41646431874729323981674074789947631340
Value: {'question': 'In which branch of the arts does Allegra Kent work?', 'responses': [('Ballet', [-2.2670226097106934, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Journalism', [-4.392022609710693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Film', [-3.5170226097106934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dance', [-2.3920226097106934, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('theatre', [-3.8920226097106934, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photography', [-3.0170226097106934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theater', [-3.1420226097106934, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('music', [-3.3920226097106934, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Drama', [-3.7670226097106934, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theatre', [-2.6420226097106934, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ballet', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Ballet'}

Key: 138619452816654392010171033279107778251
Value: {'question': "Who had a 70s No 1 hit with Billy, Don't Be A Hero?", 'responses': [('Ian Levine', [-4.06673526763916, -2.3224525451660156, -0.1821342259645462], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Vogues', [-0.9417351484298706, -4.298211574554443, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('10', [-4.31673526763916, -0.6383898854255676, -0.14368882775306702], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Elton John', [-3.81673526763916, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Supremes', [-0.9417351484298706, -4.548211574554443, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Sweet', [-0.9417351484298706, -2.3607115745544434, -0.1959807574748993], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Elton John', [-3.81673526763916, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ("Shakin'", [-4.44173526763916, -0.4512138366699219, -0.6325989961624146], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('George Michael', [-4.44173526763916, -3.430720567703247, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Trammps', [-0.9417351484298706, -3.4232115745544434, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ian Levine', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Bo Donaldson & The Heywoods'}

Key: 68370943988147696545458075982090652448
Value: {'question': 'Banting and Best pioneered the use of what?', 'responses': [('Insulin in', [-0.3484445810317993, -3.306925058364868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.3484445810317993, -0.306924968957901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('insulin', [-1.2234445810317993, -0.566888153553009], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin to', [-0.3484445810317993, -2.431925058364868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.3484445810317993, -0.306924968957901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.3484445810317993, -0.306924968957901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('insulin', [-1.2234445810317993, -0.566888153553009], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.3484445810317993, -0.306924968957901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.3484445810317993, -0.306924968957901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.3484445810317993, -0.306924968957901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Insulin in', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Insulin'}

Key: 144517269965593658162921329947363271461
Value: {'question': 'Who directed the movie La Dolce Vita?', 'responses': [('Federico Fellini', [-0.6037852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-0.7912852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.6037852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-0.7912852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-0.7912852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-0.7912852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-0.7912852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-0.7912852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.6037852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.6037852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Federico Fellini', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Federico Fellini'}

Key: 302885358029123359633304891032815667654
Value: {'question': 'Which country does the airline LACSA come from?', 'responses': [('Argentina', [-1.3570106029510498, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latin America', [-2.98201060295105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-1.3570106029510498, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Costa Rica', [-3.48201060295105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-4.044510841369629, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-2.35701060295105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-1.3570106029510498, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peru', [-2.79451060295105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [-1.8570106029510498, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Costa Rica', [-3.48201060295105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Argentina', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Costa Rica'}

Key: 121614553431962287789970670737176338163
Value: {'question': 'Who directed 2001: A Space Odyssey?', 'responses': [('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Stanley Kubrick', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Stanley Kubrick'}

Key: 276661339488905452418133643034404742666
Value: {'question': 'Which is the largest of the Japanese Volcano Islands?', 'responses': [('Miyajima', [-1.439574956893921, -2.5970113277435303], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miyake', [-1.439574956893921, -0.3157612681388855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miyake', [-1.439574956893921, -0.3157612681388855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hokkaido', [-0.6895750164985657, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hoka', [-3.627074956893921, -0.7792724967002869], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Honshu', [-2.502074956893921, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kyushu', [-3.564574956893921, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miyake', [-1.439574956893921, -0.3157612681388855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miyake', [-1.439574956893921, -0.3157612681388855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hokkaido', [-0.6895750164985657, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Miyajima', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1935496040981333, 'reference': 'Iwo Jima'}

Key: 123824808440534981830277054767715858766
Value: {'question': 'Ezzard Charles was a world champion in which sport?', 'responses': [('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Boxing', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Boxing'}

Key: 43719036245228933814349708539677635651
Value: {'question': 'Who was the first woman to make a solo flight across the Atlantic?', 'responses': [('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-2.6949362754821777, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Amelia Earhart', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Amelia Earhart'}

Key: 282165350712001499709903877059286765627
Value: {'question': 'Which port lies between Puget Sound and Lake Washington?', 'responses': [('Tacoma', [-2.3376288414001465, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tacoma', [-2.3376288414001465, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tacoma', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Seattle'}

Key: 160240484577993282159604066154906820320
Value: {'question': 'In which city were Rotary Clubs set up in 1905?', 'responses': [('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago,', [0.0, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chicago', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Chicago'}

Key: 145732201166315032203165061438723890565
Value: {'question': 'Who became US Vice President when Spiro Agnew resigned?', 'responses': [('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Mondale', [-2.3024609088897705, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Mondale', [-2.3024609088897705, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gerald Ford', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Gerald Ford'}

Key: 4002544065385692370631602937620156105
Value: {'question': 'In which decade of the 20th century was Billy Crystal born?', 'responses': [('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [-0.06196761503815651, 0.0, 0.0, 0.0, -1.2996524572372437, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [-0.06196761503815651, 0.0, 0.0, 0.0, -1.2996524572372437, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1948', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': '1940s'}

Key: 168006412715185156036821738494381204181
Value: {'question': 'Which George invented the Kodak roll-film camera?', 'responses': [('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Eastman', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Eastman'}

Key: 255749630304793004609172428017250520357
Value: {'question': 'Which series had the characters Felix Unger and Oscar Madison?', 'responses': [('Odd Couple', [-1.1722959280014038, -0.04570977762341499], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sanford and', [-4.234796047210693, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odd Couple', [-1.1722959280014038, -0.04570977762341499], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('<i>', [-3.0472960472106934, -1.4881463050842285], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The', [-1.6097959280014038, -0.27358102798461914], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Odd', [-1.2347959280014038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seinfeld', [-3.4222960472106934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('<i>', [-3.0472960472106934, -1.4881463050842285], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odd Couple', [-1.1722959280014038, -0.04570977762341499], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Odd', [-1.2347959280014038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Odd Couple', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'The Odd Couple'}

Key: 21853083108770756378834560008172198066
Value: {'question': 'Who along with Philips developed the CD in the late 70s?', 'responses': [('Philips &', [-0.5266709327697754, -3.593536376953125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philips &', [-0.5266709327697754, -3.593536376953125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philips and', [-0.5266709327697754, -1.343536376953125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toshiba', [-4.339170932769775, -0.4072478413581848], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philips and', [-0.5266709327697754, -1.343536376953125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sony', [-1.0891709327697754, -0.27448803186416626], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philips and', [-0.5266709327697754, -1.343536376953125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toshiba and', [-4.339170932769775, -1.90724778175354], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sony', [-1.0891709327697754], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philips', [-0.5266709327697754, -0.4685364365577698], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Philips &', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9502705392332347, 'reference': 'Sony'}

Key: 98125762700425547512337024627292480172
Value: {'question': 'Where is the multinational Nestle based?', 'responses': [('Vevey', [-0.9740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vevey', [-0.9740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vevey', [-0.9740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Vevey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Switzerland'}

Key: 211834833514264067819618047124103821429
Value: {'question': "Do You Know Where You're Going To? was the theme from which film?", 'responses': [('A Few', [-2.4105844497680664, -4.592744827270508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cabaret', [-3.6605844497680664, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Death of', [-4.535584449768066, -2.2320127487182617], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [-4.535584449768066, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Casablanca', [-4.348084449768066, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harold &', [-4.410584449768066, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clockwork', [-4.410584449768066, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Clock', [-2.4105844497680664, -0.5302446484565735], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Willy Won', [-4.223084449768066, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Clock', [-2.4105844497680664, -0.5302446484565735], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A Few', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Mahogany'}

Key: 68253144028380128918616534733933436531
Value: {'question': '19969 was the Chinese year of which creature?', 'responses': [('Ox', [-2.82932448387146, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dragon', [-2.45432448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snake', [-2.20432448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pig', [-2.57932448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sheep', [-3.82932448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monkey', [-2.82932448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monkey', [-2.82932448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rat', [-1.82932448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ox', [-2.82932448387146, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horse', [-3.07932448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ox', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Rat'}

Key: 323563735345956029941176144195105218928
Value: {'question': 'In the 90s how many points have been awarded for finishing second in a Grand Prix?', 'responses': [('Two', [-4.087886810302734, -0.11409559100866318], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.08788697421550751, -1.5181797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.08788697421550751, -2.3931798934936523], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.08788697421550751, -1.8931797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.08788697421550751, -1.2681797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.08788697421550751, -1.2681797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.08788697421550751, -1.2681797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.08788697421550751, -1.2681797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.08788697421550751, -1.8931797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.08788697421550751, -1.2681797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Two', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': '6'}

Key: 333597564054129115162605069983064115255
Value: {'question': 'Stapleton international airport is in which US state?', 'responses': [('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denver', [-2.4118120670318604, -0.31378084421157837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Colorado', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Colorado'}

Key: 167610813939300460861054993907759624787
Value: {'question': "What was Kevin Kline's first movie?", 'responses': [('Hair', [-4.009339809417725, -0.34695637226104736], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Silverado', [-2.1655898094177246, -0.15633682906627655], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Big', [-1.6343398094177246, -0.8651944994926453], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hair', [-4.009339809417725, -0.34695637226104736], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Fish', [-2.4155898094177246, -0.6200746297836304], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Silverado (', [-2.1655898094177246, -2.281336784362793], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Big', [-1.6343398094177246, -0.8651944994926453], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Fish', [-2.4155898094177246, -0.6200746297836304], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-3.1343398094177246, -0.6055405139923096], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grand Canyon', [-4.806214809417725, -0.3521506190299988], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hair', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460894, 'reference': "Sophie's Choice"}

Key: 320055430866320295958709776981664299747
Value: {'question': 'Which actor had a Doberman Pinscher called Kirk?', 'responses': [('Kirk Douglas', [-0.9816439151763916, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirk Douglas', [-0.9816439151763916, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Nicholson', [-3.4816439151763916, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirk Douglas', [-0.9816439151763916, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Burton', [-3.2316439151763916, -1.2900346517562866, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirk Douglas', [-0.9816439151763916, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirk Douglas', [-0.9816439151763916, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel Gibson', [-3.9816439151763916, -0.11282224208116531, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Harris', [-3.2316439151763916, -2.790034770965576, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirk Douglas', [-0.9816439151763916, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kirk Douglas', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'William Shatner'}

Key: 211958119303777843176176348207140663034
Value: {'question': 'What day of the week was the Wall Street Crash?', 'responses': [('Black Monday', [-2.7092199325561523, -2.1478354930877686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-1.0217199325561523, -0.15132087469100952], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-1.0217199325561523, -0.15132087469100952], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuesday', [-1.0217199325561523, -0.1346825510263443], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monday', [-1.8967199325561523, -0.09362326562404633], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuesday', [-1.0217199325561523, -0.1346825510263443], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuesday', [-1.0217199325561523, -0.1346825510263443], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-1.0217199325561523, -0.15132087469100952], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-1.0217199325561523, -0.15132087469100952], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuesday', [-1.0217199325561523, -0.1346825510263443], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Black Monday', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0549201679861442, 'reference': 'Thursday'}

Key: 196168567317702710612261720488645759670
Value: {'question': 'The US signed a treaty with which country to allow the construction of the Panama Canal?', 'responses': [('Colombia', [-0.9328840970993042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.1828840970993042, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.1828840970993042, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.9328840970993042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.1828840970993042, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.9328840970993042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.9328840970993042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Panama', [-1.8703840970993042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.9328840970993042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.1828840970993042, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Colombia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Columbia'}

Key: 139566501576575618039115175274670282314
Value: {'question': "What was Prince's last No 1 of the 80s?", 'responses': [('Kiss', [-0.8057247996330261, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Kiss', [-2.680724859237671, -0.7734470367431641], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.8057247996330261, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.8057247996330261, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.8057247996330261, -3.10093355178833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Purple Rain', [-2.930724859237671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('When Do', [-2.305724859237671, -0.04941174387931824], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Raspberry Ber', [-2.805724859237671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.8057247996330261, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.8057247996330261, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kiss', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Batdance'}

Key: 322028746654654665756847932195004492378
Value: {'question': 'Man In The Mirror first featured on which Michel Jackson album?', 'responses': [('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Thriller', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Bad'}

Key: 196985574513020705262105449380613604309
Value: {'question': 'Where was the first battle with US involvement in the Korean War?', 'responses': [('Pusan Perimeter', [-1.3669624328613281, 0.0, -0.404762864112854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Inchon', [-1.3669624328613281, -0.411177396774292, -0.4267236590385437], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Chosin', [-1.8669624328613281, -1.3302773237228394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pusan Perimeter', [-1.3669624328613281, 0.0, -0.404762864112854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pusan', [-1.8669624328613281, -1.4552773237228394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pusan Perimeter', [-1.3669624328613281, 0.0, -0.404762864112854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pusan Perimeter', [-1.3669624328613281, 0.0, -0.404762864112854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pusan', [-1.8669624328613281, -1.4552773237228394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Korean attack', [-3.116962432861328, -1.9102240800857544, -2.8285393714904785], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pusan Perimeter', [-1.3669624328613281, 0.0, -0.404762864112854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pusan Perimeter', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Suwon'}

Key: 10881289729456216200873296904560161752
Value: {'question': 'On which Caribbean island did Princess Diana spend he first Christmas after her divorce was announced?', 'responses': [('The Cayman', [-2.991489887237549, -4.188499450683594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.49148982763290405, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.49148982763290405, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.49148982763290405, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mauritius', [-4.553989887237549, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.49148982763290405, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bahamas', [-2.991489887237549, -0.18849967420101166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbados', [-2.303989887237549, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.49148982763290405, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bahamas', [-2.991489887237549, -0.18849967420101166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Cayman', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Barbuda'}

Key: 235876136254617275667572987595450556287
Value: {'question': 'In which decade was Arnold Schwarzenegger born?', 'responses': [('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1947', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1950s'}

Key: 25911169994715296157711298168308041513
Value: {'question': 'Which musical featured the song Thank Heaven for Little Girls?', 'responses': [('The King', [-1.6609995365142822, -1.8792431354522705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The King', [-1.6609995365142822, -1.8792431354522705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver!', [-3.4109995365142822, -0.6112474203109741], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guys and', [-3.6609995365142822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Annie', [-2.4109995365142822, -0.5790652632713318], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-2.0359995365142822, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Annie get', [-2.4109995365142822, -3.2040653228759766], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter and', [-4.160999298095703, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('My Fair', [-2.6609995365142822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Pan', [-4.160999298095703, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The King', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Gigi'}

Key: 148252821328110070762037412177102348432
Value: {'question': 'The Queen Elizabeth liner was destroyed by fire in the 70s in which harbour?', 'responses': [('Hamburg', [-3.6800479888916016, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.6175479888916016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sydney', [-1.6800479888916016, -0.30388909578323364], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sydney', [-1.6800479888916016, -0.30388909578323364], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hong Kong', [-3.0550479888916016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Southampton', [-1.8050479888916016, -0.07946828007698059], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Southampton,', [-1.8050479888916016, -3.204468250274658], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Southampton', [-1.8050479888916016, -0.07946828007698059], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sydney', [-1.6800479888916016, -0.30388909578323364], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liverpool', [-2.4925479888916016, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hamburg', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Hong Kong'}

Key: 235296375412834410324859687738575233732
Value: {'question': 'What breed of dog did Columbo own?', 'responses': [('Akita', [-4.543756008148193, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doberman', [-2.9187560081481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rottweiler', [-3.9187560081481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yorkshire Terrier', [-3.2937560081481934, -0.34070447087287903], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dachshund', [-2.9187560081481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Russell', [-3.9187560081481934, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Labrador Retriever', [-3.6687560081481934, -0.9935803413391113], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dachshund', [-2.9187560081481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maltese', [-3.1687560081481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doberman', [-2.9187560081481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Akita', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Basset hound'}

Key: 186550072179518908282014546151610400762
Value: {'question': 'What was the first movie western called?', 'responses': [('The Desper', [-0.3752145767211914, -4.724090576171875, -0.8081640005111694], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Western Union', [-3.8127145767211914, -1.773669719696045, -0.10545314848423004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Gunfighter', [-0.3752145767211914, -4.505340576171875, -0.13760460913181305], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Virginian', [-0.3752145767211914, -2.474090576171875, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stagecoach', [-2.4377145767211914, -0.2014133334159851, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great Train', [-0.3752145767211914, -0.7865904569625854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great Train', [-0.3752145767211914, -0.7865904569625854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Covered Wagon', [-0.3752145767211914, -2.036590576171875, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Big Trail', [-0.3752145767211914, -3.536590576171875, -0.0688856914639473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great Train', [-0.3752145767211914, -0.7865904569625854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Desper', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Kit Carson'}

Key: 260007600736825237725044267312891853119
Value: {'question': 'Which Oscar-winning actress was born on exactly the same day as actress Lindsay Wagner?', 'responses': [('Debra Winger', [-3.7389750480651855, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Who's", [-2.8639750480651855, -4.053871154785156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jane Fonda', [-2.6139750480651855, -0.29498806595802307, -0.10545314848423004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Jason Leigh', [-3.4889750480651855, -0.7570592761039734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellen Burstyn', [-4.2389750480651855, -0.11967968195676804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Ladd (', [-2.9889750480651855, -1.5530507564544678, -3.0512900352478027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kate Winslet', [-3.9889750480651855, -0.8375568985939026, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vanessa Redgrave', [-3.9889750480651855, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judy Davis', [-4.3639750480651855, -1.010420560836792, -0.1278369277715683], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jessica Lange', [-2.9889750480651855, -0.1797446459531784, -0.1278369277715683], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Debra Winger', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Meryl Streep'}

Key: 35664396824955691290957553979939168049
Value: {'question': 'Which Amendment to the Constitution brought in prohibition in 1920?', 'responses': [('18th', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th Amendment', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th Amendment', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th Amendment', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th Amendment', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '18th', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '18th'}

Key: 339148907142639500979517450004500548231
Value: {'question': 'Which oil scandal hit the US in 1924?', 'responses': [('Rockefeller Oil', [-3.727051258087158, -1.734818458557129, -1.1898316144943237], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Teapot', [-1.3520512580871582, -0.07995261996984482, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.7270512580871582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Teapot', [-1.3520512580871582, -0.07995261996984482, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.7270512580871582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.7270512580871582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Teapot', [-3.852051258087158, -0.3038458824157715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.7270512580871582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.7270512580871582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Teapot', [-1.3520512580871582, -0.07995261996984482, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rockefeller Oil', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Teapot Dome Scandal'}

Key: 322237329832965163966007924447953526427
Value: {'question': 'Phil Collins appeared in which Spielberg film with Robin Williams?', 'responses': [('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Hook', [-3.529750347137451, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hook', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Hook'}

Key: 30393751189916050532485451961784191288
Value: {'question': '1998 was the Chinese year of which creature?', 'responses': [('Dragon', [-1.6763997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dog', [-2.6763997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ox', [-3.1138997077941895, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rat', [-1.8638997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rat', [-1.8638997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rat', [-1.8638997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rabbit', [-2.4888997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rabbit', [-2.4888997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snake', [-2.8013997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rabbit', [-2.4888997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dragon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931799, 'reference': 'Tiger'}

Key: 141527528992617758986938082421649661082
Value: {'question': 'Which country does musician Alfred Brendel come from?', 'responses': [('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-2.8793764114379883, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-1.6293764114379883, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Austria', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Austria'}

Key: 13567368464897662334830381845358852501
Value: {'question': 'Theodore Francis international airport is in which US state?', 'responses': [('Oregon', [-4.491940975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [-3.554440975189209, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-2.679440975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wisconsin', [-4.054440975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Jersey', [-2.429440975189209, -0.30635571479797363], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Connecticut', [-3.679440975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virginia', [-3.304440975189209, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Florida', [-2.429440975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-2.554440975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhode Island', [-2.429440975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oregon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Rhode Island'}

Key: 177998405774535793944990725760638330972
Value: {'question': 'In which soap did Demi Moore find fame?', 'responses': [("As '", [-1.1865373849868774, -4.381828784942627], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.6865373849868774, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As a', [-1.1865373849868774, -0.44432878494262695], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.6865373849868774, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.6865373849868774, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.6865373849868774, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas', [-2.749037265777588, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As a', [-1.1865373849868774, -0.44432878494262695], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As a', [-1.1865373849868774, -0.44432878494262695], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.6865373849868774, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "As '", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'General Hospital'}

Key: 264175855792719724671714833676858700599
Value: {'question': 'To the nearest million, what is the population of London, England?', 'responses': [('70', [0.0, -1.2359517812728882, -3.9332330226898193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('7,', [0.0, -1.2359517812728882, -0.5582330226898193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('7 million', [0.0, -1.2359517812728882, -2.4332330226898193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8,', [0.0, -0.4859517812728882, -0.6782537698745728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8', [0.0, -0.4859517812728882, -2.178253650665283], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('7.', [0.0, -1.2359517812728882, -1.5582330226898193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8 million', [0.0, -0.4859517812728882, -1.9282537698745728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8 million', [0.0, -0.4859517812728882, -1.9282537698745728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('7', [0.0, -1.2359517812728882, -2.4332330226898193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8,', [0.0, -0.4859517812728882, -0.6782537698745728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '70', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576458, 'reference': '7 million'}

Key: 3669695212600559155447723462326271508
Value: {'question': 'What did Clarice Cliff create?', 'responses': [('A type', [-2.9429636001586914, -3.4482312202453613], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Art', [-2.5679636001586914, -3.1281423568725586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('B', [-3.1929636001586914, -4.455552577972412], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wedg', [-3.8179636001586914, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bizarre and', [-2.3179636001586914, -2.461289405822754], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bizarre pottery', [-2.3179636001586914, -2.336289405822754], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Royal Vale', [-3.8179636001586914, -2.862086296081543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art Pottery', [-2.0679636001586914, -1.5957143306732178], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Clar', [-2.5679636001586914, -3.2531423568725586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pottery', [-2.6929636001586914, -0.09654758870601654], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A type', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Pottery'}

Key: 153023692105618789346702632406289344096
Value: {'question': 'Which James Bond film features a song by Louis Armstrong?', 'responses': [('Diamonds Are Forever', [-2.741950511932373, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On Her Majesty', [-2.741950511932373, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldfinger', [-1.741950511932373, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thunderball', [-1.491950511932373, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thunderball', [-1.491950511932373, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldfinger', [-1.741950511932373, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Live and Let', [-1.991950511932373, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Live and Let', [-1.991950511932373, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On Her Majesty', [-2.741950511932373, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thunderball', [-1.491950511932373, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Diamonds Are Forever', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576458, 'reference': "On Her Majesty's Secret Service"}

Key: 21824530588489607946399377907283853870
Value: {'question': 'In what year were US ground troops first dispatched to Vietnam?', 'responses': [('1965', [0.0, 0.0, 0.0, -0.2014133334159851, -0.7621253132820129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.2014133334159851, -0.7621253132820129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.2014133334159851, -0.7621253132820129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1962', [0.0, 0.0, 0.0, -0.2014133334159851, -1.2621252536773682, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1954', [0.0, 0.0, 0.0, -1.7014133930206299, -1.4847829341888428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1961', [0.0, 0.0, 0.0, -0.2014133334159851, -1.6371252536773682, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.2014133334159851, -0.7621253132820129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1961', [0.0, 0.0, 0.0, -0.2014133334159851, -1.6371252536773682, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1964', [0.0, 0.0, 0.0, -0.2014133334159851, -2.887125253677368, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1955', [0.0, 0.0, 0.0, -1.7014133930206299, -1.3597829341888428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1965', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': '1965'}

Key: 27380348263737540923052007422421784519
Value: {'question': 'In 1999 Anna Kournikova signed a lucrative contract to model what?', 'responses': [('Underpants', [-4.019033432006836, -2.934040069580078], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the swimsuit', [-4.644033432006836, -3.590609073638916], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Playboy', [-4.644033432006836, -0.5863915681838989], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nike', [-2.144033432006836, -1.0463645458221436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nive', [-3.894033432006836, -0.07428312301635742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A tennis', [-2.894033432006836, -2.8641014099121094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("L'", [-4.394033432006836, -0.5529353618621826], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Her face', [-4.394033432006836, -3.318988561630249], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nike', [-2.144033432006836, -1.0463645458221436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tennis ra', [-2.519033432006836, -2.5669302940368652], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Underpants', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Bras'}

Key: 208799331739458533017705133176449996028
Value: {'question': 'Which member of the Monkees came from Washington DC?', 'responses': [('Peter Tork', [-1.8635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Tork', [-1.8635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Davy Jones', [-1.1135631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mike Nesmith', [-2.988563060760498, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Micky Dol', [-1.3635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Micky Dol', [-1.3635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Tork', [-1.8635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Tork', [-1.8635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Micky Dol', [-1.3635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Davy Jones', [-1.1135631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Peter Tork', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'Peter Tork'}

Key: 242366912056136646150507630339397215678
Value: {'question': 'Which ship was sunk by a German submarine in 1915 with a loss of 1400 lives including 128 Americans?', 'responses': [('The Lusitania', [-0.42836952209472656, -0.1376928985118866, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.42836952209472656, -0.1376928985118866, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.42836952209472656, -0.1376928985118866, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.42836952209472656, -0.1376928985118866, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.42836952209472656, -0.1376928985118866, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Lusitania', [-1.5533695220947266, 0.0, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Lusitania', [-1.5533695220947266, 0.0, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.42836952209472656, -0.1376928985118866, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Lusitania', [-1.5533695220947266, 0.0, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Lusitania', [-1.5533695220947266, 0.0, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Lusitania', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Lusitania'}

Key: 179346468034032003704523951025792443436
Value: {'question': 'In what decade were video recorders first developed?', 'responses': [('1960s', [0.0, -0.053237732499837875, 0.0, -1.580836296081543, 0.0, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, -0.053237732499837875, 0.0, -1.580836296081543, 0.0, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, -0.053237732499837875, 0.0, -1.580836296081543, 0.0, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("1950's", [0.0, -0.053237732499837875, 0.0, -1.830836296081543, 0.0, -1.7014133930206299, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, -0.053237732499837875, 0.0, -1.580836296081543, 0.0, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, -0.053237732499837875, 0.0, -1.830836296081543, 0.0, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, -0.053237732499837875, 0.0, -1.830836296081543, 0.0, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, -0.053237732499837875, 0.0, -0.4558362364768982, 0.0, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, -0.053237732499837875, 0.0, -1.830836296081543, 0.0, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, -0.053237732499837875, 0.0, -0.4558362364768982, 0.0, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1960s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0549201679861442, 'reference': '50s'}

Key: 238161062601069238420618588666373091125
Value: {'question': 'Who had the noels Spy Hook and Spy Line published in the 80s?', 'responses': [('Paul McCartney', [-4.4549641609191895, -0.6638920307159424, -0.13628888130187988], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Jennings', [-4.0799641609191895, -3.4720702171325684, -0.11008840054273605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Clash', [-2.7049641609191895, -4.153081893920898, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Clancy', [-2.7049641609191895, -0.18846699595451355, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ludlum', [-2.7049641609191895, -0.374858021736145, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mike Holmes', [-4.7049641609191895, -3.146358013153076, -0.09563114494085312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Travolta', [-2.3299641609191895, -4.2202467918396, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Holmes', [-2.3299641609191895, -2.7202467918395996, -0.10545314848423004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Clancy', [-2.7049641609191895, -0.18846699595451355, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stephen King', [-4.4549641609191895, -0.2249315232038498, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Paul McCartney', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Len Deighton'}

Key: 24417326290741017340790453872538106747
Value: {'question': 'the first credit cards were for use in what type of establishments?', 'responses': [('Restaurants', [-2.5305862426757812, -0.12835051119327545], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('department stores', [-1.4055863618850708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hotels', [-2.1555862426757812, -0.3645457923412323], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('department stores', [-1.4055863618850708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hotels and', [-2.5305862426757812, -1.8795850276947021], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hotels', [-2.1555862426757812, -0.3645457923412323], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Department stores', [-2.9055862426757812, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hotels', [-2.1555862426757812, -0.3645457923412323], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Department Stores', [-2.9055862426757812, -1.1368709802627563], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hotel rooms', [-4.280586242675781, -1.803963541984558], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Restaurants', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290393, 'reference': 'Restaurants'}

Key: 16613882892830467806546304374288024567
Value: {'question': 'In which country was Ursula Andrews born?', 'responses': [('Ireland', [-3.1971092224121094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.5721091032028198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-2.0721092224121094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.5721091032028198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The United', [-4.197109222412109, -1.2740478515625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United Kingdom', [-3.0721092224121094, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-1.9471091032028198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-1.9471091032028198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-2.9471092224121094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-1.9471091032028198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ireland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Switzerland'}

Key: 21781055362267300220747160657050769608
Value: {'question': "What was CBS TV news broadcaster Walter Cronkite's stock closing phrase?", 'responses': [('And that', [-2.890899896621704, -0.24495965242385864], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('...', [-3.390899896621704, -1.0670115947723389], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"That', [-0.7658998370170593, -1.7619785070419312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Good Night', [-2.265899896621704, -2.019347906112671], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("You'", [-4.265899658203125, -0.1857476532459259], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"And', [-0.7658998370170593, -0.38697853684425354], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"I', [-0.7658998370170593, -3.2619786262512207], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('And that', [-2.890899896621704, -0.24495965242385864], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The End', [-2.390899896621704, -1.6153647899627686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"And', [-0.7658998370170593, -0.38697853684425354], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'And that', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': "And that's the way it is"}

Key: 309273492966215528970942131797154850720
Value: {'question': 'Who had a 70s No 1 hit with Let Your Love Flow?', 'responses': [('The Bellamy Brothers', [-1.1339131593704224, -0.11619719862937927, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bellamy Brothers', [-2.243288040161133, -0.04170333594083786, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnie Riper', [-1.1651631593704224, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bellamy Brothers', [-1.1339131593704224, -0.11619719862937927, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bellamy Brothers', [-1.1339131593704224, -0.11619719862937927, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bellamy Brothers', [-2.243288040161133, -0.04170333594083786, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bellamy Brothers', [-1.1339131593704224, -0.11619719862937927, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bellamy Brothers', [-2.243288040161133, -0.04170333594083786, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doug Stone', [-3.573366165161133, -3.9978015422821045, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bellamy Brothers', [-1.1339131593704224, -0.11619719862937927, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Bellamy Brothers', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Bellamy Brothers'}

Key: 186123598465144826251467318872342578276
Value: {'question': "Which state renewed Mike Tyson's boxing license in 1998?", 'responses': [('Massachusetts', [-4.370985984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alabama', [-4.058485984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-4.120985984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Florida', [-2.745985984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-2.995985984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Missouri', [-4.120985984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tennessee', [-3.933485984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.058485984802246, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.058485984802246, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nevada', [-0.9959858655929565, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Massachusetts', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Nevada'}

Key: 335023223780136362376951443964298221404
Value: {'question': 'Neil Armstrong was a pilot in which war?', 'responses': [('WWII', [-2.0415291786193848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korean War', [-0.5415291786193848, -0.5036162734031677], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korean War', [-0.5415291786193848, -0.5036162734031677], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('WWII', [-2.0415291786193848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('World War', [-2.5415291786193848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korean', [-0.5415291786193848, -1.1286163330078125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('WWII', [-2.0415291786193848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korean War', [-0.5415291786193848, -0.5036162734031677], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korean war', [-0.5415291786193848, -2.6286163330078125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('World War', [-2.5415291786193848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'WWII', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': 'Korean'}

Key: 135113573813980774356105673568454822992
Value: {'question': 'Which English-born US citizen hosted Masterpiece theater?', 'responses': [('Sir Anthony Hopkins', [-2.292048454284668, -3.7824273109436035, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alistair Cooke', [-0.9795485138893127, -0.042999111115932465, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward Woodward', [-4.057673454284668, -1.07386314868927, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Farina', [-3.885798454284668, -3.2051408290863037, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Hughes', [-3.448298454284668, -4.112876892089844, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alistair Cooke', [-0.9795485138893127, -0.042999111115932465, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Potter', [-3.885798454284668, -0.5723283290863037, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alistair Cooke', [-0.9795485138893127, -0.042999111115932465, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir John G', [-2.292048454284668, -1.063677430152893, -0.4361126720905304], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir John T', [-2.292048454284668, -1.063677430152893, -2.592362642288208], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sir Anthony Hopkins', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Alistair Cooke'}

Key: 198451490229312318176250709688118112954
Value: {'question': 'Nickelodeon was founded in 1979 by which company?', 'responses': [('Via', [-0.42816978693008423], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-3.3031697273254395], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.2406697273254395], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Via', [-0.42816978693008423], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-3.3031697273254395], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Via', [-0.42816978693008423], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Via', [-0.42816978693008423], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Via', [-0.42816978693008423], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Via', [-0.42816978693008423], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('S', [-2.6156697273254395], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Via', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Warner Amex'}

Key: 47406603659318375826783680606456994248
Value: {'question': 'Which element along with polonium did the Curies discover?', 'responses': [('Astat', [-4.119539260864258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-0.9945390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radium', [-1.2445390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radium', [-1.2445390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-0.9945390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Americium', [-4.119539260864258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-0.9945390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radium', [-1.2445390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radium', [-1.2445390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-0.9945390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Astat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Radium'}

Key: 241678550976756653580899220731445313393
Value: {'question': 'In The Banana Splits what sort of animal was Snorky?', 'responses': [('Monkey', [-1.6882556676864624, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dog', [-2.438255786895752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bear', [-2.938255786895752, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dog', [-2.438255786895752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Raccoon', [-3.938255786895752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Parrot', [-4.688255786895752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monkey', [-1.6882556676864624, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Dog', [-2.313255786895752, -4.339071273803711], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A tiger', [-2.313255786895752, -4.214071273803711], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dog', [-2.438255786895752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Monkey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Elephant'}

Key: 213216769864260958552302958462104687805
Value: {'question': "Who had an 80s No 1 hit with Can't Fight This Feeling?", 'responses': [('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'REO Speedwagon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'REO Speedwagon'}

Key: 156374179212552768350401489190454700275
Value: {'question': 'Which parallel was the truce line in the Korean War?', 'responses': [('38th parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.575939416885376, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.575939416885376, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The 38th parallel', [-1.718239188194275, -0.02630021423101425, 0.0, 0.0, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.575939416885376, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th parallel.', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.575939416885376, -3.529750347137451], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '38th parallel', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '38th Parallel'}

Key: 128057339182170355751883246785499552494
Value: {'question': 'On a computer keyboard which letter is between A and D?', 'responses': [('B', [-2.1688013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('G', [-3.6688013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Z', [-2.0438013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('J', [-3.7938013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Z', [-2.0438013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('E', [-1.1688013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C', [-2.9188013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('E', [-1.1688013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('O', [-3.7938013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-3.2938013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'B', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'S'}

Key: 96614960828336329336745350067670580350
Value: {'question': 'Which musical featured the song Flash Bang, Wallop?', 'responses': [('Guys and Dolls', [-3.5825555324554443, -0.06993623077869415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Music Man', [-1.7075555324554443, -2.8806259632110596, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Pacific', [-3.4575555324554443, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Oliver"', [-3.3325555324554443, -1.6191498041152954, -0.6821185350418091], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sound of', [-1.7075555324554443, -1.1306259632110596, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-2.7075555324554443, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Producers', [-1.7075555324554443, -3.5056259632110596, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [-3.8325555324554443, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver Twist', [-1.8325555324554443, -2.70202374458313, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guys and Dolls', [-3.5825555324554443, -0.06993623077869415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Guys and Dolls', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Half'}

Key: 18100826639000837003152275054635383201
Value: {'question': "What was Hitchcock's first sound movie?", 'responses': [('The Ring', [-0.7838765382766724, -2.4118900299072266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The', [-0.7838765382766724, -1.349389910697937], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'The", [-4.221376419067383, -0.3219345510005951], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [-3.346376419067383, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The', [-1.7838765382766724, -0.4595724046230316], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Ring', [-0.7838765382766724, -2.4118900299072266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lod', [-0.7838765382766724, -1.099389910697937], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lod', [-0.7838765382766724, -1.099389910697937], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Man', [-0.7838765382766724, -2.2868900299072266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Number Seventeen', [-4.158876419067383, -1.467911958694458], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Ring', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Blackmail'}

Key: 46978202400019995803048513936387167406
Value: {'question': 'Which newspaper did Jackie Kennedy work for just before her marriage?', 'responses': [('The Washington', [-1.047366976737976, -0.28817033767700195], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.859866976737976, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.859866976737976, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington Times', [-1.547366976737976, -0.8026841282844543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Town and', [-4.484867095947266, -0.43303239345550537], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Town Talk', [-4.484867095947266, -3.370532512664795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington Herald', [-1.547366976737976, -2.8339340686798096], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vogue', [-4.484867095947266, -0.1392667144536972], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('American Newspaper', [-4.422367095947266, -2.4975438117980957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Look magazine', [-3.3598670959472656, -1.2943768501281738], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Washington', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Washington Times Herald'}

Key: 192425824554876041957222139665425232026
Value: {'question': 'What are the international registration letters of a vehicle from Turkey?', 'responses': [('TK', [-2.476736307144165, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.7267363667488098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.7267363667488098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TL', [-3.476736307144165, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.7267363667488098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.7267363667488098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TS', [-4.726736545562744, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.7267363667488098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.7267363667488098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TK', [-2.476736307144165, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'TK', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'TR'}

Key: 83528968516445433453509617831911615884
Value: {'question': 'Who wrote The Turn Of The Screw in the 19th century and The Ambassadors in the 20th?', 'responses': [('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Henry James', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Henry James'}

Key: 156104970120579737519646627577605740239
Value: {'question': 'Which American nuclear submarine was the first to sail across the North Pole under the ice cap?', 'responses': [('USS Skate', [-0.8881768584251404, -0.3439461290836334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seawolf', [-3.388176918029785, -0.07207804173231125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Skate', [-0.8881768584251404, -0.3439461290836334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Skate', [-0.8881768584251404, -0.3439461290836334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Skate', [-0.8881768584251404, -0.3439461290836334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Skate', [-0.8881768584251404, -0.3439461290836334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Skate I', [-3.263176918029785, -3.3288285732269287], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-1.8881769180297852, -0.10770121216773987], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-1.8881769180297852, -0.10770121216773987], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The USS', [-1.6381769180297852, -0.5822343230247498], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'USS Skate', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452238, 'reference': 'Nautilus'}

Key: 68838839744752530396341501700714733790
Value: {'question': "What was John Glenn/'s first spacecraft called?", 'responses': [('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship Seven', [-0.16051004827022552, -2.0176751613616943, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship Seven', [-0.16051004827022552, -2.0176751613616943, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Friendship 7', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Friendship 7'}

Key: 29378418603318134791438896766579904102
Value: {'question': 'Which branch of medicine is concerned with disorders of the blood?', 'responses': [('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [-1.550844430923462, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [-1.550844430923462, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hematology', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Haematology'}

Key: 87636550321878124806882135170994952130
Value: {'question': 'Where was The Iron Triangle?', 'responses': [('in Spain', [-3.267399311065674, -4.698115348815918], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('in a', [-3.267399311065674, -3.073115348815918], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A location', [-3.392399311065674, -4.264634132385254], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-2.642399311065674, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The triangle', [-2.392399311065674, -3.805300712585449], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('San Francisco', [-2.892399311065674, -0.21614979207515717], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [-4.392399311065674, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-2.642399311065674, -2.688089609146118], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-4.642399311065674, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alabama', [-4.642399311065674, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'in Spain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Vietnam'}

Key: 45563207209849371914229685966159771508
Value: {'question': 'What is the correct name of laughing gas?', 'responses': [('Nitrous Oxide', [-0.4740769863128662, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous Oxide', [-0.4740769863128662, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.4740769863128662, 0.0, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('nitrous oxide', [-0.9740769863128662, 0.0, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous Oxide', [-0.4740769863128662, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous Oxide', [-0.4740769863128662, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous Oxide', [-0.4740769863128662, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.4740769863128662, 0.0, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous Oxide', [-0.4740769863128662, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.4740769863128662, 0.0, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nitrous Oxide', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Nitrous oxide'}

Key: 265936098235039201803308785227704747102
Value: {'question': 'What is the distance between bases on a little league baseball field?', 'responses': [('90 feet', [0.0, -0.8981232643127441, 0.0, -0.24813953042030334, -0.12472295016050339], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 feet', [0.0, -0.5231232643127441, 0.0, -0.3991394639015198, -0.35970133543014526], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 feet', [0.0, -0.5231232643127441, 0.0, -0.3991394639015198, -0.35970133543014526], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 feet', [0.0, -0.8981232643127441, 0.0, -0.24813953042030334, -0.12472295016050339], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 feet', [0.0, -0.8981232643127441, 0.0, -0.24813953042030334, -0.12472295016050339], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 feet', [0.0, -0.8981232643127441, 0.0, -0.24813953042030334, -0.12472295016050339], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 ft (', [0.0, -0.8981232643127441, 0.0, -1.998139500617981, -3.425161361694336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 ft', [0.0, -0.5231232643127441, 0.0, -1.774139404296875, -0.6810995936393738], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 feet', [0.0, -0.5231232643127441, 0.0, -0.3991394639015198, -0.35970133543014526], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 feet.', [0.0, -0.5231232643127441, 0.0, -0.3991394639015198, -3.23470139503479], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '90 feet', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': '60 feet'}

Key: 285930570199144441957972182976824804501
Value: {'question': 'How many home runs did baseball great Ty Cobb hit in the three world series in which he played?', 'responses': [('1', [-0.14707808196544647, -0.8928907513618469], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.14707808196544647, -2.642890691757202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.14707808196544647, -1.8928906917572021], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('0', [-0.14707808196544647, -2.642890691757202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.14707808196544647, -2.767890691757202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.14707808196544647, -2.767890691757202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.14707808196544647, -0.8928907513618469], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('0', [-0.14707808196544647, -2.642890691757202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('0', [-0.14707808196544647, -2.642890691757202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('None', [-3.022078037261963, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'None'}

Key: 8475934722060553222040500605260637358
Value: {'question': 'In cross-country bike racing, what do the initials BMX represent?', 'responses': [('Boys-Mountain', [-2.5158262252807617, -5.123229026794434, -2.003472089767456], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle motocross racing', [-0.45332634449005127, -0.8696132898330688, -3.0895884037017822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boys Mountain Bike', [-2.5158262252807617, -0.9982289671897888, -0.7266830801963806], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle motocross', [-0.45332634449005127, -0.8696132898330688, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle Motocross', [-0.45332634449005127, -0.7446132898330688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boys Modern X', [-2.5158262252807617, -5.060729026794434, -3.6318087577819824], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle Motor Cross', [-0.45332634449005127, -2.2446131706237793, -1.7983840703964233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Boy's", [-2.3908262252807617, -0.8930172920227051, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle motocross', [-0.45332634449005127, -0.8696132898330688, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle Motocross', [-0.45332634449005127, -0.7446132898330688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Boys-Mountain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9502705392332347, 'reference': 'Bicycle moto x (cross)'}

Key: 238843502758165140964368546019388873295
Value: {'question': 'After retiring as a player, with what team did baseball great Babe Ruth spend one year as a coach?', 'responses': [('The St', [-2.5989928245544434, -3.1907970905303955], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Philadelphia Athletics', [-3.8489928245544434, -0.3484445810317993], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Boston Red', [-0.9739928841590881, -0.5231232643127441], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('St.', [-3.2239928245544434, -0.10020658373832703], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('St.', [-3.2239928245544434, -0.10020658373832703], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Yankees', [-2.8489928245544434, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Cleveland Indians', [-3.7239928245544434, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Baltimore Orioles', [-2.0989928245544434, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Boston Braves', [-0.9739928841590881, -0.8981232643127441], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Boston Braves', [-0.9739928841590881, -0.8981232643127441], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The St', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'The Brooklyn Dodgers in 1938'}

Key: 334581350296120480367261421563983705765
Value: {'question': 'What is the maximum weight permitted for calves in rodeo calf-roping competition?', 'responses': [('500 lbs', [0.0, -2.2505624294281006, -0.1602240949869156, -0.06196761503815651, -1.2457284927368164, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('600 lbs', [0.0, -2.2505624294281006, -0.33509764075279236, -0.06993623077869415, -1.2381559610366821, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('180 pounds', [0.0, -1.5005624294281006, -2.8209421634674072, -0.2816230058670044, -0.7573891878128052, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('320 lbs', [0.0, -1.8755624294281006, -3.045189380645752, -0.7575989961624146, -1.1903669834136963, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('500 lb', [0.0, -2.2505624294281006, -0.1602240949869156, -0.06196761503815651, -2.7457284927368164, -0.5036162734031677], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('300 lbs', [0.0, -1.8755624294281006, -0.795189380645752, 0.0, -1.1583237648010254, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('160 lb.', [0.0, -1.5005624294281006, -2.8209421634674072, -0.3132617473602295, -2.9778928756713867, -1.0457854270935059], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('350 lb', [0.0, -1.8755624294281006, -0.920189380645752, 0.0, -2.5743613243103027, -0.5549569725990295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('100 lbs', [0.0, -1.5005624294281006, -1.4459421634674072, -0.06196761503815651, -1.4954583644866943, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('300 pounds.', [0.0, -1.8755624294281006, -0.795189380645752, 0.0, -0.5333237648010254, -2.6949362754821777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '500 lbs', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': '350 pounds. The minimum is 200 pounds'}

Key: 129907964634810605453053246002237295560
Value: {'question': 'What baseball player hit the only home run of his 212-year major league career off his own brother?', 'responses': [('Ken Griffey', [-4.27249002456665, -0.07595645636320114, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Bob Gibson', [-3.2724900245666504, -0.7194181084632874, -0.2878943383693695], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Joe Sewell (', [-2.8974900245666504, -2.3513169288635254, -2.7195613384246826], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Phil Niekro', [-3.6474900245666504, -0.9424135088920593, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Joe Carter', [-2.8974900245666504, -2.1638169288635254, -0.3565536141395569], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Don Mattingly', [-3.1474900245666504, -0.3976682424545288, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('David Ortiz', [-4.52249002456665, -0.6610312461853027, -0.44524040818214417], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Dave Winfield hit', [-3.6474900245666504, -0.6493819952011108, -2.714972734451294], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Bill Mazeros', [-3.2724900245666504, -1.9873172044754028, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Lou Brock', [-3.6474900245666504, -1.8405553102493286, -0.21797321736812592], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ken Griffey', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Joe Nickro in 1976. Nickro, a pitcher with the Houston Astros, hit a four-bagger off his brother Phil, who was pitching fro the Atlanta Braves. Houston won the game, 4-3'}

Key: 111522334749473954153894703786029711775
Value: {'question': 'Brooks Robinson and Carl Yastrzemski hold the major league baseball record for playing the greatest number of seasons with the same team. How many years did they play-- and with what teams?', 'responses': [('19', [-0.17948706448078156, -1.8047446012496948, -0.49769991636276245, -3.224821090698242], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('21 yrs', [-0.17948706448078156, -0.1797446459531784, -0.22097216546535492, -4.313727378845215], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('20 years', [-0.17948706448078156, -0.1797446459531784, -2.9709720611572266, -0.9198920130729675], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('196', [-0.17948706448078156, -1.8047446012496948, -0.49769991636276245, -3.599821090698242], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Robinson with the Orioles', [-3.0544869899749756, -3.111729145050049, -0.1797446459531784, -0.8981232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('21 seasons', [-0.17948706448078156, -0.1797446459531784, -0.22097216546535492, -1.6887274980545044], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('21 years', [-0.17948706448078156, -0.1797446459531784, -0.22097216546535492, -0.9387274980545044], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('21 years', [-0.17948706448078156, -0.1797446459531784, -0.22097216546535492, -0.9387274980545044], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Robinson played all', [-3.0544869899749756, -1.2367290258407593, -3.509152412414551, -0.1912800669670105], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('21 with', [-0.17948706448078156, -0.1797446459531784, -0.22097216546535492, -2.063727378845215], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '19', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': '23 years. Third baseman Robinson played with the Baltimore Orioles from 1955 to 1977; Carl Yastrzemski, outfielder/first baseman, played with the Boston Red Sox from 1961 to 1983'}

Key: 308452239157841251341747657848628630640
Value: {'question': 'Under the rules outlined in the charter of the International Olympic Committee, how much pure gold must there be in each gold medal awarded to first-place winners?', 'responses': [('98', [-0.2191106379032135, -2.7298450469970703, -3.054014205932617], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('5 ounces', [-0.2191106379032135, -1.3548451662063599, -2.584738254547119], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('7.', [-0.2191106379032135, -2.8548450469970703, -0.28356486558914185], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('10', [-0.2191106379032135, -1.1048451662063599, -1.3342970609664917], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('24', [-0.2191106379032135, -1.8548451662063599, -1.8903820514678955], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Five pounds', [-4.094110488891602, -4.505504608154297, -0.2512490451335907], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('10', [-0.2191106379032135, -1.1048451662063599, -1.3342970609664917], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('10', [-0.2191106379032135, -1.1048451662063599, -1.3342970609664917], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('25', [-0.2191106379032135, -1.8548451662063599, -2.1403820514678955], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('2.', [-0.2191106379032135, -1.8548451662063599, -1.5153820514678955], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '98', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'At least 6 grams. Silver medals must be at least .925 sterling silver'}

Key: 300688691761695500776736798416786589757
Value: {'question': 'Who was the famous great-great-grandfather of San Francisco 49er quarterback Steve Young?', 'responses': [('Brigham Young', [-1.8312433958053589, 0.0, -0.15132087469100952], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brigham Young', [-1.8312433958053589, 0.0, -0.15132087469100952], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Henry Harrison', [-2.8312435150146484, -1.882133960723877, -0.36422303318977356], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Abraham Lincoln', [-3.3312435150146484, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Jacob Astor', [-2.3312435150146484, -1.643141508102417, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mormon apostle Brigham', [-3.2062435150146484, -3.5335233211517334, -1.022051453590393], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General George Patton', [-4.206243515014648, -0.5567219853401184, -2.9413084983825684], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Burns', [-3.9562435150146484, -2.3770580291748047, -0.23207929730415344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('President Abraham Lincoln', [-2.5812435150146484, -2.8204846382141113, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daniel Boone', [-3.8312435150146484, -0.6807913780212402, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Brigham Young', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Mormon leader Brigham Young'}

Key: 56462358204221785575671081393392641828
Value: {'question': 'How many of the four Grand Slam trophies in tennis are gold; how many are silver?', 'responses': [('2 of each', [-0.8844073414802551, -0.7723734378814697, -1.9709460735321045, -0.4195221960544586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gold: 2', [-1.8844072818756104, -0.8478662967681885, -0.14867469668388367, -1.0338764190673828], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4 gold,', [-0.8844073414802551, -1.7723734378814697, -1.018271803855896, -0.5586935877799988], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('One gold, one', [-3.0094072818756104, -1.4533510208129883, -0.5896972417831421, -1.8705615997314453], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Both are silver', [-3.7594072818756104, -0.5696084499359131, -0.8042445778846741, -0.6865767240524292], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Silver, one gold', [-2.7594072818756104, -2.803192138671875, -3.130776882171631, -1.1675108671188354], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 gold,', [-0.8844073414802551, -1.5223734378814697, -0.944169282913208, -0.46411430835723877], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2 of each', [-0.8844073414802551, -0.7723734378814697, -1.9709460735321045, -0.4195221960544586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2 gold,', [-0.8844073414802551, -0.7723734378814697, -0.9709460735321045, -0.48939383029937744], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three; One', [-3.2594072818756104, -2.419248104095459, -1.4061501026153564, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '2 of each', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Only the Wimbledon trophy is gold; the others--for the U.S. Open, the French Open and the Australian Open--are sliver'}

Key: 264492954299989567625230528469723869397
Value: {'question': '"What breakfast food gets its name from the German word for ""stirrup""?"', 'responses': [('', [-4.29825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hot', [-4.04825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hash', [-2.54825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ra', [-4.42325496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('French', [-2.04825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hash', [-2.54825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('English', [-3.48575496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hamburger', [-4.67325496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C', [-4.04825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('French', [-2.04825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'The Bagel'}

Key: 123031215552768465947489488321763433747
Value: {'question': 'What popular drink did a Dutch medical professor produce in his laboratory while trying to come up with a blood cleanser that could be sold in drugstores?', 'responses': [('Gin', [-2.811152458190918, -0.14460685849189758], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coffee', [-2.498652458190918, -0.03804141283035278], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca-', [-0.561152458190918, -0.5231232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca Cola', [-0.561152458190918, -0.8981232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca-', [-0.561152458190918, -0.5231232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca-', [-0.561152458190918, -0.5231232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca Cola', [-0.561152458190918, -0.8981232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca-', [-0.561152458190918, -0.5231232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca Cola', [-0.561152458190918, -0.8981232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca-', [-0.561152458190918, -0.5231232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gin', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Gin'}

Key: 70034138503071488307301302515512325491
Value: {'question': 'On what vegetable did an ancient Egyptian place his right hand when taking an oath?', 'responses': [('An onion', [-4.5428948402404785, -2.1592459678649902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The date', [-3.0428948402404785, -2.168170213699341], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turnip', [-3.5428948402404785, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Palm', [-4.6678948402404785, -0.5329685807228088], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Onion', [-1.417894721031189, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A cucumber', [-3.1678948402404785, -2.132237434387207], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Date', [-2.4178948402404785, -0.7586114406585693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Onion', [-1.417894721031189, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lily', [-4.1678948402404785, -0.459962397813797], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Olive', [-2.9178948402404785, -0.1597548872232437], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'An onion', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'The onion. Its round shape symbolized eternity'}

Key: 159076132732291635240524174499427090219
Value: {'question': 'What American city produces most of the egg rolls sold in grocery stores in the United States?', 'responses': [('San Francisco', [-2.093059539794922, -0.08438294380903244], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-1.5930594205856323, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-1.5930594205856323, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Omaha', [-3.780559539794922, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbus,', [-3.780559539794922, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Atlanta', [-4.468059539794922, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Houston', [-4.843059539794922, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago,', [-1.5930594205856323, -2.1269280910491943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Los Angeles', [-2.405559539794922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('San Francisco', [-2.093059539794922, -0.08438294380903244], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'San Francisco', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Houston Texas'}

Key: 291144255699344419357989041002854457781
Value: {'question': 'Italy leads the world in pasta consumption with 61.7 pounds eaten per person per year. What country is second?', 'responses': [('Argentina', [-3.9463844299316406, -0.2012908160686493], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Greece', [-2.0713844299316406, -0.24914894998073578], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('US', [-4.071384429931641, -0.4478530287742615], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Belgium', [-3.9463844299316406, -0.24524188041687012], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Portugal', [-4.446384429931641, -0.2819128632545471], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Greece', [-2.0713844299316406, -0.24914894998073578], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Portugal', [-4.446384429931641, -0.2819128632545471], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Turkey', [-3.4463844299316406, -0.2275370955467224], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('India', [-3.9463844299316406, -0.2522427439689636], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Japan with', [-2.5713844299316406, -3.2687647342681885], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Argentina', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Venezuela, where the annual pasta consumption is 27.9 pounds'}

Key: 13854996707291025586055527354124847190
Value: {'question': 'When Birdseye introduced the first frozen food in 1930, what did the company call it/', 'responses': [("Bird's", [-2.1191060543060303, -1.4061501026153564, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Ice-o', [-3.7441060543060303, -2.2986555099487305, -1.7662808895111084], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Red Bird', [-4.619106292724609, -1.2445486783981323, -0.28111904859542847], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Frozen Food', [-3.1191060543060303, -2.9273605346679688, -0.521356463432312], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Frozen Food', [-1.7441060543060303, -1.3701541423797607, -0.21724066138267517], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Birds Eye', [-2.3691060543060303, -0.2697221040725708, -0.24104101955890656], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Frozen food', [-1.7441060543060303, -1.8701541423797607, -0.12812170386314392], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"The Magic', [-1.8691060543060303, -1.9057049751281738, -3.494413375854492], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"Space Food', [-1.8691060543060303, -4.780704975128174, -0.43967148661613464], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Quick Frozen Food', [-2.8691060543060303, -1.625661849975586, -1.372543215751648], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Bird's", 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456562, 'reference': 'Frosted food'}

Key: 168490295988734405249390154131935185029
Value: {'question': 'Which 100-mile long waterway links the Mediterranean and the Red Sea?', 'responses': [('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Suez', [-1.7416096925735474, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez', [-0.24160966277122498, -2.578889846801758], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('St.', [-3.866609573364258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Suez Canal', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Suez Canal'}

Key: 6776802769051769365953897353838604966
Value: {'question': 'In which country is the Aswan Dam?', 'responses': [('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Egypt', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Egypt'}

Key: 123242803959710812315202709532554288982
Value: {'question': 'Where did Idi Amin rule from 1971-1979?', 'responses': [('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Uganda', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Uganda'}

Key: 42833698102290676464874163448767640135
Value: {'question': 'Which country has the rand as its currency?', 'responses': [('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'South Africa', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'South Africa'}

Key: 295095979444912691559926912168029105931
Value: {'question': "What is the former name of the People's Republic of Venin?", 'responses': [('Former name', [-4.892248630523682, -0.2818537950515747], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yugosla', [-4.329748630523682, -0.21256794035434723], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Socialist Republic', [-1.5172487497329712, -0.12387295067310333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Democratic Socialist', [-2.3922486305236816, -1.8506863117218018], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Democratic Socialist', [-2.3922486305236816, -1.8506863117218018], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vietnam', [-2.7672486305236816, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yugoslavia', [-0.8922487497329712, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yugoslavia', [-0.8922487497329712, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yugoslavia', [-0.8922487497329712, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Socialist People', [-1.5172487497329712, -2.623872995376587], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Former name', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Dohomey'}

Key: 252033550515368521307117691557852573643
Value: {'question': 'In which country are Tangier and Casablanca?', 'responses': [('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Morocco', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Morocco'}

Key: 310174766979311185253216366138103365715
Value: {'question': 'Who was the Egyptian president who was assassinated in 1981?', 'responses': [('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar el-Sad', [0.0, -2.520780563354492, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar el-Sad', [0.0, -2.520780563354492, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Anwar Sadat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Sadat'}

Key: 181774374650396046242406734049900143390
Value: {'question': 'Which country was called Upper Volta until 1984?', 'responses': [('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mali', [-2.6367831230163574, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mali', [-2.6367831230163574, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Burkina Faso', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Burkina Faso'}

Key: 331660614590016778135287642191726165628
Value: {'question': 'Who was the Egyptian king whose tomb an treasures were discovered in the Valley of the Kings in 1922?', 'responses': [('Tutankhamun', [-0.15497621893882751, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamun', [-0.15497621893882751, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamen', [-0.15497621893882751, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamun', [-0.15497621893882751, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamun', [-0.15497621893882751, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamen', [-0.15497621893882751, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Ramesses VI', [-3.4049761295318604, -0.12283510714769363, -1.0269876718521118, -0.09563114494085312], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamen', [-0.15497621893882751, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamun', [-0.15497621893882751, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Ramesses VI', [-3.4049761295318604, -0.12283510714769363, -1.0269876718521118, -0.09563114494085312], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tutankhamun', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Tutankhamen'}

Key: 324820970302933751186028874494426228771
Value: {'question': 'Name the East African country which lies on the equator.', 'responses': [('Equatorial Guinea', [-2.709057331085205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-0.45905739068984985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Equitorial', [-2.146557331085205, -1.5019290447235107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [-2.646557331085205, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-0.45905739068984985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Equator', [-2.146557331085205, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-0.45905739068984985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [-2.334057331085205, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [-2.646557331085205, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-0.45905739068984985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Equatorial Guinea', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'Kenya'}

Key: 130687210507135138158397592755308049218
Value: {'question': 'What are the two main arms of the River Nile called?', 'responses': [('Upper and', [-2.4974451065063477, -0.6359454989433289], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Nile', [-0.9974451065063477, -2.954836368560791], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Upper and', [-2.4974451065063477, -0.6359454989433289], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delta', [-3.9974451065063477, -1.3564256429672241], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White &', [-1.2474451065063477, -3.219496726989746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Upper and', [-2.4974451065063477, -0.6359454989433289], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nile Delta', [-3.9974451065063477, -1.4550374746322632], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The White', [-0.9974451065063477, -1.079836368560791], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The white', [-0.9974451065063477, -3.454836368560791], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The White', [-0.9974451065063477, -1.079836368560791], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Upper and', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576458, 'reference': 'Blue Nile and White Nile'}

Key: 53274303663405083422116175541800204370
Value: {'question': 'In which country did King Hassan II ascend the throne in 1961?', 'responses': [('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Morocco', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Morocco'}

Key: 250059352026955696053245304517372455893
Value: {'question': 'Which British general was killed at Khartoum in 1885?', 'responses': [('Gordon', [-2.04368257522583, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Gordon', [-3.60618257522583, -0.3858543336391449], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kitchener', [-1.7936824560165405, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Gordon', [-1.3561824560165405, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kitchener', [-1.7936824560165405, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles George', [-1.3561824560165405, -1.857227087020874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Gordon', [-1.3561824560165405, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kitchener', [-1.7936824560165405, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Gordon', [-1.8561824560165405, -0.3394295871257782], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lord Kitchener', [-1.7936824560165405, -0.1991376280784607], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gordon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'Gordon'}

Key: 189672046327043991060952109915984920985
Value: {'question': 'On the border of which two countries is Victoria Falls?', 'responses': [('Zimbabwe and Zambia', [-0.7575989961624146, -0.17628993093967438, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia and Zimbabwe', [-0.6325989961624146, -0.1980607658624649, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17628993093967438, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia and Zimbabwe', [-0.6325989961624146, -0.1980607658624649, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia, Zimbabwe', [-0.6325989961624146, -2.6980607509613037, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia and Zimbabwe', [-0.6325989961624146, -0.1980607658624649, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia & Zimbabwe', [-0.6325989961624146, -2.5730607509613037, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17628993093967438, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia, Zimbabwe', [-0.6325989961624146, -2.6980607509613037, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17628993093967438, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zimbabwe and Zambia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Zambia and Zimbabwe'}

Key: 233018890745564144579465153960735729748
Value: {'question': 'What is the name of the volcanic valley that runs from the Sinai peninsula to central Mozambique?', 'responses': [('The Great', [-1.2615121603012085, -0.26555484533309937], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rift Valley', [-3.199012279510498, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Etos', [-4.574012279510498, -0.7765059471130371], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Rift', [-0.8240121603012085, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Great', [-4.011512279510498, -0.3613221347332001], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nile', [-4.886512279510498, -0.6962561011314392], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambe', [-4.261512279510498, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Valley', [-1.2615121603012085, -3.703054904937744], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Rift', [-0.8240121603012085, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Rift', [-0.8240121603012085, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Great', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Great Rift Valley'}

Key: 31781941835902499588679515450999201167
Value: {'question': 'Which actor won an Academy Award for his performance in The African Queen?', 'responses': [('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Humphrey Bogart', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Humphrey Bogart'}

Key: 234968202379226996441421362140775104446
Value: {'question': 'Who wrote the novel Cry, the Beloved Country about South Africa?', 'responses': [('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alan Paton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Alan Paton'}

Key: 76545929122918191764793905510970574497
Value: {'question': 'What is the capital of Kenya?', 'responses': [('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nairobi', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Nairobi'}

Key: 173636007320763489677299490209460787318
Value: {'question': 'From which European country did Angola achieve independence in 1975?', 'responses': [('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portuguese', [-2.578889846801758, -0.07843784987926483], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Portugal', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Portugal'}

Key: 229170318474524719034067957991549861814
Value: {'question': 'Which country mainly makes up the Horn of Africa?', 'responses': [('Ethiopia', [-0.43734973669052124, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.43734973669052124, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.43734973669052124, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-2.937349796295166, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.43734973669052124, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somalia', [-1.499849796295166, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.43734973669052124, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.43734973669052124, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.43734973669052124], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somalia', [-1.499849796295166, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ethiopia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'Somalia'}

Key: 93369735893925749978024214535270699686
Value: {'question': 'What is the capital of Sierra Leone?', 'responses': [('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Freetown', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Freetown'}

Key: 44056024413547951322767394569150314419
Value: {'question': 'Which country is the island of Zanzibar part of?', 'responses': [('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tanzania', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Tanzania'}

Key: 81483122158632463877292180554803528640
Value: {'question': "What is Africa's largest country?", 'responses': [('Nigeria', [-0.5417052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Algeria', [-1.2917052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Algeria', [-1.2917052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [-4.697955131530762, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.5417052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.5417052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.5417052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.5417052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Algeria', [-1.2917052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.5417052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nigeria', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Sudan'}

Key: 176684862188527662861425262290944169427
Value: {'question': 'Which African country is bordered by Benin, Ghana, Ivory Coast, Niger, and Mali?', 'responses': [('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [-2.9485278129577637, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Burkina Faso', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Burkino Faso'}

Key: 168274180611813134957082784511671141146
Value: {'question': 'Who was the woman sentenced to six years in jail after the murder of Stompei Seipi?', 'responses': [('Mrs. Sta', [-3.460540771484375, -0.07114000618457794, -4.672914981842041], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anna Seip', [-2.835540771484375, -0.775576114654541, -1.94868004322052], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stompei', [-2.835540771484375, -0.36107492446899414, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose Heilmann', [-3.460540771484375, -3.74285888671875, -2.6222848892211914], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The lady who', [-3.210540771484375, -4.925519943237305, -1.1012617349624634], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Irene Seipi', [-3.835540771484375, -1.3893500566482544, -0.3417187035083771], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anne Frank', [-3.085540771484375, -1.1533560752868652, -0.14426162838935852], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aloysia', [-3.585540771484375, -4.640690803527832, -0.4541274607181549], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A man who', [-3.585540771484375, -4.015690803527832, -2.6066784858703613], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maria Seip', [-2.585540771484375, -1.5457335710525513, -1.8999452590942383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mrs. Sta', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Winnie Mandela'}

Key: 52723763469763288755377731346050960500
Value: {'question': 'In which country are the towns of Gweru and Kwekwe?', 'responses': [('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zimbabwe', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Zimbabwe'}

Key: 43767945769929223522955726760482847946
Value: {'question': 'Who was the founder of the Back to Africa movement who largely inspired Rastafarianism?', 'responses': [('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Marcus Garvey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Marcus Garvey'}

Key: 291271294390939978563718792459306252976
Value: {'question': 'Which African country is sandwiched between Ghana and Benin?', 'responses': [('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Togo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Togo'}

Key: 32660404714146261594017691111433642169
Value: {'question': 'The Zambesi and which other river define the borders of Matabeleland?', 'responses': [('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-1.0897886753082275, 0.0, -0.12379933148622513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-1.0897886753082275, 0.0, -0.12379933148622513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-1.0897886753082275, 0.0, -0.12379933148622513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zambezi', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Limpopo'}

Key: 38745243617510227643125850154034057959
Value: {'question': 'In which mountains are Camp David?', 'responses': [('Catoctin', [-0.6996200084686279, 0.0, -1.0575426816940308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland, USA', [-2.074620008468628, -3.189152240753174, -1.5164979696273804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Catoctin', [-0.6996200084686279, 0.0, -1.0575426816940308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In the Cato', [-4.199620246887207, -0.2345588654279709, -0.9610738158226013], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Antietam', [-4.074620246887207, -0.4516957998275757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Catoctin', [-0.6996200084686279, 0.0, -1.0575426816940308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Catoctin Mountains', [-0.6996200084686279, 0.0, -0.6825426816940308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Allegany', [-3.137120008468628, -1.502521276473999, -1.1605103015899658], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Catoctin', [-2.074620008468628, -0.6513371467590332, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Catoctin', [-0.6996200084686279, 0.0, -1.0575426816940308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Catoctin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Appalachian'}

Key: 217830041305300218403148931824146830234
Value: {'question': '"Which song say, ""The words of the prophet are written on the subway walls?"""', 'responses': [('"Subway"', [-0.9689304828643799, -1.8957693576812744, -0.8986033797264099, -1.3708674907684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('""The Words of', [-2.21893048286438, -0.8303197622299194, -1.9079149961471558, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Words of the', [-1.5939304828643799, -3.069286584854126, -0.23012255132198334, -0.10710643976926804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Informer"', [-0.9689304828643799, -4.270769119262695, -3.250912666320801, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jesus Christ Superstar', [-4.218930244445801, -0.6414836645126343, -0.37889018654823303, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"In My Life', [-0.9689304828643799, -4.270769119262695, -2.813412666320801, -0.06552022695541382], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('""God Bless the', [-2.21893048286438, -4.455319881439209, -0.9955735802650452, -0.723923921585083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('What Becomes Of The', [-5.343930244445801, -4.803647994995117, -1.550844430923462, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"What\'s', [-0.9689304828643799, -4.520769119262695, -0.8447428345680237, -0.4413798451423645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The Word of', [-0.9689304828643799, -0.7707693576812744, -4.300836086273193, -1.5623469352722168], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"Subway"', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460894, 'reference': 'Sound of Silence'}

Key: 192141693044942637706426934830526506075
Value: {'question': 'Who sang the title song for the Bond film A View To A Kill?', 'responses': [('Sheena Easton', [-2.3502066135406494, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sheena Easton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Duran Duran'}

Key: 81487294908951603256996264237055243450
Value: {'question': 'In which country did General Jaruzelski impose marital law in 1981?', 'responses': [('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Poland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Poland'}

Key: 180318084724149222772728840765574049122
Value: {'question': 'Who won the Oscar for directing It Happened One Night?', 'responses': [('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Frank Capra', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Frank Capra'}

Key: 181239352665575668831079258707160831262
Value: {'question': 'Hellenikon international airport is in which country?', 'responses': [('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Greece', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Greece'}

Key: 311057583501653341701886449639705592032
Value: {'question': "Who had a 60s No 1 with Lightnin' Strikes?", 'responses': [('Stevie Wonder', [-4.43320894241333, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Young Ras', [-0.8082087635993958, -3.5306122303009033, -0.13458658754825592], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Doors', [-0.8082087635993958, -4.030611991882324, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Honeycombs', [-0.8082087635993958, -4.468111991882324, -0.6323728561401367], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis Presley', [-4.55820894241333, -0.4118678867816925, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johnny Nash', [-3.433208703994751, -1.2111927270889282, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Wonder', [-4.43320894241333, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Tornados', [-0.8082087635993958, -4.218111991882324, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billy Fury', [-3.308208703994751, -1.0375468730926514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ray Charles', [-4.18320894241333, -0.4644159972667694, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Stevie Wonder', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Lou Christie'}

Key: 214550783653833022571217369943323361592
Value: {'question': 'In which year was CNN founded?', 'responses': [('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1980', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1980'}

Key: 296535751176580299810137014679253839657
Value: {'question': "Who was President Reagan's Secretary for Defense from 1987 to 1989?", 'responses': [('Frank Carlu', [-1.3546472787857056, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Casper Weinberger', [-3.167147159576416, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Dick Cheney', [-1.5421472787857056, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Caspar Weinberger', [-1.1671472787857056, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Dick Cheney', [-1.5421472787857056, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Dick Cheney', [-1.5421472787857056, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Frank Carlu', [-1.3546472787857056, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Dick Cheney', [-1.5421472787857056, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Frank Carlu', [-1.3546472787857056, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Casper Weinberger', [-3.167147159576416, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Frank Carlu', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Frank Carlucci'}

Key: 100936852714345790077248097197540882670
Value: {'question': 'Which famous brother of Talia Shire does not share her last name?', 'responses': [('Dennis Qu', [-4.43770170211792, -2.4938459396362305], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard.', [-3.12520170211792, -4.466989517211914], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Du', [-1.9377018213272095, -3.518893241882324], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Talia Shire', [-2.37520170211792, -0.4542014002799988], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Casey', [-4.62520170211792, -0.6158963441848755], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nicholas Cage', [-4.31270170211792, -0.4674225449562073], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jon Vo', [-4.50020170211792, -0.8649448156356812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert De', [-1.9377018213272095, -0.8938932418823242], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Talia Shire', [-2.37520170211792, -0.4542014002799988], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Francis Ford', [-3.81270170211792, -0.8242008686065674], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dennis Qu', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Francis Ford Coppola'}

Key: 284630851124990253489091957857153631101
Value: {'question': 'In basketball where do the Celtics come from?', 'responses': [('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Massachusetts', [-2.6949362754821777, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston,', [-0.06993623077869415, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Boston', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Boston'}

Key: 1683011395530086565720315096853711022
Value: {'question': 'Which Disney film had the theme tune A Whole New World?', 'responses': [('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Aladdin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Aladdin'}

Key: 150083440388240843763314275937542066776
Value: {'question': "What does MG sand for in Booker T & The MG's?", 'responses': [('Booker T.', [-2.6431045532226562, -0.07248425483703613, -1.0670278072357178], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melvins George', [-3.7681045532226562, -3.736753463745117, -2.909000873565674], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mellow Green', [-3.0181045532226562, -1.4031238555908203, -1.0238467454910278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Booker Taliaferro', [-2.6431045532226562, -3.822484254837036, -0.3310011625289917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Major General', [-3.1431045532226562, -0.3616727590560913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melvin Gay III', [-2.3931045532226562, -2.109861135482788, -4.297978401184082], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Gordon', [-3.1431045532226562, -1.7092576026916504, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melvin Davis', [-2.3931045532226562, -2.312986135482788, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Musical genius', [-3.5181045532226562, -0.6426267027854919, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Major General', [-3.1431045532226562, -0.3616727590560913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Booker T.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Memphis Group'}

Key: 81244332995537692179587915743895783266
Value: {'question': 'Florence Ballard was a member of which girl group?', 'responses': [('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Supremes', [-1.9637140035629272, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Supremes', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Supremes'}

Key: 307530010586069259921202592019591083231
Value: {'question': 'Who was born first, Susan Sarandon or Glenn Close?', 'responses': [('Susan Sar', [-0.8157694935798645, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenn Close', [-1.3157694339752197, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenn Close', [-1.3157694339752197, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenn Close', [-1.3157694339752197, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenn Close', [-1.3157694339752197, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sarandon', [-1.8157694339752197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.8157694935798645, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.8157694935798645, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenn', [-1.3157694339752197, -3.0485873222351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.8157694935798645, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Susan Sar', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': 'Susan Sarandon'}

Key: 17662878964593709817063920693736136015
Value: {'question': 'Who wrote the novel The Go Between?', 'responses': [('L. P. Hartley', [0.0, 0.0, -0.8981232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L. P. Hartley', [0.0, 0.0, -0.8981232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'L. P. Hartley', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'L. P. Hartley'}

Key: 237872808202852723530784495625826864930
Value: {'question': 'In which musical do the sweeps sing Chim Chim Cheree?', 'responses': [('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mary Poppins', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mary Poppins'}

Key: 152675490732111985212646801409407210227
Value: {'question': "Who had a big 60s No 1 with Tossin' and Turnin'?", 'responses': [('The Crystals', [-0.7739529609680176, -4.296119689941406, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Anka', [-3.8989529609680176, -1.3304071426391602, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gene Chandler', [-3.7739529609680176, -2.1664273738861084, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.7739529609680176, -2.921119451522827, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Tops', [-0.7739529609680176, -4.046119689941406, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Temptations', [-0.7739529609680176, -2.546119451522827, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [-3.7739529609680176, -1.9027467966079712, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The 5', [-0.7739529609680176, -3.796119451522827, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johnny Kidd', [-4.523952960968018, -2.4485127925872803, -0.9112027287483215], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Righteous Brothers', [-0.7739529609680176, -4.233619689941406, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Crystals', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Bobby Lewis'}

Key: 180498256462196551773436965902946247899
Value: {'question': 'Sam Phillips was owner of which legendary recording studio?', 'responses': [('Sun Studio', [0.0, -2.1500632762908936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.6500633358955383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Studios', [0.0, -1.6500632762908936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.6500633358955383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Studio', [0.0, -2.1500632762908936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.6500633358955383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Studio', [0.0, -2.1500632762908936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun', [0.0, -1.7750632762908936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.6500633358955383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.6500633358955383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sun Studio', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': 'Sun'}

Key: 39420177020957877944393328083549366158
Value: {'question': 'Which actor played Maxwell Smart?', 'responses': [('Steve Carell', [-1.3010929822921753, -0.9452396631240845, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.5823429822921753, -0.10633727163076401, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.5823429822921753, -0.10633727163076401, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Murray', [-3.410468101501465, -1.8637287616729736, -0.1278369277715683], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve Carell', [-1.3010929822921753, -0.9452396631240845, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.5823429822921753, -0.10633727163076401, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.5823429822921753, -0.10633727163076401, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve McQ', [-1.3010929822921753, -2.523364543914795, -1.370377779006958], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Niven', [-3.222968101501465, -1.5794165134429932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.5823429822921753, -0.10633727163076401, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Steve Carell', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Don Adams'}

Key: 250902319081714487332886945583981914965
Value: {'question': 'On a computer keyboard which letter on the same line is between C and B?', 'responses': [('Q', [-3.04641056060791, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A', [-2.79641056060791, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A', [-2.79641056060791, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Z', [-3.04641056060791, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('O', [-3.54641056060791, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D', [-1.5464106798171997, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D', [-1.5464106798171997, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('B', [-3.29641056060791, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D', [-1.5464106798171997, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D', [-1.5464106798171997, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Q', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'V'}

Key: 124179341112811498960819783087715892391
Value: {'question': "Lunar 10's Lunar Excursion Module was named after which famous character?", 'responses': [('Michael Caine', [-4.512409210205078, -4.069887161254883, -0.2307814657688141], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chekov', [-2.637408971786499, -2.0601658821105957, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Aldrin', [-0.887408971786499, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Lightyear', [-0.887408971786499, -1.0537006855010986, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chekov', [-2.637408971786499, -2.0601658821105957, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Aldrin', [-0.887408971786499, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C3PO', [-3.262408971786499, -2.6653523445129395, -0.12971262633800507], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo 1', [-2.887408971786499, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Aldrin', [-0.887408971786499, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Aldrin', [-0.887408971786499, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michael Caine', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Snoopy'}

Key: 320222099055156391546097176572902011225
Value: {'question': 'In which decade did golfer Gary Player last win the British Open?', 'responses': [('1974', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -0.3137805759906769, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1967', [-0.03804141283035278, -0.08893945813179016, 0.0, -1.6004126071929932, -2.4979896545410156, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -0.3137805759906769, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -0.3137805759906769, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -1.4387805461883545, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -0.3137805759906769, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1969', [-0.03804141283035278, -0.08893945813179016, 0.0, -1.6004126071929932, -2.1229896545410156, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -0.3137805759906769, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -1.4387805461883545, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -1.4387805461883545, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1974', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': '70s'}

Key: 232423417736115427988669265503815216208
Value: {'question': 'Sarah FitzGerald has been a 90s world champion in which sport?', 'responses': [('Golf', [-4.2584943771362305, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snooker', [-3.8834943771362305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Taekwondo', [-3.6334943771362305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Skateboarding', [-4.2584943771362305, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Taekwondo', [-3.6334943771362305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roller derby', [-2.6334943771362305, -1.9277201890945435], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Water polo', [-4.2584943771362305, -1.7431763410568237], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snowboarding', [-3.0084943771362305, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rugby', [-4.0084943771362305, -0.3620091378688812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fencing', [-4.0084943771362305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Golf', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Squash'}

Key: 294927688423627277710155037956184964832
Value: {'question': 'Where was the peace treaty signed that brought World War I to an end?', 'responses': [('Versailles', [-0.5736609101295471, -0.45593681931495667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hall', [-1.9486608505249023, -2.153442859649658], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles', [-0.5736609101295471, -0.45593681931495667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles', [-0.5736609101295471, -0.45593681931495667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles', [-0.5736609101295471, -0.45593681931495667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('...', [-3.9486608505249023, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles,', [-0.5736609101295471, -1.4559367895126343], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles', [-0.5736609101295471, -0.45593681931495667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Big', [-1.9486608505249023, -4.403442859649658], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-2.3236608505249023, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Versailles', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Versailles'}

Key: 213701650377957415909845329583462630559
Value: {'question': 'Which Welsh singer was invited to sing at the White House on Millennium Eve?', 'responses': [('Tom Jones', [-2.0662426948547363, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charlotte Church', [-2.2537426948547363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Catherine Zeta-', [-4.503742694854736, -0.3174879550933838, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shirley Bassey', [-1.0037428140640259, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katherine Jenkins', [-2.3787426948547363, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Catatonia', [-4.503742694854736, -0.46969252824783325, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charlotte Church', [-2.2537426948547363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bryn Terfel', [-2.2537426948547363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katherine Jenkins', [-2.3787426948547363, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bonnie Tyler', [-2.8162426948547363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tom Jones', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Tom Jones'}

Key: 216197810693029640402091533550140169337
Value: {'question': 'Which company was responsible for the oil spill in Alaska in 1989?', 'responses': [('Exxon Valdez', [-0.048855964094400406, -1.6656724214553833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon Valdez', [-0.048855964094400406, -1.6656724214553833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [-0.048855964094400406, -0.4156724512577057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('British Petroleum', [-3.736356019973755, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [-0.048855964094400406, -0.4156724512577057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [-0.048855964094400406, -0.4156724512577057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [-0.048855964094400406, -0.4156724512577057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [-0.048855964094400406, -0.4156724512577057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [-0.048855964094400406, -0.4156724512577057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ExxonMobil', [-0.048855964094400406, -3.790672540664673], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Exxon Valdez', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Exxon'}

Key: 206318651501085105639972272208241462796
Value: {'question': "What date is Father's Day?", 'responses': [('3rd Sunday', [-0.6272516250610352, -0.30635571479797363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3rd Sunday', [-0.6272516250610352, -0.30635571479797363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3rd Sunday', [-0.6272516250610352, -0.30635571479797363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Third Sunday in June', [-2.127251625061035, 0.0, -0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2nd Sunday', [-0.6272516250610352, -2.3063557147979736, -0.7582093477249146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('21st', [-0.6272516250610352, -2.3063557147979736, -1.3832093477249146, -0.5823919773101807], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sunday in June', [-3.064751625061035, -2.4329335689544678, -0.32656270265579224, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3rd Sunday', [-0.6272516250610352, -0.30635571479797363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Third Sunday of June', [-2.127251625061035, 0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3rd Sunday', [-0.6272516250610352, -0.30635571479797363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '3rd Sunday', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452238, 'reference': '3rd Sunday in June'}

Key: 111897038798621056518831427631517755303
Value: {'question': 'In which decade of the 20th century was the FBI set up?', 'responses': [('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20s', [-0.04858732968568802, -2.2378222942352295, 0.0, -1.279762864112854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20s', [-0.04858732968568802, -2.2378222942352295, 0.0, -1.279762864112854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1908', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': '1900s'}

Key: 147779174368667496048909218673937204395
Value: {'question': 'In which decade of the 20th century was Dan Aykroyd born?', 'responses': [('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, 0.0, 0.0, 0.0, -1.8567777872085571, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1952', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '50s'}

Key: 291970198749930624026268518020421452676
Value: {'question': 'Which American wrote The Game of Chess in 1959?', 'responses': [('Bobby Fischer', [-1.95741868019104, -0.11282224208116531, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo Kogan', [-4.551168441772461, -2.2340128421783447, -4.277610778808594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Life magazine editor', [-4.301168441772461, -1.570268988609314, -3.4946346282958984], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Danzer', [-3.73866868019104, -3.1574416160583496, -0.1564284861087799], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Taper', [-4.238668441772461, -2.181069850921631, -0.2077118456363678], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reuben Fine', [-1.95741868019104, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Samuel Stanley Chess', [-3.98866868019104, -3.7833728790283203, -4.9224853515625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-1.95741868019104, -0.11282224208116531, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward Lasker', [-2.42616868019104, -0.5435662269592285, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur Koest', [-3.51991868019104, -0.18664410710334778, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bobby Fischer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Bobby Fischer'}

Key: 215734200375757970156916895600656412142
Value: {'question': 'Which leader did Hitler meet in the Brenner Pass in WWII?', 'responses': [('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mussolini', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mussolini'}

Key: 69473551309042707517281865305853677895
Value: {'question': 'Which company first manufactured the electric toothbrush?', 'responses': [('Philips', [-2.5675902366638184, -0.11716168373823166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gillette', [-1.692590355873108, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gillette', [-1.692590355873108, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oral-', [-3.5050902366638184, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gillette', [-1.692590355873108, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colgate', [-1.567590355873108, -0.42029085755348206], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Remington', [-2.4425902366638184, -0.17609143257141113], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gillette', [-1.692590355873108, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colgate', [-1.567590355873108, -0.42029085755348206], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phillips', [-2.5675902366638184, -0.10930826514959335], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Philips', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Squibb'}

Key: 198583945725721991674938870176852415309
Value: {'question': 'Who lived under the pseudonym of Harriet Brown in New York form the 40s to the 90s?', 'responses': [('Truman Capote', [-2.433851480484009, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Reverend Mother', [-3.183851480484009, -3.6446571350097656, -1.268862247467041], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Great Im', [-3.183851480484009, -2.8946571350097656, -4.486468315124512], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Theodora K', [-3.183851480484009, -2.6446571350097656, -1.3364183902740479], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Susan Sontag', [-4.05885124206543, -0.059829164296388626, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Nora Ephron', [-4.05885124206543, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-4.68385124206543, -0.025501256808638573, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Laura Ingalls', [-4.43385124206543, -1.3538436889648438, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Anna Delvey', [-3.433851480484009, -2.785254716873169, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('J.D', [-4.05885124206543, -0.06196761503815651, -0.8795642852783203], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Truman Capote', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Greta Garbo'}

Key: 60991571921365122885230986129027391995
Value: {'question': 'Which actor bought the island of Tetiaroa?', 'responses': [('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Marlon Brando', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Marlon Brando'}

Key: 112439347889379293097987252864404903518
Value: {'question': 'Between 1952 and 1954 did the number of TV stations in the USA double, triple or quadruple?', 'responses': [('Quadru', [-1.087140440940857, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('quadrupled', [-3.5871405601501465, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Quadru', [-1.087140440940857, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Doubled', [-1.462140440940857, -1.3132617473602295], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Triple', [-1.587140440940857, -0.22541262209415436], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Quadru', [-1.087140440940857, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Quadru', [-1.087140440940857, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Quadru', [-1.087140440940857, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Triple', [-1.587140440940857, -0.22541262209415436], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Doubled', [-1.462140440940857, -1.3132617473602295], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Quadru', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 0.9502705392332347, 'reference': 'Triple'}

Key: 11680331785068515148456340105560861847
Value: {'question': "What was Wham!'s first No 1?", 'responses': [('Wake Me Up', [-0.9217020273208618, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Young Guns', [-3.0467019081115723, 0.0, -0.932244062423706], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake Me Up', [-0.9217020273208618, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake Me Up', [-0.9217020273208618, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake Me Up', [-0.9217020273208618, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'Club Trop", [-2.7967019081115723, -1.9232783317565918, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake Me Up', [-0.9217020273208618, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Club Tropicana', [-1.7967020273208618, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Careless Whisper', [-2.6717019081115723, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake me up', [-0.9217020273208618, -1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wake Me Up', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Wake Me Up Before You Go Go'}

Key: 261254170806543673861855075642184546795
Value: {'question': "Which musical featured the song You'll Never Walk Alone?", 'responses': [('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Carousel', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Carousel'}

Key: 78497034924490418530805762271807404193
Value: {'question': 'In which year was Bloody Sunday in Londonderry?', 'responses': [('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1972', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1972'}

Key: 299581464679262681850763517209068774618
Value: {'question': 'The first untethered space walk took place from which space craft?', 'responses': [('Skylab', [-1.558621883392334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Skylab', [-1.558621883392334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The space', [-2.308621883392334, -1.4351820945739746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Space', [-3.558621883392334, -2.1792221069335938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Space Shuttle', [-1.808621883392334, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mir', [-2.058621883392334, -0.3090508282184601], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Skylab', [-1.558621883392334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('STS', [-2.808621883392334, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('space shuttle', [-3.433621883392334, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo', [-4.433621883392334, -0.16368143260478973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Skylab', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456562, 'reference': 'Challenger'}

Key: 253715240938783311741038917831173056854
Value: {'question': 'What was the main color of a Storm trooper in Star Wars?', 'responses': [('White', [-0.970940887928009, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blue', [-2.4084408283233643, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.970940887928009, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Orange', [-4.345941066741943, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red', [-2.9709408283233643, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.970940887928009, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.970940887928009, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.970940887928009, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.970940887928009, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Black', [-1.7209408283233643, -0.07045131176710129], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'White', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'White'}

Key: 208489583093401191465113517026624910295
Value: {'question': 'Richard Nixon was Vice President to which US state?', 'responses': [('Gerald Ford', [-3.1387665271759033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spiro Agnew', [-2.5137665271759033, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.8887664675712585, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.8887664675712585, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Nixon', [-2.5137665271759033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Nixon', [-2.5137665271759033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George HW', [-4.701266288757324, -2.4580726623535156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spiro Agnew', [-2.5137665271759033, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alabama', [-3.7637665271759033], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.8887664675712585, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gerald Ford', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Dwight Eisenhower'}

Key: 46647447193045795628323596244589048931
Value: {'question': 'Luxor international airport is in which country?', 'responses': [('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Egypt', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Egypt'}

Key: 10966074543901517477364732942015778808
Value: {'question': 'Which country did Albert Einstein move to as the Nazis rose to power?', 'responses': [('United States', [-1.4728131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The US', [-3.097813129425049, -1.8703147172927856], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-1.4728131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-1.4728131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-1.4728131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-3.222813129425049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5978131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5978131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('America', [-3.597813129425049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5978131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'United States', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'America'}

Key: 339149744893660285137218492256137297395
Value: {'question': 'In the 90s how many points have been awarded for finishing first in a Grand Prix?', 'responses': [('12', [0.0, -0.5998064279556274, -2.5363528728485107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -1.2248064279556274, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8', [0.0, -1.8498064279556274, -0.13009054958820343], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -1.2248064279556274, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10', [0.0, -0.5998064279556274, -0.16135281324386597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10', [0.0, -0.5998064279556274, -0.16135281324386597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -1.2248064279556274, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -1.2248064279556274, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10', [0.0, -0.5998064279556274, -0.16135281324386597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8', [0.0, -1.8498064279556274, -0.13009054958820343], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '12', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': '10'}

Key: 218275342711631337856973563624839051277
Value: {'question': 'Which lawyer made Raymond Burr famous?', 'responses': [('Richard', [-3.9871115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert', [-3.0496115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Raymond', [-2.8621115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [-1.8621115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Perry', [-2.0496115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles', [-4.799611568450928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.674611568450928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Perry', [-2.0496115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Perry', [-2.0496115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Erle', [-2.5496115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Richard', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816237, 'reference': 'Perry Mason'}

Key: 175365714901545549037744153837609809091
Value: {'question': 'Which broadcasting company did Edward J Noble found?', 'responses': [('CBS', [-0.7470742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-0.7470742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('NBC', [-1.4970742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-0.7470742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-0.7470742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('NBC', [-1.4970742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('NBC', [-1.4970742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-0.7470742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('NBC', [-1.4970742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sports TV', [-4.622074127197266, -3.49984073638916], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'CBS', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'ABC'}

Key: 207405623594446908613910160083214920906
Value: {'question': 'In which decade did the Jackson 5 sign to Motown?', 'responses': [('60s', [-0.06993623077869415, -2.378518581390381, 0.0, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sixties', [-2.6949362754821777, -2.843623161315918, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60s', [-0.06993623077869415, -2.378518581390381, 0.0, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '60s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': '1960s'}

Key: 295721133551313037003218385038645841971
Value: {'question': 'How many vice presidents did Franklin D Roosevelt have?', 'responses': [('4', [-0.3015320599079132, -0.2663678824901581], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.6765320301055908, -0.09776365756988525], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.6765320301055908, -0.09776365756988525], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three', [-2.926532030105591, -0.1492825299501419], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.3015320599079132, -0.2663678824901581], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.3015320599079132, -1.7663679122924805], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.3015320599079132, -0.2663678824901581], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.3015320599079132, -0.2663678824901581], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.6765320301055908, -0.09776365756988525], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.3015320599079132, -0.2663678824901581], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '4', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Three'}

Key: 153087901943400500082408407976902961664
Value: {'question': "In which state is Harrah's Auto Collection situated?", 'responses': [('North Las', [-3.909956455230713, -1.2239822149276733], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.159956455230713, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nevada', [-2.034956455230713, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.159956455230713, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.159956455230713, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.159956455230713, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pennsylvania', [-4.409956455230713, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.159956455230713, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Orleans', [-2.909956455230713, -1.3202791213989258], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.159956455230713, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'North Las', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Nevada'}

Key: 147580453735844122318139985719229352195
Value: {'question': "What was the name of Gene Autry's horse?", 'responses': [('Trigger', [-2.6465845108032227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Silver', [-3.1778345108032227, -0.16233444213867188], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buttermilk', [-3.1309595108032227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Trigger', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Champion'}

Key: 230252488792271781604711703219630814128
Value: {'question': 'Which city has a sports team of Steelers and team of Pirates?', 'responses': [('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh,', [0.0, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh,', [0.0, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh,', [0.0, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pittsburgh', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Pittsburgh'}

Key: 94472712112606296234129770326955987808
Value: {'question': 'What did Fort Dearborn, Indian Territory change its name to?', 'responses': [('Chicago', [-0.5684362053871155, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort Dodge', [-1.1934361457824707, -2.5961806774139404], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort Dearborn', [-1.1934361457824707, -4.7211809158325195], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.5684362053871155, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.5684362053871155, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.5684362053871155, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort Dodge', [-1.1934361457824707, -2.5961806774139404], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.5684362053871155, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort Worth', [-1.1934361457824707, -2.7211806774139404], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort Smith', [-1.1934361457824707, -1.0961806774139404], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chicago', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Chicago, Illinois'}

Key: 107490582488842314494253911039828007872
Value: {'question': 'Bill Berry retired through ill health as a drummer in which band?', 'responses': [('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REM', [-1.008503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REM', [-1.008503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REM', [-1.008503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'R.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'REM'}

Key: 338491303436063744531418221079735244352
Value: {'question': 'Leslie Nielsen trained in which of the armed services in WWII?', 'responses': [('Canadian navy', [-2.7825043201446533, -3.4590680599212646], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('U.', [-2.4075043201446533, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Air Force', [-2.4075043201446533, -0.25687500834465027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Navy', [-2.0325043201446533, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('US Navy', [-1.7825043201446533, -0.8815300464630127], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Army', [-2.4075043201446533], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('US Marines', [-1.7825043201446533, -3.2565300464630127], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Air Force', [-2.4075043201446533, -0.25687500834465027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USMC', [-1.7825043201446533, -3.0065300464630127], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Coast', [-2.1575043201446533, -3.5193638801574707], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Canadian navy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Royal Canadian'}

Key: 291282290886535409978909703339803815873
Value: {'question': 'What went with Blood and Sweat in the name of the 60s rock band?', 'responses': [('and Tears', [-1.612539529800415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('and Tears', [-1.612539529800415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('And Tears', [-1.987539529800415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diamonds', [-1.581289529800415, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tears', [-4.182851791381836, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roses?', [-3.800039529800415, -3.288041353225708], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('& Tears', [-2.050039529800415, -0.2213774174451828], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('And Tears', [-1.987539529800415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('and Tears', [-1.612539529800415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Experience', [-3.659414529800415, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'and Tears', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Tears'}

Key: 328447259032384053761863265516174750681
Value: {'question': 'Which musical featured the song I Feel Pretty?', 'responses': [('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Funny Girl', [-2.0631959438323975, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Funny Girl', [-2.0631959438323975, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'West Side Story', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'West Side Story'}

Key: 233558502341880634634735511533470717872
Value: {'question': 'Who produced the first Jetliner in 1957?', 'responses': [('Boeing', [-1.0930145978927612, -0.09092823415994644], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas Aircraft', [-1.2180145978927612, -0.3648648262023926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas Aircraft', [-1.2180145978927612, -0.3648648262023926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('McDonnell Douglas', [-3.593014717102051, -0.8042733669281006], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boeing', [-1.0930145978927612], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas Aircraft', [-1.2180145978927612, -0.3648648262023926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lockheed', [-2.218014717102051, -0.21638822555541992], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas', [-1.2180145978927612, -1.3648648262023926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boeing', [-1.0930145978927612, -0.09092823415994644], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('McDonnell', [-3.593014717102051, -1.1792733669281006], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Boeing', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Boeing'}

Key: 55263147172295123017909560426286568332
Value: {'question': 'In which decade of the 20th century was James Caan born?', 'responses': [('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -1.7842440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -1.7842440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -1.7842440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1940s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1930s'}

Key: 237687854910576507567971273498027949574
Value: {'question': 'In which country is the deepwater port of Trondheim?', 'responses': [('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Norway', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Norway'}

Key: 16202945781029922120160777797256517657
Value: {'question': 'In which state is Camp David?', 'responses': [('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Maryland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Maryland'}

Key: 123584650545463914068196490215293723253
Value: {'question': 'What was the Statue of Liberty originally called?', 'responses': [('Lady Liberty', [-2.8370330333709717, -0.6037852764129639, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Colossus of', [-2.5870330333709717, -0.6549707055091858, -0.08377019315958023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening', [-0.4620329737663269, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening', [-0.4620329737663269, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberté éclair', [-2.4620330333709717, -2.3502066135406494, -3.5032846927642822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lady of Liberty', [-2.8370330333709717, -0.7912852764129639, -0.33874380588531494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening', [-0.4620329737663269, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Liberty Enlight', [-2.9620330333709717, -0.2906346023082733, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Liberty Enlight', [-2.9620330333709717, -0.2906346023082733, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening', [-0.4620329737663269, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lady Liberty', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'Liberty Enlightening the World'}

Key: 112512653525576048371295925030598196931
Value: {'question': 'Who sang the Bond theme form From Russia With Love?', 'responses': [('Matt Monro', [-0.5083795189857483, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.5083795189857483, -0.07888974994421005, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Barry', [-1.4146294593811035, 0.0, -0.09563114494085312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Barry', [-1.4146294593811035, 0.0, -0.09563114494085312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.5083795189857483, -0.07888974994421005, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.5083795189857483, -0.07888974994421005, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Barry', [-1.4146294593811035, 0.0, -0.09563114494085312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Barry', [-1.4146294593811035, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Anka', [-4.0396294593811035, -2.1940929889678955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Barry', [-1.4146294593811035, 0.0, -0.09563114494085312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Matt Monro', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'Matt Monro'}

Key: 45755384076082091870849779112089745287
Value: {'question': 'Which company was responsible for the oil spill in New York harbor in 1990?', 'responses': [('Exxon Valdez', [0.0, -1.940263271331787], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.31526321172714233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.31526321172714233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon Valdez', [0.0, -1.940263271331787], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.31526321172714233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon-', [0.0, -3.315263271331787], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.31526321172714233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -3.815263271331787], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.31526321172714233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.31526321172714233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Exxon Valdez', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Exxon'}

Key: 55494487028716034782981453564402901944
Value: {'question': 'In which country was Arnold Schwarzenegger born?', 'responses': [('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Austria', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Austria'}

Key: 87853895163434729299833218199025839501
Value: {'question': "Who had an 80s No 1 with Don't You Want Me?", 'responses': [('The Human League', [-1.0741660594940186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-1.0741660594940186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-1.0741660594940186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.4179159998893738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.4179159998893738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.4179159998893738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.4179159998893738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.4179159998893738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-1.0741660594940186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-1.0741660594940186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Human League', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Human League'}

Key: 292684906998794697216328865562232074749
Value: {'question': 'Which star of Hannah And Her Sisters has a child called Free?', 'responses': [('Gwyneth Palt', [-2.9599475860595703, -0.6799575686454773, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Allen', [-1.2724475860595703, -0.1797446459531784, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Keaton', [-1.8974475860595703, -0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Allen', [-1.2724475860595703, -0.1797446459531784, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Keaton', [-1.8974475860595703, -0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dianne Wiest', [-2.0849475860595703, -0.042999111115932465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dianne Wiest', [-2.0849475860595703, -0.042999111115932465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Allen', [-1.2724475860595703, -0.1797446459531784, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anne Bancroft', [-3.2724475860595703, -0.16729751229286194, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Allen', [-1.2724475860595703, -0.1797446459531784, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gwyneth Palt', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': 'Barbara Hershey'}

Key: 195303369408133964774489111183950190455
Value: {'question': 'Who had 70s hits with Have You Seen Her and Oh Girl?', 'responses': [('Rose Royce', [-4.021017074584961, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peaches & Herb', [-3.606954574584961, -0.8615548014640808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Ohio Express', [-0.4819546341896057, -2.5189051628112793, -1.8309202194213867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Main Ingredient', [-0.4819546341896057, -2.8782801628112793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Weather Girls', [-0.4819546341896057, -3.5814051628112793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Five Stair', [-0.4819546341896057, -3.2064051628112793, -0.24493558704853058], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Main Ingredient', [-0.4819546341896057, -2.8782801628112793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Robinson', [-4.888204574584961, -4.246286869049072, -0.5522034168243408], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Spinners', [-0.4819546341896057, -3.0814051628112793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose Royce', [-4.021017074584961, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rose Royce', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Chi-Lites'}

Key: 268402708432426830177707196375572718936
Value: {'question': "In which decade of the 20th century was Father's Day first celebrated?", 'responses': [('18th', [-0.05488219112157822, 0.0, -1.8047446012496948, -1.9765732288360596, -0.40441542863845825], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1909', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.9332578182220459, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1910', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.6832578182220459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.9332578182220459, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1909', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.9332578182220459, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1910', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.6832578182220459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1909', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.9332578182220459, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1890', [-0.05488219112157822, 0.0, -1.8047446012496948, -2.1015732288360596, -0.3322916030883789], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1870', [-0.05488219112157822, 0.0, -1.8047446012496948, -0.8515731692314148, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1910', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.6832578182220459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '18th', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': '1910s'}

Key: 80036803484421873569794968191345607563
Value: {'question': '"What was the name of the ""girl with kaleidoscope eyes"" in a Beatles song?"', 'responses': [('Lucy In', [-0.9343842267990112, -2.480241298675537], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cynthia', [-2.496884346008301, -0.21795836091041565], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy', [-0.9343842267990112, -0.6364914178848267], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy in', [-0.9343842267990112, -0.9489914178848267], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cynthia', [-2.496884346008301, -0.21795836091041565], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Rigby', [-2.684384346008301, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Linda McCartney', [-4.590634346008301, -0.2383444905281067], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy', [-0.9343842267990112, -0.6364914178848267], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy In', [-0.9343842267990112, -2.480241298675537], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I can', [-3.309384346008301, -4.391400337219238], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lucy In', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Lucy'}

Key: 156845925365979044438433254302190351098
Value: {'question': 'Will Rogers airport was built in which US state?', 'responses': [('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('OK', [-2.929882287979126, -0.6187557578086853], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oklahoma', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Oklahoma'}

Key: 43814329345678189933879252960679007558
Value: {'question': 'What writer was expelled from West Point for showing up for a public parade wearing only a white belt and gloves?', 'responses': [('Mark Twain', [-0.9383733868598938, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.9383733868598938, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.9383733868598938, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.9383733868598938, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Robert Heinlein', [-3.438373327255249, -3.2428841590881348, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.9383733868598938, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Ambrose Bierce', [-3.813373327255249, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.9383733868598938, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.9383733868598938, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Ernest Hemingway', [-2.063373327255249, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mark Twain', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Edgar Allan Poe'}

Key: 76846769095736674064929847593683346275
Value: {'question': '"What couple live next door to Dagwood and Blondie Bumstead in ""Blondie""?"', 'responses': [('Gladys and George', [-3.1606225967407227, -0.023245446383953094, -1.9618619680404663, -0.9417592287063599], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pop and Mom', [-3.9106225967407227, -0.16630339622497559, -0.7709618806838989, -0.45403993129730225], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Herman and Lily', [-4.660622596740723, 0.0, -1.8735235929489136, -0.7417206764221191], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Biffers', [-1.5981227159500122, -2.222442626953125, -2.0815467834472656, -2.4054367542266846], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The McBrides', [-1.5981227159500122, -3.409942626953125, -3.1946864128112793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Homer and Marge Simpson', [-4.160622596740723, 0.0, -0.17417211830615997, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie and Edith', [-2.9731225967407227, -0.170610710978508, -0.8607392311096191, -2.027719497680664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr and Mrs Peabody', [-2.4731225967407227, -1.5019290447235107, 0.0, -3.271183490753174], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blondie and Dag', [-3.9106225967407227, 0.0, -0.5231232643127441, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Linus and Lucy Van', [-4.410622596740723, 0.0, 0.0, -0.5067813396453857], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gladys and George', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Herb and Tootsie Woodley'}

Key: 315960496772872662530234073742748693691
Value: {'question': "Who was the Lone Ranger's great grand-nephew?", 'responses': [('Tonto', [-0.6295303106307983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D. John', [-4.504530429840088, -1.67667555809021, -3.3525147438049316], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tonto', [-0.6295303106307983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-1.3170303106307983, 0.0, -0.06268490105867386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-1.3170303106307983, 0.0, -0.06268490105867386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tonto', [-0.6295303106307983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-1.3170303106307983, 0.0, -0.06268490105867386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tonto', [-0.6295303106307983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-1.3170303106307983, 0.0, -0.06268490105867386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-1.3170303106307983, 0.0, -0.06268490105867386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tonto', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290393, 'reference': 'The Green Hornet'}

Key: 315933313220252838540973137195040072500
Value: {'question': '"Psychologist William Moulton Marston, inventor of the polygraph, or lie detector, also created a famous comic book heroine,. Who was she?"""', 'responses': [('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wonder Woman', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Wonder Woman'}

Key: 322405567974317541848831685930586294097
Value: {'question': '"""Last night I dreamt I went to Manderley again,"" was the first line of what Daphne du Maurier novel?"', 'responses': [('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rebecca', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Rebecca'}

Key: 43606630774321893798265684732537957406
Value: {'question': '"What is the actual title of Leonardo da Vinci\'s ""Mona Lisa""?"', 'responses': [('La Gioconda', [-0.560475766658783, -0.188959538936615, 0.0, -0.08066262304782867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lisa Gherardini', [-2.8104758262634277, -1.2734706401824951, 0.0, -0.4695066213607788], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Gioconda', [-0.560475766658783, -0.188959538936615, 0.0, -0.08066262304782867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The Lady with', [-1.8104758262634277, -2.316685676574707, -0.5591940879821777, -0.40799692273139954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('""La Gioconda', [-3.9354758262634277, -0.3960641622543335, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portrait of Mona Lisa', [-3.1854758262634277, 0.0, -2.558703899383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Gioconda', [-0.560475766658783, -0.188959538936615, 0.0, -0.08066262304782867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The Lady with', [-1.8104758262634277, -2.316685676574707, -0.5591940879821777, -0.40799692273139954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Gioconda', [-0.560475766658783, -0.188959538936615, 0.0, -0.08066262304782867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Joconde', [-0.560475766658783, -1.9389595985412598, 0.0, -0.08066262304782867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'La Gioconda', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'La Gioconda'}

Key: 70752152378013812315822982763783822665
Value: {'question': "In Henry Wadsworth Longfellow's famous poem, Hiawatha, what was the name of Hiawatha's wife?", 'responses': [('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha.', [-0.10731483995914459, 0.0, -3.167999029159546], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Moccasin', [-2.8495023250579834, -1.6878266334533691, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Minnehaha', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Minnehaha'}

Key: 305108324243777914518778592783408768615
Value: {'question': "How many husbands did the Wife of Bath have, as reported in Chaucer's Canterbury Tales?", 'responses': [('5', [-0.7340680360794067, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.7340680360794067, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.7340680360794067, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nine', [-2.609067916870117, -0.08995520323514938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nine', [-2.609067916870117, -0.08995520323514938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.3590680360794067, -0.09770473837852478], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.7340680360794067, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eight', [-3.484067916870117, -0.08995520323514938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.7340680360794067, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.3590680360794067, -0.09770473837852478], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '5', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': 'Five'}

Key: 283031692528067279999929630903321078117
Value: {'question': 'What was the name of the she-ape that rescued the infant Tarzan and raised him to be Lord of the Apes?', 'responses': [('Cheeta', [-1.9102240800857544, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Cheeta', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Kala'}

Key: 299951613067303540681201935228417999477
Value: {'question': "What was the title of Mac West's 1959 autobiography?", 'responses': [("This Time it's", [-4.305454730987549, -2.8408472537994385, -3.025484561920166, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I'm Number Four", [-2.305454730987549, -0.7503478527069092, -0.37139198184013367, -3.6943740844726562, -4.072463035583496], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On With the Show', [-4.930454730987549, -4.957866668701172, -0.3589375615119934, -0.21798443794250488, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"My Life and Loves', [-1.4304546117782593, -2.340237617492676, -1.1350219249725342, -2.061279296875, -1.670224666595459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"I Heard it Through', [-1.4304546117782593, -1.7152377367019653, -4.940478324890137, -2.3535799980163574, -0.4293733239173889], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I'm Just Lucky", [-2.305454730987549, -0.7503478527069092, -0.37139198184013367, -2.6943740844726562, -2.016535520553589], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I Don't Want", [-2.305454730987549, -3.625347852706909, 0.0, 0.0, -0.8225192427635193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Long, Long Way', [-1.5554546117782593, -3.7217957973480225, -1.7506760358810425, -0.8013284206390381, -3.424412727355957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"You Can\'t', [-1.4304546117782593, -3.965237617492676, -1.1762421131134033, -0.31695011258125305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s Face', [-1.4304546117782593, -5.090237617492676, -0.573300302028656, 0.0, -2.422379493713379], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "This Time it's", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Goodness Had Nothing to Do With It'}

Key: 71195401009200096103012987519539618692
Value: {'question': '"What words did Lewis Carroll combine to come up with the term ""chortle"" in Through a Looking-Glass?"', 'responses': [('Chort', [-1.3541518449783325, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Short and', [-3.854151725769043, -0.5523681044578552], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('chort', [-2.354151725769043, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('chort', [-2.354151725769043, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('chort', [-2.354151725769043, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Laugh', [-1.4791518449783325, -2.2681899070739746], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Choke', [-3.979151725769043, -0.09379976242780685], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('to chuckle', [-3.979151725769043, -0.6462944746017456], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('chuckle and', [-3.354151725769043, -0.29329565167427063], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Laughter', [-4.354151725769043, -2.129300832748413], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chort', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.1935496040981333, 'reference': 'Chuckle and snort'}

Key: 242428669277065383800244648522680264114
Value: {'question': '"Shakespeare wrote that ""brevity is the soul of wit."" What did noted wit Dorothy Parker say it was?"', 'responses': [('The soul of a corpse.', [-2.1039857864379883, -0.7481856346130371, 0.0, -3.3336002826690674, -4.897593021392822, -0.9208433628082275], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Brevity is the soul of', [-3.1039857864379883, 0.0, -0.1988040804862976, -0.04858732968568802, -0.028346039354801178, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('""What did Shakespeare write that', [-1.7289857864379883, -4.133420467376709, -2.8385095596313477, -1.198848843574524, -0.3484445810317993, -0.1797446459531784], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('""You\'re the bee', [-1.7289857864379883, -4.508420467376709, -2.1868371963500977, -0.5453465580940247, -2.767423152923584, -2.853287696838379], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"The very model of a', [-0.6039857268333435, -1.6246089935302734, -4.8922929763793945, -0.6352289915084839, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Too much of a good', [-0.6039857268333435, -3.9996089935302734, -0.6024059653282166, -0.13318225741386414, -0.05488219112157822, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Brevity is the soul', [-0.6039857268333435, -1.4996089935302734, 0.0, -0.04009854421019554, -0.16368143260478973, -0.023245446383953094], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('""The ability to write short', [-1.7289857864379883, -1.8834205865859985, -4.70523738861084, 0.0, -2.2831897735595703, -2.0207719802856445], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('""The kiss of life.""', [-1.7289857864379883, -1.8834205865859985, -4.33023738861084, -0.17620837688446045, -0.28115010261535645, -0.49437570571899414], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("A woman's handbag", [-3.3539857864379883, -4.122486114501953, -1.0631182193756104, 0.0, -4.957066535949707, -0.42447182536125183], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The soul of a corpse.', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'The soul of lingerie'}

Key: 4083821256679784276648544188586882958
Value: {'question': "What is the native country of Agatha Chrisitie's detective Hercule Poirot?", 'responses': [('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Belgium', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Belgium'}

Key: 179500919441214507777366254358643215743
Value: {'question': 'What was the hometown of Sgt. Snorkel in Beetle Bailey?', 'responses': [('Springfield', [-2.9827990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South', [-3.9827990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West', [-4.232799053192139], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-3.8577990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Camp', [-3.7327990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sn', [-3.9827990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-3.8577990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort', [-2.2327990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New', [-2.2327990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.107799053192139], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Springfield', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Pork Corners, Kansas'}

Key: 106672582804728343686434178520485926656
Value: {'question': 'In the Robin Hood stories, what was the real name of Little John?', 'responses': [('Robert Longlegs', [-1.932046890258789, -2.511561870574951, -3.5444841384887695], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Littlejohn', [-0.8695469498634338, -0.5053108930587769, -3.119903326034546], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Lox', [-1.932046890258789, -3.058436870574951, -0.04797643795609474], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert de la', [-1.932046890258789, -3.230311870574951, -1.8181777000427246], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Greene', [-1.932046890258789, -4.441249370574951, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Lackland', [-0.8695469498634338, -2.8256235122680664, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Little', [-0.8695469498634338, -0.5053108930587769, -0.11990334838628769], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Little', [-0.8695469498634338, -0.5053108930587769, -0.11990334838628769], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Lackland', [-0.8695469498634338, -2.8256235122680664, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friar Tuck', [-3.994546890258789, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert Longlegs', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'John Little'}

Key: 276056006835250280929354383841995492109
Value: {'question': "The Last Of The Really Great Whangdoodles and Mandy are children's books written by what well-known Oscar-winning actress?", 'responses': [('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Whoopi Goldberg', [-2.6206560134887695, -0.1764446347951889, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Judy Garland', [-3.1831560134887695, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bette Davis', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Julie Andrews'}

Key: 297686009442561819588224118862021257564
Value: {'question': 'By what pseudonym is writer Frederick Dannay Manfred Bennington Lee better known?', 'responses': [('Ellery Queen', [-0.6196365356445312, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Dan"', [-2.7446365356445312, -2.89985728263855, -0.41269439458847046], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Ben Ames', [-2.7446365356445312, -3.05610728263855, -0.6344508528709412], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"I\'', [-2.7446365356445312, -3.24360728263855, -2.051807403564453], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.6196365356445312, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.6196365356445312, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rex Stout', [-3.2758865356445312, 0.0, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nero Wolfe', [-4.260261535644531, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Dickson Carr', [-4.619636535644531, -0.09047750383615494, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.6196365356445312, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ellery Queen', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Ellery Queen'}

Key: 83340959084944608675596273728971843621
Value: {'question': 'How many times did Ernest Hemingway revise the last page of A Farewell To Arms?', 'responses': [('1', [-0.2994185984134674, -1.281909465789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Five', [-3.6744186878204346, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.2994185984134674, -2.156909465789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.2994185984134674, -1.281909465789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.2994185984134674, -2.156909465789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Twice', [-3.4244186878204346, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.2994185984134674, -1.281909465789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.2994185984134674, -2.156909465789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Once', [-3.9244186878204346, -0.08066273480653763], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three', [-2.9244186878204346, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': '39 times'}

Key: 187841829121333818463300276451201285999
Value: {'question': "What was art-world guru Andy Warhol's name at birth?", 'responses': [('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Andrew Warhola', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Andrew Warhola'}

Key: 24985165128638620145160621829735847022
Value: {'question': 'What was the maiden name of Blondie Bumstead, the comic-strip wife of hapless Dagwood Bumstead?', 'responses': [('Dagwood', [-2.141030788421631, -0.0797952339053154], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Doris', [-2.703530788421631, -1.0452327728271484], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"B', [-4.078530788421631, -2.3436574935913086], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Dimp', [-3.266030788421631, -2.5769495964050293], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Van D', [-4.641030788421631, -1.6845316886901855], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Blondie', [-1.5785306692123413, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Mrs.', [-4.766030788421631, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Gladys B', [-3.578530788421631, -2.3649139404296875], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Velma', [-4.578530788421631, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Dumbrowski', [-3.891030788421631, -1.6269919872283936], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dagwood', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Boopadoop'}

Key: 142380867537269483316262219590494673257
Value: {'question': 'What famous comic strip character was inspired by the 1936 Henry Fonda film Trail of the Lonesome Pine?', 'responses': [('Pogo', [-3.1341681480407715, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Pecos Bill', [-4.3841681480407715, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Little Orphan Annie', [-1.759168267250061, -0.0469430536031723, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henery Hawk', [-2.6341681480407715, -2.2968461513519287, -0.5824508666992188], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Little Orphan Annie', [-1.759168267250061, -0.0469430536031723, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Little Orphan Annie', [-1.759168267250061, -0.0469430536031723, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("Li'l", [-1.509168267250061, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Mark Trail', [-3.1341681480407715, -0.4509372115135193, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Little Orphan Annie', [-1.759168267250061, -0.0469430536031723, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("Li'l", [-1.509168267250061, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pogo', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': "Al Capp's Li'l Abner"}

Key: 99726541484321600103649435140893656675
Value: {'question': 'What was the original name of the orphan created in 1924 by cartoonist Harold Gray in the comic strip we know as Little Orphan Annie?', 'responses': [('Sandy Baxter', [-3.056973934173584, -4.474684715270996], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4944738745689392, -0.07372970879077911], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4944738745689392, -0.07372970879077911], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Mary', [-0.4944738745689392, -3.0112297534942627], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('"Little', [-3.119473934173584, -0.12559545040130615], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4944738745689392, -0.07372970879077911], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4944738745689392, -0.07372970879077911], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Sandy', [-3.056973934173584, -0.318434476852417], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4944738745689392, -0.07372970879077911], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4944738745689392, -0.07372970879077911], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sandy Baxter', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': 0.9502705392332347, 'reference': 'Otto'}

Key: 152839722919546948976103852745059232497
Value: {'question': "What was the name of Elizabeth Barrett Browning's pet golden cocker spaniel ?", 'responses': [('Michael Angelo', [-3.7412877082824707, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spot', [-3.4444127082824707, -0.4560443162918091], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alcy', [-4.342850208282471, -3.5434775352478027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Almeria', [-4.342850208282471, -3.7622275352478027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spot', [-3.4444127082824707, -0.4560443162918091], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth.', [-3.8037877082824707, -3.855267286300659], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Flush', [-3.0537877082824707, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fanta', [-2.5850377082824707, -3.3673338890075684], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Flos', [-1.5069128274917603, -1.391952633857727], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frith', [-4.553787708282471, -1.251575231552124], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michael Angelo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Flush'}

Key: 177223386861074003791905051369493153848
Value: {'question': 'The title of what poetic drama by Robert Browning was used to name a Kentucky town?', 'responses': [('Clo', [-4.218440532684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('East', [-4.530940532684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The', [-1.8434404134750366], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The', [-1.8434404134750366], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.718440532684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"', [-2.030940532684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The', [-1.8434404134750366], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ch', [-3.405940532684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A', [-1.4059404134750366], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pip', [-2.405940532684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Clo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Pippa Passes'}

Key: 228675833131199846721054374212830680327
Value: {'question': 'What did L. Fran Baum, author of the The Wonderful Wizard of Oz, call his home in Hollywood?', 'responses': [('Emerald City', [-2.347609281539917, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Oz Cottage', [-1.597609281539917, -1.9659432172775269], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Silver', [-0.8476093411445618, -4.43664026260376], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('the Emerald', [-3.597609281539917, -0.9007994532585144], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Emerald', [-0.8476093411445618, -0.9366404414176941], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Emerald', [-0.8476093411445618, -0.9366404414176941], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Yellow', [-0.8476093411445618, -1.8116405010223389], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Yellow', [-0.8476093411445618, -1.8116405010223389], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Emerald City', [-2.347609281539917, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Oz', [-1.597609281539917, -1.4034432172775269], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Emerald City', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'Ozcot'}

Key: 80212411259148466639955645343916635416
Value: {'question': "What exotic city was featured in National Geographic magazine's first photo story in 1905?", 'responses': [('Venice,', [-2.978463649749756, -0.7575989961624146], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Cairo,', [-1.4784636497497559, -0.9740769863128662], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Cairo', [-1.4784636497497559, -0.4740769863128662], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Singapore', [-4.478463649749756, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Paris,', [-2.603463649749756, -1.6004126071929932], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Shanghai', [-2.353463649749756, -0.28115010261535645], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bangkok,', [-4.103463649749756, -1.0537006855010986], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Cairo', [-1.4784636497497559, -0.4740769863128662], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Istanbul', [-3.603463649749756, -0.31378084421157837], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Shanghai', [-2.353463649749756, -0.28115010261535645], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Venice,', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Lhasa, Tibet'}

Key: 153256292016964463443728984144206544304
Value: {'question': 'How much time did Jonah spend in the belly of the whale?', 'responses': [('40 days', [-0.11880791932344437, -1.7014133930206299, 0.0, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days and', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -1.9118678569793701], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days and', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -1.9118678569793701], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days and', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -1.9118678569793701], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '40 days', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Three days and three nights'}

Key: 134829948687202818572589460385578331208
Value: {'question': 'For what event in February 1964 did evangelist Billy Graham break his strict rule against watching TV on Sunday?', 'responses': [('Neil Armstrong walking', [-4.899230480194092, 0.0, -3.6635384559631348], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Winter Olympics', [-0.649230420589447, -4.872018814086914, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("JFK's", [-4.399230480194092, -0.2600022852420807, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Beatles first', [-0.649230420589447, -1.8720189332962036, -2.2577059268951416], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Presidential Inauguration', [-4.399230480194092, -1.5865933895111084, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Super Bowl', [-2.649230480194092, -0.1797446459531784, -1.4223707914352417], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Beatles debut', [-0.649230420589447, -1.8720189332962036, -2.8827059268951416], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Super Bowl I', [-2.649230480194092, -0.1797446459531784, -1.4223707914352417], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The coronation of', [-0.649230420589447, -2.997018814086914, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('the moon landing', [-3.149230480194092, -1.9109437465667725, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Neil Armstrong walking', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': "The Beatles' first appearance on The Ed Sullivan Show"}

Key: 244333762587516390385450239948625689676
Value: {'question': 'How tall was Goliath, the Philistine giant slain by David with a stone hurled from a sling?', 'responses': [('9 ft 1 in', [-0.07228665798902512, -0.5307025909423828, -1.9347524642944336, -0.865378737449646, -0.7454773187637329, -1.6360093355178833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9.5 ft', [-0.07228665798902512, -0.5307025909423828, -2.1847524642944336, -0.4409198760986328, -1.4712467193603516, -0.5245211124420166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6.1 m', [-0.07228665798902512, -1.5307025909423828, -1.3712942600250244, -1.094914436340332, -3.1853365898132324, -0.507208526134491], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9.25 feet', [-0.07228665798902512, -0.5307025909423828, -2.1847524642944336, -2.440919876098633, -0.6992614269256592, -0.51070636510849], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seven and a half cubits', [-4.072286605834961, -1.174849510192871, -0.12692804634571075, 0.0, -1.6004126071929932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9.5 feet', [-0.07228665798902512, -0.5307025909423828, -2.1847524642944336, -0.4409198760986328, -0.4712466597557068, -0.21700531244277954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9 ft 1 in', [-0.07228665798902512, -0.5307025909423828, -1.9347524642944336, -0.865378737449646, -0.7454773187637329, -1.6360093355178833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8 ft 6 in', [-0.07228665798902512, -2.530702590942383, -2.649322986602783, -0.8658711910247803, -1.4280667304992676, -0.1719117909669876], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18 feet,', [-0.07228665798902512, -2.155702590942383, -1.783719778060913, -0.5965123176574707, -2.3145194053649902, -0.04969615116715431], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9.5 feet', [-0.07228665798902512, -0.5307025909423828, -2.1847524642944336, -0.4409198760986328, -0.4712466597557068, -0.21700531244277954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '9 ft 1 in', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Six cubits and a span,'}

Key: 337522999038418189640469009530678824485
Value: {'question': '"In the Bible, for what ""price"" did Esau sell his birthright to his younger twin brother, Jacob?"', 'responses': [('A bowl of', [-0.6188465356826782, -0.5352994799613953, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A bowl of', [-0.6188465356826782, -0.5352994799613953, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A pot of', [-0.6188465356826782, -2.16029953956604, -0.28115010261535645], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A stew of', [-0.6188465356826782, -2.66029953956604, -1.5031851530075073], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A bowl of', [-0.6188465356826782, -0.5352994799613953, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A plate of', [-0.6188465356826782, -3.91029953956604, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A bowl of', [-0.6188465356826782, -0.5352994799613953, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('a bowl of', [-2.1188464164733887, -0.4051731526851654, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The blessing', [-3.2438464164733887, -2.4035415649414062, -1.1544679403305054], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('a pot of', [-2.1188464164733887, -2.2801730632781982, -0.28115010261535645], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A bowl of', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Pottage of lentils (Genesis 25:29-34)'}

Key: 104847848039824276425096391399031703872
Value: {'question': 'What bird is named for the apostle Peter?', 'responses': [('Peter bird', [-0.7431896924972534, -3.3916306495666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-0.7431896924972534, -0.26663076877593994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apostle bird', [-4.243189811706543, -2.2634010314941406], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-0.7431896924972534, -0.26663076877593994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-0.7431896924972534, -0.26663076877593994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-0.7431896924972534, -0.26663076877593994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pelican', [-3.118189811706543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-0.7431896924972534, -0.26663076877593994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peregrine', [-3.493189811706543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-0.7431896924972534, -0.26663076877593994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Peter bird', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'The petrel, from a diminutive form of Petrus, or Peter, in Latin'}

Key: 66993385727059141259201975501285124633
Value: {'question': 'Who is the only woman whose age is mentioned in the Bible?', 'responses': [('Rachel', [-3.291471004486084, -0.2829866111278534], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sarah', [-1.041471004486084, -0.2116667628288269], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rachel,', [-3.291471004486084, -1.9079866409301758], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rahab', [-4.291471004486084, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('She was', [-3.791471004486084, -0.6602619290351868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Esther', [-3.166471004486084, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Abigail', [-4.166471004486084, -0.26980265974998474], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Deborah', [-4.166471004486084, -0.11008840054273605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Naomi', [-4.416471004486084, -0.25142502784729004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miriam', [-2.791471004486084, -0.2241203933954239], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rachel', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Sarah'}

Key: 74005814613361634380303201665114635117
Value: {'question': 'What is the most common name in the Bible--shared by 32 people in the Old Testament and one in the New Testament?', 'responses': [('Samuel', [-3.0999197959899902, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Joseph', [-1.7874196767807007, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mary', [-3.4749197959899902, -0.058641258627176285], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('John', [-2.0999197959899902, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('David', [-3.1624197959899902, -0.029750416055321693], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Jacob', [-1.4749196767807007, -0.12201537191867828], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Abraham', [-2.2249197959899902, -0.029750416055321693], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Jacob (', [-1.4749196767807007, -3.1220154762268066], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Noah', [-4.53741979598999, -0.029750416055321693], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Abraham', [-2.2249197959899902, -0.029750416055321693], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Samuel', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Zechariah'}

Key: 12146232797421686173302789665794077167
Value: {'question': 'In what language was the New Testament originally written?', 'responses': [('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aramaic', [-3.1620683670043945, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Koine', [-2.4120683670043945, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Koine', [-2.4120683670043945, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Greek', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'In Greek'}

Key: 292015171333082662839991725743703126216
Value: {'question': 'What was the total population of the world at the time of Christ?', 'responses': [('500', [-0.018149960786104202, -2.56461763381958, -0.3508569598197937, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2.5', [-0.018149960786104202, -0.8146176338195801, -3.2248024940490723, -1.0179555416107178], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('About 30', [-4.0181498527526855, 0.0, -1.8540339469909668, -0.34863242506980896], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('200', [-0.018149960786104202, -0.8146176338195801, -1.3498024940490723, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('230', [-0.018149960786104202, -0.8146176338195801, -2.8498024940490723, -0.6446090340614319], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('120', [-0.018149960786104202, -1.31461763381958, -2.371380090713501, -0.5715804696083069], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('277', [-0.018149960786104202, -0.8146176338195801, -2.3498024940490723, -3.7018914222717285], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('200', [-0.018149960786104202, -0.8146176338195801, -1.3498024940490723, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1 billion', [-0.018149960786104202, -1.31461763381958, -2.621380090713501, -0.11765173822641373], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('180', [-0.018149960786104202, -1.31461763381958, -2.246380090713501, -0.3687935173511505], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '500', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'About 200 million'}

Key: 101448505624018060527723288489005141638
Value: {'question': 'Who were the parents of King Solomon?', 'responses': [('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rehoboam and Rebek', [-3.7525854110717773, -0.02754512056708336, 0.0, -0.21493150293827057, -3.6900649070739746, -2.465224027633667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King David and Bathsheba', [-1.7525854110717773, 0.0, -0.12971262633800507, -0.300302118062973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David and Bathsheba', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'David and Bathsheba'}

Key: 222834287041971500716170819521959227536
Value: {'question': "What is the name of Dr. Seuss's egg-hatching elephant?", 'responses': [('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton the', [-0.10739942640066147, -2.4268531799316406], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gertrude Mc', [-3.1698994636535645, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton H', [-0.10739942640066147, -1.5518531799316406], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Horton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Horton'}

Key: 161800859772386730977746924386748438294
Value: {'question': "Who was Clark Kent's high school sweetheart?", 'responses': [('Lois Lane', [-1.7270348072052002, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lois Lane', [-1.7270348072052002, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lois Lane', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Lana Lang'}

Key: 317392834670341283338937660944642671091
Value: {'question': '"What famous book begins: ""Chug, chug, chug. Puff, puff, puff""?"', 'responses': [("Alice's Adventures in", [-3.9522287845611572, -1.2248058319091797, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"The Wind in the', [-1.9522287845611572, -0.5628894567489624, -0.3819384276866913, -0.08377019315958023, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('A Charlie Brown Christmas', [-3.7022287845611572, -3.712008476257324, 0.0, 0.0, -0.12663400173187256], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Tom Swift and His Motor', [-3.7022287845611572, -1.7906975746154785, -0.32625970244407654, -0.3127604126930237, -2.7721784114837646], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"The Cat in the', [-1.9522287845611572, -0.5628894567489624, -3.5694384574890137, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"The Wind in the', [-1.9522287845611572, -0.5628894567489624, -0.3819384276866913, -0.08377019315958023, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('A Connecticut Yankee in King', [-3.7022287845611572, -4.087008476257324, 0.0, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Wind in the Will', [-0.9522287845611572, -0.535569429397583, -0.11282224208116531, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"Huckleberry Finn"', [-1.9522287845611572, -4.062889575958252, -0.04044583439826965, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Wind in the Will', [-0.9522287845611572, -0.535569429397583, -0.11282224208116531, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Alice's Adventures in", 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'The Little Engine that Could'}

Key: 220114823797530422479613664235492973818
Value: {'question': 'To whom did Herman Melville dedicate his novel, Moby Dick?', 'responses': [('Whale hunting and', [-4.382075786590576, -3.2087841033935547, -4.418257236480713], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain Ahab', [-1.7570756673812866, -0.6853770613670349, -0.09163712710142136], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles A.', [-2.132075786590576, -1.882148265838623, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Cullen Bryant', [-3.132075786590576, -1.3773521184921265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry David Thoreau', [-3.882075786590576, -0.8190969228744507, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nathaniel Hawthorne', [-2.257075786590576, -0.0944129079580307, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nathaniel Hawthorne', [-2.257075786590576, -0.0944129079580307, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His wife,', [-2.507075786590576, -1.5022894144058228, -1.2866361141204834], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Darwin', [-2.132075786590576, -3.179023265838623, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Eliot Norton', [-2.132075786590576, -2.085273265838623, -0.31208059191703796], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Whale hunting and', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Nathanial Hawthorne'}

Key: 296061616975693079742725890138030707089
Value: {'question': '"Under what assumed name did Oscar Wilde live out the last three years of his life, in ""France?"', 'responses': [('Earl of', [-2.983105421066284, -0.14491866528987885], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Alfred Douglas', [-2.233105421066284, -0.04044583439826965], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Sebastien', [-4.170605659484863, -0.24039144814014435], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"Bo', [-2.108105421066284, -1.123537540435791], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"Se', [-2.108105421066284, -1.686037540435791], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Constance Lloyd', [-4.295605659484863, -0.1285751760005951], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Richard Wallace', [-4.108105659484863, -2.8877110481262207], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Wilson', [-4.670605659484863, -0.17469899356365204], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Robert Ross', [-2.858105421066284, -0.6866691708564758], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Earl of', [-2.983105421066284, -0.14491866528987885], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Earl of', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Sebastian Melmoth'}

Key: 82380072878334709551789764190468102902
Value: {'question': "What was Scarlett O'Hara's real first name?", 'responses': [('Nevil', [-4.758636474609375, -4.7181220054626465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.7742613554000854, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.7742613554000854, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellen', [-2.149261474609375, -0.08314927667379379], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.7742613554000854, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.7742613554000854, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.7742613554000854, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.7742613554000854, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adaline', [-4.743011474609375, -1.70316481590271], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ashley', [-3.680511474609375, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nevil', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Katie'}

Key: 31646887928656831682804429014150804823
Value: {'question': 'How many years did Robinson Crusoe spend shipwrecked on his island?', 'responses': [('28', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28 years', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('22 years', [-0.027972843497991562, 0.0, -2.17209529876709, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28 years', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28 years', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28 years', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('22', [-0.027972843497991562, 0.0, -2.17209529876709, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '28', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': '24'}

Key: 69166693196422708753888601844846509758
Value: {'question': '"What one word was intentionally left out of the movie version of Mario Puzo\'s novel, ""The Godfather"". even though this word was the working title of the book?"', 'responses': [('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mafia', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mafia'}

Key: 81397792270458025916087351257338446815
Value: {'question': "In the comic strips, what was the name of Mandrake the Magician's giant partner?", 'responses': [('Topaz', [-1.7584062814712524, -1.9755301475524902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.39121881127357483, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.39121881127357483, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mandra', [-3.205672025680542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toot', [-1.7584062814712524, -3.3153738975524902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.39121881127357483, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mandra', [-3.205672025680542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.39121881127357483, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.39121881127357483, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tolly', [-1.7584062814712524, -3.0849051475524902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Topaz', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Lothar'}

Key: 94778603903644324200835741443076382878
Value: {'question': "What was the name of the pig leader in George Orwell's Animal Farm?", 'responses': [('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Napoleon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Napoleon'}

Key: 52332608898712027033396783383356001165
Value: {'question': 'Tess Trueheart is the wife of what comic strip character?', 'responses': [('Dennis the', [-1.345894694328308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tillie', [-4.095894813537598, -1.3190051317214966], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mutt', [-3.6583948135375977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis the', [-1.345894694328308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Calvin and', [-4.595894813537598, -0.27470678091049194], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dick Tracy', [-2.4708948135375977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peanuts', [-3.1583948135375977, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis the', [-1.345894694328308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis the', [-1.345894694328308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis the', [-1.345894694328308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dennis the', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Dick Tracy'}

Key: 196864679396378089813647532371966589890
Value: {'question': "In the Little Orphan Annie comic strip, what was the name of Daddy Warbucks's Giant bodyguard who wore a turban?", 'responses': [('Pancho', [-4.385646343231201, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('King Kong', [-1.7293962240219116, -2.664216995239258], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Sandy', [-3.885646343231201, -2.922823667526245], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('King Congo', [-1.7293962240219116, -4.320466995239258], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jimmy', [-4.010646343231201, -0.461306631565094], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Sandy', [-1.9168962240219116, -0.07759368419647217], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Little Orphan', [-3.229396343231201, -0.41887468099594116], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Goliath', [-4.729396343231201, -0.0980934351682663], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Mutt', [-3.823146343231201, -0.06888847053050995], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Buttons', [-3.510646343231201, -0.09092823415994644], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pancho', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Punjab'}

Key: 109960501429823556753511885200987861139
Value: {'question': "The Terror of the Monster was an early title for a best-selling novel which inspired one of the highest-grossing movies of the mid-70's. Under what name did it eventually terrify the reading and film going public?", 'responses': [('Jaws', [-0.6524600982666016, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jaws', [-0.6524600982666016, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jaws', [-0.6524600982666016], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Alien', [-3.1524600982666016], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('King Kong', [-3.1524600982666016, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Friday the', [-4.152460098266602, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jaws', [-0.6524600982666016, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jaws', [-0.6524600982666016, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Invasion of', [-4.152460098266602, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"The', [-3.5274600982666016, -1.122159481048584], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jaws', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'Jaws'}

Key: 134029215028438592027055662214418344169
Value: {'question': 'Who wrote the story upon which Alfred Hitchcock based his 1963 suspense film The Birds?', 'responses': [('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne Du Maurier', [-0.04356226325035095, -1.7014133930206299, -0.10633727163076401, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne Du Maurier', [-0.04356226325035095, -1.7014133930206299, -0.10633727163076401, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne Du Maurier', [-0.04356226325035095, -1.7014133930206299, -0.10633727163076401, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Daphne du Maurier', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Daphne du Maurier, best known for Rebecca'}

Key: 11110009608968042593656899603872158858
Value: {'question': 'Who was British Prime Minister when World War II broke out?', 'responses': [('Neville Chamberlain', [-0.9422181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.9422181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-0.8172181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chamberlain', [-2.192218065261841, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.9422181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-0.8172181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.9422181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-0.8172181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-0.8172181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.9422181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Neville Chamberlain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'Neville Chamberlain'}

Key: 77506916900047788238958554595438049547
Value: {'question': 'How was Oflag IVC prison camp better known?', 'responses': [('Stalag Luft', [-0.6263195276260376, 0.0, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.6263195276260376, 0.0, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('It was better', [-3.376319408416748, -0.07946817576885223, -1.7938987016677856], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.6263195276260376, 0.0, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.6263195276260376, 0.0, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dachau', [-3.251319408416748, 0.0, -0.11407091468572617], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag IV', [-0.6263195276260376, 0.0, -2.7870278358459473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.6263195276260376, 0.0, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Stalag', [-2.501319408416748, -1.448448896408081, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.6263195276260376, 0.0, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Stalag Luft', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452238, 'reference': 'Colditz'}

Key: 252669435748910899623263754414312690896
Value: {'question': 'Who succeeded Theodore Roosevelt as President?', 'responses': [('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Taft', [0.0, -1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'William Howard Taft', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'William Howard Taft'}

Key: 17045368034541867220548974201820633708
Value: {'question': 'To whom did the Bee Gees pay tribute in Tapestry Revisited?', 'responses': [('The Bee Gees', [-1.943684697151184, -1.4766011238098145, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beatles', [-1.943684697151184, -0.6016011834144592, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Wonder', [-3.9436845779418945, 0.0, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-2.9436845779418945, 0.0, -0.10545314848423004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Harrison', [-3.5686845779418945, -0.3173660337924957, -0.11985692381858826], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carole King', [-1.693684697151184, 0.0, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burt Bacharach', [-3.8186845779418945, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Lennon', [-3.5686845779418945, -0.10020658373832703, -0.1841067522764206], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [-3.9436845779418945, 0.0, -0.15497621893882751], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ABBA', [-4.1936845779418945, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Bee Gees', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Carole King'}

Key: 167200520357687557394268844053969708623
Value: {'question': 'Who was born first, James Caan or Michael Douglas?', 'responses': [('Michael Douglas', [-1.63677179813385, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7617717981338501, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7617717981338501, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7617717981338501, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Douglas', [-1.63677179813385, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7617717981338501, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7617717981338501, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas', [-2.1367716789245605, -0.1100882962346077], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Douglas', [-1.63677179813385, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7617717981338501, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michael Douglas', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'James Caan'}

Key: 90647169565663770435649390074455838336
Value: {'question': 'In which country is the deepwater ort of Brindisi?', 'responses': [('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Italy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Italy'}

Key: 214171447194455008324172539811036652175
Value: {'question': 'The word anchorman was credited by Sig Michelson about which CBS News Legend?', 'responses': [('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Walter Cronkite', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Walter Cronkite'}

Key: 144446484166853296547792704745560379337
Value: {'question': 'Who wrote The Picture Of Dorian Gray?', 'responses': [('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oscar Wilde', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Oscar Wilde'}

Key: 322903503459104039778253693027568287887
Value: {'question': 'Who sang the title song for the Bond film You Only Live Twice?', 'responses': [('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nancy Sinatra', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Nancy Sinatra'}

Key: 72110887102142614205440589573441924887
Value: {'question': 'Who had a big 90s No 1 with This Is How We Do It?', 'responses': [('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Montell Jordan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Montell Jordan'}

Key: 296872415682283940678852136686230882255
Value: {'question': 'Which national park, famous for aboriginal rock paintings, is near Darwin?', 'responses': [('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu National', [-0.3132617473602295, 0.0, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kakadu', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Kakadu National Park'}

Key: 104146792580125066021016972289598001726
Value: {'question': "In TV's All In The Family what was Mike and Gloria's son called?", 'responses': [('Tommy', [-2.009087085723877, -0.05782408267259598], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joey', [-4.009087085723877, -0.02630021423101425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Boy', [-3.134087085723877, -3.4492709636688232], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie', [-1.634087085723877, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Midge', [-3.821587085723877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joey', [-4.009087085723877, -0.02630021423101425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eugene', [-4.509087085723877, -0.22903569042682648], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie', [-1.634087085723877, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tommy', [-2.009087085723877, -0.05782408267259598], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buster', [-3.634087085723877, -0.07045131176710129], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tommy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Joey'}

Key: 88429078320492598381044410827950508049
Value: {'question': 'Who sang with Crosby, Stills and Young?', 'responses': [('David Crosby', [-1.2710018157958984, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Nash', [-1.5210018157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Nash', [-1.5210018157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stephen Stills', [-2.0522518157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Crosby', [-1.2710018157958984, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Nash', [-1.5210018157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neil Young', [-1.2085018157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stephen Stills', [-2.0522518157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Nash', [-1.5210018157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neil Young', [-1.2085018157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Crosby', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3321790402101223, 'reference': 'Graham Nash'}

Key: 85286463986533970642614509758082100138
Value: {'question': 'In which John Logie Baird invent television?', 'responses': [('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-1.6402604579925537, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-1.6402604579925537, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': '1920s'}

Key: 88958774668608811073473067547267050289
Value: {'question': 'Who sang the title song for the Bond film License To Kill?', 'responses': [('Gladys Knight', [-0.574975848197937, 0.0, -0.5998064875602722], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight &', [-0.574975848197937, 0.0, -1.849806547164917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight', [-0.574975848197937, 0.0, -0.5998064875602722], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight', [-0.574975848197937, 0.0, -0.5998064875602722], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Jones', [-4.324975967407227, 0.0, -0.11363581568002701], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shirley Bassey', [-4.074975967407227, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight and', [-0.574975848197937, 0.0, -1.224806547164917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight', [-0.574975848197937, 0.0, -0.5998064875602722], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-4.340600967407227, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight and', [-0.574975848197937, 0.0, -1.224806547164917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gladys Knight', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Gladys Knight'}

Key: 59693379031259720215479941060194179579
Value: {'question': 'Black or White came from which Michael Jackson album?', 'responses': [('Off The', [-2.0134270191192627, -1.094851016998291], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dangerous', [-2.8884270191192627, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.6384270787239075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bad', [-1.2634270191192627, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.6384270787239075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.6384270787239075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.6384270787239075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.6384270787239075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.6384270787239075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bad', [-1.2634270191192627, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Off The', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Dangerous'}

Key: 311962492123096900289948659360878686863
Value: {'question': 'On a computer keyboard, which letter is between G ad J?', 'responses': [('Q', [-2.8867299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D', [-4.449230194091797, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('G', [-3.5117299556732178, -0.08675938844680786], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-1.1367299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-1.1367299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-1.1367299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('i', [-3.5117299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-1.1367299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('K', [-1.6367299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('H', [-1.7617299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Q', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'H'}

Key: 69173108873872114886616497958100476857
Value: {'question': 'In which town or city was General Motors founded?', 'responses': [('Detroit', [-0.1902991682291031, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit,', [-0.1902991682291031, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit,', [-0.1902991682291031, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.1902991682291031, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit,', [-0.1902991682291031, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.1902991682291031, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit,', [-0.1902991682291031, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.1902991682291031, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit,', [-0.1902991682291031, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Flint,', [-1.752799153327942, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Detroit', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Flint, Michigan'}

Key: 121033822342009854936179535069547388125
Value: {'question': 'In which country was the Russian Revolutionary Leon Trotsky murdered?', 'responses': [('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mexico', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mexico'}

Key: 261947350263286873709591640621320515056
Value: {'question': 'Which duo had a 60s No 1 with A World Without Love?', 'responses': [('Engelbert Hum', [-3.2305688858032227, 0.0, -0.21142719686031342], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Shapiro and', [-4.605568885803223, -0.5231232643127441, -0.4212830364704132], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Englebert Hum', [-4.730568885803223, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Englebert Hum', [-4.730568885803223, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Tops', [-0.8555688858032227, -3.524545192718506, -0.7763983607292175], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Brotherhood of', [-0.8555688858032227, -3.774545192718506, -1.066418170928955], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Anka', [-3.7305688858032227, -1.2353907823562622, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Bee Gees', [-4.418068885803223, -3.984118938446045, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Move', [-0.8555688858032227, -4.712045192718506, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brotherhood Of Man', [-4.605568885803223, -1.6506099700927734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Engelbert Hum', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Peter & Gordon'}

Key: 288135975970724884702204693024559148054
Value: {'question': 'In which US state was Tennessee Williams born?', 'responses': [('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mississippi', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mississippi'}

Key: 195664885257877191041129408973687882665
Value: {'question': 'Who was Israeli Prime Minister from 1969 to 1974?', 'responses': [('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Levi Eshkol', [-2.7462046146392822, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Golda Meir', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Golda Meir'}

Key: 174558705266526467237165414233895069150
Value: {'question': 'Bob Gaudio and Nick Massi sang with which group?', 'responses': [('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four Seasons', [-2.459395170211792, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Four Seasons', [-3.021895170211792, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Four Seasons', [-3.021895170211792, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Four Seasons', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'The Four Seasons'}

Key: 14889918131517653356417178535904509760
Value: {'question': 'In which country was Angelica Huston born?', 'responses': [('England', [-1.6450181007385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United Kingdom', [-2.2700181007385254, -1.5755484104156494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the UK', [-4.645018100738525, -2.0641555786132812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-3.5200181007385254, -0.3260742127895355], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trinidad and', [-4.645018100738525, -1.2716550827026367], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-1.7700181007385254, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-3.5200181007385254, -0.3260742127895355], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.6450181007385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the US', [-4.645018100738525, -1.6891554594039917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-2.7700181007385254, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'England', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Ireland'}

Key: 187806677267255526399494688412642008595
Value: {'question': "What were the first two names of 'Cannonball' Adderley?", 'responses': [('Lee and', [-4.776598930358887, -0.25119414925575256], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Francis', [-4.526598930358887, -3.9955012798309326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Earl', [-4.401598930358887, -4.003195762634277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-2.526599168777466, -3.818910598754883], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cannonball', [-1.6515991687774658, -0.3320505917072296], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julian Thomas', [-4.026598930358887, -5.061135768890381], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elmore', [-4.526598930358887, -1.8651248216629028], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John and', [-2.526599168777466, -0.5689107179641724], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Adder', [-2.526599168777466, -2.818910598754883], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James A', [-3.276599168777466, -5.0731377601623535], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lee and', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Julian Edwin'}

Key: 111331075781019898258115626082852126745
Value: {'question': 'Carrasco international airport is in which country?', 'responses': [('South Africa', [-4.330636024475098, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-2.3306360244750977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.8306360244750977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cuba', [-4.580636024475098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Panama', [-3.4556360244750977, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Costa Rica', [-3.0806360244750977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-2.8306360244750977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-2.0806360244750977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [-1.9556360244750977, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paraguay', [-3.0806360244750977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'South Africa', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Uruguay'}

Key: 146309341802822935535420821108889041446
Value: {'question': 'Which record company signed Fabian?', 'responses': [('ABC Records', [-3.1027300357818604, -1.0654112100601196], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Motown', [-4.102729797363281, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mercury', [-2.6027300357818604, -0.7246109247207642], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('RCA Victor', [-2.6027300357818604, -1.1893994808197021], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ABC-', [-3.1027300357818604, -1.1904112100601196], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('MGM Records', [-2.4777300357818604, -1.1590973138809204], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dot Records', [-3.9152300357818604, -0.29943081736564636], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chess Records', [-4.477729797363281, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mercury', [-2.6027300357818604, -0.7246109247207642], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ABC-', [-3.1027300357818604, -1.1904112100601196], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'ABC Records', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Chancellor'}

Key: 299840508447821089855369866240440724753
Value: {'question': 'Ron Bower and John Williams set a speed record for going round the world in a what?', 'responses': [('sail boat', [-4.431931972503662, -0.4647253155708313], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hot air', [-1.8069320917129517, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('plane', [-3.806931972503662, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Piper Cherokee', [-4.306931972503662, -1.5806790590286255], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hot air', [-1.8069320917129517, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hot air', [-1.8069320917129517, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jetboat', [-3.056931972503662, -4.000893592834473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Power Boat', [-4.056931972503662, -1.5034279823303223], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Motorboat', [-4.306931972503662, -0.8902251720428467], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yacht', [-4.806931972503662, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'sail boat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Helicopter'}

Key: 6285281377900569448923298952423180194
Value: {'question': 'What was the profession of New Yorker Garry Winogrand?', 'responses': [('photographer', [-2.3687736988067627, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photojournalist', [-1.7437736988067627, -0.1887570172548294], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photojournalist', [-1.7437736988067627, -0.1887570172548294], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'photographer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Photographer'}

Key: 77865379524049111309272063660799097961
Value: {'question': 'Amelia Earhart was born in which state?', 'responses': [('Kansas', [-0.39752861857414246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-1.3037786483764648, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-0.39752861857414246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-0.39752861857414246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-0.39752861857414246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-0.39752861857414246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-0.39752861857414246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-1.3037786483764648, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-1.3037786483764648, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-1.3037786483764648, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kansas', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'Kansas'}

Key: 6469076388733372854115999629787206983
Value: {'question': "Who was Theodore Roosevelt's Vice President between 1901 and 1905?", 'responses': [('William Seymour', [-1.6951801776885986, -4.4089555740356445], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas Marshall', [-1.3826801776885986, -1.0917744636535645, -0.06196761503815651], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('<b>Calvin', [-3.8826801776885986, -2.5733561515808105, -3.6499595642089844], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('_________________', [-3.8826801776885986, -3.8233561515808105, -2.312124252319336], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('<em>Sherman', [-3.8826801776885986, -3.5733561515808105, -4.359595775604248], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas R.', [-1.3826801776885986, -1.6542744636535645, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Charles W.', [-1.9451801776885986, -0.7795053720474243, -0.12692804634571075], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Theodore Roosevelt', [-2.1951801776885986, -0.07119707018136978, -0.31011149287223816], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas Woodrow Wilson', [-1.3826801776885986, -3.0292744636535645, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('William J.', [-1.6951801776885986, -2.7214558124542236, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'William Seymour', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'No one'}

Key: 262307002069435293253338666165237699635
Value: {'question': "What was Phil Collins' last UK No 1 of the 80s?", 'responses': [("I Don'", [-2.69279146194458, -1.9137909412384033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Easy Lover', [-3.88029146194458, 0.0, -0.5252095460891724], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Two Hearts', [-2.06779146194458, -0.16598081588745117, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('One More Night', [-1.94279146194458, -0.14688695967197418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Another Day In', [-1.44279146194458, -0.07655314356088638, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Another Day in', [-1.44279146194458, -0.07655314356088638, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Another Day in', [-1.44279146194458, -0.07655314356088638, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Against All Odds', [-2.19279146194458, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Easy Lover', [-3.88029146194458, 0.0, -0.5252095460891724], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Separate Lives', [-3.69279146194458, 0.0, -0.3071153461933136], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "I Don'", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Another Day in Paradise'}

Key: 154998781240909760849730960724170257860
Value: {'question': "What was Al Pacino's first movie?", 'responses': [('The Panic In Needle Park', [-0.572761058807373, 0.0, -1.2905125617980957, -0.3049527704715729, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Panic in Needle Park', [-0.572761058807373, 0.0, -0.3217625319957733, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Me, My Girl and', [-2.916511058807373, -0.6324240565299988, -3.2447290420532227, -2.7525181770324707, -1.1105895042419434], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Panic in Needle Park', [-0.572761058807373, 0.0, -0.3217625319957733, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('They Shoot Horses, Don', [-4.850104808807373, 0.0, -0.21918417513370514, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), (': The Panic in Needle', [-3.971198558807373, -1.5082571506500244, -0.02185230888426304, -0.266189843416214, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Panic in the Streets', [-2.650886058807373, -0.6325989961624146, -0.905794620513916, -0.37224605679512024, -0.2948471009731293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Me, Myself and Irene', [-2.916511058807373, -0.6324240565299988, -1.057228922843933, -0.7047756314277649, -0.29683318734169006], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dir. John Cassav', [-4.857917308807373, -1.1489812135696411, -3.5017194747924805, -0.3419649302959442, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Panic In Needle Park', [-0.572761058807373, 0.0, -1.2905125617980957, -0.3049527704715729, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Panic In Needle Park', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Me Natalie'}

Key: 63601322601270515266656822792125783476
Value: {'question': 'In which year did Alcock and Brown make their Atlantic crossing?', 'responses': [('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1919', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1919'}

Key: 145011758783578328989203926872722943800
Value: {'question': 'Which movie director was born on exactly the same day as actor Tommy Lee Jones?', 'responses': [('Clint Eastwood', [-2.868530511856079, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sam Raimi', [-3.118530511856079, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-2.868530511856079, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Thomas Anderson', [-4.3685302734375, -1.3112460374832153, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-3.243530511856079, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sam Raimi', [-3.118530511856079, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steven Spielberg', [-2.118530511856079, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-2.868530511856079, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steven Spielberg', [-2.118530511856079, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steven Spielberg', [-2.118530511856079, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Clint Eastwood', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': 'Oliver Stone'}

Key: 246120728694926540317017558027516956275
Value: {'question': 'Which singer wrote the musical Someone Like You?', 'responses': [('George She', [-3.550553798675537, -2.33418607711792], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Lennon', [-3.800553798675537, -0.8760663270950317], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Sinatra', [-2.988053798675537, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rod Stewart', [-4.113053798675537, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Man', [-2.675553798675537, -0.0658353641629219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbra', [-3.425553798675537, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-2.050553798675537, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbra', [-3.425553798675537, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Man', [-2.675553798675537, -0.0658353641629219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adele', [-2.050553798675537, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George She', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Petula Clark'}

Key: 225941412994868541563013298848715525610
Value: {'question': 'What state had its bi-centenary of joining the Union a year after North Carolina?', 'responses': [('Rhode Island', [-2.985881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delaware', [-3.235881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-2.985881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [-4.235881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-4.235881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-3.610881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-3.610881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-3.110881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [-3.985881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Virginia', [-4.110881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rhode Island', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Rhode Island'}

Key: 75396728442104296703947216153334871904
Value: {'question': 'With which instrument was Charlie Christian associated?', 'responses': [('Cornet', [-4.231045722961426, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trumpet', [-1.1685456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The electric', [-3.981045722961426, -1.1686625480651855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Cornet', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Guitar'}

Key: 58760419811873730114451738515348744826
Value: {'question': 'In which country is the Howrah bridge?', 'responses': [('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'India', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'India'}

Key: 100153390631380258388116990866273230528
Value: {'question': 'What are the international registration letters of a vehicle from Brunei?', 'responses': [('BC', [-4.9410600662231445, -0.06356300413608551], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BC', [-4.9410600662231445, -0.06356300413608551], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BRN', [-1.1910598278045654, -1.3899953365325928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BS', [-4.9410600662231445, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BRU', [-1.1910598278045654, -0.8899953961372375], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BR', [-1.1910598278045654, -1.1399953365325928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BRN', [-1.1910598278045654, -1.3899953365325928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BR', [-1.1910598278045654, -1.1399953365325928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BBN', [-1.0660598278045654, -2.553262948989868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BRU', [-1.1910598278045654, -0.8899953961372375], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'BC', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336676, 'reference': 'BRU'}

Key: 39437776274176571007543378867113033501
Value: {'question': "What was Oliver Hardy's real first name?", 'responses': [('Edward', [-2.220351219177246, -0.03163906931877136], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan', [-0.5719137787818909, -0.1212046816945076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-3.882460594177246, -0.4994328022003174], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan', [-0.5719137787818909, -0.1212046816945076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan Laurel', [-0.5719137787818909, -2.7462046146392822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reginald Harris', [-4.622694969177246, -3.8621327877044678], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan', [-0.5719137787818909], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-2.220351219177246, -0.03163906931877136], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan Laurel', [-0.5719137787818909, -2.7462046146392822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnie Pearl', [-5.103163719177246, -1.0466115474700928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Edward', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Norvell'}

Key: 193922828259217390007194120027606505159
Value: {'question': 'Benito Juarez international airport is in which country?', 'responses': [('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mexico', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mexico'}

Key: 250217648133966092798016996660493888130
Value: {'question': 'How old would Rocky Marciano have been had he lived to the end of the 20th century?', 'responses': [('101', [0.0, -0.903252363204956, -0.868496298789978, -2.1582424640655518], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('89', [0.0, -1.653252363204956, -2.297549247741699, -0.14267508685588837], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('125', [0.0, -0.903252363204956, -1.743496298789978, -2.389209508895874], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('66', [0.0, -2.903252363204956, -2.2550008296966553, -0.21579554677009583], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('111', [0.0, -0.903252363204956, -1.243496298789978, -2.102078676223755], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('120', [0.0, -0.903252363204956, -1.743496298789978, -1.514209508895874], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('94', [0.0, -1.528252363204956, -2.226383686065674, -0.19662123918533325], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('68', [0.0, -2.903252363204956, -2.0050008296966553, -0.1849365085363388], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('132', [0.0, -0.903252363204956, -2.6184964179992676, -1.8992724418640137], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('83', [0.0, -1.653252363204956, -2.297549247741699], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '101', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': '76'}

Key: 236776199463644069794603593839212480613
Value: {'question': 'Who had a 70s No 1 hit with The Night The Lights Went Out In Georgia?', 'responses': [('The Jackson', [-2.781982898712158, -1.2640634775161743, -0.4740769863128662], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-1.5944827795028687, -0.14097152650356293, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-1.5944827795028687, -0.14097152650356293, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bobbie Gentry', [-2.906982898712158, -2.447654962539673, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Vic Damone', [-3.875732898712158, -0.20406439900398254, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Electric Light Orchestra', [-3.219482898712158, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-1.5944827795028687, -0.14097152650356293, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-1.5944827795028687, -0.14097152650356293, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rod Stewart', [-2.547607898712158, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Robert Palmer', [-2.547607898712158, -0.9125096797943115, -0.06196761503815651], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Jackson', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Vicki Lawrence'}

Key: 185023696551027618739728991234467789199
Value: {'question': 'Which country does the airline Gronlandsfly come from?', 'responses': [('Denmark', [-2.879734516143799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greenland', [-0.7547345757484436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greenland', [-0.7547345757484436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-1.0047345161437988, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greenland', [-0.7547345757484436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-2.879734516143799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [-2.879734516143799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greenland', [-0.7547345757484436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-1.0047345161437988, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [-2.879734516143799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Denmark', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9502705392332347, 'reference': 'Greenland'}

Key: 29698349225308754320918897774555060403
Value: {'question': 'Which famous actress was born on exactly the same day as gymnast Olga Korbut?', 'responses': [('Sharon Stone', [-3.054408311843872, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldie Hawn', [-3.304408311843872, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldie Hawn', [-3.304408311843872, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth Taylor', [-3.179408311843872, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meryl Stre', [-3.929408311843872, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gwyneth Palt', [-4.179408073425293, -0.8626687526702881, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth Taylor', [-3.179408311843872, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sandra Bullock', [-4.429408073425293, -0.06196761503815651, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kim Basinger', [-3.679408311843872, -0.3220656216144562, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Tyler Moore', [-4.179408073425293, -0.7266534566879272, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sharon Stone', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Debra Winger'}

Key: 113824320962058306970124055392943517183
Value: {'question': 'The diet of what mythical monster periodically included seven youths and seven maidens?', 'responses': [('A giant', [-4.536463737487793, -3.6290969848632812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hydra', [-2.348963737487793, -0.7935577630996704], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cerberus', [-1.973963737487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hydra', [-0.911463737487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cerberus', [-1.973963737487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cerberus', [-1.973963737487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cyclopes', [-4.098963737487793, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The min', [-2.348963737487793, -4.481057643890381], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minotaur', [-2.723963737487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cerberus', [-1.973963737487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A giant', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': "The Minotaur's"}

Key: 193556839092800788621042905204362648334
Value: {'question': 'In Greek mythology, who was the goddess of the rainbow?', 'responses': [('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Iris', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Iris'}

Key: 202955777115811987280699418513788322856
Value: {'question': 'In ancient Athens, what tree was considered sacred -- with all its fruit belonging to the state, and death the penalty for anyone caught cutting one down?', 'responses': [('olive tree', [-1.7772055864334106, -1.1368709802627563], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Olive', [-0.6522055864334106, -0.2693469226360321], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('olive', [-1.7772055864334106, -0.38687101006507874], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Olive', [-0.6522055864334106, -0.2693469226360321], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('olive', [-1.7772055864334106, -0.38687101006507874], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Olive', [-0.6522055864334106, -0.2693469226360321], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The olive', [-2.402205467224121, -0.8481096029281616], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Olive Tree', [-0.6522055864334106, -2.2693469524383545], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Olive', [-0.6522055864334106, -0.2693469226360321], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('olive tree', [-1.7772055864334106, -1.1368709802627563], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'olive tree', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'The olive tree'}

Key: 206956624581510942917270636149714907337
Value: {'question': "What legendary fire-breathing female monster had a lion's head, a goat's body and a dragon's tail?", 'responses': [('The Sphinx', [-3.273451566696167, -1.3885513544082642, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('S. Lam', [-4.273451805114746, -3.5727295875549316, -2.463189125061035], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Chimera', [-2.335951566696167, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Sphinx', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'The Chimera'}

Key: 250704740436419171438903828785577035864
Value: {'question': 'According to legend, who fired the arrow that hit Achilles in the heel, his only vulnerable spot?', 'responses': [('Paris', [-0.14191605150699615, -0.14272211492061615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris (', [-0.14191605150699615, -3.6427221298217773], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.14191605150699615, -0.14272211492061615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odysseus', [-3.954416036605835, -0.11058321595191956], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo', [-2.391916036605835, -0.1282658874988556], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.14191605150699615, -0.14272211492061615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.14191605150699615, -0.14272211492061615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris.', [-0.14191605150699615, -3.6427221298217773], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.14191605150699615, -0.14272211492061615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thetis', [-4.329416275024414, -0.5991449952125549], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Paris', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Paris'}

Key: 209521623797531935144211717584153494097
Value: {'question': 'In Greek mythology, who was the queen of the underworld and wife of Hades?', 'responses': [('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Persephone', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Persephone'}

Key: 174263786485275069263006587250021091571
Value: {'question': '"Which entertainer said, ""He was into animal husbandry--until they caught him at it?"', 'responses': [('Sammy Davis Jr', [-3.524559497833252, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hope', [-2.149559497833252, -0.19673414528369904, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sammy Davis Jr', [-3.524559497833252, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bing Crosby', [-4.274559497833252, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Seinfeld', [-2.774559497833252, -1.1647002696990967, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carol Burnett', [-4.149559497833252, -0.266189843416214, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phyllis Diller', [-4.149559497833252, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Benny', [-3.774559497833252, -0.19779424369335175, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Rivers', [-3.399559497833252, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Which entertainer', [-3.649559497833252, -3.5765435695648193, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sammy Davis Jr', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Tom Lehrer'}

Key: 190219522625102596786086398618155153356
Value: {'question': '"According to hippy guru Dr. Timothy Leary, what did you do before you ""drop out?"""', 'responses': [('"Work"', [-1.884577989578247, -2.871244192123413, -0.9072921276092529, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"You have an', [-1.884577989578247, -0.49624425172805786, -4.3376665115356445, -2.602229595184326], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"You dropped in', [-1.884577989578247, -0.49624425172805786, -3.0876667499542236, -0.6931471824645996], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Get a job', [-1.884577989578247, -3.121244192123413, -0.6614251732826233, -0.092132568359375], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('You ""drop in', [-0.6345779895782471, -1.3772094249725342, -1.3927946090698242, -0.07689981907606125], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('You get a job', [-0.6345779895782471, -3.627209424972534, -0.8672371506690979, -0.10405014455318451], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"You took a', [-1.884577989578247, -0.49624425172805786, -3.7126667499542236, -1.8096305131912231], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Drop in', [-4.009577751159668, -1.3604952096939087], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('You ""came in', [-0.6345779895782471, -1.3772094249725342, -4.767794609069824, -0.5176628232002258], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('You ""drop in', [-0.6345779895782471, -1.3772094249725342, -1.3927946090698242, -0.07689981907606125], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"Work"', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': 'Turn on, tune in'}

Key: 204421269293614587598805783541708928077
Value: {'question': "What is Nelson Mandela's middle name?", 'responses': [('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madikizela', [-2.4069128036499023, 0.0, 0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madikizela', [-2.4069128036499023, 0.0, 0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rolihlahla', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Rolihlahla'}

Key: 94881720502138050605234386150286378445
Value: {'question': 'How old would James Dean have been had he lived to the end of the 20th century?', 'responses': [('56', [0.0, -2.174562931060791, -2.19462251663208, -0.17542405426502228], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('57', [0.0, -2.174562931060791, -2.06962251663208, -0.18170738220214844], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('77', [0.0, -1.2995630502700806, -2.157269239425659, -0.14267508685588837], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('88', [0.0, -1.6745630502700806, -2.4701342582702637, -0.14267508685588837], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('87', [0.0, -1.6745630502700806, -2.4701342582702637, -0.19662123918533325], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('86', [0.0, -1.6745630502700806, -2.4701342582702637, -0.19043122231960297], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('111', [0.0, -2.299562931060791, -1.4011492729187012, -1.8956910371780396], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('56', [0.0, -2.174562931060791, -2.19462251663208, -0.17542405426502228], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('70', [0.0, -1.2995630502700806, -2.157269239425659, -0.1698460429906845], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('97', [0.0, -2.174562931060791, -2.575058937072754, -0.19043122231960297], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '56', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': '68'}

Key: 146183214139809971300961889467848906483
Value: {'question': 'Barry Clifford found fame discovering what?', 'responses': [('Barry Clifford', [-2.167396068572998, -0.13450592756271362], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Clifford', [-2.167396068572998, -0.13450592756271362], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('LSD', [-5.167396068572998, -0.09406715631484985], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The first', [-0.917396068572998, -2.5643298625946045], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Whod', [-4.792396068572998, -3.5345120429992676], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the', [-2.542396068572998, -2.5758938789367676], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('An extinct', [-4.667396068572998, -2.7971763610839844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Clifford', [-2.167396068572998, -0.13450592756271362], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Loch', [-2.542396068572998, -2.5758938789367676], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Loch', [-0.917396068572998, -2.5643298625946045], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Barry Clifford', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Sunken pirate ships'}

Key: 125221220887649825200727101574185473087
Value: {'question': "What was Christopher Reeve's first movie?", 'responses': [('"The Day of', [-1.7299997806549072, -1.1196988821029663, -2.6613309383392334, -1.2615737915039062], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kidnapped', [-4.940937042236328, -0.7927525639533997, 0.0, -0.20622029900550842], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Just One of the', [-3.5971872806549072, -1.3000209331512451, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Superman" (', [-1.7299997806549072, -2.065011501312256, -0.08995520323514938, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Superman: The Movie', [-1.6479685306549072, -3.5871734619140625, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Day the Earth', [-1.2339060306549072, -2.9422264099121094, -0.7864599227905273, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Day The Earth', [-1.2339060306549072, -2.9422264099121094, -2.9114599227905273, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The Devil and', [-1.7299997806549072, -1.1196988821029663, -2.0309598445892334, -2.4639394283294678], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The World of Henry', [-1.2339060306549072, -1.7864646911621094, -3.318108081817627, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beneath The Planet Of', [-2.8003122806549072, -1.9973857402801514, -0.049333903938531876, -0.3304581940174103], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"The Day of', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Gray Lady Down'}

Key: 62024499569425870685725457815635055178
Value: {'question': 'The Porcaro Brothers featured in which group?', 'responses': [('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Toto', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Toto'}

Key: 179160722281282151782102708865808211900
Value: {'question': 'Which city was called Leninakan until 1990?', 'responses': [('Bishkek', [-4.29188871383667, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yek', [-3.35438871383667, -0.0271238274872303], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bishkek', [-4.29188871383667, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku,', [-0.6043887138366699, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.6043887138366699, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.6043887138366699, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yerevan', [-1.97938871383667, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alma-', [-3.60438871383667, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku,', [-0.6043887138366699, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerevan', [-4.41688871383667, -0.20852284133434296], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bishkek', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'A: Kumayri'}

Key: 155511134717832663689479930712972377722
Value: {'question': "What is Iggy Pop's real name?", 'responses': [('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Newell Osterberg', [0.0, -1.7014133930206299, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg Jr', [0.0, -0.2014133334159851, 0.0, -1.1981292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg Jr', [0.0, -0.2014133334159851, 0.0, -1.1981292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'James Osterberg', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'James Osterberg'}

Key: 14745668222360339467712488372613992161
Value: {'question': 'What did Franz Kafka do for a day job?', 'responses': [('insurance', [-2.172165870666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('An', [-4.797165870666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insurance', [-1.2971657514572144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('he', [-3.797165870666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ins', [-3.797165870666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.672165870666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insurance', [-1.2971657514572144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insurance', [-1.2971657514572144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He', [-1.2971657514572144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Accounting', [-3.547165870666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'insurance', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'Worked in insurance'}

Key: 251617701328195827460292184419158579844
Value: {'question': 'Dorval International airport is in which country?', 'responses': [('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Quebec', [-2.811967611312866, -0.5130981802940369], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Canada', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Canada'}

Key: 212775761963234218058773512393806725948
Value: {'question': 'In square miles how big is lake Michigan?', 'responses': [('12,381', [0.0, -1.082270622253418, -1.5347189903259277, -0.01416344940662384, -2.5107033252716064, -2.655211925506592, -2.2580947875976562], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,434', [0.0, -2.457270622253418, -0.5576425790786743, -2.179579734802246, -2.435361623764038, -2.4478211402893066, -0.08715388923883438], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('22,400', [0.0, -0.8322706818580627, -1.4595073461532593, 0.0, -1.4400622844696045, -0.219794362783432, -0.043320056051015854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,000', [0.0, -2.457270622253418, -0.5576425790786743, -1.679579734802246, -0.5430774688720703, 0.0, -0.11812767386436462], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10,000', [0.0, -1.082270622253418, -2.1597189903259277, -0.16255231201648712, -1.2988336086273193, -0.28225839138031006, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('23,000', [0.0, -0.8322706818580627, -1.2095073461532593, 0.0, -0.5350251197814941, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('26,000', [0.0, -0.8322706818580627, -2.959507465362549, 0.0, -1.1027121543884277, -0.018149960786104202, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('23,000', [0.0, -0.8322706818580627, -1.2095073461532593, 0.0, -0.5350251197814941, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('12,400', [0.0, -1.082270622253418, -1.5347189903259277, -0.01416344940662384, -1.7607033252716064, -1.144242525100708, -0.1388537585735321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20,000', [0.0, -0.8322706818580627, -2.584507465362549, -0.20304079353809357, -0.8025261759757996, -0.03389805555343628, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '12,381', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': '22,300'}

Key: 40905379070197253418111629514092720277
Value: {'question': 'Who wrote the song Momma Told Me Not To Come?', 'responses': [('The Carpenters', [-1.6205801963806152, -4.192200183868408, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Webb', [-3.6205801963806152, -1.5504363775253296, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Monkees', [-1.6205801963806152, -3.442200183868408, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Ruffin', [-3.6205801963806152, -3.362936496734619, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beach Boys', [-1.6205801963806152, -3.317200183868408, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ray Price', [-3.6205801963806152, -2.1052372455596924, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Cliff', [-3.6205801963806152, -1.6754363775253296, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johnny Cash', [-2.7455801963806152, -0.48023521900177, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Brown', [-3.6205801963806152, -0.9620037078857422, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Band', [-1.6205801963806152, -2.692200183868408, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Carpenters', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Randy Newman'}

Key: 264093883578664907058924731295477895800
Value: {'question': 'What star sign is Harrison Ford?', 'responses': [('Virgo', [-1.4505263566970825, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capricorn', [-2.888026237487793, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [-1.7630263566970825, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scorpio', [-1.6380263566970825, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scorpio', [-1.6380263566970825, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.4505263566970825, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.4505263566970825, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capricorn', [-2.888026237487793], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capricorn', [-2.888026237487793, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sagittarius', [-2.825526237487793, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Virgo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Cancer'}

Key: 307660029220089726176986829460726011041
Value: {'question': 'Who founded the Organization of Afro American Unity?', 'responses': [('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcom X', [-3.700347661972046, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Malcolm X', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Malcolm X'}

Key: 9845967260448918489962827911867810225
Value: {'question': 'Which NASA space probe was launched to Venus in 1989?', 'responses': [('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Galileo', [-3.1285393238067627, -0.09448157250881195], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Magellan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Magellan'}

Key: 313875409464007107671048909662043149050
Value: {'question': 'Harry Weinstein became a world champion under which name?', 'responses': [('Mr.', [-4.133328914642334, -0.09770473837852478], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The', [-2.883328914642334, -1.0516796112060547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry the', [-0.8833289742469788, -2.5381312370300293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger', [-4.758328914642334, -0.9898587465286255], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry "', [-0.8833289742469788, -1.9131312370300293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Foreman', [-3.758328914642334, -0.48768794536590576], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry Fox', [-0.8833289742469788, -3.9131312370300293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Benny the', [-4.383328914642334, -1.2766833305358887], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hardie', [-4.508328914642334, -4.290060997009277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry Von', [-0.8833289742469788, -4.600631237030029], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mr.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Gary Kasparov'}

Key: 263364351530236104529878618221356339280
Value: {'question': 'Who directed Good Morning Vietnam?', 'responses': [('Barbra Stre', [-2.3602161407470703, -1.1368709802627563, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Milius', [-4.22545051574707, -0.8175387978553772, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ron Howard', [-2.9852161407470703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3211536705493927, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3211536705493927, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3211536705493927, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob Reiner', [-3.8272571563720703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3211536705493927, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Kaufman', [-4.56724739074707, -1.960903286933899, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3211536705493927, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Barbra Stre', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769954, 'reference': 'Barry Levinson'}

Key: 131370138589744861108877479913920041808
Value: {'question': "What was Bette Davis's real first name?", 'responses': [('Bettie', [-3.24638295173645, -0.2392849326133728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.49442988634109497, -0.34435781836509705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.49442988634109497, -0.34435781836509705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary.', [-0.49442988634109497, -2.90685772895813], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Birg', [-3.86942982673645, -1.3861877918243408], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary?', [-0.49442988634109497, -3.96935772895813], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.49442988634109497, -0.34435781836509705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beulah', [-3.74052357673645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.49442988634109497, -0.34435781836509705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.49442988634109497, -0.34435781836509705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bettie', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Ruth'}

Key: 134823944242563590540537969890392563995
Value: {'question': 'In which sport did Hollywood star Sonja Henie win Olympic Gold?', 'responses': [('Figure skating', [-0.6500874161720276, -1.5019290447235107, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Speed Skating', [-2.275087356567383, -0.3484445810317993, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Figure Skating', [-0.6500874161720276, -0.25192904472351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice Hockey', [-1.7750873565673828, -1.4221853017807007, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice hockey', [-1.7750873565673828, -3.1721854209899902, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Figure skating', [-0.6500874161720276, -1.5019290447235107, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Figure Skating', [-0.6500874161720276, -0.25192904472351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice Hockey', [-1.7750873565673828, -1.4221853017807007, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice Skating', [-1.7750873565673828, -0.7971853017807007, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Speed skating', [-2.275087356567383, -1.2234445810317993, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Figure skating', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Ice Skating'}

Key: 104919144256012515767018783668691366367
Value: {'question': "In which decade was Alzheimer's disease first clinically described?", 'responses': [('1800s', [-0.05351461470127106, 0.0, -1.4061501026153564, -0.14998379349708557, 0.0, -0.35530349612236023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1907', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -3.059898614883423, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1906', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -0.4348985552787781, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1900', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -1.1848986148834229, -1.158132791519165], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1900s', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -1.1848986148834229, -0.658132791519165], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1906', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -0.4348985552787781, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1906', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -0.4348985552787781, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1906', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -0.4348985552787781, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1907', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -3.059898614883423, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1906', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -0.4348985552787781, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1800s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'First decade'}

Key: 96233378685820066177191275564384480587
Value: {'question': 'What star sign is Glenda Jackson?', 'responses': [('Libra', [-2.3768112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scorpio', [-2.1268112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-2.3768112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [-2.3768112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pisces', [-1.8768112659454346, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cancer', [-1.7518112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [-2.3768112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-2.3768112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sagittarius', [-3.1268112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aquarius', [-2.7518112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Libra', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Taurus'}

Key: 125362217489750988104121721680772121615
Value: {'question': 'Who won Super Bowl XXV?', 'responses': [('Tampa Bay Buccaneers', [-2.8589746952056885, 0.0, -0.14687328040599823], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buffalo Bills', [-1.858974575996399, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tampa Bay Buccaneers', [-2.8589746952056885, 0.0, -0.14687328040599823], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New York', [-2.9839746952056885, -0.40753450989723206, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-0.4839746057987213, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-0.4839746057987213, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-0.4839746057987213, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-0.4839746057987213, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-0.4839746057987213, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), (': New York', [-4.046474456787109, -0.8591476082801819, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tampa Bay Buccaneers', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'New York Giants'}

Key: 231849347051036993919710383258998616470
Value: {'question': 'Robert Mueller Municipal Airport is in which US state?', 'responses': [('Idaho', [-4.135684967041016, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.3856847286224365, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.3856847286224365, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alaska', [-3.6356847286224365, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.3856847286224365, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-3.0106847286224365, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.3856847286224365, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Dakota', [-2.8856847286224365, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.3856847286224365, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Dakota', [-2.8856847286224365, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Idaho', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Texas'}

Key: 212277403717066527502764818418537101893
Value: {'question': 'In what year were women first admitted to Harvard?', 'responses': [('1879', [0.0, 0.0, -1.8146722316741943, -0.6684328317642212, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1879', [0.0, 0.0, -1.8146722316741943, -0.6684328317642212, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, -0.5646722912788391, -1.3545056581497192, -0.8891714811325073, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1879', [0.0, 0.0, -1.8146722316741943, -0.6684328317642212, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, -0.5646722912788391, -2.8545055389404297, -0.8203133344650269, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1888', [0.0, 0.0, -1.8146722316741943, -1.6684328317642212, -2.4265875816345215, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1956', [0.0, 0.0, -0.5646722912788391, -1.3545056581497192, -2.014171600341797, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, -0.5646722912788391, -1.3545056581497192, -0.8891714811325073, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1642', [0.0, 0.0, -1.3146722316741943, -1.3132617473602295, -1.1848986148834229, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1879', [0.0, 0.0, -1.8146722316741943, -0.6684328317642212, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1879', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': '1969'}

Key: 59091154192150993839033613441229543530
Value: {'question': 'Who had 70s No 1 hit with Show and Tell?', 'responses': [('David Essex', [-3.249490976333618, -0.3160887658596039, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Wonder', [-4.374490737915039, -0.16051004827022552, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boney M', [-3.249490976333618, -0.4715947210788727, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Korg', [-0.8744909763336182, -2.9968361854553223, -0.9356344938278198], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Wonder', [-4.374490737915039, -0.16051004827022552, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Manil', [-4.374490737915039, -0.21539705991744995, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Olivia Newton-', [-4.624490737915039, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("The O'", [-0.8744909763336182, -4.496836185455322, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve Winwood', [-4.624490737915039, -1.350218415260315, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Novy', [-3.999490976333618, -4.33827018737793, -0.43977224826812744], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Essex', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Al Wilson'}

Key: 160976786736071627638273556586770509819
Value: {'question': 'Balice international airport is in which country?', 'responses': [('Paraguay', [-4.544460773468018, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lithuania', [-2.2944607734680176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Luxembourg', [-3.9194607734680176, -0.04570977762341499], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albania', [-2.9194607734680176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lithuania', [-2.2944607734680176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [-3.9194607734680176, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latvia', [-3.7944607734680176, -0.05832047387957573], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bahamas', [-4.419460773468018, -2.2182812690734863], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-3.2944607734680176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [-2.1694607734680176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Paraguay', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Poland'}

Key: 263171183636945526207966135033027933846
Value: {'question': 'What was the first name of the original food manufacturer Mr. Heinz?', 'responses': [('Conrad', [-4.055466651916504, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mathias', [-4.836716651916504, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nicolas', [-4.274216651916504, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bernard', [-4.867966651916504, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ferdinand', [-2.461716651916504, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johann', [-4.242966651916504, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adam', [-4.211716651916504, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Karl', [-4.117966651916504, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anthony', [-2.461716651916504, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Antony', [-4.617966651916504, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Conrad', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.1639556568820564, 'reference': 'Henry'}

Key: 186500353307380592323903339731287435565
Value: {'question': 'Panama proclaimed independence in 1903 from which country?', 'responses': [('Colombia', [-0.8701202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Britain', [-3.1826202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-2.7451202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.8701202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.1201202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.1201202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.8701202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.8701202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.8701202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.8701202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Colombia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Columbia'}

Key: 113337858649939442265671630985285610422
Value: {'question': 'How old was Ronald Reagan when he became US President?', 'responses': [('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('70', [0.0, -1.730303406715393, -0.6073248386383057, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('42', [0.0, -2.1053032875061035, -0.7176980972290039, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '69', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': '69'}

Key: 122056861407679908085468613626097755985
Value: {'question': 'Which Iowa-born artist painted American Gothic and Spring Turning?', 'responses': [('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Grant Wood', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Grant Wood'}

Key: 49149507427707804655075809432066385847
Value: {'question': 'Which country does the airline Garuda come from?', 'responses': [('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Indonesia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Indonesia'}

Key: 60470791367772132573084208911304249826
Value: {'question': 'To ten thousand square miles, what is the area of Idaho?', 'responses': [('198,542', [-0.0345723032951355, -2.4656858444213867, -2.835808277130127, -2.036440372467041, -0.4586886763572693, -2.0470519065856934, -2.488002300262451, -2.317697525024414], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('83,557 square', [-0.0345723032951355, -0.7156858444213867, -0.12158583104610443, 0.0, -0.3795638978481293, -2.1174206733703613, -2.68204402923584, -1.079192876815796], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('57,000 sq', [-0.0345723032951355, -0.9656858444213867, -2.672095537185669, -0.24665114283561707, -1.4419366121292114, -0.38340848684310913, 0.0, -1.929957628250122], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('89,212 miles', [-0.0345723032951355, -0.7156858444213867, -3.7465858459472656, 0.0, -2.0832176208496094, -1.513490915298462, -2.6608786582946777, -3.185208559036255], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('198,088', [-0.0345723032951355, -2.4656858444213867, -2.835808277130127, -2.036440372467041, -0.4586886763572693, -1.5470517873764038, -3.1868865489959717, -2.399211883544922], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,260 square miles', [-0.0345723032951355, -0.9656858444213867, -1.797095537185669, -1.4641057252883911, -2.652695417404175, -1.3204705715179443, -1.0430097579956055, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('50,140', [-0.0345723032951355, -0.9656858444213867, -2.547095537185669, -0.4841911792755127, -2.5474843978881836, -2.4231014251708984, -1.2029237747192383, -1.049410104751587], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('83,533 square', [-0.0345723032951355, -0.7156858444213867, -0.12158583104610443, 0.0, -0.3795638978481293, -2.7424206733703613, -2.227940320968628, -0.816256582736969], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('50,333 square', [-0.0345723032951355, -0.9656858444213867, -2.547095537185669, -0.4841911792755127, -2.6724843978881836, -2.561387538909912, -2.22238826751709, -0.8239952325820923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('198225', [-0.0345723032951355, -2.4656858444213867, -2.835808277130127, -2.036440372467041, -3.708688735961914, -2.5336461067199707, -3.048704147338867, -0.6971346139907837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '198,542', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': '82,751 square miles'}

Key: 205289216442866536138187278701515307724
Value: {'question': 'Sarah Vaughan first joined which band as singer?', 'responses': [("Louis Armstrong's Hot", [-3.5622336864471436, -0.11967968195676804, -1.021009922027588, 0.0, -1.7143850326538086], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmie Luncefords Orchestra', [-4.124733924865723, 0.0, 0.0, -1.6004126071929932, -1.628514051437378], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Billy Eckstine's", [-4.249733924865723, -0.05488219112157822, 0.0, -0.4579302668571472, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duke Ellington and his orchestra', [-2.9372336864471436, 0.0, -2.994887113571167, -0.3969707489013672, -0.7586241960525513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Savoy Imperials', [-2.3122336864471436, -1.6914831399917603, -2.9960474967956543, -0.21819491684436798, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sarah Vaughn first joined Cab', [-4.937233924865723, -2.2378222942352295, -0.3082793354988098, 0.0, -4.177983283996582], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Ray Charles's band", [-4.812233924865723, -0.30580049753189087, -2.060375928878784, -1.164231777191162, -0.7464535236358643], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Bob Crosby's band", [-4.562233924865723, -0.07290814816951752, -0.6314650774002075, 0.0, -1.8450367450714111], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Duke Ellington's orchestra", [-2.9372336864471436, 0.0, -0.8698871731758118, 0.0, -2.314399242401123], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Apollo Theater in New', [-2.3122336864471436, -4.753983020782471, -2.1632237434387207, -3.9037601947784424, -1.521304965019226], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Louis Armstrong's Hot", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Earl Hines'}

Key: 330407022483926413160105664294134650049
Value: {'question': 'Elmas international airport is in which country?', 'responses': [('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-3.847975969314575, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-3.722975969314575, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cyprus', [-2.660475969314575, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Turkey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Italy'}

Key: 49352685196184792937678106306393922036
Value: {'question': 'Which pioneering aviator had a plane called Percival Gull?', 'responses': [('George Mallory', [-4.598690986633301, -1.908139944076538, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Alan Cob', [-1.6611907482147217, -1.143309473991394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Richard Atten', [-1.6611907482147217, -2.0808095932006836, -4.106374263763428], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Cobham', [-3.0986907482147217, -0.2399408519268036, -0.31348463892936707], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Pearse', [-3.7236907482147217, -0.47231000661849976, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-1.6611907482147217, -0.5358132123947144, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Alan Cob', [-1.6611907482147217, -1.143309473991394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Richard Whit', [-1.6611907482147217, -2.0808095932006836, -2.7938742637634277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-1.6611907482147217, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-1.6611907482147217, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George Mallory', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Jean Batten'}

Key: 113872322750394112454757816259262059079
Value: {'question': 'Which British political figure became Baroness Kesteven?', 'responses': [('Baroness Thatcher', [-2.9096081256866455, -0.18134519457817078, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [-1.2846081256866455, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwina Currie', [-3.7846081256866455, 0.0, -0.5302586555480957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [-1.2846081256866455, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baroness Thatcher', [-2.9096081256866455, -0.18134519457817078, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [-1.2846081256866455, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tony Benn', [-1.9096081256866455, -0.1902991682291031, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tony Benn', [-1.9096081256866455, -0.1902991682291031, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baroness Thatcher', [-2.9096081256866455, -0.18134519457817078, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [-1.2846081256866455, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Baroness Thatcher', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'Margaret Thatcher'}

Key: 39170248099916900558289586686058872864
Value: {'question': 'Henri Becquerel shared a Nobel prize for his work in discovering what?', 'responses': [('Radium', [-2.3548436164855957, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radioactive elements', [-2.8548436164855957, -1.1820684671401978], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radioactivity', [-0.9798436164855957, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('X-', [-3.8548436164855957, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radioactivity', [-1.1048436164855957, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radioactivity', [-1.1048436164855957, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-2.3548436164855957, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radioactivity', [-1.1048436164855957, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radioactivity', [-1.1048436164855957, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radioactivity', [-1.1048436164855957, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Radium', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Radioactivity'}

Key: 229727392527608249897353591410444346570
Value: {'question': 'Who was the first white music star to record on Atlantic, through its sister label Atco?', 'responses': [('Jerry Lee Lewis', [-2.9286599159240723, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bo Didd', [-4.428659915924072, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johnny Ace', [-3.9286599159240723, -1.1027740240097046, -0.10649567097425461], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackie Brenston', [-4.303659915924072, -2.293837308883667, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Lee Lewis', [-2.9286599159240723, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Dorsey', [-4.053659915924072, -2.7230541706085205, -0.06669709831476212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Lee Lewis', [-2.9286599159240723, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Platters', [-2.6786599159240723, -1.075670599937439, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fats Domino', [-2.4286599159240723, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Darin', [-3.3036599159240723, -0.9428282380104065, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jerry Lee Lewis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Bobby Darin'}

Key: 57562942092118846267439472803201849858
Value: {'question': 'Who took the assumed name Sebastian Melmoth when living in Paris?', 'responses': [('Jean de', [-4.905977249145508, -1.2434089183807373], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edgar Allen', [-1.0309773683547974, -1.4061501026153564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edgar Allan', [-1.0309773683547974, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Sand', [-3.405977249145508, -0.7303944826126099], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Baudelaire', [-2.030977249145508, -0.5643273591995239], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Baudelaire', [-2.030977249145508, -0.5643273591995239], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baudelaire', [-4.405977249145508, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Victor Hugo', [-4.155977249145508, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edgar Allan', [-1.0309773683547974, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Byron', [-3.405977249145508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jean de', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Oscar Wilde'}

Key: 331621212332039734995336435581409108222
Value: {'question': 'Who signed the Pacific Security Treaty with the USA in 1951?', 'responses': [('The Japanese', [-3.324124336242676, -2.2115797996520996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-0.6991244554519653, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-0.6991244554519653, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-0.6991244554519653, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-0.6991244554519653, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-0.6991244554519653, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Soviet', [-3.324124336242676, -1.83657968044281], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The US', [-3.324124336242676, -2.8365797996520996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Douglas', [-3.824124336242676, -0.3180460035800934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eisenhower', [-4.699124336242676, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Japanese', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Australia & New Zealand'}

Key: 1580797465582322765419462436601517782
Value: {'question': 'How many miles long is the canal which links the Pacific and Atlantic Oceans?', 'responses': [('383', [0.0, -1.7873643636703491, -2.688575267791748, -3.072977066040039], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,6', [0.0, -1.2873643636703491, -0.6630604267120361, -2.823669195175171], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4,1', [0.0, -2.4123644828796387, -1.4795366525650024, -2.0924203395843506], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('210', [0.0, -1.7873643636703491, -2.201467514038086, -1.8185813426971436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('101', [0.0, -1.5373643636703491, -2.112968921661377, -3.4115238189697266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('176', [0.0, -1.5373643636703491, -2.362968921661377, -2.9577012062072754], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('42.', [0.0, -2.4123644828796387, -2.979536533355713, -3.3450512886047363], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,4', [0.0, -1.2873643636703491, -0.6630604267120361, -2.698669195175171], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3,7', [0.0, -1.7873643636703491, -1.063575267791748, -0.9823058247566223], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('46', [0.0, -2.4123644828796387, -2.979536533355713, -2.608480215072632], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '383', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': '50 miles'}

Key: 268758124969872175167926290803148213661
Value: {'question': 'Who founded the off-Broadway theater where Hair had its premier?', 'responses': [('Joseph Papp', [-0.621499240398407, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.621499240398407, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harold Clurman', [-3.5746243000030518, -0.7743208408355713, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.621499240398407, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Houseman', [-2.9027493000030518, -1.1649045944213867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wulp', [-2.9027493000030518, -4.608202934265137, -1.3261690139770508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Papp', [-2.2308743000030518, -0.053035616874694824, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.621499240398407, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.621499240398407, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.621499240398407, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joseph Papp', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Joseph Papp'}

Key: 339903417967038959524902862720727815523
Value: {'question': "Established in 1919, which is the world's oldest surviving airline?", 'responses': [('KLM', [-0.4184451997280121, -0.6763525605201721], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Royal Air', [-3.293445110321045, -0.4398341476917267], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM Dutch', [-0.4184451997280121, -3.8013525009155273], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM Royal', [-0.4184451997280121, -1.1763525009155273], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM,', [-0.4184451997280121, -3.0513525009155273], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Royal Dutch', [-3.293445110321045, -1.8148341178894043], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM', [-0.4184451997280121, -0.6763525605201721], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lufthansa', [-3.043445110321045, -0.08485691249370575], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cathay', [-4.418445110321045, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lufthansa', [-3.043445110321045, -0.08485691249370575], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'KLM', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'KLM'}

Key: 251430741191328300808124836569128187120
Value: {'question': '"Which US First Lady said, ""No one can make you feel interior unless you consent?"""', 'responses': [('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lady Bird Johnson', [-3.011324882507324, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lady Bird Johnson', [-3.011324882507324, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Eleanor Roosevelt', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Eleanor Roosevelt'}

Key: 156993193520069748257208725735874595891
Value: {'question': 'Who won super bowl X?', 'responses': [('Washington Football', [-3.653723955154419, -3.3477635383605957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-0.46622389554977417, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steelers', [-4.34122371673584, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-0.46622389554977417, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Bay', [-3.466223955154419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh Steelers', [-1.841223955154419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas cowboys', [-0.46622389554977417, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-0.46622389554977417, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-0.46622389554977417, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-0.46622389554977417, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Washington Football', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Pittsburgh'}

Key: 301786368865695038725593009141202656879
Value: {'question': "Who brought to an end Jahangir Khan's long unbeaten run of success in squash in the 80s?", 'responses': [("England's", [-3.600864887237549, -0.06196761503815651, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("England's", [-3.600864887237549, -0.06196761503815651, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('John Walker', [-2.975864887237549, -2.685516357421875, -0.07045131176710129], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Imran Khan', [-3.538364887237549, -0.4085572361946106, -0.11985692381858826], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("Australia's", [-3.663364887237549, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jansher Khan', [-1.5383650064468384, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jansher Khan', [-1.5383650064468384, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Amjad Khan', [-2.163364887237549, -0.8300777673721313, -0.09087500721216202], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("Australia's", [-3.663364887237549, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jan-O', [-3.350864887237549, -0.7780429720878601, -0.41200384497642517], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "England's", 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Ross Norman'}

Key: 122725637288521254644216841310314437296
Value: {'question': 'Jomo Kenyatta was born into which tribe?', 'responses': [('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kikuyu', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Kikuyu'}

Key: 146896398869692673297925107012236880676
Value: {'question': 'Bryan Abrams, Sam Walters, Mark Calderon and Kevin Thornton formed which group?', 'responses': [('Third Eye Blind', [-4.766204357147217, -0.830185055732727, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The Commod', [-4.766204357147217, -0.6395360827445984, -2.322288990020752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Real McKenz', [-0.7662043571472168, -3.6913986206054688, -1.1529520750045776, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New Kids on', [-0.7662043571472168, -2.4413986206054688, -1.7338201999664307, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A. B.', [-3.266204357147217, -2.997786521911621, -4.290421009063721, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A-Ha', [-3.266204357147217, -1.560286521911621, -1.3562166690826416, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-0.7662043571472168, -3.8163986206054688, -0.28115010261535645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Commodores', [-0.7662043571472168, -2.3163986206054688, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jacksons', [-0.7662043571472168, -3.9413986206054688, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boyz II Men', [-3.641204357147217, -0.04737302288413048, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Third Eye Blind', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Color Me Badd'}

Key: 4216313867758261359858286331956722274
Value: {'question': 'When was the Scrabble World championship first held?', 'responses': [('1997', [0.0, 0.0, 0.0, -2.371279239654541, -2.3422632217407227, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1989', [0.0, 0.0, 0.0, -1.9962793588638306, -1.5102719068527222, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1986', [0.0, 0.0, 0.0, -1.9962793588638306, -2.0102720260620117, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1989', [0.0, 0.0, 0.0, -1.9962793588638306, -1.5102719068527222, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1996', [0.0, 0.0, 0.0, -2.371279239654541, -2.3422632217407227, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1966', [0.0, 0.0, 0.0, -1.4962793588638306, -2.1912002563476562, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1966', [0.0, 0.0, 0.0, -1.4962793588638306, -2.1912002563476562, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1961', [0.0, 0.0, 0.0, -1.4962793588638306, -2.8162002563476562, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1991', [0.0, 0.0, 0.0, -2.371279239654541, -2.2172632217407227, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1989', [0.0, 0.0, 0.0, -1.9962793588638306, -1.5102719068527222, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1997', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': '1991'}

Key: 24301856585106039922705646957603912112
Value: {'question': 'Arlanda international airport is in which country?', 'responses': [('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sweden', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Sweden'}

Key: 53493738472169836672569973090797325790
Value: {'question': 'What year was the centenary of Arkansas joining the Union?', 'responses': [('1991', [0.0, 0.0, -0.575939416885376, -0.7283578515052795, -0.28423911333084106, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1883', [0.0, 0.0, -0.825939416885376, -2.039463520050049, -0.9988044500350952, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1863', [0.0, 0.0, -0.825939416885376, -1.4144634008407593, -1.0426058769226074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1920', [0.0, 0.0, -0.575939416885376, -2.3533577919006348, -0.7246109247207642, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1921', [0.0, 0.0, -0.575939416885376, -2.3533577919006348, -0.7246109247207642, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1875', [0.0, 0.0, -0.825939416885376, -1.7894634008407593, -2.464094638824463, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1990', [0.0, 0.0, -0.575939416885376, -0.7283578515052795, -2.4092390537261963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1996', [0.0, 0.0, -0.575939416885376, -0.7283578515052795, -2.6592390537261963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1864', [0.0, 0.0, -0.825939416885376, -1.4144634008407593, -1.9176058769226074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1987', [0.0, 0.0, -0.575939416885376, -1.8533577919006348, -1.7651357650756836, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1991', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': '1936'}

Key: 103796998466908453438328071639281647336
Value: {'question': 'Which singer formed his own Berlee record label?', 'responses': [('Elvis Presley', [-2.8800764083862305, -0.3943478465080261], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince', [-2.3800764083862305, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Collins', [-2.8800764083862305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Collins', [-2.8800764083862305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Collins', [-2.8800764083862305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis Presley', [-2.8800764083862305, -0.3943478465080261], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul McCartney', [-3.6300764083862305, -0.8432037234306335], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dion', [-4.6300764083862305, -1.2951968908309937], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('B.', [-4.0050764083862305, -0.4705027937889099], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cher', [-4.5050764083862305, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Elvis Presley', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Del Shannon'}

Key: 2598872478169432329643955533398354143
Value: {'question': 'Who duetted with Barbra Streisand on Till I Loved You in 1988?', 'responses': [('The Manhattan Transfer', [-3.619703769683838, -3.497163772583008, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Whitney Houston', [-3.119703769683838, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrea Bocelli', [-3.619703769683838, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Cole', [-4.557203769683838, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donna Summer', [-3.494703769683838, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neil Diamond', [-3.119703769683838, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donna Summer', [-3.494703769683838, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenny Rogers', [-2.932203769683838, -0.3408871591091156, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenny Rogers', [-2.932203769683838, -0.3408871591091156, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Michael', [-4.369703769683838, -0.9049393534660339, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Manhattan Transfer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Don Johnson'}

Key: 243465557792269031725477188344184851905
Value: {'question': 'What was first published on 21st December 1913 in the New York World?', 'responses': [('The Yellow Kid', [-0.5871676206588745, -3.0713889598846436, -0.7562787532806396, -0.3377021253108978], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The character of Peter', [-0.5871676206588745, -4.446389198303223, -0.45339077711105347, -4.650589942932129], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Yellow Kid', [-0.5871676206588745, -3.0713889598846436, -0.7562787532806396, -0.3377021253108978], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Adventures of Tom', [-0.5871676206588745, -1.9463889598846436, 0.0, -2.384565591812134], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('the story "The', [-3.712167739868164, -2.674743413925171, -2.087980270385742, -0.24584980309009552], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"The Kiss"', [-2.337167739868164, -0.48993420600891113, -4.094301223754883, -0.34594741463661194], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('A Christmas carol', [-2.837167739868164, -2.324876070022583, -3.2279458045959473, -0.2923015356063843], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Jungle by Upton', [-0.5871676206588745, -2.8213889598846436, -1.1723287105560303, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Great Gatsby', [-0.5871676206588745, -2.5713889598846436, -1.3285720348358154, -0.22080403566360474], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The first installment of', [-0.5871676206588745, -1.9463889598846436, -3.6204397678375244, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Yellow Kid', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'A crossword puzzle'}

Key: 31154385772208322335914570337316954002
Value: {'question': 'What finally knocked One Sweet Day off the No 1 position in the charts in the 90s?', 'responses': [('A little song', [-2.6818251609802246, -3.0693836212158203, -1.6617801189422607], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('When the music', [-4.056825160980225, -1.931341290473938, -4.417504787445068], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Celine Dion', [-2.4318251609802246, 0.0, -2.3267252445220947], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"Waterfalls', [-2.4318251609802246, -4.439207077026367, -0.14082355797290802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ("Britney Spears'", [-3.6818251609802246, 0.0, -0.7423009872436523], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('By 1', [-4.681825160980225, -3.78114652633667, -0.9140508770942688], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"In Your', [-2.4318251609802246, -4.439207077026367, -2.5406198501586914], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ("Mariah Carey'", [-2.1818251609802246, -0.2395448386669159, -0.5689675211906433], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('A Star Is', [-2.6818251609802246, -3.9443836212158203, -0.575939416885376], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ("Mariah Carey'", [-2.1818251609802246, -0.2395448386669159, -0.5689675211906433], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A little song', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Because You Loved Me'}

Key: 267955960749948228661903725027690629845
Value: {'question': 'In which American state are the Merril Collection and the Burke Museum of Fine Arts?', 'responses': [('Seattle,', [-2.2378222942352295, -1.5355110168457031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-2.2378222942352295, -0.28551098704338074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Seattle,', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Texas'}

Key: 20315429774617782646624378592628173322
Value: {'question': "Which actor paid $93,500 for the baseball which rolled between Bill Buckner's legs in game six of the 1986 World Series?", 'responses': [('Joe Pesci', [-2.9645273685455322, -1.51243257522583, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Steve Garvey', [-2.4645273685455322, -0.28439655900001526, -0.03804141283035278], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Joe Garag', [-2.9645273685455322, -3.51243257522583, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Tom Hanks', [-2.8395273685455322, -1.35308039188385, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Michael J.', [-2.5895273685455322, -1.919010043144226, -0.25192904472351074], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Tim McCarver', [-3.5895273685455322, -0.6031919717788696, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Bill Murray', [-2.9645273685455322, -0.4413106143474579, -0.03804141283035278], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('George Brett', [-2.7145273685455322, -2.289907932281494, -0.03804141283035278], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Who won Super', [-4.589527130126953, -1.079017996788025, -0.14267508685588837], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Jerry Seinfeld', [-4.714527130126953, -0.26800158619880676, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joe Pesci', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Charlie Sheen'}

Key: 304930938478382788720383996921358992904
Value: {'question': "Who was Theodore Roosevelt's Vice President between 1905 and 1909?", 'responses': [('Charles Curtis', [-1.6393786668777466, -2.79571270942688, -0.07946828007698059], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas Marshall', [-1.2018786668777466, -0.5322179794311523, -0.06993623077869415], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Theodore Roosevelt', [-2.826878547668457, -0.04915346950292587, -0.30676454305648804], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas Wilson.', [-1.2018786668777466, -3.1572179794311523, -3.9773848056793213], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('His brother,', [-4.795628547668457, -1.6710158586502075, -0.430511474609375], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('John Sherman', [-3.389378547668457, -0.03689223900437355, -0.14320796728134155], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas Marshall', [-1.2018786668777466, -0.5322179794311523, -0.06993623077869415], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('William Howard Taft', [-1.5143786668777466, -0.43350812792778015, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas Marshall', [-1.2018786668777466, -0.5322179794311523, -0.06993623077869415], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas R.', [-1.2018786668777466, -1.4697179794311523, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charles Curtis', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Charles W. Fairbanks'}

Key: 33280640827102717689957007688881802682
Value: {'question': 'Which nation was the first to ratify the United Nations charter in 1945?', 'responses': [('Iceland', [-4.87977409362793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-0.8797739744186401, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-3.3485240936279297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-0.8797739744186401, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-3.3797740936279297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [-4.44227409362793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-0.8797739744186401, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-0.8797739744186401, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-2.1922740936279297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Britain', [-3.3797740936279297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Iceland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Nicaragua'}

Key: 274249608338242007964661802160466087296
Value: {'question': 'What is the Alaskan terminus of the Alaskan Highway?', 'responses': [('Tok,', [-3.423938274383545, -0.9636589288711548], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawson City', [-1.173938274383545, -0.4073510468006134], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawson City', [-1.173938274383545, -0.4073510468006134], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delta Junction', [-1.298938274383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dead Horse', [-4.736438274383545, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delta Junction', [-1.298938274383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delta Junction', [-1.298938274383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fairbanks', [-2.923938274383545, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('What is', [-3.798938274383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delta Junction', [-1.298938274383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tok,', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Fairbanks'}

Key: 162856310908236233701211693920335344708
Value: {'question': "What was Buster Keaton's actual first name?", 'responses': [('Emmett', [-2.6972789764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emmett', [-2.6972789764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eddie', [-3.4863414764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.7285288572311401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buster', [-3.2832164764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-3.2050914764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George', [-3.1425914764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.7285288572311401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.7285288572311401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-3.2050914764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Emmett', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'Joseph'}

Key: 254904469063646884659019138994202922335
Value: {'question': 'From 1903 to 1958, every Pope--bar one--took which name?', 'responses': [('Clemente (', [-4.809679985046387, -3.067427635192871], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Leo (', [-3.3096797466278076, -3.4246346950531006], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Clement', [-3.8096797466278076, -0.40953299403190613], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Pius', [-2.1846797466278076, -0.23843634128570557], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The first', [-2.4346797466278076, -2.930962562561035], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('From', [-3.9346797466278076, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Benedict', [-3.4346797466278076, -0.2361014038324356], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Benedict.', [-3.4346797466278076, -3.3611013889312744], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Peter', [-2.8096797466278076, -0.1069769486784935], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The pope', [-2.4346797466278076, -2.930962562561035], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Clemente (', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Pius'}

Key: 96245766234754081845274940633608643614
Value: {'question': "Which brothers were Warner Bros' first major record success?", 'responses': [('The Four Jacks', [-0.9097439050674438, -2.5178561210632324, -1.0127007961273193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Belmon', [-0.9097439050674438, -5.080356121063232, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sons Of', [-0.9097439050674438, -4.080356121063232, -1.857227087020874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis & Dewey', [-4.534743785858154, -2.38212513923645, -4.716360092163086], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al and Bill', [-1.7847439050674438, -0.7095829844474792, -4.643257141113281], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Mills Brothers', [-0.9097439050674438, -2.5178561210632324, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dorsey brothers', [-4.284743785858154, -1.8886346817016602, -0.13726027309894562], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Three Suns', [-0.9097439050674438, -2.5178561210632324, -1.1297121047973633], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Jolson', [-1.7847439050674438, -1.084583044052124, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Fresh', [-0.9097439050674438, -2.5178561210632324, -2.0752007961273193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Four Jacks', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Everly'}

Key: 237627328673549738776281532618222920236
Value: {'question': "What was the title of Kitty Kelley's book about Elizabeth Taylor?", 'responses': [('Liz:', [-0.9696331024169922, -0.48199227452278137], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sun', [-1.8446331024169922, -2.7054522037506104], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth The', [-1.4071331024169922, -1.7279400825500488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Liz', [-2.719633102416992, -1.0307830572128296], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz:', [-0.9696331024169922, -0.48199227452278137], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth The', [-1.4071331024169922, -1.7279400825500488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth the', [-1.4071331024169922, -0.6029401421546936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz', [-0.9696331024169922, -1.419492244720459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The world', [-1.8446331024169922, -1.9867022037506104], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz The', [-0.9696331024169922, -3.981992244720459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Liz:', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Elizabeth Taylor: The Last Star'}

Key: 179027564765484031394933204870708983636
Value: {'question': 'What are the international registration letters for a vehicle form Jordan?', 'responses': [('J.', [-1.2002768516540527, -2.947319984436035], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('JB', [-4.325276851654053, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-2.7002768516540527, -2.4290428161621094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('JR', [-3.5752768516540527, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"JJ', [-4.325276851654053, -3.4650416374206543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('JA', [-2.7002768516540527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-2.7002768516540527, -2.1790428161621094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('0', [-2.7002768516540527, -2.4290428161621094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('RJ', [-4.700276851654053, -0.06268490105867386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('J', [-1.2002768516540527, -0.6973198652267456], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'J.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'HKJ'}

Key: 128644870202509778169425799164530212377
Value: {'question': 'In which country was Julie Christie born?', 'responses': [('Great Britain', [-3.6924338340759277, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Britain', [-3.1924338340759277, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-0.9424338340759277, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.8174338340759277, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.8174338340759277, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.8174338340759277, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-0.9424338340759277, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.8174338340759277, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.8174338340759277, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-0.9424338340759277, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Great Britain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': 'India'}

Key: 182828260099965194252017383877802339988
Value: {'question': 'Which artist created the Katzenjammer Kids?', 'responses': [('Wilhelm Busch', [-3.071995496749878, -0.12042894214391708, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fritz Kredel', [-2.946995496749878, -0.1365867555141449, -0.4392073452472687], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles M.', [-2.665745496749878, -1.208296298980713, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theodor Seuss Ge', [-4.396214485168457, -0.85737144947052, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Hirschfeld', [-3.165745496749878, -0.38343578577041626, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wilhelm Busch', [-3.071995496749878, -0.12042894214391708, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gustave Dore', [-4.466526985168457, -0.2317984402179718, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winsor McC', [-2.571995496749878, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Barks', [-3.376682996749878, -1.0287535190582275, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Herriman', [-1.743870496749878, -0.18710067868232727, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wilhelm Busch', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Rudolph Dirks'}

Key: 60173673388890333035322288342789261387
Value: {'question': 'Who had a 60s No 1 hit with Johnny Angel?', 'responses': [('Joe Cocker', [-4.520928382873535, -1.756227731704712, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marmalade', [-4.020928382873535, -0.7032870650291443, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Crystals', [-0.583428144454956, -3.2566518783569336, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Angels', [-0.583428144454956, -2.1941518783569336, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Lindsay &', [-3.958428144454956, -1.0095124244689941, -3.3394687175750732], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Leyton', [-4.145928382873535, -0.4089163839817047, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New Vau', [-0.583428144454956, -4.537901878356934, -0.6862074136734009], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Tornadoes', [-0.583428144454956, -3.6316518783569336, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Shadows', [-0.583428144454956, -1.631651759147644, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hollies', [-0.583428144454956, -2.9441518783569336, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joe Cocker', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Shelley Fabares'}

Key: 77531749597658564846103506982483162066
Value: {'question': 'Which country does the airline VIASA come from?', 'responses': [('Spain', [-1.6651395559310913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-1.2276395559310913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.6651395559310913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [-2.977639675140381, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-1.2276395559310913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Netherlands', [-3.977639675140381, -1.0036234855651855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-1.2276395559310913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [-4.227639675140381, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-1.2276395559310913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-4.477639675140381, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Spain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Venezuela'}

Key: 326539575882893164728030538997132406953
Value: {'question': 'Who directed Back To The Future?', 'responses': [('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert Zemeckis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Robert Zemeckis'}

Key: 106593083475505750836729952728881582620
Value: {'question': 'Where was Che Guevara killed?', 'responses': [('Bolivia', [-0.2621394395828247, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Hig', [-2.574639320373535, -0.015070038847625256], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.2621394395828247, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cuba', [-2.762139320373535, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.2621394395828247, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.2621394395828247, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivian', [-3.824639320373535, -0.2383444905281067], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Hig', [-2.574639320373535, -0.015070038847625256], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.2621394395828247, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Hig', [-2.574639320373535, -0.015070038847625256], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bolivia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Bolivia'}

Key: 210851585520982376468564665992688936844
Value: {'question': 'Daryl Dragon used which name when he formed a 70s duo?', 'responses': [('The Captain and Tennille', [-3.5345144271850586, -0.1058022752404213, -0.4509372115135193, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and Tennille', [-0.12826453149318695, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain & Tennille', [-0.12826453149318695, -0.8981232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain & Tennille', [-0.12826453149318695, -0.8981232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and Tennille', [-0.12826453149318695, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain & Tennille', [-0.12826453149318695, -0.8981232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and Tennille', [-0.12826453149318695, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and Tennille', [-0.12826453149318695, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and Tennille', [-0.12826453149318695, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain & Tennille', [-0.12826453149318695, -0.8981232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Captain and Tennille', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Captain'}

Key: 335464748566950050198478317646551808700
Value: {'question': 'Which has the highest population, Rode island or South Dakota?', 'responses': [('Rhode Island', [-2.0078771114349365, -0.1602240949869156, -0.05908667668700218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhode island', [-2.0078771114349365, -1.9102240800857544, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode Island', [-1.0078771114349365, -0.575939416885376, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-0.7578771710395813, 0.0, -0.06669709831476212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-0.7578771710395813, 0.0, -0.06669709831476212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-0.7578771710395813, 0.0, -0.06669709831476212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode Island', [-1.0078771114349365, -0.575939416885376, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhode Island', [-2.0078771114349365, -0.1602240949869156, -0.05908667668700218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhode Island', [-2.0078771114349365, -0.1602240949869156, -0.05908667668700218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode Island', [-1.0078771114349365, -0.575939416885376, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rhode Island', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Rhode Island'}

Key: 197450559298194012679339395682072343849
Value: {'question': "What was Oliver Reed's real first name?", 'responses': [('Patrick', [-4.5660905838012695, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-2.6285908222198486, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael', [-4.5660905838012695, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-0.8785907626152039, -0.35004088282585144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-0.8785907626152039, -0.35004088282585144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert', [-3.2535908222198486, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-0.8785907626152039, -0.35004088282585144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-0.8785907626152039, -0.35004088282585144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael', [-4.5660905838012695], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reginald', [-4.0035905838012695, -0.14894887804985046], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Patrick', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Robert'}

Key: 11764063432336950932290147533638348686
Value: {'question': 'Which country does the airline Sansa come from?', 'responses': [('Iceland', [-2.7032127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-3.5782127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-2.7032127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-3.5782127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-3.5782127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.5782127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-3.6407127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.5782127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.5782127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Finland', [-2.8282127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Iceland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811906, 'reference': 'Costa Rica'}

Key: 230229352980133600316057024601341158341
Value: {'question': 'Who wrote the song Harper Valley PTA?', 'responses': [('Jeannie C', [-0.3397645354270935, 0.0, -0.19858106970787048], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie Se', [-0.3397645354270935, 0.0, -1.7142060995101929], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie Se', [-0.3397645354270935, 0.0, -1.7142060995101929], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Rogers', [-3.2928895950317383, -3.4964044094085693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peggy King', [-4.183514595031738, -4.5769453048706055, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3397645354270935, 0.0, -0.19858106970787048], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roger Miller', [-3.5194520950317383, -0.1250782459974289, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3397645354270935, 0.0, -0.19858106970787048], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie Se', [-0.3397645354270935, 0.0, -1.7142060995101929], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3397645354270935, 0.0, -0.19858106970787048], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jeannie C', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456562, 'reference': 'Tom T. Hall'}

Key: 311195634190467684485689015458781618372
Value: {'question': "What was Elvis's last No 1 in his own lifetime?", 'responses': [('"It\'s', [-2.184221029281616, -3.3051836490631104, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suspicious Minds', [-1.5592210292816162, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"If I can', [-2.184221029281616, -3.7426836490631104, -0.1392667144536972, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suspicious Minds', [-1.5592210292816162, 0.0, 0.0, -0.12387295067310333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('It Was All You', [-3.184221029281616, -2.2060463428497314, -1.3420543670654297, -3.3723113536834717], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suspicious Minds', [-1.5592210292816162, 0.0, 0.0, -0.12387295067310333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suspicious Minds', [-1.5592210292816162, 0.0, 0.0, -0.12387295067310333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suspicious Minds', [-1.5592210292816162, 0.0, 0.0, -0.12387295067310333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viva Las Vegas', [-2.934221029281616, 0.0, 0.0, -0.11869104951620102], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I Can't", [-3.559221029281616, -0.7385028600692749, -0.3754006028175354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"It\'s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Suspicious Minds'}

Key: 248848692362025694205260992811040104034
Value: {'question': "Who choreographed the first performance of Copland's Rodeo?", 'responses': [('Jerome Robbins', [-3.997837543487549, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes de Mille', [-1.0603375434875488, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes de Mille', [-1.0603375434875488, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martha Graham', [-1.1228375434875488, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martha Graham', [-1.1228375434875488, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes de Mille', [-1.0603375434875488, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Fosse', [-4.310337543487549, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lester Horton', [-4.716587543487549, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martha Graham', [-1.1228375434875488, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martha Graham', [-1.1228375434875488, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jerome Robbins', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Agnes de Mille'}

Key: 278178236903659359332998521751266861672
Value: {'question': 'Who wrote Riders of the Purple Sage?', 'responses': [('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward Abbey', [-2.9891414642333984, -0.2860201597213745, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zane Grey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Zane Gray'}

Key: 8063326310999489857006450982497195180
Value: {'question': "What were D W Griffith's first names?", 'responses': [('David Wells', [0.0, -4.882452964782715], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William', [0.0, -0.8199530839920044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David', [0.0, -2.194952964782715], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David', [0.0, -4.632452964782715], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Wells', [0.0, -4.882452964782715], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William', [0.0, -0.8199530839920044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William', [0.0, -0.8199530839920044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William', [0.0, -0.8199530839920044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William', [0.0, -0.8199530839920044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David W', [0.0, -2.194952964782715], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Wells', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'David Wark'}

Key: 332535048030433131277634229561133705196
Value: {'question': '"Who created the line, ""Happiness is a warm puppy?"', 'responses': [('Leo Burnett', [-3.5550239086151123, -1.3549450635910034, -0.10842655599117279], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schultz', [-0.3987739682197571, -1.5754692554473877, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3987739682197571, -0.5129692554473877, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3987739682197571, -0.5129692554473877, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3987739682197571, -0.5129692554473877, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3987739682197571, -0.5129692554473877, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3987739682197571, -0.5129692554473877, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles M.', [-0.3987739682197571, -1.6379692554473877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3987739682197571, -0.5129692554473877, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I. J', [-3.9065864086151123, -0.0625733807682991, -2.4977564811706543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Leo Burnett', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Charles Schulz'}

Key: 120897105411395266991933240638091599007
Value: {'question': 'Who directed The Big Sleep and Gentlemen Prefer Blondes?', 'responses': [('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Howard Hawks', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Howard Hawks'}

Key: 84285215038753726249545095547437641050
Value: {'question': 'In which year was the talkie The Jazz Singer released?', 'responses': [('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1927', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1927'}

Key: 122537270215681954247623527813271837955
Value: {'question': 'Alborg Roedslet international airport is in which country?', 'responses': [('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [-3.0485873222351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Denmark', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Denmark'}

Key: 156438298418092728929811262073534774106
Value: {'question': "What was Elton John's first US No 1 hit?", 'responses': [('Crocodile Rock', [-2.0092928409576416, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiny Dancer', [-3.0092928409576416, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Crocodile Rock', [-2.0092928409576416, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Candle in the', [-3.6967928409576416, -0.3769513666629791, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiny Dancer', [-3.0092928409576416, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Saturday Night'", [-1.7592928409576416, -0.28069013357162476, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Your Song', [-1.6342928409576416, -0.8150401711463928, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Your Song', [-1.6342928409576416, -0.8150401711463928, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Saturday Night'", [-1.7592928409576416, -0.28069013357162476, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Your Song', [-1.6342928409576416, -0.8150401711463928, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Crocodile Rock', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576458, 'reference': 'Crocodile Rock'}

Key: 19118866562102393806109529524355418438
Value: {'question': 'In which decade was the Oral Roberts University founded at Tulsa?', 'responses': [('1960s', [0.0, 0.0, 0.0, -0.42870065569877625, -0.09448157250881195, -0.3153110444545746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.42870065569877625, -0.09448157250881195, -0.3153110444545746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, 0.0, 0.0, -1.0537006855010986, -0.17542405426502228, -0.35068631172180176], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1966', [0.0, 0.0, 0.0, -0.42870065569877625, -3.7194814682006836, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, -1.0537006855010986, -3.050424098968506, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.42870065569877625, -0.09448157250881195, -0.3153110444545746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, 0.0, 0.0, -1.0537006855010986, -0.17542405426502228, -0.35068631172180176], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960', [0.0, 0.0, 0.0, -0.42870065569877625, -0.09448157250881195, -2.0653109550476074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.42870065569877625, -0.09448157250881195, -0.3153110444545746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.42870065569877625, -0.09448157250881195, -0.3153110444545746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1960s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': '1960s'}

Key: 307518824175457082030858663647596463009
Value: {'question': 'In which English city is the Burrows Toy Museum?', 'responses': [('Tunbridge', [-4.308852195739746, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ipswich', [-4.558852195739746, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leeds,', [-4.183852195739746, -2.929882287979126], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bradford', [-4.058852195739746, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sheffield', [-4.308852195739746, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cambridge', [-4.058852195739746, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bradford,', [-4.058852195739746, -3.0485873222351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colchester', [-4.433852195739746, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-1.8088523149490356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('York', [-4.058852195739746, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tunbridge', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Bath'}

Key: 149186725975161984472544802090937999789
Value: {'question': 'On which label did the Beach boys record most of their 60s hits?', 'responses': [('Capitol Records', [-0.20447665452957153, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Decca', [-3.6107265949249268, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Capitol Records', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Capitol'}

Key: 81328885281548666794110735425775135138
Value: {'question': 'Whose musical works included Composition For Orchestra and Philomel?', 'responses': [('Charles Ives', [-3.1877174377441406, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aaron Copland', [-0.8752173185348511, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Copland', [-2.9377174377441406, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bartok', [-4.250217437744141, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rachmanin', [-4.062717437744141, 0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Billings', [-4.062717437744141, -1.8325992822647095, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anton Webern', [-3.6252174377441406, -3.2817835807800293, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rachmaninov', [-4.062717437744141, 0.0, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Samuel Barber', [-3.0627174377441406, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aaron Copland', [-0.8752173185348511, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charles Ives', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Milton Babbit'}

Key: 176838896580123091534625122789634146552
Value: {'question': 'What was the first state to join the Union in the 20th century?', 'responses': [('Kansas', [-2.866706371307373, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montana', [-3.116706371307373, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Jersey', [-2.425300121307373, -2.4069128036499023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Dakota', [-2.944831371307373, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.8237375020980835, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Utah', [-2.245612621307373, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alaska', [-3.575690746307373, -0.07946828007698059], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Utah', [-2.245612621307373, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montana', [-3.116706371307373, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Mexico', [-2.425300121307373, -0.0944129079580307], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kansas', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Oklahoma'}

Key: 334408083050207523278510833473432068002
Value: {'question': 'Where were the 2004 Summer Olympic Games held?', 'responses': [('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Athens, Greece', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Athens'}

Key: 319074744005416958627764075674726877142
Value: {'question': 'What did Arthur Blessitt carry with him on an around-the-world walk taking in 277 nations?', 'responses': [('A 1', [-0.6161388158798218, -2.247375249862671, -1.1784483194351196], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('a large white', [-1.7411388158798218, -2.3899903297424316, -3.1645565032958984], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('a cross made', [-1.7411388158798218, -1.7649904489517212, -1.924187421798706], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("Jesus' Robe", [-3.9911389350891113, -1.2953606843948364, -4.023180961608887], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('an open bible', [-3.9911389350891113, -3.250685453414917, -1.5398985147476196], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A lighted cross', [-0.6161388158798218, -4.99737548828125, -0.45561373233795166], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A cross', [-0.6161388158798218, -1.747375249862671, -0.8692353963851929], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('a cross', [-1.7411388158798218, -1.7649904489517212, -0.674187421798706], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A huge cross', [-0.6161388158798218, -4.62237548828125, -1.290574550628662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Ten Commandments', [-2.6161389350891113, -3.31815242767334, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A 1', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'A wooden cross'}

Key: 111828181098033545264522473987556850882
Value: {'question': 'Where in the former Soviet Union was Yul Brynner born?', 'responses': [('Ukraine', [-2.194854736328125, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Moscow,', [-2.819854736328125, -1.4061501026153564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Moscow', [-2.819854736328125, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-1.569854736328125, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiev', [-2.319854736328125, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-1.569854736328125, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dne', [-3.882354736328125, -0.33914029598236084], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sverd', [-4.069854736328125, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tashkent', [-3.194854736328125, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minsk,', [-4.069854736328125, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ukraine', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Siberia'}

Key: 52137381648763898586560821224474263500
Value: {'question': 'When she died how old was Karen Carpenter?', 'responses': [('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('31 years', [0.0, 0.0, -2.4639394283294678, -2.929882287979126], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '32', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': '32'}

Key: 294962527403216860646916587605866786876
Value: {'question': '"According to the modern Olympics founder Baron de Coubertin, ""The essential thing is not conquering but..."" what?"', 'responses': [('Enjoying', [-3.9534735679626465, -0.2014133334159851], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Excellence.', [-3.9534735679626465, -2.8527731895446777], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('...the', [-3.5784735679626465, -2.4867258071899414], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Participating', [-2.0784735679626465, -0.07888974994421005], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Self Discipline', [-3.9534735679626465, -4.522607326507568], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Participating', [-2.0784735679626465, -0.07888974994421005], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Co', [-1.703473687171936, -4.306736946105957], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Being better', [-3.8284735679626465, -3.370777130126953], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Self-', [-3.9534735679626465, -0.14760728180408478], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Betterment', [-4.3284735679626465, -2.063276767730713], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Enjoying', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Fighting well'}

Key: 122198653356206234434244673865354792132
Value: {'question': 'In which state was Charles Schulz born?', 'responses': [('Ohio', [-2.0131895542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virginia', [-3.8413145542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-1.1694395542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-2.8100645542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-1.1694395542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-1.1694395542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-3.5444395542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-2.8100645542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iowa', [-2.8881895542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-1.1694395542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ohio', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Minnesota'}

Key: 338613061531723216179057620367084413268
Value: {'question': '"Who wrote, ""What is this life if full of care, We have no time to stand and stare?"""', 'responses': [('Robert Herrick', [-3.0789709091186523, -1.9671275615692139], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Yeats', [-5.078970909118652, -0.05488219112157822], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('William Wordsworth', [-0.3289709985256195, -0.7247658967971802], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('William Wordsworth', [-0.3289709985256195, -0.7247658967971802], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('E.', [-4.922720909118652, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('William Butler', [-0.3289709985256195, -1.7560158967971802], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('William Morris', [-0.3289709985256195, -4.162265777587891], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('William Blake', [-0.3289709985256195, -1.8653908967971802], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Edwin Hubble', [-3.9539709091186523, -4.1287946701049805], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('W.', [-2.8289709091186523, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert Herrick', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'W H Davies'}

Key: 40516185208434270662182022415134392972
Value: {'question': 'In which decade was Charles Schulz born?', 'responses': [('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The 1920', [-2.929882287979126, -0.03421409800648689, -0.11282224208116531, 0.0, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1922', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1930s'}

Key: 182738438937466943671076140354946281774
Value: {'question': 'In what year was Oliver Stone born?', 'responses': [('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1946', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1946'}

Key: 148096088184709529121250936179422321136
Value: {'question': "What is Axl Rose's real name?", 'responses': [('William Bruce Rose', [-0.12692804634571075, -0.30872371792793274, -0.25217103958129883, -0.1775428205728531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [-0.12692804634571075, -0.30872371792793274, -0.25217103958129883, -0.1775428205728531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [-0.12692804634571075, -0.30872371792793274, -0.25217103958129883, -0.1775428205728531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [-0.12692804634571075, -0.30872371792793274, -0.25217103958129883, -0.1775428205728531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Wilkerson', [-0.12692804634571075, -0.30872371792793274, -2.611546039581299, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Wilkerson', [-0.12692804634571075, -0.30872371792793274, -2.611546039581299, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Wilkerson', [-0.12692804634571075, -0.30872371792793274, -2.611546039581299, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('WIll.i', [-2.1269280910491943, -1.1402592658996582, -2.1795530319213867, -0.9067003130912781], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [-0.12692804634571075, -0.30872371792793274, -0.25217103958129883, -0.1775428205728531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Welch', [-0.12692804634571075, -0.30872371792793274, -4.939671039581299, -0.17443719506263733], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'William Bruce Rose', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'William Bailey'}

Key: 326790128592703342928678224758863951639
Value: {'question': 'What disability did singer Al Hibbler have?', 'responses': [('Blindness', [-2.245337963104248, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Hibbler', [-2.120337963104248, -0.14675047993659973, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was blind', [-1.120337963104248, -0.40272533893585205, -1.055004596710205], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He had one', [-1.120337963104248, -1.652725338935852, -2.5377037525177], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spina Bif', [-4.745337963104248, -0.9356344938278198, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('he was born', [-3.370337963104248, -0.3926753103733063, -2.445962429046631], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was born', [-1.120337963104248, -0.40272533893585205, -2.305004596710205], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He lost an', [-1.120337963104248, -2.7777252197265625, -2.7799177169799805], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('he was blind', [-3.370337963104248, -0.3926753103733063, -0.9459625482559204], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was born', [-1.120337963104248, -0.40272533893585205, -2.305004596710205], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Blindness', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'He was blind'}

Key: 194110398842607821572025177204660611877
Value: {'question': '"Which writer said, "" An atheist is a man who has no invisible means of support?"""', 'responses': [('H.', [-2.48756742477417, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-1.9875673055648804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-1.9875673055648804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Voltaire', [-2.23756742477417, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('G.', [-2.86256742477417, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ambrose Bier', [-3.98756742477417, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-1.9875673055648804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Voltaire', [-2.23756742477417, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Voltaire', [-2.23756742477417, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C.', [-3.98756742477417, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'H.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'John Buchan'}

Key: 88814033403828465235509704196191027271
Value: {'question': 'Which country does the airline Ansett come from?', 'responses': [('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Australia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Australia'}

Key: 80155366273318938326794963246910030417
Value: {'question': "Where is New York's Empire State College located?", 'responses': [('In Albany', [-2.4790244102478027, -1.5543630123138428], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('It is', [-4.479024410247803, -0.3983074128627777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Manhattan', [-2.4790244102478027, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bronx', [-4.479024410247803, -0.3865095376968384], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buffalo,', [-3.9790244102478027, -0.5706259608268738], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.4790244102478027, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albany,', [-1.6040244102478027, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albany,', [-1.6040244102478027, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Purchase,', [-3.8540244102478027, -0.09492291510105133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.4790244102478027, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'In Albany', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Saratoga Springs'}

Key: 127381100577386363177225480136719250130
Value: {'question': 'Spear of the Nation was an armed wing of which group?', 'responses': [('NCO', [-4.962677955627441, -2.463721990585327, -0.8800430297851562], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Black Panthers', [-2.4626779556274414, -0.4168764352798462, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Black Panthers', [-2.4626779556274414, -0.4168764352798462, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natsons', [-4.962677955627441, -3.338721990585327, -3.4669151306152344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('SDS (Students', [-4.962677955627441, -2.929882287979126, -0.3874903619289398], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('British Union of', [-4.212677955627441, -0.4953281879425049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The British Union', [-1.712678074836731, -4.3777241706848145, -0.6730260252952576], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Black Panthers', [-2.4626779556274414, -0.4168764352798462, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nazi Party', [-4.462677955627441, -0.4295884072780609, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('American Indians', [-3.0876779556274414, -1.9780559539794922, -0.07045131176710129], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'NCO', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'ANC'}

Key: 224812378216949517283439716760912399137
Value: {'question': 'Where in Italy did a US military aircraft slice through the steel wire of a cable car in 1998?', 'responses': [('Bologna', [-3.792738914489746, -0.04858732968568802], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Pisa', [-3.417738914489746, -0.11409559100866318], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Venice', [-2.417738914489746, -0.07888974994421005], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A cable', [-4.042738914489746, -1.884954571723938], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A cruise', [-4.042738914489746, -4.759954452514648], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Spole', [-4.292738914489746, -1.8403908014297485], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('S.', [-4.292738914489746, -3.215390682220459], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Milan', [-1.917738914489746, -0.06196761503815651], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Venice', [-2.417738914489746, -0.07888974994421005], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Milan', [-1.917738914489746, -0.06196761503815651], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bologna', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Cavalese'}

Key: 179107895711269720461807915593659596417
Value: {'question': 'What star sign is shared by Meatloaf and Luciano Pavarotti?', 'responses': [('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Libra', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Libra'}

Key: 288367942961643881465726120092568230009
Value: {'question': 'Where was Pablo Casals buried before he was finally laid to rest in Spain?', 'responses': [('New York', [-2.0351500511169434, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His final', [-3.4101500511169434, -3.6483848094940186], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.6601500511169434, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The U', [-2.5351500511169434, -2.3002524375915527], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('in the', [-3.2851500511169434, -1.193462610244751], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Bronx', [-4.660150051116943, -2.289273977279663], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Massachusetts', [-4.410150051116943, -0.34538009762763977], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Massachusetts', [-4.410150051116943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The United', [-2.5351500511169434, -0.9252524971961975], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.0351500511169434, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'New York', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Puerto Rico'}

Key: 179756318009511142507628572961364908440
Value: {'question': 'According to Dateline figures, the highest percentage of male clients are in which profession?', 'responses': [('Police', [-2.824723243713379, -0.8372253179550171], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CEO,', [-4.699723243713379, -3.6369895935058594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lawyers', [-1.6997231245040894, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Real Estate', [-3.449723243713379, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Firefighters', [-4.324723243713379, -1.041258692741394], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dentists', [-4.199723243713379, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lawyers', [-1.6997231245040894, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lawyers', [-1.6997231245040894, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Professional athletes', [-4.199723243713379, -0.916770875453949], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Law', [-2.699723243713379, -0.6079159379005432], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Police', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Accountancy'}

Key: 279979582935656760007246914605323215224
Value: {'question': 'Santander international airport is in which country?', 'responses': [('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Spain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Spain'}

Key: 79974073255878754178828429521012675763
Value: {'question': 'In which year was Nigel Mansell Indy Car Champion?', 'responses': [('1989', [0.0, 0.0, 0.0, -0.8981232643127441, -1.0598478317260742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1991', [0.0, 0.0, 0.0, -0.5231232643127441, -1.8003113269805908, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1992', [0.0, 0.0, 0.0, -0.5231232643127441, -0.6753113865852356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1987', [0.0, 0.0, 0.0, -0.8981232643127441, -1.1848478317260742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1992', [0.0, 0.0, 0.0, -0.5231232643127441, -0.6753113865852356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1992', [0.0, 0.0, 0.0, -0.5231232643127441, -0.6753113865852356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1993', [0.0, 0.0, 0.0, -0.5231232643127441, -1.5503113269805908, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1992', [0.0, 0.0, 0.0, -0.5231232643127441, -0.6753113865852356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1992', [0.0, 0.0, 0.0, -0.5231232643127441, -0.6753113865852356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1993', [0.0, 0.0, 0.0, -0.5231232643127441, -1.5503113269805908, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1989', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': '1993'}

Key: 4702651428855226319458067758043103616
Value: {'question': 'Thomas Marshal was Vice President to which US President?', 'responses': [('John Adams', [-1.0278716087341309, -0.9178922176361084, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Abraham Lincoln', [-3.652871608734131, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Buchanan', [-3.402871608734131, -1.5863213539123535, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John F.', [-1.0278716087341309, -1.6678922176361084, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Jackson', [-2.027871608734131, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rutherford B.', [-3.652871608734131, -0.11282224208116531, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grover Cleveland', [-4.527871608734131, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George H.', [-3.152871608734131, -1.9747536182403564, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Franklin D.', [-3.652871608734131, -0.7098507881164551, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Millard Fillmore', [-4.152871608734131, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Adams', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Woodrow Wilson'}

Key: 232861013281196204453792394444385469419
Value: {'question': 'Which year was the first after 1927 that the USA lost the Ryder Cup on home soil?', 'responses': [('1999', [0.0, -0.14267508685588837, 0.0, -0.8990267515182495, -1.2603363990783691, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1929', [0.0, -0.14267508685588837, 0.0, -2.149026870727539, -0.8619948029518127, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1997', [0.0, -0.14267508685588837, 0.0, -0.8990267515182495, -2.260336399078369, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1989', [0.0, -0.14267508685588837, 0.0, -1.2740267515182495, -1.1451663970947266, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1989', [0.0, -0.14267508685588837, 0.0, -1.2740267515182495, -1.1451663970947266, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1989', [0.0, -0.14267508685588837, 0.0, -1.2740267515182495, -1.1451663970947266, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1999', [0.0, -0.14267508685588837, 0.0, -0.8990267515182495, -1.2603363990783691, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1983', [0.0, -0.14267508685588837, 0.0, -1.2740267515182495, -1.7701663970947266, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1989', [0.0, -0.14267508685588837, 0.0, -1.2740267515182495, -1.1451663970947266, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1993', [0.0, -0.14267508685588837, 0.0, -0.8990267515182495, -1.2603363990783691, -0.06820624321699142], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1999', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': '1987'}

Key: 206874134562640033879086795966563508343
Value: {'question': 'Ellen Church is recognized as being the first female what?', 'responses': [('astronaut to', [-3.561795234680176, -3.5285849571228027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doctor of', [-3.436795234680176, -1.933110237121582], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pilot', [-3.311795234680176, -0.3032362163066864], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('professional golfer', [-3.186795234680176, -1.7588731050491333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fireman', [-2.686795234680176, -1.3050719499588013], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Architect', [-4.686795234680176, -0.21585164964199066], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surgeon', [-3.436795234680176, -0.341444730758667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surgeon in', [-3.436795234680176, -2.466444730758667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Professional Gol', [-3.311795234680176, -3.0999505519866943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baseball Player', [-3.686795234680176, -2.1688570976257324], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'astronaut to', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Air Hostess'}

Key: 294255499588660911297806806987036370470
Value: {'question': 'Which country does the airline Avensa come from?', 'responses': [('Sweden', [-4.73356819152832, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.6085680723190308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.6085680723190308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-1.2335680723190308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-4.73356819152832, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dominican Republic', [-4.23356819152832, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-1.2335680723190308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.6085680723190308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ecuador', [-3.4835681915283203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.6085680723190308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sweden', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Venezuela'}

Key: 98367182678807292798741336081368154220
Value: {'question': "What was the USA's biggest attack of the Vietnam War when it took place in February 1967?", 'responses': [('Tet Offensive', [-0.9966657161712646, -0.08893945813179016, -0.042999111115932465], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Battle of', [-1.8716657161712646, -2.462841033935547, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('the Easter Offensive', [-3.7466657161712646, -4.730720043182373, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tet Offensive', [-0.9966657161712646, -0.08893945813179016, -0.042999111115932465], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Khe Sanh', [-3.8716657161712646, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tet Offensive', [-0.9966657161712646, -0.08893945813179016, -0.042999111115932465], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A: The', [-4.496665954589844, -3.060351610183716, -1.769195318222046], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Operation Cedar Falls', [-1.7466657161712646, -2.978921890258789, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tet Offensive', [-0.9966657161712646, -0.08893945813179016, -0.042999111115932465], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Khe Sanh', [-3.8716657161712646, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tet Offensive', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Operation Junction City'}

Key: 152236925587542896734317026329795781446
Value: {'question': "What was Michael Keaton's first movie?", 'responses': [('Night Shift', [-0.6637008786201477, 0.0, -0.19043122231960297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.6637008786201477, 0.0, -0.19043122231960297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peeper', [-4.749638557434082, -2.845858335494995, -0.21325625479221344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.6637008786201477, 0.0, -0.19043122231960297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.6637008786201477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.6637008786201477, 0.0, -0.19043122231960297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The paper boy', [-1.835575819015503, -3.440190076828003, -2.732966899871826], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Paper Chase', [-1.835575819015503, -2.207768201828003, -0.20718736946582794], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Night Shift', [-1.960575819015503, -0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.6637008786201477, 0.0, -0.19043122231960297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Night Shift', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Night Shift'}

Key: 221890514532704585195938169608646909635
Value: {'question': "What is Uma Thurman's middle name?", 'responses': [('Katherine', [-3.97029447555542, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Letizia', [-2.28279447555542, -0.7281537652015686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leela', [-2.28279447555542, -2.618778705596924], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeanine', [-4.22029447555542, -2.529172897338867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aime', [-3.59529447555542, -4.937188148498535], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret', [-3.78279447555542, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mavis', [-4.22029447555542, -1.932335376739502], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maria', [-3.78279447555542, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lee', [-3.78279447555542, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Simone', [-4.53279447555542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Katherine', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Karuna'}

Key: 35476941957340041085050290222235843276
Value: {'question': 'Which liner launched in 1934 was the largest of her time?', 'responses': [('Queen Mary', [-0.5833704471588135, -0.22541262209415436, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Queen Elizabeth', [-2.2083704471588135, -0.3298283815383911, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Mary', [-0.5833704471588135, -0.22541262209415436, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Queen Mary', [-2.2083704471588135, -0.3298283815383911, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Elizabeth', [-0.5833704471588135, -1.6004126071929932, -0.38004744052886963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Elizabeth', [-0.5833704471588135, -1.6004126071929932, -0.38004744052886963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Mary', [-0.5833704471588135, -0.22541262209415436, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Queen Elizabeth', [-2.2083704471588135, -0.3298283815383911, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Mary', [-0.5833704471588135, -0.22541262209415436, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Mary', [-0.5833704471588135, -0.22541262209415436, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Queen Mary', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'Queen Mary'}

Key: 237258070974547432667437290565435978421
Value: {'question': "What was the name of NASA's manned space project whose astronauts were chosen in 1959?", 'responses': [('Gemini', [-1.3866429328918457, -0.3322162628173828], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Project Mercury', [-1.2616429328918457, -0.11967968195676804], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mercury Seven', [-0.7616428732872009, -3.508408546447754], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mercury', [-0.7616428732872009, -0.2584085762500763], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Project Mercury', [-1.2616429328918457, -0.11967968195676804], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mercury', [-0.7616428732872009, -0.2584085762500763], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Gemini', [-1.3866429328918457, -0.3322162628173828], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mercury Project', [-0.7616428732872009, -2.883408546447754], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Project Mercury', [-1.2616429328918457, -0.11967968195676804], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mercury', [-0.7616428732872009, -0.2584085762500763], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gemini', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Project Mercury'}

Key: 82678587731806814010819305671138695619
Value: {'question': 'In which country was Anjelica Huston born?', 'responses': [('United States', [-1.9416694641113281, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-4.441669464111328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-1.8166694641113281, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-1.8166694641113281, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-3.441669464111328, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.5666694641113281, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.5666694641113281, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-3.066669464111328, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('U.', [-3.941669464111328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-4.691669464111328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'United States', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Ireland'}

Key: 124260990177341235496889431083083897600
Value: {'question': 'Who wrote the novel Delta Connection?', 'responses': [('John Grisham', [-1.7677116394042969, -0.6443418264389038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Clancy', [-3.017711639404297, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert B.', [-2.767711639404297, -3.333466053009033, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Hia', [-4.642711639404297, -0.4022029936313629, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Clancy', [-3.017711639404297, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Ford', [-3.517711639404297, -2.0873961448669434, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Kennedy', [-3.517711639404297, -2.3276047706604004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Sandford', [-1.7677116394042969, -2.9568419456481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Peter Blat', [-3.517711639404297, -3.4526047706604004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Higgins', [-3.767711639404297, -0.21577969193458557, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Grisham', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Hammond Innes'}

Key: 265924860364727688643032453922686888013
Value: {'question': 'In the 70s George Lee was a world champion in which sport?', 'responses': [('boxing', [-2.7800841331481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-1.1550841331481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-1.1550841331481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-1.1550841331481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Weight lifting', [-3.5300841331481934, -2.3662097454071045], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wrestling', [-2.5300841331481934, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Swimming', [-3.9050841331481934, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-1.1550841331481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('boxing', [-2.7800841331481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diving', [-4.655084133148193, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'boxing', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Gliding'}

Key: 268222498102407144939205649296948911944
Value: {'question': 'Who preceded Hosni Mubarak as President of Egypt?', 'responses': [('Anwar Sadat', [-0.21724200248718262, -0.25453370809555054, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.21724200248718262, -0.25453370809555054, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-2.3422420024871826, -0.08377019315958023, -0.23968873918056488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.21724200248718262, -0.25453370809555054, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar al-Sad', [-0.21724200248718262, -2.8795337677001953, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-2.3422420024871826, -0.08377019315958023, -0.23968873918056488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.21724200248718262, -0.25453370809555054, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.21724200248718262, -0.25453370809555054, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar el Sadat', [-0.21724200248718262, -2.2545337677001953, -1.5019290447235107, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.21724200248718262, -0.25453370809555054, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Anwar Sadat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Anwar El-Sadat'}

Key: 196134602360483132967352780905596711332
Value: {'question': 'What instrument is associated with Illinois-born John Lewis?', 'responses': [('Violin', [-2.686469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuba', [-3.686469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('harmonica', [-3.061469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saxophone', [-2.311469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Banjo', [-2.561469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Piano', [-2.061469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trumpet', [-1.9364696741104126, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Piano', [-2.061469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cello', [-4.186469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Banjo', [-2.561469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Violin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Piano'}

Key: 159078860897131170897912649699703862635
Value: {'question': 'What type of aid was developed my Miller Hutchinson in the early years of the 20th century?', 'responses': [('Insulin', [-2.22052001953125, -0.08783937245607376], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('insulin', [-3.59552001953125, -0.19256643950939178], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('A motorized', [-3.34552001953125, -4.7197160720825195], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The hot', [-1.72052001953125, -4.372659683227539], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"The', [-4.59552001953125, -1.311637282371521], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Insulin', [-2.22052001953125, -0.08783937245607376], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Milk substitute', [-3.34552001953125, -4.775315284729004], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('a portable', [-4.59552001953125, -2.298520803451538], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('A.', [-3.34552001953125, -3.3447158336639404], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Oxygen', [-2.97052001953125, -1.2737621068954468], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Insulin', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811906, 'reference': 'Hearing Aid'}

Key: 307851238542101931599530145732638197308
Value: {'question': '"Who said, ""My whole life has been one of rejection. Women. Dogs. Comic strips."""', 'responses': [('George Burns', [-2.5323805809020996, -0.496669739484787, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Gene Wilder', [-4.5323805809021, -0.5903438925743103], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Red Hot', [-4.0323805809021, -4.436835289001465, -2.6780447959899902], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bill Murray', [-3.0323805809020996, -1.0336720943450928, -0.07151508331298828], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Walt Disney', [-2.6573805809020996, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('P.G', [-4.5323805809021, -0.6325989961624146, -0.6396673321723938], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Charlie Brown', [-3.5323805809020996, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Jerry Seinfeld', [-3.1573805809020996, -0.8372902274131775, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Walt Kelly,', [-2.6573805809020996, -0.6931471824645996, -2.300525665283203], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Stan Lee', [-3.4073805809020996, -0.3951761722564697, -0.06993623077869415], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George Burns', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Charles Schulz'}

Key: 290066546548647106909862790481745839219
Value: {'question': 'John Singer Sargent worked in which branch of the arts?', 'responses': [('Painting', [-0.5429432988166809, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.5429432988166809, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.5429432988166809, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('painting', [-1.6679432392120361, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painter', [-3.417943239212036, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.5429432988166809, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.5429432988166809, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('painting', [-1.6679432392120361, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oil Painting', [-3.542943239212036, -1.197556734085083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('painting', [-1.6679432392120361, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Painting', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Painting'}

Key: 288074179395323601639927433601895660754
Value: {'question': 'Cuscatlan international airport is in which country?', 'responses': [('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'El Salvador', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'El Salvador'}

Key: 171900842470072161729775133695082264500
Value: {'question': 'Who was Pope for the shortest length of time in the 20th century?', 'responses': [('Pope Pius', [-1.4494657516479492, -1.637721061706543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Benedict', [-3.324465751647949, -3.226675033569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo XIII', [-3.824465751647949, -0.12053969502449036], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John XXIII', [-0.8244656920433044, -2.4639394283294678], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Paul', [-0.8244656920433044, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pius XII', [-2.574465751647949, -0.31646811962127686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pious', [-4.824465751647949, -0.7571790218353271], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Paul', [-0.8244656920433044, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Paul', [-0.8244656920433044, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul VI', [-2.199465751647949, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pope Pius', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816237, 'reference': 'John Paul I'}

Key: 132462669459840330187021531713365647946
Value: {'question': "What was Gene Kelly's middle name?", 'responses': [('Louis', [-2.2134106159210205, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Francis', [-3.0259106159210205, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Le Blanc', [-3.6509106159210205, -1.6651556491851807], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert', [-3.3384106159210205, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly', [-3.7134106159210205, -0.05551977828145027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-4.525910377502441, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph', [-1.7759106159210205, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph', [-1.7759106159210205, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph', [-1.7759106159210205, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-3.2759106159210205, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Louis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Curran'}

Key: 311639562193110474642817049589052948057
Value: {'question': 'What was the profession of William Eugene Smith?', 'responses': [('He was', [-2.3955564498901367, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('photojournalist', [-3.6455564498901367, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('photojournalist', [-3.6455564498901367, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('photographer', [-2.2705564498901367, -0.11058321595191956], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.7705565094947815, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photo journalist', [-2.2705564498901367, -2.6477272510528564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('photographer', [-2.2705564498901367, -0.11058321595191956], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer.', [-0.7705565094947815, -3.32468843460083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Genetici', [-5.020556449890137, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.7705565094947815, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'He was', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Photographer'}

Key: 17618108878313622845203590258290222405
Value: {'question': 'Which country does the airline Pluna come form?', 'responses': [('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peru', [-3.769547700881958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-3.644547700881958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uruguay', [-2.394547700881958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Argentina', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Uruguay'}

Key: 201626797463778288844465772289575099014
Value: {'question': 'Who directed A Passage To India?', 'responses': [('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Lean', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'David Lean'}

Key: 139569287102954419832356661336159618606
Value: {'question': "What is Gregory Peck's real first name?", 'responses': [('"Le', [-3.8404107093811035, -2.5037944316864014], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-2.9810357093811035, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George', [-1.871660590171814, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George', [-1.871660590171814, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George', [-1.871660590171814, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harve', [-3.2779107093811035, -4.494687080383301], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Le', [-3.8404107093811035, -2.5037944316864014], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jonathan', [-4.7154107093811035, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George', [-1.871660590171814, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harrison', [-2.4654107093811035, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"Le', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Eldred'}

Key: 162018681089579160483307994706050259994
Value: {'question': 'Golfer Bobby Jones was born in which state?', 'responses': [('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Carolina', [-4.362300395965576, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [-4.487300395965576, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Georgia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Georgia'}

Key: 26700230961085068997014200729846470904
Value: {'question': "What was the world's first atomic-powered ship called?", 'responses': [('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Nautilus', [-2.205671548843384, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nautilus', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Lenin'}

Key: 231966425157872201535229128918966973598
Value: {'question': 'Which soap boasted a cafe called the Hot Biscuit?', 'responses': [('One-', [-3.5923585891723633, -4.521141529083252], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Young', [-1.5923585891723633, -1.0951614379882812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lifebu', [-4.717358589172363, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('All three', [-1.8423585891723633, -1.6940839290618896], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Days of', [-3.0923585891723633, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coronation Street', [-3.3423585891723633, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('All', [-1.8423585891723633, -1.5065839290618896], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Day', [-4.092358589172363, -3.882673501968384], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As the', [-2.8423585891723633, -0.20745758712291718], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Days of', [-3.0923585891723633, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'One-', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Dallas'}

Key: 222845490348177567908780836878781808889
Value: {'question': 'Which architect designed the Seagram Building, New York City?', 'responses': [('Ludwig Mies van der', [-1.282287359237671, 0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mies van der Ro', [-0.6260372996330261, -0.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mies van der Ro', [-0.6260372996330261, -0.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mies van der Ro', [-0.6260372996330261, -0.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Le Corbusier', [-3.501037359237671, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ludwig Mies Van der', [-1.282287359237671, 0.0, -1.8047446012496948, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mies van der Ro', [-0.6260372996330261, -0.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mies van der Ro', [-0.6260372996330261, -0.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ludwig Mies van der', [-1.282287359237671, 0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Le Corbusier', [-3.501037359237671, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ludwig Mies van der', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Philip Johnson'}

Key: 133415777412843876455131661572149103340
Value: {'question': 'Which gossip columnist was born in the same day as Sir Alexander Fleming who discovered penicillin?', 'responses': [('Richard Dimble', [-2.2262415885925293, -2.383030414581299, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jean Patchett', [-4.601241588592529, -1.903221607208252, -0.044334154576063156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judith Jamison', [-4.132491588592529, -1.5278064012527466, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz Smith', [-0.9137415885925293, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Eden', [-2.2262415885925293, -2.398655414581299, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz Smith', [-0.9137415885925293, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Dawson', [-2.2262415885925293, -4.683811664581299, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Mitford', [-3.2262415885925293, -1.4712965488433838, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Winchell', [-4.476241588592529, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A: Sue', [-4.413741588592529, -0.4769527316093445, -4.225733280181885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Richard Dimble', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Louella Parsons'}

Key: 206048988084187081166961380959641954550
Value: {'question': "In what year was the first performance of Copland's ballet Rodeo?", 'responses': [('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1935', [0.0, 0.0, 0.0, -1.7014133930206299, -1.0669574737548828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1942', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': '1942'}

Key: 40243996919479275282745825598398755699
Value: {'question': 'Ferihegy international airport is in which country?', 'responses': [('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hungary', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Hungary'}

Key: 28498979740954328694639780805553282835
Value: {'question': 'Who was the defending champion when Virginia Wade won the Wimbledon singles?', 'responses': [('Billie Jean King', [-1.198784351348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-1.073784351348877, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Evonne Goo', [-3.761284351348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martina Navrat', [-3.323784351348877, -0.12442267686128616, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-1.073784351348877, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ann-Margaret', [-3.573784351348877, -2.0202043056488037, -0.5591806769371033], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chris Evert', [-1.948784351348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billie Jean King', [-1.198784351348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martina Navrat', [-3.323784351348877, -0.12442267686128616, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-1.073784351348877, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Billie Jean King', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Chris Evert'}

Key: 293734612520689255272682687730766392419
Value: {'question': 'Who is the youngest female tennis player to win the US Open?', 'responses': [('Mary Pierce', [-3.7401998043060303, -0.2935536205768585, -0.2117263674736023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18', [-2.5526998043060303, 0.0, -2.462268114089966], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-0.7401997447013855, 0.0, -0.1212046816945076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martina Hingis', [-2.8026998043060303, -0.1902991682291031, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-0.7401997447013855, 0.0, -0.1212046816945076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-0.7401997447013855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monica Seles', [-3.4276998043060303, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-0.7401997447013855, 0.0, -0.1212046816945076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams (', [-0.7401997447013855, 0.0, -2.7462046146392822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martina Navrat', [-2.8026998043060303, -1.752799153327942, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mary Pierce', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Tracey Austin'}

Key: 20675158005487116313140304369763255047
Value: {'question': "How many 'victories' did The Red Baron claim in aerial dogfights?", 'responses': [('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '80', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '80'}

Key: 321830251965098813327794683585653114734
Value: {'question': 'Which great guitarist had the first names Aaron Thibodaux?', 'responses': [('Hendrix', [-4.110656261444092, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eddie Van', [-3.235656261444092, -0.7494088411331177], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eric Clapton', [-2.360656261444092, -0.2830178737640381], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimi Hendrix', [-2.735656261444092, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aaron Neville', [-1.4856561422348022, -0.7009063959121704], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Lee', [-4.235656261444092, -1.8711750507354736], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeff Beck', [-4.485656261444092, -0.2345588654279709], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A)', [-4.360656261444092, -3.6073737144470215], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Ray', [-2.735656261444092, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aaron "', [-1.4856561422348022, -3.950906276702881], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hendrix', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'T-Bone Walker'}

Key: 79578698876076704977975493904880280024
Value: {'question': "Who first coined the term paradigm for all the factors that influence the scientist's research?", 'responses': [('Popper', [-2.8630971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Popper', [-2.8630971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.363097190856934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Werner', [-4.988097190856934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kuhn', [-2.3630971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter', [-3.7380971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Popper', [-2.8630971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Karl', [-2.1130971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Francis', [-3.6130971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael', [-4.488097190856934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Popper', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'TS Kuhn'}

Key: 36070154396712154643653036594315999644
Value: {'question': 'In which country was Sam Neill born?', 'responses': [('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-2.4880282878875732, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'New Zealand', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'N. Ireland'}

Key: 36622441507917707257721454485516711226
Value: {'question': "What was Dorothy Parker's maiden name?", 'responses': [('Goldmark', [-4.322338104248047, -0.7500564455986023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('McLa', [-4.322338104248047, -3.961155891418457], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hardie', [-4.197338104248047, -2.1740927696228027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Davis', [-4.072338104248047, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duns', [-2.822338342666626, -3.800976276397705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('De Witt', [-3.697338342666626, -2.104464530944824], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Parker', [-1.947338342666626, -0.02630021423101425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kulp', [-4.197338104248047, -2.6596198081970215], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blad', [-3.697338342666626, -4.601907730102539], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rosenbloom', [-3.822338342666626, -1.8311634063720703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Goldmark', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Rothschild'}

Key: 312589320640282127554878433659917910685
Value: {'question': 'In which month in 1997 was The Notorious B.I.G. gunned down?', 'responses': [('April', [-1.3366914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('March', [-0.3991914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('April', [-1.3366914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('April', [-1.3366914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('March', [-0.3991914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('April', [-1.3366914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('April', [-1.3366914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('April', [-1.3366914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('March', [-0.3991914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('March', [-0.3991914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'April', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'March'}

Key: 124774877716016870596617776307572335909
Value: {'question': 'What was the official occupation of Sir Anthony Blunt who was unmasked as a Soviet spy in 1979?', 'responses': [('Curator', [-2.832974910736084, -1.7761727571487427], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Curator', [-2.832974910736084, -1.7761727571487427], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A librarian', [-4.332974910736084, -3.5640625953674316], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Art historian', [-1.332974910736084, -0.7871275544166565], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Painter', [-2.707974910736084, -0.2580885887145996], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Art Historian', [-1.332974910736084, -0.6621275544166565], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('art historian', [-2.332974910736084, -0.07888974994421005], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Curator at', [-2.832974910736084, -1.7761727571487427], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Painter and', [-2.707974910736084, -2.2580885887145996], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('curator of', [-3.207974910736084, -0.4955616593360901], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Curator', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336676, 'reference': 'Art Historian'}

Key: 221494145827526289462458716220507483890
Value: {'question': 'Which famous name was accused f the abduction of Stompie Seipei?', 'responses': [('Swarts', [-3.094825029373169, -4.818841934204102, -0.43717172741889954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fanie Mo', [-4.40732479095459, -1.394748568534851, -3.527907371520996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andries Vis', [-4.03232479095459, 0.0, -2.868101119995117], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mo Shab', [-4.03232479095459, -1.7124168872833252, -1.036908745765686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snyman', [-3.094825029373169, -0.7524358630180359, -0.3304581940174103], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Zille', [-2.469825029373169, -1.0844812393188477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mosioua', [-4.03232479095459, -1.4702293872833252, -2.522334337234497], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('De Kler', [-3.344825029373169, -0.29686421155929565, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ferial B', [-4.40732479095459, -2.8947486877441406, -3.8735175132751465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reverend Fred West', [-3.094825029373169, -3.8875441551208496, -1.7320671081542969], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Swarts', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Winnie Mandela'}

Key: 106201516426833113297956256161784471258
Value: {'question': 'What was the highest rank Charles Lindbergh attained?', 'responses': [('Brigadier General', [-1.1599164009094238, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marshal,', [-3.534916400909424, -3.474168062210083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brig.', [-4.409916400909424, -0.24766086041927338], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brigadier General', [-1.1599164009094238, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brigadier General', [-1.1599164009094238, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brigadier General', [-1.1599164009094238, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brig', [-4.409916400909424, -3.3101608753204346], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marshall', [-5.034916400909424, -0.3176901638507843], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brigadier General', [-1.1599164009094238, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General', [-2.534916400909424, -0.544013261795044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Brigadier General', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Brigadier General'}

Key: 260342534036238364135277911986073399379
Value: {'question': 'Who was the second person to make a solo transatlantic flight?', 'responses': [('Charles Kingsford', [-0.4464392066001892, -1.8904298543930054, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-1.821439266204834, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindberg', [-0.4464392066001892, -3.421679973602295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-0.4464392066001892, -0.20292986929416656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-0.4464392066001892, -0.20292986929416656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindberg', [-0.4464392066001892, -3.421679973602295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-3.633939266204834, 0.0, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-3.633939266204834, 0.0, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-1.821439266204834, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-0.4464392066001892, -0.20292986929416656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charles Kingsford', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'Amelia Earhart'}

Key: 249093719641925845835948156585155931547
Value: {'question': 'Who became commanding general of the First Armored Corps in 1941?', 'responses': [('George S', [-0.3719708025455475, -0.5131808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Patton', [-0.3719708025455475, -1.1381808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas MacArthur', [-3.9969708919525146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George S', [-0.3719708025455475, -0.5131808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George S', [-0.3719708025455475, -0.5131808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Patton', [-0.3719708025455475, -1.1381808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George S', [-0.3719708025455475, -0.5131808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William H', [-4.6844706535339355, -2.2318029403686523], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George S', [-0.3719708025455475, -0.5131808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Patton', [-2.4969708919525146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George S', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'George Patton'}

Key: 249419115553623093756983007819816491547
Value: {'question': "Who was the third wife of the leader of China's Long March?", 'responses': [('Bo', [-3.0167031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang', [-1.3292031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dong', [-4.829203128814697], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang', [-1.3292031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zhu', [-3.4542031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang', [-1.3292031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zhu', [-3.4542031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang', [-1.3292031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.016703128814697], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang', [-1.3292031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Jiang Qing'}

Key: 132532817351745135020936454935011230836
Value: {'question': 'In 1985 Terry Waite returned to Beirut after securing the release of four British hostages where?', 'responses': [('Lebanon', [-1.8870110511779785, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('On foot', [-4.0120110511779785, -3.6427571773529053], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Terry Waite', [-3.2620110511779785, -0.03364565595984459], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Saudi Arabia', [-4.5120110511779785, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('in a', [-4.1370110511779785, -0.9697409868240356], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('By car', [-4.5120110511779785, -3.8975181579589844], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lebanon', [-1.8870110511779785, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Terry Waite', [-3.2620110511779785, -0.03364565595984459], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The airport', [-1.8870110511779785, -2.4553298950195312], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Syrian', [-1.8870110511779785, -4.705329895019531], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lebanon', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Libya'}

Key: 124102255095464627206439794718749384932
Value: {'question': 'Where did Ferdinand Marcos live in exile?', 'responses': [('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hawaii', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Hawaii'}

Key: 241716708195553408401475408183604654975
Value: {'question': 'Which American led a team to put 10 people on the summit of Everest in 1990?', 'responses': [('Eric Simonson', [-3.60577654838562, -0.9996805191040039, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Eric Simonson', [-3.60577654838562, -0.9996805191040039, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('George Mallory', [-1.7307765483856201, -0.41858309507369995, -0.08675938844680786], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Reinhold Messner', [-3.23077654838562, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Ed Viest', [-1.9807765483856201, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('George Leigh-', [-1.7307765483856201, -1.4498331546783447, -1.4143340587615967], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Ed Viest', [-1.9807765483856201, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Rob Hall', [-1.9182765483856201, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Rob Hall', [-1.9182765483856201, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Scott Fischer', [-2.73077654838562, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Eric Simonson', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'James Whittaker'}

Key: 218795540985323367096234144983786424140
Value: {'question': 'UN Secretary Dag Hammarskjold was killed over which country?', 'responses': [('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zaire', [-4.1918206214904785, -0.12379933148622513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zaire (', [-4.1918206214904785, -2.4987993240356445], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Congo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Congo'}

Key: 128915403974730318764757286641373842558
Value: {'question': 'What was the autobiography of the first president of non-Apartheid South Africa called?', 'responses': [('The Story of', [-1.6778326034545898, -2.5255463123321533, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Dream Deferred', [-1.9903326034545898, -3.2617552280426025, -0.4044163227081299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'In My", [-3.24033260345459, -3.4250173568725586, -0.5027875304222107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Long Walk', [-1.9903326034545898, -1.2383177280426025, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Long Walk', [-1.9903326034545898, -1.2383177280426025, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Gathering Storm', [-1.6778326034545898, -4.545077323913574, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Out of the', [-4.36533260345459, 0.0, -1.612511157989502], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The autobiography', [-1.9903326034545898, -1.0181013345718384, -3.177443504333496], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('My President', [-2.30283260345459, -3.2071704864501953, -0.516207754611969], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Life and', [-1.6778326034545898, -3.1661713123321533, -0.7340380549430847], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Story of', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Long Walk To Freedom'}

Key: 3776806781845316900668396464531678982
Value: {'question': 'Which terrorist group murdered Italian Prime Minister Aldo Moro?', 'responses': [('The Red Brig', [-1.6495778560638428, 0.0, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.399577796459198, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Red Brig', [-1.6495778560638428, 0.0, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.399577796459198, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Red Brig', [-1.6495778560638428, 0.0, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Red Brig', [-2.8995778560638428, -0.06196761503815651, -0.1902991682291031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.399577796459198, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.399577796459198, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigade', [-0.399577796459198, -1.6004126071929932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.399577796459198, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Red Brig', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Red Brigade'}

Key: 156389365689999926360140935408621548462
Value: {'question': 'General Boris Gromov was the last Soviet soldier to leave where in 1989?', 'responses': [('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Afghanistan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Afghanistan'}

Key: 191655695193997094037739397194130001083
Value: {'question': "Which politician's wife was acquitted in 1990 of defrauding US banks?", 'responses': [('Hillary Clinton', [-1.3235416412353516, -0.25192904472351074, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paula Jones', [-1.6360416412353516, 0.0, -0.12442604452371597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paula Jones', [-1.6360416412353516, 0.0, -0.12442604452371597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paula Jones', [-1.6360416412353516, 0.0, -0.12442604452371597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [-1.3235416412353516, -0.25192904472351074, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [-1.3235416412353516, -0.25192904472351074, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth Edwards', [-3.8860416412353516, -1.4927939176559448, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paula Jones', [-1.6360416412353516, 0.0, -0.12442604452371597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [-1.3235416412353516, -0.25192904472351074, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pat Buchanan', [-4.636041641235352, -0.9425654411315918, -0.2598815858364105], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hillary Clinton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.193549604098133, 'reference': 'Imelda Marcos'}

Key: 153641513820618293740328822374027395913
Value: {'question': 'In what year did Saddam Hussein become President of Iraq?', 'responses': [('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1979', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1979'}

Key: 302994331910760981268139265879348494673
Value: {'question': 'Who became chair of Joint Chiefs of Staff in 1989?', 'responses': [('Colin Powell', [-0.4016849994659424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Colin Powell', [-2.7766849994659424, -0.0658353641629219, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.4016849994659424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gen Colin Powell', [-2.2766849994659424, -1.6768909692764282, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.4016849994659424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Admiral William Crowe', [-3.8391849994659424, -0.5229871273040771, -0.883621096611023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Vessey', [-3.4016849994659424, -2.1182191371917725, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Colin Powell', [-2.7766849994659424, -0.0658353641629219, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.4016849994659424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.4016849994659424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Colin Powell', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Colin Powel'}

Key: 112336655863953727289151152239041489640
Value: {'question': 'Who became leader of the Bosnian Serbs in 1992?', 'responses': [('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Radovan Karadzic', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Radovan Karadzic'}

Key: 251615365013322300496785118359100654136
Value: {'question': 'Who was deputy commander of the 1983 US invasion of Grenada?', 'responses': [('George Bush', [-3.050632953643799, -0.4802963137626648, -0.3411121368408203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-1.6131329536437988, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard V.', [-2.613132953643799, -1.9189406633377075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver North', [-3.425632953643799, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Bush', [-3.050632953643799, -0.4802963137626648, -0.3411121368408203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Admiral James Stock', [-2.113132953643799, -2.286562442779541, -1.7821601629257202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norman Schwarzkopf', [-3.300632953643799, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Webster', [-2.238132953643799, -2.674563407897949, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Shinn', [-3.425632953643799, -2.8381993770599365, -3.405686378479004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William H.', [-2.238132953643799, -1.0183134078979492, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George Bush', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Norman Schwarzkopf'}

Key: 112621010749114873344690779061520400943
Value: {'question': "What was Mother Teresa's real first name?", 'responses': [('Anissa', [-2.6680572032928467, -3.718888282775879], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnieszka', [-3.4805572032928467, -2.511899948120117], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Anissa', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Agnes'}

Key: 278153753257599531809888903373395552443
Value: {'question': 'Which famous daughter was made chief designer at Chloe in 1997?', 'responses': [('Charlotte Tilbury', [-3.454979181289673, -2.549668550491333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Portman', [-3.892479181289673, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stella McCartney', [-0.8299791216850281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gwyneth Palt', [-4.736228942871094, -0.9983144998550415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stella McCartney', [-0.8299791216850281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eva Herzigo', [-2.798729181289673, -0.8098893165588379, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("L'W", [-4.626853942871094, -2.2150988578796387, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stella McCartney', [-0.8299791216850281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stella McCartney', [-0.8299791216850281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stella McCartney', [-0.8299791216850281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charlotte Tilbury', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Stella McCartney'}

Key: 110718371274451688667629004812406078422
Value: {'question': 'Which supermodel was married to Rod Stewart?', 'responses': [('Kelly Emberg', [-0.9484848380088806, -0.06669698655605316, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alana Stewart', [-0.8547348380088806, 0.0, -0.31528720259666443, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.9484848380088806, -0.06669698655605316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alana Stewart', [-0.8547348380088806, 0.0, -0.31528720259666443, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.9484848380088806, -0.06669698655605316, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.9484848380088806, -0.06669698655605316, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alana Hamilton', [-0.8547348380088806, 0.0, -1.5652872323989868, -0.08995520323514938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.9484848380088806, -0.06669698655605316, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brittny Hyland', [-3.2297348976135254, -0.8274034857749939, -3.655165195465088, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.9484848380088806, -0.06669698655605316, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kelly Emberg', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Rachel Hunter'}

Key: 42541121178534249598581172585996043635
Value: {'question': "Who was America's first world chess champion?", 'responses': [('Alexander Alekh', [-3.0468101501464844, -0.13210901618003845, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.9530602097511292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.9530602097511292, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.9530602097511292, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.9530602097511292, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Marshall', [-2.8593101501464844, -0.07428312301635742, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Benjamin Finegold', [-3.1405601501464844, -2.2958192825317383, -1.2192764282226562], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alexander Alekh', [-3.0468101501464844, -0.13210901618003845, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Morphy', [-2.7030601501464844, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.9530602097511292, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alexander Alekh', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Bobby Fischer'}

Key: 36754556358022080508633952530327595840
Value: {'question': 'Which Swiss-born Californian first used an amplifier with a guitar?', 'responses': [('Les Paul', [-0.2883586883544922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Les Paul', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Adolph Rickenbacker'}

Key: 55649484334040535808025618933499393668
Value: {'question': 'Who was chairman of the Watergate hearings?', 'responses': [('Senator Sam Er', [-0.5957830548286438, -0.12887169420719147, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Baker', [-3.470782995223999, -0.024726316332817078, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sen. Sam', [-2.470782995223999, 0.0, -0.07428312301635742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Er', [-0.5957830548286438, -0.12887169420719147, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sam Ervin', [-1.345782995223999, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Howard Baker', [-0.5957830548286438, -2.3788716793060303, -0.1388506442308426], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Er', [-0.5957830548286438, -0.12887169420719147, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Baker', [-3.470782995223999, -0.024726316332817078, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Er', [-0.5957830548286438, -0.12887169420719147, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Er', [-0.5957830548286438, -0.12887169420719147, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Senator Sam Er', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Sam Ervin'}

Key: 180448380045309061665862502836458131534
Value: {'question': "Who was credited with popularizing the term rock 'n' roll?", 'responses': [('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Haley', [-2.075748920440674, 0.0, -0.39069485664367676], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Haley', [-2.075748920440674, 0.0, -0.39069485664367676], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alan Freed', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Alan Freed'}

Key: 319998578712037567647451627927394052926
Value: {'question': "What were Gary Gilmore's final words before his execution in 1977?", 'responses': [('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it", [-3.197103261947632, 0.0, 0.0, -0.47014153003692627, 0.0, -0.680269718170166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it.", [-3.197103261947632, 0.0, 0.0, -0.47014153003692627, 0.0, -1.180269718170166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"Let\'s do it', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': "Let's do it"}

Key: 91263013124951831420564963122303849014
Value: {'question': 'In which country was Ivana Trump born and brought up?', 'responses': [('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The former', [-3.496915340423584, -1.3558602333068848], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Czechoslovakia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Czechoslovakia'}

Key: 85558074199962147582474503274110867743
Value: {'question': 'Who wrote the stage musical Cabaret?', 'responses': [('John Kander', [-1.6463130712509155, -0.5385206937789917, 0.0, -0.7669399976730347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0, -0.10243461281061172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0, -0.10243461281061172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0, -0.10243461281061172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0, -0.10243461281061172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Kander', [-1.6463130712509155, -0.5385206937789917, 0.0, -0.7669399976730347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0, -0.10243461281061172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0, -0.10243461281061172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kander and E', [-2.396312952041626, 0.0, -0.25192904472351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Kander', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Bob Fosse'}

Key: 114911040170031719467127176814513378046
Value: {'question': 'Flamenco dancer Joaquin Cortes hit the headlines in 1996 over his relationship with which supermodel?', 'responses': [('Cindy Crawford', [-3.1203813552856445, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.057881474494934, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.057881474494934, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Eva Herzigo', [-3.1828813552856445, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Naomi Campbell', [-0.9953814744949341, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Naomi Campbell', [-0.9953814744949341, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Naomi Campbell', [-0.9953814744949341, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.057881474494934, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.057881474494934, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Helena Christensen', [-3.6828813552856445, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Cindy Crawford', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Naomi Campbell'}

Key: 118403327119291304726338423794480953093
Value: {'question': 'Which Italian fashion designer was murdered on the orders of his ex-wife?', 'responses': [('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianfranco Fer', [-2.2763209342956543, -0.1435224711894989, -0.266189843416214], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gianni Versace', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Gucci'}

Key: 41386005276256069827578514489489948666
Value: {'question': 'How old was George Gershwin when he died?', 'responses': [('63', [0.0, -2.1821796894073486, -0.29959842562675476, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '63', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': '38'}

