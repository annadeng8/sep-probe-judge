<class 'dict'>
<<<<<<< HEAD
500
dict_keys(['192566765501753493345497975333407772913', '144826315316768374173692130587208321807', '318988216362178306401487701037247664573', '252491322485057417671863025229240060490', '300302960101875530025611370484339798872', '73942423953321228930194732700203702763', '127405269566050263240082980988971794064', '206865124014160866006334145581105887551', '276022737814801557236603657563903291530', '146041382781843151309943583842476878405', '45096472343826651446095107748312803118', '105450655671891765775490572252870768368', '16995382464582584603001219352329872199', '253645208191160918627550358624861503365', '306899696324794934554438398647872015297', '90802376553055510434825222912642764024', '163253315705630916128547411891325493364', '300332967360249423035223918083705385715', '184858692485181861109930880160209958960', '247779724035570137361318661217593455738', '233086516018861420173853199482489798024', '320893582517647281576262121316948748394', '135658736759552543974668859108798582601', '196856727008913026828772628800502836163', '178518457440810724135197632631752915438', '243961761631778784274803218701641692478', '41646431874729323981674074789947631340', '138619452816654392010171033279107778251', '68370943988147696545458075982090652448', '144517269965593658162921329947363271461', '302885358029123359633304891032815667654', '121614553431962287789970670737176338163', '276661339488905452418133643034404742666', '123824808440534981830277054767715858766', '43719036245228933814349708539677635651', '282165350712001499709903877059286765627', '160240484577993282159604066154906820320', '145732201166315032203165061438723890565', '4002544065385692370631602937620156105', '168006412715185156036821738494381204181', '255749630304793004609172428017250520357', '21853083108770756378834560008172198066', '98125762700425547512337024627292480172', '211834833514264067819618047124103821429', '68253144028380128918616534733933436531', '323563735345956029941176144195105218928', '333597564054129115162605069983064115255', '167610813939300460861054993907759624787', '320055430866320295958709776981664299747', '211958119303777843176176348207140663034', '196168567317702710612261720488645759670', '139566501576575618039115175274670282314', '322028746654654665756847932195004492378', '196985574513020705262105449380613604309', '10881289729456216200873296904560161752', '235876136254617275667572987595450556287', '25911169994715296157711298168308041513', '148252821328110070762037412177102348432', '235296375412834410324859687738575233732', '186550072179518908282014546151610400762', '260007600736825237725044267312891853119', '35664396824955691290957553979939168049', '339148907142639500979517450004500548231', '322237329832965163966007924447953526427', '30393751189916050532485451961784191288', '141527528992617758986938082421649661082', '13567368464897662334830381845358852501', '177998405774535793944990725760638330972', '264175855792719724671714833676858700599', '3669695212600559155447723462326271508', '153023692105618789346702632406289344096', '21824530588489607946399377907283853870', '27380348263737540923052007422421784519', '208799331739458533017705133176449996028', '242366912056136646150507630339397215678', '179346468034032003704523951025792443436', '238161062601069238420618588666373091125', '24417326290741017340790453872538106747', '16613882892830467806546304374288024567', '21781055362267300220747160657050769608', '309273492966215528970942131797154850720', '186123598465144826251467318872342578276', '335023223780136362376951443964298221404', '135113573813980774356105673568454822992', '198451490229312318176250709688118112954', '47406603659318375826783680606456994248', '241678550976756653580899220731445313393', '213216769864260958552302958462104687805', '156374179212552768350401489190454700275', '128057339182170355751883246785499552494', '96614960828336329336745350067670580350', '18100826639000837003152275054635383201', '46978202400019995803048513936387167406', '192425824554876041957222139665425232026', '83528968516445433453509617831911615884', '156104970120579737519646627577605740239', '68838839744752530396341501700714733790', '29378418603318134791438896766579904102', '87636550321878124806882135170994952130', '45563207209849371914229685966159771508', '265936098235039201803308785227704747102', '285930570199144441957972182976824804501', '8475934722060553222040500605260637358', '238843502758165140964368546019388873295', '334581350296120480367261421563983705765', '129907964634810605453053246002237295560', '111522334749473954153894703786029711775', '308452239157841251341747657848628630640', '300688691761695500776736798416786589757', '56462358204221785575671081393392641828', '264492954299989567625230528469723869397', '123031215552768465947489488321763433747', '70034138503071488307301302515512325491', '159076132732291635240524174499427090219', '291144255699344419357989041002854457781', '13854996707291025586055527354124847190', '168490295988734405249390154131935185029', '6776802769051769365953897353838604966', '123242803959710812315202709532554288982', '42833698102290676464874163448767640135', '295095979444912691559926912168029105931', '252033550515368521307117691557852573643', '310174766979311185253216366138103365715', '181774374650396046242406734049900143390', '331660614590016778135287642191726165628', '324820970302933751186028874494426228771', '130687210507135138158397592755308049218', '53274303663405083422116175541800204370', '250059352026955696053245304517372455893', '189672046327043991060952109915984920985', '233018890745564144579465153960735729748', '31781941835902499588679515450999201167', '234968202379226996441421362140775104446', '76545929122918191764793905510970574497', '173636007320763489677299490209460787318', '229170318474524719034067957991549861814', '93369735893925749978024214535270699686', '44056024413547951322767394569150314419', '81483122158632463877292180554803528640', '176684862188527662861425262290944169427', '168274180611813134957082784511671141146', '52723763469763288755377731346050960500', '43767945769929223522955726760482847946', '291271294390939978563718792459306252976', '32660404714146261594017691111433642169', '38745243617510227643125850154034057959', '217830041305300218403148931824146830234', '192141693044942637706426934830526506075', '81487294908951603256996264237055243450', '180318084724149222772728840765574049122', '181239352665575668831079258707160831262', '311057583501653341701886449639705592032', '214550783653833022571217369943323361592', '296535751176580299810137014679253839657', '100936852714345790077248097197540882670', '284630851124990253489091957857153631101', '1683011395530086565720315096853711022', '150083440388240843763314275937542066776', '81244332995537692179587915743895783266', '307530010586069259921202592019591083231', '17662878964593709817063920693736136015', '237872808202852723530784495625826864930', '152675490732111985212646801409407210227', '180498256462196551773436965902946247899', '39420177020957877944393328083549366158', '250902319081714487332886945583981914965', '124179341112811498960819783087715892391', '320222099055156391546097176572902011225', '232423417736115427988669265503815216208', '294927688423627277710155037956184964832', '213701650377957415909845329583462630559', '216197810693029640402091533550140169337', '206318651501085105639972272208241462796', '111897038798621056518831427631517755303', '147779174368667496048909218673937204395', '291970198749930624026268518020421452676', '215734200375757970156916895600656412142', '69473551309042707517281865305853677895', '198583945725721991674938870176852415309', '60991571921365122885230986129027391995', '112439347889379293097987252864404903518', '11680331785068515148456340105560861847', '261254170806543673861855075642184546795', '78497034924490418530805762271807404193', '299581464679262681850763517209068774618', '253715240938783311741038917831173056854', '208489583093401191465113517026624910295', '46647447193045795628323596244589048931', '10966074543901517477364732942015778808', '339149744893660285137218492256137297395', '218275342711631337856973563624839051277', '175365714901545549037744153837609809091', '207405623594446908613910160083214920906', '295721133551313037003218385038645841971', '153087901943400500082408407976902961664', '147580453735844122318139985719229352195', '230252488792271781604711703219630814128', '94472712112606296234129770326955987808', '107490582488842314494253911039828007872', '338491303436063744531418221079735244352', '291282290886535409978909703339803815873', '328447259032384053761863265516174750681', '233558502341880634634735511533470717872', '55263147172295123017909560426286568332', '237687854910576507567971273498027949574', '16202945781029922120160777797256517657', '123584650545463914068196490215293723253', '112512653525576048371295925030598196931', '45755384076082091870849779112089745287', '55494487028716034782981453564402901944', '87853895163434729299833218199025839501', '292684906998794697216328865562232074749', '195303369408133964774489111183950190455', '268402708432426830177707196375572718936', '80036803484421873569794968191345607563', '156845925365979044438433254302190351098', '43814329345678189933879252960679007558', '76846769095736674064929847593683346275', '315960496772872662530234073742748693691', '315933313220252838540973137195040072500', '322405567974317541848831685930586294097', '43606630774321893798265684732537957406', '70752152378013812315822982763783822665', '305108324243777914518778592783408768615', '283031692528067279999929630903321078117', '299951613067303540681201935228417999477', '71195401009200096103012987519539618692', '242428669277065383800244648522680264114', '4083821256679784276648544188586882958', '179500919441214507777366254358643215743', '106672582804728343686434178520485926656', '276056006835250280929354383841995492109', '297686009442561819588224118862021257564', '83340959084944608675596273728971843621', '187841829121333818463300276451201285999', '24985165128638620145160621829735847022', '142380867537269483316262219590494673257', '99726541484321600103649435140893656675', '152839722919546948976103852745059232497', '177223386861074003791905051369493153848', '228675833131199846721054374212830680327', '80212411259148466639955645343916635416', '153256292016964463443728984144206544304', '134829948687202818572589460385578331208', '244333762587516390385450239948625689676', '337522999038418189640469009530678824485', '104847848039824276425096391399031703872', '66993385727059141259201975501285124633', '74005814613361634380303201665114635117', '12146232797421686173302789665794077167', '292015171333082662839991725743703126216', '101448505624018060527723288489005141638', '222834287041971500716170819521959227536', '161800859772386730977746924386748438294', '317392834670341283338937660944642671091', '220114823797530422479613664235492973818', '296061616975693079742725890138030707089', '82380072878334709551789764190468102902', '31646887928656831682804429014150804823', '69166693196422708753888601844846509758', '81397792270458025916087351257338446815', '94778603903644324200835741443076382878', '52332608898712027033396783383356001165', '196864679396378089813647532371966589890', '109960501429823556753511885200987861139', '134029215028438592027055662214418344169', '11110009608968042593656899603872158858', '77506916900047788238958554595438049547', '252669435748910899623263754414312690896', '17045368034541867220548974201820633708', '167200520357687557394268844053969708623', '90647169565663770435649390074455838336', '214171447194455008324172539811036652175', '144446484166853296547792704745560379337', '322903503459104039778253693027568287887', '72110887102142614205440589573441924887', '296872415682283940678852136686230882255', '104146792580125066021016972289598001726', '88429078320492598381044410827950508049', '85286463986533970642614509758082100138', '88958774668608811073473067547267050289', '59693379031259720215479941060194179579', '311962492123096900289948659360878686863', '69173108873872114886616497958100476857', '121033822342009854936179535069547388125', '261947350263286873709591640621320515056', '288135975970724884702204693024559148054', '195664885257877191041129408973687882665', '174558705266526467237165414233895069150', '14889918131517653356417178535904509760', '187806677267255526399494688412642008595', '111331075781019898258115626082852126745', '146309341802822935535420821108889041446', '299840508447821089855369866240440724753', '6285281377900569448923298952423180194', '77865379524049111309272063660799097961', '6469076388733372854115999629787206983', '262307002069435293253338666165237699635', '154998781240909760849730960724170257860', '63601322601270515266656822792125783476', '145011758783578328989203926872722943800', '246120728694926540317017558027516956275', '225941412994868541563013298848715525610', '75396728442104296703947216153334871904', '58760419811873730114451738515348744826', '100153390631380258388116990866273230528', '39437776274176571007543378867113033501', '193922828259217390007194120027606505159', '250217648133966092798016996660493888130', '236776199463644069794603593839212480613', '185023696551027618739728991234467789199', '29698349225308754320918897774555060403', '113824320962058306970124055392943517183', '193556839092800788621042905204362648334', '202955777115811987280699418513788322856', '206956624581510942917270636149714907337', '250704740436419171438903828785577035864', '209521623797531935144211717584153494097', '174263786485275069263006587250021091571', '190219522625102596786086398618155153356', '204421269293614587598805783541708928077', '94881720502138050605234386150286378445', '146183214139809971300961889467848906483', '125221220887649825200727101574185473087', '62024499569425870685725457815635055178', '179160722281282151782102708865808211900', '155511134717832663689479930712972377722', '14745668222360339467712488372613992161', '251617701328195827460292184419158579844', '212775761963234218058773512393806725948', '40905379070197253418111629514092720277', '264093883578664907058924731295477895800', '307660029220089726176986829460726011041', '9845967260448918489962827911867810225', '313875409464007107671048909662043149050', '263364351530236104529878618221356339280', '131370138589744861108877479913920041808', '134823944242563590540537969890392563995', '104919144256012515767018783668691366367', '96233378685820066177191275564384480587', '125362217489750988104121721680772121615', '231849347051036993919710383258998616470', '212277403717066527502764818418537101893', '59091154192150993839033613441229543530', '160976786736071627638273556586770509819', '263171183636945526207966135033027933846', '186500353307380592323903339731287435565', '113337858649939442265671630985285610422', '122056861407679908085468613626097755985', '49149507427707804655075809432066385847', '60470791367772132573084208911304249826', '205289216442866536138187278701515307724', '330407022483926413160105664294134650049', '49352685196184792937678106306393922036', '113872322750394112454757816259262059079', '39170248099916900558289586686058872864', '229727392527608249897353591410444346570', '57562942092118846267439472803201849858', '331621212332039734995336435581409108222', '1580797465582322765419462436601517782', '268758124969872175167926290803148213661', '339903417967038959524902862720727815523', '251430741191328300808124836569128187120', '156993193520069748257208725735874595891', '301786368865695038725593009141202656879', '122725637288521254644216841310314437296', '146896398869692673297925107012236880676', '4216313867758261359858286331956722274', '24301856585106039922705646957603912112', '53493738472169836672569973090797325790', '103796998466908453438328071639281647336', '2598872478169432329643955533398354143', '243465557792269031725477188344184851905', '31154385772208322335914570337316954002', '267955960749948228661903725027690629845', '20315429774617782646624378592628173322', '304930938478382788720383996921358992904', '33280640827102717689957007688881802682', '274249608338242007964661802160466087296', '162856310908236233701211693920335344708', '254904469063646884659019138994202922335', '96245766234754081845274940633608643614', '237627328673549738776281532618222920236', '179027564765484031394933204870708983636', '128644870202509778169425799164530212377', '182828260099965194252017383877802339988', '60173673388890333035322288342789261387', '77531749597658564846103506982483162066', '326539575882893164728030538997132406953', '106593083475505750836729952728881582620', '210851585520982376468564665992688936844', '335464748566950050198478317646551808700', '197450559298194012679339395682072343849', '11764063432336950932290147533638348686', '230229352980133600316057024601341158341', '311195634190467684485689015458781618372', '248848692362025694205260992811040104034', '278178236903659359332998521751266861672', '8063326310999489857006450982497195180', '332535048030433131277634229561133705196', '120897105411395266991933240638091599007', '84285215038753726249545095547437641050', '122537270215681954247623527813271837955', '156438298418092728929811262073534774106', '19118866562102393806109529524355418438', '307518824175457082030858663647596463009', '149186725975161984472544802090937999789', '81328885281548666794110735425775135138', '176838896580123091534625122789634146552', '334408083050207523278510833473432068002', '319074744005416958627764075674726877142', '111828181098033545264522473987556850882', '52137381648763898586560821224474263500', '294962527403216860646916587605866786876', '122198653356206234434244673865354792132', '338613061531723216179057620367084413268', '40516185208434270662182022415134392972', '182738438937466943671076140354946281774', '148096088184709529121250936179422321136', '326790128592703342928678224758863951639', '194110398842607821572025177204660611877', '88814033403828465235509704196191027271', '80155366273318938326794963246910030417', '127381100577386363177225480136719250130', '224812378216949517283439716760912399137', '179107895711269720461807915593659596417', '288367942961643881465726120092568230009', '179756318009511142507628572961364908440', '279979582935656760007246914605323215224', '79974073255878754178828429521012675763', '4702651428855226319458067758043103616', '232861013281196204453792394444385469419', '206874134562640033879086795966563508343', '294255499588660911297806806987036370470', '98367182678807292798741336081368154220', '152236925587542896734317026329795781446', '221890514532704585195938169608646909635', '35476941957340041085050290222235843276', '237258070974547432667437290565435978421', '82678587731806814010819305671138695619', '124260990177341235496889431083083897600', '265924860364727688643032453922686888013', '268222498102407144939205649296948911944', '196134602360483132967352780905596711332', '159078860897131170897912649699703862635', '307851238542101931599530145732638197308', '290066546548647106909862790481745839219', '288074179395323601639927433601895660754', '171900842470072161729775133695082264500', '132462669459840330187021531713365647946', '311639562193110474642817049589052948057', '17618108878313622845203590258290222405', '201626797463778288844465772289575099014', '139569287102954419832356661336159618606', '162018681089579160483307994706050259994', '26700230961085068997014200729846470904', '231966425157872201535229128918966973598', '222845490348177567908780836878781808889', '133415777412843876455131661572149103340', '206048988084187081166961380959641954550', '40243996919479275282745825598398755699', '28498979740954328694639780805553282835', '293734612520689255272682687730766392419', '20675158005487116313140304369763255047', '321830251965098813327794683585653114734', '79578698876076704977975493904880280024', '36070154396712154643653036594315999644', '36622441507917707257721454485516711226', '312589320640282127554878433659917910685', '124774877716016870596617776307572335909', '221494145827526289462458716220507483890', '106201516426833113297956256161784471258', '260342534036238364135277911986073399379', '249093719641925845835948156585155931547', '249419115553623093756983007819816491547', '132532817351745135020936454935011230836', '124102255095464627206439794718749384932', '241716708195553408401475408183604654975', '218795540985323367096234144983786424140', '128915403974730318764757286641373842558', '3776806781845316900668396464531678982', '156389365689999926360140935408621548462', '191655695193997094037739397194130001083', '153641513820618293740328822374027395913', '302994331910760981268139265879348494673', '112336655863953727289151152239041489640', '251615365013322300496785118359100654136', '112621010749114873344690779061520400943', '278153753257599531809888903373395552443', '110718371274451688667629004812406078422', '42541121178534249598581172585996043635', '36754556358022080508633952530327595840', '55649484334040535808025618933499393668', '180448380045309061665862502836458131534', '319998578712037567647451627927394052926', '91263013124951831420564963122303849014', '85558074199962147582474503274110867743', '114911040170031719467127176814513378046', '118403327119291304726338423794480953093', '41386005276256069827578514489489948666'])
Key: 192566765501753493345497975333407772913
Value: {'question': 'Which American-born Sinclair won the Nobel Prize for Literature in 1930?', 'responses': [('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
1000
dict_keys(['192566765501753493345497975333407772913', '144826315316768374173692130587208321807', '318988216362178306401487701037247664573', '252491322485057417671863025229240060490', '300302960101875530025611370484339798872', '73942423953321228930194732700203702763', '127405269566050263240082980988971794064', '206865124014160866006334145581105887551', '276022737814801557236603657563903291530', '146041382781843151309943583842476878405', '45096472343826651446095107748312803118', '105450655671891765775490572252870768368', '16995382464582584603001219352329872199', '253645208191160918627550358624861503365', '306899696324794934554438398647872015297', '90802376553055510434825222912642764024', '163253315705630916128547411891325493364', '300332967360249423035223918083705385715', '184858692485181861109930880160209958960', '247779724035570137361318661217593455738', '233086516018861420173853199482489798024', '320893582517647281576262121316948748394', '135658736759552543974668859108798582601', '196856727008913026828772628800502836163', '178518457440810724135197632631752915438', '243961761631778784274803218701641692478', '41646431874729323981674074789947631340', '138619452816654392010171033279107778251', '68370943988147696545458075982090652448', '144517269965593658162921329947363271461', '302885358029123359633304891032815667654', '121614553431962287789970670737176338163', '276661339488905452418133643034404742666', '123824808440534981830277054767715858766', '43719036245228933814349708539677635651', '282165350712001499709903877059286765627', '160240484577993282159604066154906820320', '145732201166315032203165061438723890565', '4002544065385692370631602937620156105', '168006412715185156036821738494381204181', '255749630304793004609172428017250520357', '21853083108770756378834560008172198066', '98125762700425547512337024627292480172', '211834833514264067819618047124103821429', '68253144028380128918616534733933436531', '323563735345956029941176144195105218928', '333597564054129115162605069983064115255', '167610813939300460861054993907759624787', '320055430866320295958709776981664299747', '211958119303777843176176348207140663034', '196168567317702710612261720488645759670', '139566501576575618039115175274670282314', '322028746654654665756847932195004492378', '196985574513020705262105449380613604309', '10881289729456216200873296904560161752', '235876136254617275667572987595450556287', '25911169994715296157711298168308041513', '148252821328110070762037412177102348432', '235296375412834410324859687738575233732', '186550072179518908282014546151610400762', '260007600736825237725044267312891853119', '35664396824955691290957553979939168049', '339148907142639500979517450004500548231', '322237329832965163966007924447953526427', '30393751189916050532485451961784191288', '141527528992617758986938082421649661082', '13567368464897662334830381845358852501', '177998405774535793944990725760638330972', '264175855792719724671714833676858700599', '3669695212600559155447723462326271508', '153023692105618789346702632406289344096', '21824530588489607946399377907283853870', '27380348263737540923052007422421784519', '208799331739458533017705133176449996028', '242366912056136646150507630339397215678', '179346468034032003704523951025792443436', '238161062601069238420618588666373091125', '24417326290741017340790453872538106747', '16613882892830467806546304374288024567', '21781055362267300220747160657050769608', '309273492966215528970942131797154850720', '186123598465144826251467318872342578276', '335023223780136362376951443964298221404', '135113573813980774356105673568454822992', '198451490229312318176250709688118112954', '47406603659318375826783680606456994248', '241678550976756653580899220731445313393', '213216769864260958552302958462104687805', '156374179212552768350401489190454700275', '128057339182170355751883246785499552494', '96614960828336329336745350067670580350', '18100826639000837003152275054635383201', '46978202400019995803048513936387167406', '192425824554876041957222139665425232026', '83528968516445433453509617831911615884', '156104970120579737519646627577605740239', '68838839744752530396341501700714733790', '29378418603318134791438896766579904102', '87636550321878124806882135170994952130', '45563207209849371914229685966159771508', '265936098235039201803308785227704747102', '285930570199144441957972182976824804501', '8475934722060553222040500605260637358', '238843502758165140964368546019388873295', '334581350296120480367261421563983705765', '129907964634810605453053246002237295560', '111522334749473954153894703786029711775', '308452239157841251341747657848628630640', '300688691761695500776736798416786589757', '56462358204221785575671081393392641828', '264492954299989567625230528469723869397', '123031215552768465947489488321763433747', '70034138503071488307301302515512325491', '159076132732291635240524174499427090219', '291144255699344419357989041002854457781', '13854996707291025586055527354124847190', '168490295988734405249390154131935185029', '6776802769051769365953897353838604966', '123242803959710812315202709532554288982', '42833698102290676464874163448767640135', '295095979444912691559926912168029105931', '252033550515368521307117691557852573643', '310174766979311185253216366138103365715', '181774374650396046242406734049900143390', '331660614590016778135287642191726165628', '324820970302933751186028874494426228771', '130687210507135138158397592755308049218', '53274303663405083422116175541800204370', '250059352026955696053245304517372455893', '189672046327043991060952109915984920985', '233018890745564144579465153960735729748', '31781941835902499588679515450999201167', '234968202379226996441421362140775104446', '76545929122918191764793905510970574497', '173636007320763489677299490209460787318', '229170318474524719034067957991549861814', '93369735893925749978024214535270699686', '44056024413547951322767394569150314419', '81483122158632463877292180554803528640', '176684862188527662861425262290944169427', '168274180611813134957082784511671141146', '52723763469763288755377731346050960500', '43767945769929223522955726760482847946', '291271294390939978563718792459306252976', '32660404714146261594017691111433642169', '38745243617510227643125850154034057959', '217830041305300218403148931824146830234', '192141693044942637706426934830526506075', '81487294908951603256996264237055243450', '180318084724149222772728840765574049122', '181239352665575668831079258707160831262', '311057583501653341701886449639705592032', '214550783653833022571217369943323361592', '296535751176580299810137014679253839657', '100936852714345790077248097197540882670', '284630851124990253489091957857153631101', '1683011395530086565720315096853711022', '150083440388240843763314275937542066776', '81244332995537692179587915743895783266', '307530010586069259921202592019591083231', '17662878964593709817063920693736136015', '237872808202852723530784495625826864930', '152675490732111985212646801409407210227', '180498256462196551773436965902946247899', '39420177020957877944393328083549366158', '250902319081714487332886945583981914965', '124179341112811498960819783087715892391', '320222099055156391546097176572902011225', '232423417736115427988669265503815216208', '294927688423627277710155037956184964832', '213701650377957415909845329583462630559', '216197810693029640402091533550140169337', '206318651501085105639972272208241462796', '111897038798621056518831427631517755303', '147779174368667496048909218673937204395', '291970198749930624026268518020421452676', '215734200375757970156916895600656412142', '69473551309042707517281865305853677895', '198583945725721991674938870176852415309', '60991571921365122885230986129027391995', '112439347889379293097987252864404903518', '11680331785068515148456340105560861847', '261254170806543673861855075642184546795', '78497034924490418530805762271807404193', '299581464679262681850763517209068774618', '253715240938783311741038917831173056854', '208489583093401191465113517026624910295', '46647447193045795628323596244589048931', '10966074543901517477364732942015778808', '339149744893660285137218492256137297395', '218275342711631337856973563624839051277', '175365714901545549037744153837609809091', '207405623594446908613910160083214920906', '295721133551313037003218385038645841971', '153087901943400500082408407976902961664', '147580453735844122318139985719229352195', '230252488792271781604711703219630814128', '94472712112606296234129770326955987808', '107490582488842314494253911039828007872', '338491303436063744531418221079735244352', '291282290886535409978909703339803815873', '328447259032384053761863265516174750681', '233558502341880634634735511533470717872', '55263147172295123017909560426286568332', '237687854910576507567971273498027949574', '16202945781029922120160777797256517657', '123584650545463914068196490215293723253', '112512653525576048371295925030598196931', '45755384076082091870849779112089745287', '55494487028716034782981453564402901944', '87853895163434729299833218199025839501', '292684906998794697216328865562232074749', '195303369408133964774489111183950190455', '268402708432426830177707196375572718936', '80036803484421873569794968191345607563', '156845925365979044438433254302190351098', '43814329345678189933879252960679007558', '76846769095736674064929847593683346275', '315960496772872662530234073742748693691', '315933313220252838540973137195040072500', '322405567974317541848831685930586294097', '43606630774321893798265684732537957406', '70752152378013812315822982763783822665', '305108324243777914518778592783408768615', '283031692528067279999929630903321078117', '299951613067303540681201935228417999477', '71195401009200096103012987519539618692', '242428669277065383800244648522680264114', '4083821256679784276648544188586882958', '179500919441214507777366254358643215743', '106672582804728343686434178520485926656', '276056006835250280929354383841995492109', '297686009442561819588224118862021257564', '83340959084944608675596273728971843621', '187841829121333818463300276451201285999', '24985165128638620145160621829735847022', '142380867537269483316262219590494673257', '99726541484321600103649435140893656675', '152839722919546948976103852745059232497', '177223386861074003791905051369493153848', '228675833131199846721054374212830680327', '80212411259148466639955645343916635416', '153256292016964463443728984144206544304', '134829948687202818572589460385578331208', '244333762587516390385450239948625689676', '337522999038418189640469009530678824485', '104847848039824276425096391399031703872', '66993385727059141259201975501285124633', '74005814613361634380303201665114635117', '12146232797421686173302789665794077167', '292015171333082662839991725743703126216', '101448505624018060527723288489005141638', '222834287041971500716170819521959227536', '161800859772386730977746924386748438294', '317392834670341283338937660944642671091', '220114823797530422479613664235492973818', '296061616975693079742725890138030707089', '82380072878334709551789764190468102902', '31646887928656831682804429014150804823', '69166693196422708753888601844846509758', '81397792270458025916087351257338446815', '94778603903644324200835741443076382878', '52332608898712027033396783383356001165', '196864679396378089813647532371966589890', '109960501429823556753511885200987861139', '134029215028438592027055662214418344169', '11110009608968042593656899603872158858', '77506916900047788238958554595438049547', '252669435748910899623263754414312690896', '17045368034541867220548974201820633708', '167200520357687557394268844053969708623', '90647169565663770435649390074455838336', '214171447194455008324172539811036652175', '144446484166853296547792704745560379337', '322903503459104039778253693027568287887', '72110887102142614205440589573441924887', '296872415682283940678852136686230882255', '104146792580125066021016972289598001726', '88429078320492598381044410827950508049', '85286463986533970642614509758082100138', '88958774668608811073473067547267050289', '59693379031259720215479941060194179579', '311962492123096900289948659360878686863', '69173108873872114886616497958100476857', '121033822342009854936179535069547388125', '261947350263286873709591640621320515056', '288135975970724884702204693024559148054', '195664885257877191041129408973687882665', '174558705266526467237165414233895069150', '14889918131517653356417178535904509760', '187806677267255526399494688412642008595', '111331075781019898258115626082852126745', '146309341802822935535420821108889041446', '299840508447821089855369866240440724753', '6285281377900569448923298952423180194', '77865379524049111309272063660799097961', '6469076388733372854115999629787206983', '262307002069435293253338666165237699635', '154998781240909760849730960724170257860', '63601322601270515266656822792125783476', '145011758783578328989203926872722943800', '246120728694926540317017558027516956275', '225941412994868541563013298848715525610', '75396728442104296703947216153334871904', '58760419811873730114451738515348744826', '100153390631380258388116990866273230528', '39437776274176571007543378867113033501', '193922828259217390007194120027606505159', '250217648133966092798016996660493888130', '236776199463644069794603593839212480613', '185023696551027618739728991234467789199', '29698349225308754320918897774555060403', '113824320962058306970124055392943517183', '193556839092800788621042905204362648334', '202955777115811987280699418513788322856', '206956624581510942917270636149714907337', '250704740436419171438903828785577035864', '209521623797531935144211717584153494097', '174263786485275069263006587250021091571', '190219522625102596786086398618155153356', '204421269293614587598805783541708928077', '94881720502138050605234386150286378445', '146183214139809971300961889467848906483', '125221220887649825200727101574185473087', '62024499569425870685725457815635055178', '179160722281282151782102708865808211900', '155511134717832663689479930712972377722', '14745668222360339467712488372613992161', '251617701328195827460292184419158579844', '212775761963234218058773512393806725948', '40905379070197253418111629514092720277', '264093883578664907058924731295477895800', '307660029220089726176986829460726011041', '9845967260448918489962827911867810225', '313875409464007107671048909662043149050', '263364351530236104529878618221356339280', '131370138589744861108877479913920041808', '134823944242563590540537969890392563995', '104919144256012515767018783668691366367', '96233378685820066177191275564384480587', '125362217489750988104121721680772121615', '231849347051036993919710383258998616470', '212277403717066527502764818418537101893', '59091154192150993839033613441229543530', '160976786736071627638273556586770509819', '263171183636945526207966135033027933846', '186500353307380592323903339731287435565', '113337858649939442265671630985285610422', '122056861407679908085468613626097755985', '49149507427707804655075809432066385847', '60470791367772132573084208911304249826', '205289216442866536138187278701515307724', '330407022483926413160105664294134650049', '49352685196184792937678106306393922036', '113872322750394112454757816259262059079', '39170248099916900558289586686058872864', '229727392527608249897353591410444346570', '57562942092118846267439472803201849858', '331621212332039734995336435581409108222', '1580797465582322765419462436601517782', '268758124969872175167926290803148213661', '339903417967038959524902862720727815523', '251430741191328300808124836569128187120', '156993193520069748257208725735874595891', '301786368865695038725593009141202656879', '122725637288521254644216841310314437296', '146896398869692673297925107012236880676', '4216313867758261359858286331956722274', '24301856585106039922705646957603912112', '53493738472169836672569973090797325790', '103796998466908453438328071639281647336', '2598872478169432329643955533398354143', '243465557792269031725477188344184851905', '31154385772208322335914570337316954002', '267955960749948228661903725027690629845', '20315429774617782646624378592628173322', '304930938478382788720383996921358992904', '33280640827102717689957007688881802682', '274249608338242007964661802160466087296', '162856310908236233701211693920335344708', '254904469063646884659019138994202922335', '96245766234754081845274940633608643614', '237627328673549738776281532618222920236', '179027564765484031394933204870708983636', '128644870202509778169425799164530212377', '182828260099965194252017383877802339988', '60173673388890333035322288342789261387', '77531749597658564846103506982483162066', '326539575882893164728030538997132406953', '106593083475505750836729952728881582620', '210851585520982376468564665992688936844', '335464748566950050198478317646551808700', '197450559298194012679339395682072343849', '11764063432336950932290147533638348686', '230229352980133600316057024601341158341', '311195634190467684485689015458781618372', '248848692362025694205260992811040104034', '278178236903659359332998521751266861672', '8063326310999489857006450982497195180', '332535048030433131277634229561133705196', '120897105411395266991933240638091599007', '84285215038753726249545095547437641050', '122537270215681954247623527813271837955', '156438298418092728929811262073534774106', '19118866562102393806109529524355418438', '307518824175457082030858663647596463009', '149186725975161984472544802090937999789', '81328885281548666794110735425775135138', '176838896580123091534625122789634146552', '334408083050207523278510833473432068002', '319074744005416958627764075674726877142', '111828181098033545264522473987556850882', '52137381648763898586560821224474263500', '294962527403216860646916587605866786876', '122198653356206234434244673865354792132', '338613061531723216179057620367084413268', '40516185208434270662182022415134392972', '182738438937466943671076140354946281774', '148096088184709529121250936179422321136', '326790128592703342928678224758863951639', '194110398842607821572025177204660611877', '88814033403828465235509704196191027271', '80155366273318938326794963246910030417', '127381100577386363177225480136719250130', '224812378216949517283439716760912399137', '179107895711269720461807915593659596417', '288367942961643881465726120092568230009', '179756318009511142507628572961364908440', '279979582935656760007246914605323215224', '79974073255878754178828429521012675763', '4702651428855226319458067758043103616', '232861013281196204453792394444385469419', '206874134562640033879086795966563508343', '294255499588660911297806806987036370470', '98367182678807292798741336081368154220', '152236925587542896734317026329795781446', '221890514532704585195938169608646909635', '35476941957340041085050290222235843276', '237258070974547432667437290565435978421', '82678587731806814010819305671138695619', '124260990177341235496889431083083897600', '265924860364727688643032453922686888013', '268222498102407144939205649296948911944', '196134602360483132967352780905596711332', '159078860897131170897912649699703862635', '307851238542101931599530145732638197308', '290066546548647106909862790481745839219', '288074179395323601639927433601895660754', '171900842470072161729775133695082264500', '132462669459840330187021531713365647946', '311639562193110474642817049589052948057', '17618108878313622845203590258290222405', '201626797463778288844465772289575099014', '139569287102954419832356661336159618606', '162018681089579160483307994706050259994', '26700230961085068997014200729846470904', '231966425157872201535229128918966973598', '222845490348177567908780836878781808889', '133415777412843876455131661572149103340', '206048988084187081166961380959641954550', '40243996919479275282745825598398755699', '28498979740954328694639780805553282835', '293734612520689255272682687730766392419', '20675158005487116313140304369763255047', '321830251965098813327794683585653114734', '79578698876076704977975493904880280024', '36070154396712154643653036594315999644', '36622441507917707257721454485516711226', '312589320640282127554878433659917910685', '124774877716016870596617776307572335909', '221494145827526289462458716220507483890', '106201516426833113297956256161784471258', '260342534036238364135277911986073399379', '249093719641925845835948156585155931547', '249419115553623093756983007819816491547', '132532817351745135020936454935011230836', '124102255095464627206439794718749384932', '241716708195553408401475408183604654975', '218795540985323367096234144983786424140', '128915403974730318764757286641373842558', '3776806781845316900668396464531678982', '156389365689999926360140935408621548462', '191655695193997094037739397194130001083', '153641513820618293740328822374027395913', '302994331910760981268139265879348494673', '112336655863953727289151152239041489640', '251615365013322300496785118359100654136', '112621010749114873344690779061520400943', '278153753257599531809888903373395552443', '110718371274451688667629004812406078422', '42541121178534249598581172585996043635', '36754556358022080508633952530327595840', '55649484334040535808025618933499393668', '180448380045309061665862502836458131534', '319998578712037567647451627927394052926', '91263013124951831420564963122303849014', '85558074199962147582474503274110867743', '114911040170031719467127176814513378046', '118403327119291304726338423794480953093', '41386005276256069827578514489489948666', '260728163534429737930975324506906594183', '317273800445463278638331861061583905647', '114404383659750916271958502896020119357', '82113399767614852618301961634767083744', '49540638951359010748245541494873604342', '114161214623348457555140620794349414024', '74902893885493003463426470230672194198', '89675156571508832488515393451808959036', '124971783577525741940176776549560353252', '232211252438818668039188397089379885597', '214171935788296617074305467819744064136', '94016489463103075097592268620800749611', '247618883214188536559700321425503291443', '174523508644839145320025032671338218496', '309256373494868368099145378325512992169', '152565417291398001400780794328851422454', '13071032477997266460406828076098266798', '71824463603702974986837139683120026524', '101488927130423351244820971570126412898', '188100808541663966264606591390861454459', '168322353913814597210607079579334717003', '15399267072455528684600283653056202595', '78141616718090973809851994108575488605', '314790334599277753926466547469635123813', '311546199880526728184084028787046169292', '82281910511269587178170491501889215676', '144935405751067679645120858791571510349', '161179766028496369792981771747347897134', '216383618068040202675959206945509212408', '44894366637675720664625223070991296501', '118196843360357231952900421274062215221', '130151587709240967998831907704503586203', '151061913087950305225990434939625368389', '92403853528751819185302449795709359479', '135298194996613183175479125649057440764', '292695318454140176556612248792519342434', '122697964850484066207380687703584882598', '90265132091098472041798183973369763937', '283347097005031200133436071290232309659', '184495118614070302248883286062034544810', '268601313374906925584216667677721442142', '212397669113140970342999223444900133960', '178833390236154531314723644811130908194', '278725864419127942642152329936850907214', '85869267802298993410756370187650443255', '185938705173884662883175228723545755087', '12178998692012168207006137033546165754', '204259996249613136442955025609385934000', '282449423796511387633461918111034307300', '4880715053561720504408497545400860964', '208462672554613777630099941397748986938', '303663367586435306717335923570443997394', '81390183862369871452528568460064824847', '210874943450525756495701046974298471107', '47471822183570900882140274765738120158', '82160915327743001091656256964529737284', '233683539661567174869013593053533895335', '123172509466711841080002711069655407923', '202926087916484393272824430966867868864', '219791208908844682107397575960012317257', '50892431007147802506158672356011488369', '165186142128075637268070756257678655602', '168207537000908143749617548974934294132', '134628507210711012045693514299673862255', '269546414328572327939867939862285360430', '186375889241397439379186907742753123603', '202481057576739259590997652200835961581', '45785714566222652408852648074989640703', '269356168432892138242970657746232389325', '97427938700665331815101687777542770353', '43151503875619748891758033427482466821', '191419383826966883058500154627113486289', '127453835433634105750906096877879752815', '13780724999148049529627504996987084420', '289510939736836620140229512434672231641', '52934876827790617934442944759286783307', '229540826719529934227727015663235877316', '235240634032653826655777651185889315979', '69112203450284663765860961127590796062', '56375898472616528424797679685071188473', '21609226396037545849353051218546932471', '230599385582484457390301726507427243290', '238018651380314596809364587015052907815', '181608930345714996012337975994988390209', '11191691820961488397444918577317352497', '212200945915557897170845847809326794139', '108816242759543197294990539292543198218', '4283486459158531317824434087906786909', '77649467428437118190115555068999828571', '77198146142066208743383474193884585051', '40934636085503227078321114025474683868', '51084095234910929314869224733188423078', '239798413639299535371057097325262564357', '220176549781521480772018858084450267066', '281991451325326011541899728857700067276', '315686080387491032123137798435500008461', '297919963488301978586355882988797195820', '198884455413273656265159476125370470433', '332146904640146812754526283397961486050', '291231035823241193996771781933369346336', '171768759814904109975364749059026851904', '83023586782233751118200801951134909548', '139946713696517423133521717486274900105', '50073307438036647151609617784167490481', '170715985984229502147104719282890277986', '31195533149352365175312041743822416783', '165850912133653062240705164070772709297', '255507147621021989418671640434438686272', '4145846739913679808852656978781574817', '152169799013741634854446054025992137786', '30023043303340947517750281372619386622', '333744870734786781278691891973247430342', '87696865088205860525174516009415401426', '57108509568432941131196936500453468601', '239666528623359136128181682913320093597', '188228961733029650354464485324011783739', '165182586398515892614367788205765350398', '182085809677959294186320173741173169724', '161179812792393424218899664649084351615', '89339138811910315079069926688263045116', '142668431637548326089369264225446081725', '193655233376950766685272748118758974986', '81945049420735955800693902123181026844', '170046867823802187858397458672112418650', '112672072414226560355532815739001793635', '187790572541677863001224959254445159691', '105617081463882541251099201005381040748', '299362495068794935963611688868044366704', '281894299044318702315259370429700204881', '113327236306513382406765455874797039839', '40225800409056616985476748393891951215', '71817138233727822238713241153180880329', '66712722627410987680494286913552279701', '216745686482692594155631173616953611891', '17549429990929525351732243611014992798', '21691653664650320913757443568567712993', '242289166362874295043113962111224735506', '150428517065830597524745907832760590281', '295643693858911217862470475290673182943', '73610240357117605940195782163836993930', '196131573440271804709652049062560032367', '166500404825891461644417460614166577692', '261710804790718277867182367907897376435', '317622592767519276577338897350788357155', '325980877520291486242131834750672632656', '92985015874449180425795180660553788346', '114756432498256713599972782088276326752', '189907583713144618905831775450298272673', '187468325251867411957553100088526504170', '328209616556782288084450138720187413066', '43605144375313321515175418528726437685', '33623024960800581802473435754186640481', '223463642758681694372278554573457352204', '337608962903051198314881304607806716574', '228056680509541983262368041752734823254', '70183611092462625504751158032354387276', '332287310110225563575141991066223264575', '87254972157957206372176169808066499765', '253452678135608341231499706465184694999', '8237082938672322435683940865800872205', '198726266686190165897742310444306167190', '282950720004043841509076220715150686784', '265332770202717366798820082181776293508', '185279539205307421717151512386098978699', '114228372157625305180276912944118691408', '264177295590952410517296692709597814276', '320681789524951896241786175444319975164', '302498487721249032623334095362889309399', '41105070668939039451209138467326773278', '91695437821779318451357915856929947950', '77328584181481519478346793548881665779', '39864237365415596931480916519064299182', '221176952374803424726757592996448226694', '97729615097484328382694373239654302847', '284859708905623643813352771683409228478', '227176858869485859394093126693115289087', '114242359327886832244775676329127622795', '158542073633833427431319176531484940121', '65015954137964043507022133711262227413', '24032128516376479137206661530743368499', '303127760348751136317226383492636013787', '89926833213951374173735906098396641982', '239164277383087509450644894003938671425', '253652993986233941159915199400822039140', '36117051741350234294570486159229524779', '169084790928370794864641164682500563031', '29973632090934052580955094140580523625', '75564614994824879741341336398470756346', '26507606358581027997581789582641896901', '102128529623197556417845873354133774818', '146358072976275546502633027163841582090', '315367666545292611087001255311943005372', '319507718151974519870935866782538713614', '222873378786122491790410676528344001999', '250393204917180910466455365221920901439', '228644694517853043715450857235491396773', '263063963969486152023531007900433953384', '230481410914765137708934977944400302320', '35800684554702776638601991533470003619', '215523095804057018287175369905776468383', '227207148528915284416503193455483773526', '204834951315269255227672256584450983570', '186335519046111616002128583454937018295', '289237682560058761284691342022687291952', '15025509451898016297304562203388356682', '41370411310778542368329170865707767684', '118052892956750476522028071660716068990', '219328424507175971359795992293418960642', '54489354640956350161910488901817791685', '148954039744391421530162159140254797123', '105745054481154126672594710796948828513', '317450646200840117427415519713091593819', '183656743817973493486538853172702689018', '180449023479141146544775233220159678149', '3078236127318307187906917959366386931', '260585621014218516631619705258016043645', '204010116900303679044900376755149652496', '154984775672685409967745727000541886035', '201416143322518266619751984725151616523', '123802339789078927649646885341711851194', '187570266386640701389117600716438135419', '280209013005884035689445745099840918698', '145472408998455709585230623307245518783', '189535401650905105383119959334717030269', '128120896960106829861439850252321422148', '306571902059663887524771622283464045848', '60371733084682440262970951788377883040', '77797582147596325628533789907354060750', '73225257939495704655048165106614440557', '27839636998395338742518966904857908957', '221770813689904716062768582204101177145', '148318741951055189822991020259775177902', '171371433861023078220846744234994852978', '325472350702379115449469852761439239274', '77462341406499062308085732292674081406', '210175818371129858337329789453112029886', '325245700567819931633985959866413936345', '31796960568925491802146723485739012976', '163492136525924455836053948349936550175', '132939346923630479577184929159064910495', '48384002321327424543030701456515682865', '209531180515739489230267095206735113186', '102795219783475430944384241670962281077', '180325797710918572039218322643333996032', '72600932305370345966526742466598130776', '321052014583718480451199098373628441391', '255947787937869339888356035527867597424', '52210197809789199168257965349722513156', '202889245356546833317931683492514561564', '325860951992907331616374662376650684763', '169520609381042843672840789833721832055', '232905607558176523323887837170306440513', '155224192864816856224091244927983277599', '4947125544153837775681272616730273010', '17314847289257738914080123710145556038', '26349305663868088313543887387713615319', '168006272161212598969369884791283888527', '325556372889957446891858965537473062517', '170635822384294003643770792123315834435', '237655547208995733478566976179920250825', '173183814157306526658842925321924657389', '269938088440111803315532937198413817249', '321898976469547762041421625554647057301', '23416820262417583760068163831553487891', '287655203014152477533881091786678730790', '83251823196172088637741456047728799425', '310150541651470983838829199520552430926', '335270327357796359625077896974769544855', '338315974601515749813223307304969326264', '171471614484850875796315861373692198782', '41834023845926712253541657933464951261', '288122910941368490514903327420254554614', '329539156412617336792131196673579364095', '331440046920512197905990010844362406057', '66268026034936829824078134689256288742', '71868458253933655521658586228279295449', '104507988384667782134313023419214433031', '32557469158195409416239679837317727306', '309363786471570465181037268111983449375', '336715717915000900592404811239340628996', '62495010653218093309240316326376026091', '117900720178276935698711479560991417140', '259625322963410700602225188248589059764', '60629320452672436016608020035388870792', '255942825779501195380024550482669368262', '119163438388852055842444583457134493451', '135166597190952416504194103824740667351', '85028205956939662526047378572174572198', '143741592224336726267103817791345003945', '274533762081982072575555224263897274317', '161288586210112925782760926903996992826', '248298359565829739155095134954214631362', '329474642626989132883201110425627467405', '70380848091981966600310080728621269963', '148076672663207501490728420663531716372', '256725196856039360407448324499567363633', '262398821103117889445867771332276522890', '305484298774464484857298624555523540935', '319551707397308643261038003988738458570', '223604225908724688145720529388376992393', '208584853391160779710432592353970448313', '326062299852693153930969218388873564239', '329231220526407622271448657333781847658', '182498414748692358216795450981508535096', '151914392449578191217087387735604449889', '15869744046363345333476097423707150725', '201887235250827897194204386092113749560', '133754548180558721487628136531590185807', '240972820016251059564681071530491015769', '13549402312418002259682224193209724424', '268893001681810598115742168952153354336', '89060831432589057358628575798076035349', '148047066664573156282032007456576563529', '271502103849758023917745283265835484049', '63916178816301068472885286564253698916', '164053435054591980446194284226533299556', '176910447068242012073403155113658499671', '285793604104453248081932467492742642835', '68504276647289369342832913425865801777', '120834462118685814951894473932833859009', '205332753703916370580343576658257048372', '270206471935126555821990297447015986816', '300527651218167474785104222006865282896', '125162587401965415105127135911202448882', '140287369401777447542802624179630706865', '132991566339119708941516639836814375096', '232549032678699577698777886460260745814', '139418239160738967608913947937848975977', '214067868039500396032741023631135567101', '303603702185635148901841328257663678260', '24535251163495992724400548826423017937', '32033749047356253772945564427037878686', '244198789637400961504539150958997511078', '340041741919517294091195074017190874682', '271444826377972471033099994899650534109', '158947779538049016774406259412476570203', '203864952913730795607385640244329997984', '209962417578858343299242730141661398454', '103162540735576030031993141496314474369', '172748567273161507058362409742227576612', '121580366418766607733479785793706217557', '312625180708612690268320320962803650130', '177071293758493749151477742803285346190', '301695355906794314843404882513336705631', '73522471173233785770718354801008303400', '13691939877648652533529070933004970118', '179534610400720808466058207976091834597', '30778550499340156167147691146467662161', '164021696257011541932381079147879581017', '165479804169759470689897756798116002109', '138431761950689316923073777284698075018', '295431497803165947199535858833778507103', '198374782469822928840295736452155853455', '103086552946191907837813397110272184202', '263061688619474496410951423835753741155', '66171474945493815875983697303104858634', '336126749186991229667118494727232226698', '25353824891011681473186818164551108853', '166893863828398255644212177377329027340', '148805099390960865751897862975254697444', '85780583131883978765215052589600050146', '135328099895807459464536524940664111191', '311397697750265081691940590246470991022', '126905189170574227133192727299836977253', '212871343366460029027924546792960183612', '238998039711462988941959458404931326807', '330975739663749733734793054362025791023', '103193408195479314113977427874208279536', '281899175404477485512154621241910025350', '9260526978972570865366853195707412660', '76696660137813821373329611674012181395', '232371170008372081739682738037344831244', '62482119036697370457225247817473935780', '336745664345863159277535175914178444379', '16524462196219491627223124610629417498', '117034495656792588447626870932164925828', '322271443634731391355336914261455732135', '190322512199524369613410353597196295507', '175880592537738514867825319401554559017', '195275451375786855733901167173037039610', '218113379401761367899430262318473895091', '201004223603426252278315360177587488517', '197938879278252553426952732445245599223', '88324603933427428870337447309579617023', '230983176763754124986983117756329011600', '241229886222537183988924929896782956559', '37318679025409566930014838655588302427', '18009145889508325264904348788008210219', '289547074211961044319734477150422962075', '221165412302682533076593940058690641698', '94131650306798227510609056510408173596', '12738808816982080556437214379110433647', '305801853624917904533196094049768209526', '131595769018040571669709684888689529757', '28351019371075181270563147820729224333', '129978699131845570719693708544195011835', '198220171208146173994186143867636178559', '303325633871435601091937774295823875292', '278087529406919232010799219752257010', '138645393244588561288542504118276589486', '330222778227092354519763136075232456023', '331659568930086475499326063001344132861', '331755238524072910421816176010529319453', '98834076931636173954416061157569690662', '85692490926485478728673981756173550643', '153941343596325106271285002816179579539', '172742117483467521266757162287810320907', '290548565170821000403593463777816781652', '248666283169023747577259498646741254659', '62185354600724211534436225774581209282', '147978324248250655459764857852834896897', '237282018864544870832845495282792378768', '318060304098331524766392179667281800090', '281268714118744401631006372451901571615', '134280264788492911147917475270092452170', '203801858801004146453408049755739957645', '266667224556859986960792813250589865160', '277538706125987972319598088148931543629', '213888781590511206443070497151115979023', '143238619243889367625402629563471131607', '42796397213873231760936194863163044015', '46893786599587171999578854739336196663', '137705293171962593306522348690399197821', '236947419722591729154953033378301583841', '182213494526013717999671734192092086938', '267854090829711662484835267261822325143', '306804109414301843774225250311911697836', '94839716790140267119861132395425400878', '159197091293303366076912821953450127585', '191101493061839301172481563132000105923', '164789621184829129852643781441222270574', '227409234082738125959022123933896733451', '264849576797566099324207665568743929878', '70155709989807445691433023907403245846', '337850802429543905386656014067372992628', '81815677430705526712779627470429456889', '26969865137456732977408806542524488671', '108219427020871970073230258708895023430', '69682133347804917447730383007280697891', '158417888834632315215368831939899366445', '249664259220904497254094204992356220449', '147650887310624183758798861410052632578', '138909720601431789085840690404165718068', '334638704812464586974851369114933838488', '57661429586288227697164133605965572845', '280810684752683127078360616903426544384', '9411539260775456576850312183199353748', '49718065208314033972916511428834232053', '171649523443204063368277074502733567320', '248076498157269735110184287053512184145', '100329377691171493427153095281654883727', '198153072727586035123228699904272768438', '236971883402614271965502916522628682343', '337270963459139023667718922905906971634', '269928298063065929128821501385096055742', '148728510007872545989010506579796295775', '87332636957186703649602669270430412204', '151886936779815498359933381621193934532', '83330953693616641408572934751514264270', '198271966375293162861266744288612996121', '10957344310002426858067734376658983474', '227267753193239038858779307971675028342', '6428670790609827943755268478474834508', '44349373518703127046717757288685484009', '282327355977515101137548137496409601892', '186051485402733843985002405404115720713', '304988485982258477793344331521292882547', '230456419367550201943755539953367248875', '157235410033900389020007942846092853991', '309961636013258014255949321551447903261', '263806864828504506233210154933547725485', '105910983535360493194459950100989565802', '316395541208723622690875121710806549450', '134469453818261135512786073406363584177', '244508560399973847885237130539639556570', '91890469489576364949001443651356772006', '280610426993973249908097775284504930937', '63567587927252453906942712649894490179', '149794788433938685377565138036509401304', '285011348988318057457911232683490938913', '137157863899483437372586810643332655', '157176637277642199825776180330005178417', '109098803912868725175936433570131906032', '239844042240372548432173912437912901178', '10948018251610463235818722790905848958', '42287356845762814992426857047265935850', '252051514540535410722009284447816917504', '186119782738173792213566128390837910390', '103123884345512594221817095665582608231', '204333084446997503474946007455115643692', '198735268662816051071828316595443251001', '211670600925645925457484789410106940416', '326919764435529266644193034342173957107', '193977056324796808800805115982966544177', '202186192647663281292502469016584723438', '310241120197325607838731367742391394625', '272255033175438087895076703338209628494', '2342725967226852326141306355715904079', '114357790474231783169522431537596840120', '279389484012146502914728007071854239925'])
Key: 192566765501753493345497975333407772913
Value: {'question': 'Which American-born Sinclair won the Nobel Prize for Literature in 1930?', 'responses': [('Sinclair Lewis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sinclair Lewis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sinclair Lewis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Sinclair Lewis'}

Key: 144826315316768374173692130587208321807
<<<<<<< HEAD
Value: {'question': 'Where in England was Dame Judi Dench born?', 'responses': [('Berkshire', [-4.466684341430664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-1.0369967222213745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.630746841430664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kent', [-3.115121841430664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sussex', [-4.036996841430664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surrey', [-1.9432467222213745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-1.0369967222213745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-1.0369967222213745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Birmingham', [-3.958871841430664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kent', [-3.115121841430664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Berkshire', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'York'}

Key: 318988216362178306401487701037247664573
Value: {'question': 'In which decade did Billboard magazine first publish and American hit chart?', 'responses': [('1950', [-0.04858732968568802, 0.0, -0.1602240949869156, -1.535528302192688, -0.21808095276355743, -1.3146722316741943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("1950'", [-0.04858732968568802, 0.0, -0.1602240949869156, -1.535528302192688, -0.21808095276355743, -1.8146722316741943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [-0.04858732968568802, 0.0, -0.1602240949869156, -1.535528302192688, -0.21808095276355743, -0.5646722912788391], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1890', [-0.04858732968568802, 0.0, -1.9102240800857544, -0.2511267364025116, -0.2722393870353699, -0.9752782583236694], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("1940'", [-0.04858732968568802, 0.0, -0.1602240949869156, -0.910528302192688, -0.05908667668700218, -1.6614840030670166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("1950'", [-0.04858732968568802, 0.0, -0.1602240949869156, -1.535528302192688, -0.21808095276355743, -1.8146722316741943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1894', [-0.04858732968568802, 0.0, -1.9102240800857544, -0.2511267364025116, -2.0222394466400146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1941', [-0.04858732968568802, 0.0, -0.1602240949869156, -0.910528302192688, -3.434086561203003, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1883', [-0.04858732968568802, 0.0, -1.9102240800857544, -1.876126766204834, -1.4172630310058594, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940', [-0.04858732968568802, 0.0, -0.1602240949869156, -0.910528302192688, -0.05908667668700218, -1.0364840030670166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1950', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': '30s'}

Key: 252491322485057417671863025229240060490
Value: {'question': 'From which country did Angola achieve independence in 1975?', 'responses': [('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.16918757557868958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Angola', [-3.231687545776367, -0.08960910886526108], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Portugal', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Portugal'}

Key: 300302960101875530025611370484339798872
Value: {'question': 'Which city does David Soul come from?', 'responses': [('Baltimore', [-3.9740662574768066, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baltimore,', [-3.9740662574768066, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-2.0990662574768066, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Los Angeles', [-3.4740662574768066, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago,', [-2.0990662574768066, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toronto', [-4.099066257476807, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.849066138267517, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philadelphia', [-2.8490662574768066, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queens,', [-4.099066257476807, -0.31378084421157837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-2.7240662574768066, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Where in England was Dame Judi Dench born?', 'responses': [('Surrey', [-1.128957986831665, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surrey', [-1.128957986831665, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surrey', [-1.128957986831665, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surrey', [-1.128957986831665, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reading', [-4.460988998413086, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surrey', [-1.128957986831665, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sheffield', [-4.804677963256836, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surrey', [-1.128957986831665, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surrey', [-1.128957986831665, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yorkshire', [-3.339895486831665, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Surrey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'York'}

Key: 318988216362178306401487701037247664573
Value: {'question': 'In which decade did Billboard magazine first publish and American hit chart?', 'responses': [("1940'", [0.0, 0.0, -0.1797446459531784, -1.0080398321151733, 0.0, -2.1743767261505127], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1936', [0.0, 0.0, -0.1797446459531784, -1.6330398321151733, -0.8992663621902466, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1900s', [0.0, 0.0, -0.1797446459531784, -2.383039951324463, -0.5919938087463379, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1894', [0.0, 0.0, -1.8047446012496948, -0.17574100196361542, -1.6687145233154297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1936', [0.0, 0.0, -0.1797446459531784, -1.6330398321151733, -0.8992663621902466, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940', [0.0, 0.0, -0.1797446459531784, -1.0080398321151733, 0.0, -1.1743767261505127], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1923', [0.0, 0.0, -0.1797446459531784, -1.6330398321151733, -0.7044337391853333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [0.0, 0.0, -0.1797446459531784, -1.0080398321151733, 0.0, -0.5493767261505127], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1936', [0.0, 0.0, -0.1797446459531784, -1.6330398321151733, -0.8992663621902466, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1920s', [0.0, 0.0, -0.1797446459531784, -1.6330398321151733, -0.9544337391853333, -0.37842804193496704], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "1940'", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811906, 'reference': '30s'}

Key: 252491322485057417671863025229240060490
Value: {'question': 'From which country did Angola achieve independence in 1975?', 'responses': [('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Portugal', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Portugal'}

Key: 300302960101875530025611370484339798872
Value: {'question': 'Which city does David Soul come from?', 'responses': [('Baltimore', [-4.165430545806885, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.5404304265975952, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit,', [-2.7904305458068848, -2.3502066135406494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('San Francisco', [-4.165430545806885, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Manchester', [-3.0404305458068848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philadelphia,', [-2.7904305458068848, -2.7168078422546387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baltimore,', [-4.165430545806885, -2.6949362754821777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-3.0404305458068848, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-3.0404305458068848, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sheffield', [-5.165430545806885, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Baltimore', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Chicago'}

Key: 73942423953321228930194732700203702763
<<<<<<< HEAD
Value: {'question': 'Who won Super Bowl XX?', 'responses': [('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.029750416055321693, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chicago Bears', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Chicago Bears'}

Key: 127405269566050263240082980988971794064
Value: {'question': 'Which was the first European country to abolish capital punishment?', 'responses': [('Great Britain', [-3.7707300186157227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-1.458229899406433, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-2.8332300186157227, -0.22234700620174408], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-3.7707300186157227, -0.17251379787921906], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-2.8332300186157227, -0.22234700620174408], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [-2.0832300186157227, -0.13139772415161133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-2.4582300186157227, -0.26216238737106323], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-2.5832300186157227, -0.15872353315353394], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-1.458229899406433, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium (', [-2.8332300186157227, -3.2843880653381348], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Great Britain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Norway'}

Key: 206865124014160866006334145581105887551
Value: {'question': 'In which country did he widespread use of ISDN begin in 1988?', 'responses': [('Japan', [-2.0033185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-3.0033185482025146, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-2.7533185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-2.7533185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [-2.5033185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-2.0033185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [-2.5033185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-3.3783185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Finland', [-3.7533185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-1.8783185482025146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Japan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Japan'}

Key: 276022737814801557236603657563903291530
Value: {'question': "What is Bruce Willis' real first name?", 'responses': [('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eric', [-4.843710899353027, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.38277336955070496, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Walter', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Walter'}

Key: 146041382781843151309943583842476878405
Value: {'question': 'Which William wrote the novel Lord Of The Flies?', 'responses': [('Golding', [-0.3132617473602295, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Golding', [-1.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.3132617473602295, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.3132617473602295, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.3132617473602295, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Golding', [-1.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.3132617473602295, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Golding', [-1.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.3132617473602295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.3132617473602295, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Who won Super Bowl XX?', 'responses': [('Chicago Bears', [-0.3874903619289398, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.3874903619289398, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Chicago Bears', [-1.3874903917312622, -0.06993623077869415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.3874903619289398, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.3874903619289398, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Chicago Bears', [-1.3874903917312622, -0.06993623077869415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.3874903619289398, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.3874903619289398, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Bears', [-0.3874903619289398, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-2.6374902725219727, -0.42870065569877625, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chicago Bears', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Chicago Bears'}

Key: 127405269566050263240082980988971794064
Value: {'question': 'Which was the first European country to abolish capital punishment?', 'responses': [('France', [-2.3321242332458496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-3.4571242332458496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-1.7071242332458496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [-2.8321242332458496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-2.2071242332458496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-2.8321242332458496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-1.7071242332458496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [-2.8321242332458496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-3.5821242332458496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [-2.8321242332458496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'France', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Norway'}

Key: 206865124014160866006334145581105887551
Value: {'question': 'In which country did he widespread use of ISDN begin in 1988?', 'responses': [('UK', [-2.499084234237671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-2.499084234237671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The United', [-2.999084234237671, -1.1295833587646484], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('UK', [-2.499084234237671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-2.999084234237671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-1.874084234237671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-2.749084234237671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [-4.24908447265625, -0.3672420084476471], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [-3.624084234237671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [-4.24908447265625, -0.3672420084476471], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'UK', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Japan'}

Key: 276022737814801557236603657563903291530
Value: {'question': "What is Bruce Willis' real first name?", 'responses': [('Walter', [-0.35061728954315186, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.35061728954315186, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.35061728954315186, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.35061728954315186, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.35061728954315186, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [-2.9287424087524414, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.35061728954315186, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.35061728954315186, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-0.35061728954315186, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David', [-2.8349924087524414, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Walter', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Walter'}

Key: 146041382781843151309943583842476878405
Value: {'question': 'Which William wrote the novel Lord Of The Flies?', 'responses': [('Golding', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Golding', [-2.6949362754821777, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golding', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Golding', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Golding'}

Key: 45096472343826651446095107748312803118
<<<<<<< HEAD
Value: {'question': 'Which innovation for the car was developed by Prince Henry of Prussia in 1911?', 'responses': [('The pneumatic tire', [-1.2288886308670044, -2.098222494125366, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Disc brakes', [-3.603888511657715, -0.815571665763855, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the pneumatic tire', [-3.478888511657715, -1.9319546222686768, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four-wheel', [-3.228888511657715, -0.4740769863128662, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The shock absorber', [-1.2288886308670044, -3.723222494125366, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shock absorber', [-3.978888511657715, -1.3200695514678955, -0.08422516286373138], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Automobile safety glass', [-4.103888511657715, -3.3192191123962402, -1.0335993766784668], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Self-starter', [-2.478888511657715, 0.0, -1.039428949356079], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Safety belts', [-3.728888511657715, -3.4339730739593506, -0.08066273480653763], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The pneumatic tire', [-1.2288886308670044, -2.098222494125366, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The pneumatic tire', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Windshield wipers'}

Key: 105450655671891765775490572252870768368
Value: {'question': 'How is musician William Lee Conley better known?', 'responses': [('As Willy De', [-2.135575771331787, -4.277963638305664, -0.7527126669883728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as Willie Nelson', [-2.635575771331787, -3.1263527870178223, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as DJ Khaled', [-2.635575771331787, -4.001352787017822, -4.718169689178467], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His stage name', [-3.760575771331787, -0.6336528062820435, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He used to', [-1.7605756521224976, -4.285202980041504, -2.3578834533691406], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("He's", [-1.7605756521224976, -1.910203218460083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('he is better', [-4.635575771331787, -0.751386821269989, -0.9167948961257935], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billy Conley', [-1.8855756521224976, -2.880919933319092, -0.14768841862678528], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As "Billy', [-2.135575771331787, -2.277963638305664, -2.358125686645508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('by his stage', [-3.260575771331787, -0.1602240949869156, -0.1759754717350006], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'As Willy De', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580787, 'reference': 'Big Bill Broonzy'}

Key: 16995382464582584603001219352329872199
Value: {'question': 'How is Joan Molinsky better known?', 'responses': [('She is', [-1.5818334817886353, -1.104893445968628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As J', [-1.4568334817886353, -4.692058563232422], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('She starred', [-1.5818334817886353, -4.479893684387207], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Actress', [-4.081833362579346, -0.8190361261367798], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As Joan', [-1.4568334817886353, -1.3170583248138428], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('She was', [-1.5818334817886353, -0.8548934459686279], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Rivers', [-1.4568334817886353, -0.7454741597175598], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Ba', [-1.4568334817886353, -2.245474100112915], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as a', [-1.9568334817886353, -1.4738165140151978], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as the', [-1.9568334817886353, -1.3488165140151978], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'She is', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Joan Rivers'}

Key: 253645208191160918627550358624861503365
Value: {'question': 'In which branch of the arts is Patricia Neary famous?', 'responses': [('Photography', [-2.984382390975952, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-2.609382390975952, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('dance', [-3.609382390975952, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dance', [-2.484382390975952, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Visual', [-3.859382390975952, -2.664741277694702], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Opera', [-2.859382390975952, -0.06816448271274567], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Visual', [-3.859382390975952, -2.664741277694702], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('music', [-4.484382629394531, -0.05782408267259598], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('opera singing', [-3.859382390975952, -2.9002060890197754], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fashion designer', [-3.984382390975952, -3.3279991149902344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Photography', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': 'Ballet'}

Key: 306899696324794934554438398647872015297
Value: {'question': "Which country is Europe's largest silk producer?", 'responses': [('China', [-0.340294748544693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-2.40279483795166, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-0.340294748544693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-3.90279483795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-0.340294748544693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-0.340294748544693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-3.96529483795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-0.340294748544693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-2.34029483795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-0.340294748544693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'China', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Italy'}

Key: 90802376553055510434825222912642764024
Value: {'question': 'The VS-300 was a type of what?', 'responses': [('Aircraft', [-2.6226115226745605, -0.16051004827022552], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Satellite', [-3.7476115226745605, -0.11303999274969101], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sub', [-3.7476115226745605, -1.4132976531982422], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('jet engine', [-3.2476115226745605, -1.4533071517944336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Airplane', [-2.9976115226745605, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Submer', [-3.7476115226745605, -1.5382976531982422], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('aircraft', [-3.4976115226745605, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Missile', [-3.8726115226745605, -0.09537652134895325], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Computer', [-3.2476115226745605, -0.13189548254013062], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helicopter', [-2.7476115226745605, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Aircraft', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Helicopter'}

Key: 163253315705630916128547411891325493364
Value: {'question': 'At which university did Joseph Goebbels become a doctor of philosophy?', 'responses': [('Freiburg', [-3.041588306427002, -0.45338624715805054], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('University of', [-1.9165881872177124, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Munich', [-3.166588306427002, -0.3789835274219513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leipzig', [-2.916588306427002, -0.42447182536125183], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heidelberg', [-1.7915881872177124, -0.42447182536125183], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jena University', [-3.916588306427002, -1.379534125328064], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freiburg', [-3.041588306427002, -0.45338624715805054], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('University of', [-1.9165881872177124, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('University of', [-1.9165881872177124, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('University of', [-1.9165881872177124, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Freiburg', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Heidelberg'}

Key: 300332967360249423035223918083705385715
Value: {'question': "Which prince is Queen Elizabeth II's youngest son?", 'responses': [('Prince Edward', [-0.6402212977409363, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew', [-2.202721357345581, -0.11008840054273605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Andrew', [-0.6402212977409363, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward of', [-1.015221357345581, -2.1699154376983643], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Edward', [-0.6402212977409363, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Edward', [-0.6402212977409363, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-1.015221357345581, -0.41991549730300903], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-1.015221357345581, -0.41991549730300903], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Edward', [-0.6402212977409363, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-1.015221357345581, -0.41991549730300903], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Prince Edward', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Edward'}

Key: 184858692485181861109930880160209958960
Value: {'question': "When did the founder of Jehovah's Witnesses say the world would end?", 'responses': [('1914', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -0.18358570337295532, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1975', [-0.220838725566864, 0.0, -0.2014133334159851, -1.2234445810317993, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1918', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -2.3085856437683105, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1914', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -0.18358570337295532, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1975', [-0.220838725566864, 0.0, -0.2014133334159851, -1.2234445810317993, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1914', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -0.18358570337295532, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1914', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -0.18358570337295532, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -2.6835856437683105, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [-0.220838725566864, 0.0, -0.2014133334159851, -0.3484445810317993, -2.6835856437683105, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('October 23,', [-3.595838785171509, 0.0, -0.2014133334159851, -1.8195332288742065, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1914', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': '1914'}

Key: 247779724035570137361318661217593455738
Value: {'question': 'Who found the remains of the Titanic?', 'responses': [('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.20947906374931335, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert Ballard', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Robert Ballard'}

Key: 233086516018861420173853199482489798024
Value: {'question': 'Who was the only Spice Girl not to have a middle name?', 'responses': [('Melanie Brown', [-1.2219417095184326, -0.8041943311691284], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel B', [-1.9719417095184326, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Geri', [-1.5969417095184326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel B', [-1.9719417095184326, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel B', [-1.9719417095184326, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emma B', [-1.8469417095184326, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Victoria Beckham', [-2.3469417095184326, -1.1526339054107666], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emma', [-1.8469417095184326, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie Brown', [-1.2219417095184326, -0.8041943311691284], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel B', [-1.9719417095184326, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Melanie Brown', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Posh Spice'}

Key: 320893582517647281576262121316948748394
Value: {'question': 'What are the international registration letters of a vehicle from Algeria?', 'responses': [('A.', [-1.665157675743103, -2.3545894622802734], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L', [-4.540157794952393, -0.8870145082473755], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A', [-1.665157675743103, -1.4795894622802734], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AA', [-3.5401577949523926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AZ', [-2.7901577949523926, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AL', [-1.290157675743103, -0.2618614137172699], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A.', [-1.665157675743103, -2.3545894622802734], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AL', [-1.290157675743103, -0.2618614137172699], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AL', [-1.290157675743103, -0.2618614137172699], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AG', [-4.290157794952393, -0.09427091479301453], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.193549604098133, 'reference': 'DZ'}

Key: 135658736759552543974668859108798582601
Value: {'question': 'How did Jock die in Dallas?', 'responses': [('Poisoned', [-4.492990970611572, -0.842820405960083, -0.9875714778900146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was killed', [-0.8679909110069275, -0.8270969986915588, -1.9317923784255981], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stabbed in', [-3.6179909706115723, 0.0, -1.1367416381835938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In the', [-3.4929909706115723, -1.5745810270309448, -2.525545835494995], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poisonous snake', [-4.492990970611572, -2.717820405960083, -1.8824845552444458], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He fell from', [-0.8679909110069275, -2.577096939086914, -1.9407824277877808], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stabbed in', [-3.6179909706115723, 0.0, -1.1367416381835938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('From an embolism', [-4.367990970611572, -2.4944629669189453, -4.270832061767578], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He tripped and', [-0.8679909110069275, -5.077096939086914, -1.0680314302444458], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was hit', [-0.8679909110069275, -0.8270969986915588, -2.0567922592163086], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Poisoned', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Helicopter accident'}

Key: 196856727008913026828772628800502836163
Value: {'question': 'What star sign is Michael Caine?', 'responses': [('Leo', [-2.264141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capricorn', [-2.764141321182251, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.139141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.139141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scorpio', [-2.826641321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [-2.326641321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.139141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.139141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.139141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo', [-2.264141321182251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Leo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': 'Pisces'}

Key: 178518457440810724135197632631752915438
Value: {'question': 'Who wrote the novel Evening Class?', 'responses': [('Kingsley Amis', [-2.843869209289551, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Salman Rushdie', [-3.781369209289551, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Higgins', [-4.468869209289551, -0.30696916580200195, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kingsley Amis', [-2.843869209289551, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Higgins', [-4.468869209289551, -0.30696916580200195, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anthony Burgess', [-3.718869209289551, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ken Follett', [-3.218869209289551, -1.137794017791748, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Orwell', [-3.093869209289551, -0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Clavell', [-3.968869209289551, -2.0225868225097656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Caryl Churchill', [-3.468869209289551, -1.8296610116958618, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kingsley Amis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Maeve Binchy'}

Key: 243961761631778784274803218701641692478
Value: {'question': 'Which country does the airline Air Pacific come from?', 'responses': [('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which innovation for the car was developed by Prince Henry of Prussia in 1911?', 'responses': [('Self-starter', [-2.294978141784668, -0.029750416055321693, -1.0462744235992432], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The spare tyre', [-1.4199780225753784, -3.5663578510284424, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The radio', [-1.4199780225753784, -4.941357612609863, -0.02630021423101425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The radiator', [-1.4199780225753784, -4.316357612609863, -0.1471443474292755], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Electric starter', [-2.544978141784668, -0.5102577209472656, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Electric lighting', [-2.544978141784668, -3.6352577209472656, -0.18183590471744537], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Self-starter', [-2.294978141784668, -0.029750416055321693, -1.0462744235992432], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Automatic self-', [-2.919978141784668, -4.047285079956055, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('self-starter', [-3.794978141784668, 0.0, -0.8869634866714478], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Air conditioning', [-2.919978141784668, -0.9964760541915894, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Self-starter', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Windshield wipers'}

Key: 105450655671891765775490572252870768368
Value: {'question': 'How is musician William Lee Conley better known?', 'responses': [('As William Lee', [-1.3043986558914185, -2.2317867279052734, -0.7505563497543335], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('By his stage', [-3.429398536682129, -0.14267508685588837, -0.07530667632818222], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As Bill Haley', [-1.3043986558914185, -2.4817867279052734, -0.9696273803710938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Murray', [-2.679398536682129, -3.6463143825531006, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Shatner', [-3.554398536682129, -3.6662509441375732, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('by his stage', [-3.554398536682129, -0.1602240949869156, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('WIlli', [-3.804398536682129, -2.970564603805542, -1.80635666847229], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as Willie Nelson', [-2.179398536682129, -2.8264107704162598, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Willy Nelson', [-3.679398536682129, -1.8389405012130737, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As William DeV', [-1.3043986558914185, -2.2317867279052734, -2.188056468963623], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'As William Lee', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Big Bill Broonzy'}

Key: 16995382464582584603001219352329872199
Value: {'question': 'How is Joan Molinsky better known?', 'responses': [('She was', [-2.249019145965576, -0.6120806932449341], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('She was', [-2.249019145965576, -0.6120806932449341], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Collins', [-2.249019145965576, -1.1693084239959717], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('She is', [-2.249019145965576, -1.487080693244934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Singer and', [-4.749019145965576, -2.4357640743255615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("As '", [-0.749019205570221, -3.682549476623535], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As the', [-0.749019205570221, -1.3075495958328247], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Author of', [-4.624019145965576, -0.5555494427680969], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As the', [-0.749019205570221, -1.3075495958328247], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Actress', [-3.874019145965576, -0.3068070113658905], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'She was', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Joan Rivers'}

Key: 253645208191160918627550358624861503365
Value: {'question': 'In which branch of the arts is Patricia Neary famous?', 'responses': [('Theatre', [-1.6680947542190552, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Acting', [-2.4180946350097656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sculpture', [-3.9180946350097656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theatre', [-1.6680947542190552, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theatre', [-1.6680947542190552, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Literature', [-3.1680946350097656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theatre', [-1.6680947542190552, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-2.7930946350097656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dance', [-2.6680946350097656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Literature', [-3.1680946350097656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Theatre', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Ballet'}

Key: 306899696324794934554438398647872015297
Value: {'question': "Which country is Europe's largest silk producer?", 'responses': [('Italy', [-1.4569863080978394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-1.7069863080978394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-0.8944863080978394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-4.206986427307129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uzbekistan', [-3.331986427307129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-1.4569863080978394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-0.8944863080978394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-1.7069863080978394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-1.7069863080978394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-4.269486427307129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Italy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696344, 'reference': 'Italy'}

Key: 90802376553055510434825222912642764024
Value: {'question': 'The VS-300 was a type of what?', 'responses': [('Camera', [-2.9534289836883545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Computer', [-2.3284289836883545, -0.04991527646780014], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Plane', [-3.9534289836883545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aircraft carrier', [-2.0784289836883545, -2.578889846801758], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helicopter', [-2.8284289836883545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nuclear missile', [-4.078429222106934, -1.5606619119644165], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('aircraft', [-3.9534289836883545, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Satellite dish', [-3.8284289836883545, -3.9406206607818604], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Airliner', [-4.203429222106934, -1.1016098260879517], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Satellite', [-3.8284289836883545, -0.06562070548534393], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Camera', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Helicopter'}

Key: 163253315705630916128547411891325493364
Value: {'question': 'At which university did Joseph Goebbels become a doctor of philosophy?', 'responses': [('Heidelberg', [-1.4617400169372559, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heidelberg', [-1.4617400169372559, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heidelberg University', [-1.4617400169372559, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leipzig University', [-2.836740016937256, -1.5019290447235107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Berlin', [-1.0867400169372559, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Berlin', [-1.0867400169372559, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Berlin University', [-1.0867400169372559, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heidelberg', [-1.4617400169372559, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heidelberg University', [-1.4617400169372559, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marburg', [-3.649240016937256, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Heidelberg', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Heidelberg'}

Key: 300332967360249423035223918083705385715
Value: {'question': "Which prince is Queen Elizabeth II's youngest son?", 'responses': [('Edward', [-0.37153908610343933, -0.19009120762348175], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.37153908610343933, -0.19009120762348175], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.37153908610343933, -0.19009120762348175], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Edward', [-1.3715391159057617, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.37153908610343933, -0.19009120762348175], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.37153908610343933, -0.19009120762348175], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.37153908610343933, -0.19009120762348175], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.37153908610343933, -0.19009120762348175], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Edward', [-1.3715391159057617, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Edward', [-1.3715391159057617, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Edward', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Edward'}

Key: 184858692485181861109930880160209958960
Value: {'question': "When did the founder of Jehovah's Witnesses say the world would end?", 'responses': [('1914', [-0.1453278809785843, 0.0, -0.12692804634571075, -0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1914', [-0.1453278809785843, 0.0, -0.12692804634571075, -0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1914', [-0.1453278809785843, 0.0, -0.12692804634571075, -0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1975', [-0.1453278809785843, 0.0, -0.12692804634571075, -1.5019290447235107, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1914', [-0.1453278809785843, 0.0, -0.12692804634571075, -0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1914', [-0.1453278809785843, 0.0, -0.12692804634571075, -0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1975', [-0.1453278809785843, 0.0, -0.12692804634571075, -1.5019290447235107, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1873', [-0.1453278809785843, 0.0, -2.1269280910491943, -0.06993623077869415, -3.145914077758789, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1914', [-0.1453278809785843, 0.0, -0.12692804634571075, -0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1914', [-0.1453278809785843, 0.0, -0.12692804634571075, -0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1914', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': '1914'}

Key: 247779724035570137361318661217593455738
Value: {'question': 'Who found the remains of the Titanic?', 'responses': [('Robert Ballard', [-0.11951319873332977, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.11951319873332977, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.11951319873332977, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.11951319873332977, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.11951319873332977, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.11951319873332977, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.11951319873332977, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.11951319873332977, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ballard', [-0.11951319873332977, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Parker', [-4.619513034820557, -3.3065009117126465, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert Ballard', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Robert Ballard'}

Key: 233086516018861420173853199482489798024
Value: {'question': 'Who was the only Spice Girl not to have a middle name?', 'responses': [('Mel C', [-2.0998072624206543, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emma', [-1.2248072624206543, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel B', [-2.0998072624206543, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emma', [-1.2248072624206543, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie C', [-1.3498072624206543, -1.3960905075073242], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Geri', [-1.5998072624206543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Geri', [-1.5998072624206543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Geri', [-1.5998072624206543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emma B', [-1.2248072624206543, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel C', [-2.0998072624206543, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mel C', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': 'Posh Spice'}

Key: 320893582517647281576262121316948748394
Value: {'question': 'What are the international registration letters of a vehicle from Algeria?', 'responses': [('AN', [-4.097071647644043, -0.1331334263086319], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AK', [-4.222071647644043, -0.13730183243751526], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A7', [-1.9720714092254639, -4.27614688873291], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AM', [-3.847071409225464, -0.14027397334575653], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AO,', [-3.597071409225464, -3.684086561203003], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AZ', [-2.847071409225464, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AN', [-4.097071647644043, -0.1331334263086319], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AL', [-1.2220714092254639, -0.12379933148622513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AL', [-1.2220714092254639, -0.12379933148622513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AD', [-3.597071409225464, -0.07760052382946014], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'AN', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'DZ'}

Key: 135658736759552543974668859108798582601
Value: {'question': 'How did Jock die in Dallas?', 'responses': [('He died', [-1.1188675165176392, -2.6314311027526855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('gunshot', [-4.36886739730835, -0.378857284784317], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('She was', [-4.24386739730835, -0.8185634613037109], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His horse', [-3.7438673973083496, -2.811079978942871], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was', [-1.1188675165176392, -0.3814312219619751], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was', [-1.1188675165176392, -0.3814312219619751], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Murdered', [-3.6188673973083496, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('By heart', [-3.2438673973083496, -3.7671961784362793], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('She fell', [-4.24386739730835, -2.818563461303711], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Was blown', [-3.9938673973083496, -3.886909008026123], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'He died', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Helicopter accident'}

Key: 196856727008913026828772628800502836163
Value: {'question': 'What star sign is Michael Caine?', 'responses': [('Virgo', [-1.7656174898147583, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cancer', [-2.7031173706054688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pisces', [-2.7656173706054688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [-3.0156173706054688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.7656174898147583, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.7656174898147583, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cancer', [-2.7031173706054688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Taurus', [-2.0781173706054688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo', [-1.8906174898147583, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Taurus', [-2.0781173706054688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Virgo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Pisces'}

Key: 178518457440810724135197632631752915438
Value: {'question': 'Who wrote the novel Evening Class?', 'responses': [('Alan Sillito', [-2.02876353263855, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Christopher Isher', [-4.591263771057129, -0.32757747173309326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('J K Rowling', [-3.09126353263855, -2.2646408081054688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Lanchester', [-2.46626353263855, -4.205691337585449, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Steinbeck', [-2.46626353263855, -3.0806915760040283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur C.', [-4.028763771057129, -0.9151657223701477, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Greene', [-2.96626353263855, -0.12325379252433777, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Greene', [-2.96626353263855, -0.12325379252433777, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doris Lessing', [-3.71626353263855, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Sillito', [-2.02876353263855, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alan Sillito', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Maeve Binchy'}

Key: 243961761631778784274803218701641692478
Value: {'question': 'Which country does the airline Air Pacific come from?', 'responses': [('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Fiji', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Fiji'}

Key: 41646431874729323981674074789947631340
<<<<<<< HEAD
Value: {'question': 'In which branch of the arts does Allegra Kent work?', 'responses': [('Ballet', [-2.2670226097106934, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Journalism', [-4.392022609710693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Film', [-3.5170226097106934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dance', [-2.3920226097106934, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('theatre', [-3.8920226097106934, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photography', [-3.0170226097106934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theater', [-3.1420226097106934, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('music', [-3.3920226097106934, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Drama', [-3.7670226097106934, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theatre', [-2.6420226097106934, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ballet', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Ballet'}

Key: 138619452816654392010171033279107778251
Value: {'question': "Who had a 70s No 1 hit with Billy, Don't Be A Hero?", 'responses': [('Ian Levine', [-4.06673526763916, -2.3224525451660156, -0.1821342259645462], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Vogues', [-0.9417351484298706, -4.298211574554443, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('10', [-4.31673526763916, -0.6383898854255676, -0.14368882775306702], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Elton John', [-3.81673526763916, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Supremes', [-0.9417351484298706, -4.548211574554443, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Sweet', [-0.9417351484298706, -2.3607115745544434, -0.1959807574748993], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Elton John', [-3.81673526763916, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ("Shakin'", [-4.44173526763916, -0.4512138366699219, -0.6325989961624146], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('George Michael', [-4.44173526763916, -3.430720567703247, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Trammps', [-0.9417351484298706, -3.4232115745544434, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ian Levine', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Bo Donaldson & The Heywoods'}

Key: 68370943988147696545458075982090652448
Value: {'question': 'Banting and Best pioneered the use of what?', 'responses': [('Insulin in', [-0.3484445810317993, -3.306925058364868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.3484445810317993, -0.306924968957901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('insulin', [-1.2234445810317993, -0.566888153553009], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin to', [-0.3484445810317993, -2.431925058364868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.3484445810317993, -0.306924968957901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.3484445810317993, -0.306924968957901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('insulin', [-1.2234445810317993, -0.566888153553009], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.3484445810317993, -0.306924968957901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.3484445810317993, -0.306924968957901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.3484445810317993, -0.306924968957901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Insulin in', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Insulin'}

Key: 144517269965593658162921329947363271461
Value: {'question': 'Who directed the movie La Dolce Vita?', 'responses': [('Federico Fellini', [-0.6037852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-0.7912852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.6037852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-0.7912852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-0.7912852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-0.7912852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-0.7912852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-0.7912852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.6037852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.6037852764129639, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'In which branch of the arts does Allegra Kent work?', 'responses': [('Drama', [-3.1467747688293457, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dance', [-3.0217747688293457, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Music', [-1.8967746496200562, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theatre', [-1.3967746496200562, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Acting', [-2.0217747688293457, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dancing', [-4.646774768829346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Film and', [-3.3967747688293457, -2.2090752124786377], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Literature', [-3.3967747688293457, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Music', [-1.8967746496200562, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dance', [-3.0217747688293457, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Drama', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811906, 'reference': 'Ballet'}

Key: 138619452816654392010171033279107778251
Value: {'question': "Who had a 70s No 1 hit with Billy, Don't Be A Hero?", 'responses': [('Mud', [-3.528834581375122, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The K', [-1.028834581375122, -3.1197915077209473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-3.778834581375122, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Specials', [-1.028834581375122, -4.682291507720947], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Osm', [-1.028834581375122, -2.8072915077209473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Real', [-1.028834581375122, -2.3072915077209473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mud', [-3.528834581375122, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sugar', [-1.028834581375122, -4.744791507720947], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eddie &', [-4.403834342956543, -1.888460636138916], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Wonder', [-4.403834342956543, -0.4089920222759247], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mud', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Bo Donaldson & The Heywoods'}

Key: 68370943988147696545458075982090652448
Value: {'question': 'Banting and Best pioneered the use of what?', 'responses': [('Insulin', [-0.07888974994421005, -0.20059938728809357], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.07888974994421005, -0.20059938728809357], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.07888974994421005, -0.20059938728809357], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.07888974994421005, -0.20059938728809357], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.07888974994421005, -0.20059938728809357], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.07888974994421005, -0.20059938728809357], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('insulin', [-2.578889846801758, -0.3143913447856903], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.07888974994421005, -0.20059938728809357], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.07888974994421005, -0.20059938728809357], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-0.07888974994421005, -0.20059938728809357], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Insulin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Insulin'}

Key: 144517269965593658162921329947363271461
Value: {'question': 'Who directed the movie La Dolce Vita?', 'responses': [('Federico Fellini', [-0.28115010261535645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-1.4061501026153564, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.28115010261535645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fellini', [-1.4061501026153564, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.28115010261535645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.28115010261535645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.28115010261535645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.28115010261535645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.28115010261535645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Federico Fellini', [-0.28115010261535645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Federico Fellini', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Federico Fellini'}

Key: 302885358029123359633304891032815667654
<<<<<<< HEAD
Value: {'question': 'Which country does the airline LACSA come from?', 'responses': [('Argentina', [-1.3570106029510498, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latin America', [-2.98201060295105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-1.3570106029510498, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Costa Rica', [-3.48201060295105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-4.044510841369629, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-2.35701060295105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-1.3570106029510498, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peru', [-2.79451060295105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [-1.8570106029510498, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Costa Rica', [-3.48201060295105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Argentina', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Costa Rica'}

Key: 121614553431962287789970670737176338163
Value: {'question': 'Who directed 2001: A Space Odyssey?', 'responses': [('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-0.06993623077869415, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which country does the airline LACSA come from?', 'responses': [('Colombia', [-2.165161371231079, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-1.602661371231079, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [-1.602661371231079, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Costa Rica', [-3.477661371231079, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-3.165161371231079, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [-1.602661371231079, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-3.415161371231079, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-2.165161371231079, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [-1.602661371231079, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-1.602661371231079, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Colombia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696344, 'reference': 'Costa Rica'}

Key: 121614553431962287789970670737176338163
Value: {'question': 'Who directed 2001: A Space Odyssey?', 'responses': [('Stanley Kubrick', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Stanley Kubrick', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Stanley Kubrick'}

Key: 276661339488905452418133643034404742666
<<<<<<< HEAD
Value: {'question': 'Which is the largest of the Japanese Volcano Islands?', 'responses': [('Miyajima', [-1.439574956893921, -2.5970113277435303], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miyake', [-1.439574956893921, -0.3157612681388855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miyake', [-1.439574956893921, -0.3157612681388855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hokkaido', [-0.6895750164985657, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hoka', [-3.627074956893921, -0.7792724967002869], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Honshu', [-2.502074956893921, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kyushu', [-3.564574956893921, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miyake', [-1.439574956893921, -0.3157612681388855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miyake', [-1.439574956893921, -0.3157612681388855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hokkaido', [-0.6895750164985657, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Miyajima', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1935496040981333, 'reference': 'Iwo Jima'}

Key: 123824808440534981830277054767715858766
Value: {'question': 'Ezzard Charles was a world champion in which sport?', 'responses': [('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which is the largest of the Japanese Volcano Islands?', 'responses': [('Hokkaido', [-0.5719698667526245, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Honshu', [-2.384469985961914, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hokkaido', [-0.5719698667526245, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shikoku', [-4.571969985961914, -0.6170681118965149], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hokkaido', [-0.5719698667526245, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hokkaido', [-0.5719698667526245, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hokkaido', [-0.5719698667526245, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hokkaido', [-0.5719698667526245, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hokkaido', [-0.5719698667526245, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hokkaido', [-0.5719698667526245, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hokkaido', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Iwo Jima'}

Key: 123824808440534981830277054767715858766
Value: {'question': 'Ezzard Charles was a world champion in which sport?', 'responses': [('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Boxing', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Boxing'}

Key: 43719036245228933814349708539677635651
<<<<<<< HEAD
Value: {'question': 'Who was the first woman to make a solo flight across the Atlantic?', 'responses': [('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-2.6949362754821777, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-0.06993623077869415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Amelia Earhart', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Amelia Earhart'}

Key: 282165350712001499709903877059286765627
Value: {'question': 'Which port lies between Puget Sound and Lake Washington?', 'responses': [('Tacoma', [-2.3376288414001465, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tacoma', [-2.3376288414001465, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.15012885630130768, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tacoma', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Seattle'}

Key: 160240484577993282159604066154906820320
Value: {'question': 'In which city were Rotary Clubs set up in 1905?', 'responses': [('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago,', [0.0, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Who was the first woman to make a solo flight across the Atlantic?', 'responses': [('Amelia Earhart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Amelia Earhart', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Amelia Earhart'}

Key: 282165350712001499709903877059286765627
Value: {'question': 'Which port lies between Puget Sound and Lake Washington?', 'responses': [('Seattle', [-0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Seattle', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Seattle'}

Key: 160240484577993282159604066154906820320
Value: {'question': 'In which city were Rotary Clubs set up in 1905?', 'responses': [('Chicago', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago,', [0.0, -2.6949362754821777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chicago', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Chicago'}

Key: 145732201166315032203165061438723890565
<<<<<<< HEAD
Value: {'question': 'Who became US Vice President when Spiro Agnew resigned?', 'responses': [('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Mondale', [-2.3024609088897705, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.2399609088897705, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Mondale', [-2.3024609088897705, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gerald Ford', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Gerald Ford'}

Key: 4002544065385692370631602937620156105
Value: {'question': 'In which decade of the 20th century was Billy Crystal born?', 'responses': [('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [-0.06196761503815651, 0.0, 0.0, 0.0, -1.2996524572372437, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [-0.06196761503815651, 0.0, 0.0, 0.0, -1.2996524572372437, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [-0.06196761503815651, 0.0, 0.0, 0.0, -0.42465248703956604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1948', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': '1940s'}

Key: 168006412715185156036821738494381204181
Value: {'question': 'Which George invented the Kodak roll-film camera?', 'responses': [('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Who became US Vice President when Spiro Agnew resigned?', 'responses': [('Gerald Ford', [-0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nelson Rockefeller', [-2.753335475921631, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerald Ford', [-0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gerald Ford', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Gerald Ford'}

Key: 4002544065385692370631602937620156105
Value: {'question': 'In which decade of the 20th century was Billy Crystal born?', 'responses': [('1948', [0.0, 0.0, 0.0, 0.0, -0.7268679738044739, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [0.0, 0.0, 0.0, 0.0, -0.7268679738044739, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, -1.351867914199829, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948s', [0.0, 0.0, 0.0, 0.0, -0.7268679738044739, -2.6949362754821777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [0.0, 0.0, 0.0, 0.0, -0.7268679738044739, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [0.0, 0.0, 0.0, 0.0, -0.7268679738044739, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, -1.351867914199829, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1944', [0.0, 0.0, 0.0, 0.0, -2.601867914199829, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [0.0, 0.0, 0.0, 0.0, -0.7268679738044739, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1948', [0.0, 0.0, 0.0, 0.0, -0.7268679738044739, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1948', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': '1940s'}

Key: 168006412715185156036821738494381204181
Value: {'question': 'Which George invented the Kodak roll-film camera?', 'responses': [('Eastman', [-0.03364565595984459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.03364565595984459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.03364565595984459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.03364565595984459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.03364565595984459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.03364565595984459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.03364565595984459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.03364565595984459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.03364565595984459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastman', [-0.03364565595984459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Eastman', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Eastman'}

Key: 255749630304793004609172428017250520357
<<<<<<< HEAD
Value: {'question': 'Which series had the characters Felix Unger and Oscar Madison?', 'responses': [('Odd Couple', [-1.1722959280014038, -0.04570977762341499], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sanford and', [-4.234796047210693, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odd Couple', [-1.1722959280014038, -0.04570977762341499], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('<i>', [-3.0472960472106934, -1.4881463050842285], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The', [-1.6097959280014038, -0.27358102798461914], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Odd', [-1.2347959280014038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seinfeld', [-3.4222960472106934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('<i>', [-3.0472960472106934, -1.4881463050842285], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odd Couple', [-1.1722959280014038, -0.04570977762341499], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Odd', [-1.2347959280014038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Odd Couple', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'The Odd Couple'}

Key: 21853083108770756378834560008172198066
Value: {'question': 'Who along with Philips developed the CD in the late 70s?', 'responses': [('Philips &', [-0.5266709327697754, -3.593536376953125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philips &', [-0.5266709327697754, -3.593536376953125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philips and', [-0.5266709327697754, -1.343536376953125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toshiba', [-4.339170932769775, -0.4072478413581848], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philips and', [-0.5266709327697754, -1.343536376953125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sony', [-1.0891709327697754, -0.27448803186416626], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philips and', [-0.5266709327697754, -1.343536376953125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toshiba and', [-4.339170932769775, -1.90724778175354], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sony', [-1.0891709327697754], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philips', [-0.5266709327697754, -0.4685364365577698], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Philips &', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9502705392332347, 'reference': 'Sony'}

Key: 98125762700425547512337024627292480172
Value: {'question': 'Where is the multinational Nestle based?', 'responses': [('Vevey', [-0.9740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vevey', [-0.9740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vevey', [-0.9740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Vevey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Switzerland'}

Key: 211834833514264067819618047124103821429
Value: {'question': "Do You Know Where You're Going To? was the theme from which film?", 'responses': [('A Few', [-2.4105844497680664, -4.592744827270508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cabaret', [-3.6605844497680664, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Death of', [-4.535584449768066, -2.2320127487182617], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [-4.535584449768066, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Casablanca', [-4.348084449768066, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harold &', [-4.410584449768066, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clockwork', [-4.410584449768066, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Clock', [-2.4105844497680664, -0.5302446484565735], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Willy Won', [-4.223084449768066, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Clock', [-2.4105844497680664, -0.5302446484565735], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A Few', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Mahogany'}

Key: 68253144028380128918616534733933436531
Value: {'question': '19969 was the Chinese year of which creature?', 'responses': [('Ox', [-2.82932448387146, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dragon', [-2.45432448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snake', [-2.20432448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pig', [-2.57932448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sheep', [-3.82932448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monkey', [-2.82932448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monkey', [-2.82932448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rat', [-1.82932448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ox', [-2.82932448387146, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horse', [-3.07932448387146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ox', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Rat'}

Key: 323563735345956029941176144195105218928
Value: {'question': 'In the 90s how many points have been awarded for finishing second in a Grand Prix?', 'responses': [('Two', [-4.087886810302734, -0.11409559100866318], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.08788697421550751, -1.5181797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.08788697421550751, -2.3931798934936523], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.08788697421550751, -1.8931797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.08788697421550751, -1.2681797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.08788697421550751, -1.2681797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.08788697421550751, -1.2681797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.08788697421550751, -1.2681797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.08788697421550751, -1.8931797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.08788697421550751, -1.2681797742843628], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Two', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': '6'}

Key: 333597564054129115162605069983064115255
Value: {'question': 'Stapleton international airport is in which US state?', 'responses': [('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denver', [-2.4118120670318604, -0.31378084421157837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-0.2243119776248932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Colorado', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Colorado'}

Key: 167610813939300460861054993907759624787
Value: {'question': "What was Kevin Kline's first movie?", 'responses': [('Hair', [-4.009339809417725, -0.34695637226104736], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Silverado', [-2.1655898094177246, -0.15633682906627655], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Big', [-1.6343398094177246, -0.8651944994926453], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hair', [-4.009339809417725, -0.34695637226104736], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Fish', [-2.4155898094177246, -0.6200746297836304], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Silverado (', [-2.1655898094177246, -2.281336784362793], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Big', [-1.6343398094177246, -0.8651944994926453], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Fish', [-2.4155898094177246, -0.6200746297836304], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-3.1343398094177246, -0.6055405139923096], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grand Canyon', [-4.806214809417725, -0.3521506190299988], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hair', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460894, 'reference': "Sophie's Choice"}

Key: 320055430866320295958709776981664299747
Value: {'question': 'Which actor had a Doberman Pinscher called Kirk?', 'responses': [('Kirk Douglas', [-0.9816439151763916, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirk Douglas', [-0.9816439151763916, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Nicholson', [-3.4816439151763916, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirk Douglas', [-0.9816439151763916, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Burton', [-3.2316439151763916, -1.2900346517562866, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirk Douglas', [-0.9816439151763916, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirk Douglas', [-0.9816439151763916, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel Gibson', [-3.9816439151763916, -0.11282224208116531, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Harris', [-3.2316439151763916, -2.790034770965576, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirk Douglas', [-0.9816439151763916, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kirk Douglas', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'William Shatner'}

Key: 211958119303777843176176348207140663034
Value: {'question': 'What day of the week was the Wall Street Crash?', 'responses': [('Black Monday', [-2.7092199325561523, -2.1478354930877686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-1.0217199325561523, -0.15132087469100952], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-1.0217199325561523, -0.15132087469100952], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuesday', [-1.0217199325561523, -0.1346825510263443], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monday', [-1.8967199325561523, -0.09362326562404633], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuesday', [-1.0217199325561523, -0.1346825510263443], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuesday', [-1.0217199325561523, -0.1346825510263443], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-1.0217199325561523, -0.15132087469100952], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-1.0217199325561523, -0.15132087469100952], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuesday', [-1.0217199325561523, -0.1346825510263443], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Black Monday', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0549201679861442, 'reference': 'Thursday'}

Key: 196168567317702710612261720488645759670
Value: {'question': 'The US signed a treaty with which country to allow the construction of the Panama Canal?', 'responses': [('Colombia', [-0.9328840970993042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.1828840970993042, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.1828840970993042, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.9328840970993042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.1828840970993042, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.9328840970993042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.9328840970993042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Panama', [-1.8703840970993042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.9328840970993042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.1828840970993042, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Colombia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Columbia'}

Key: 139566501576575618039115175274670282314
Value: {'question': "What was Prince's last No 1 of the 80s?", 'responses': [('Kiss', [-0.8057247996330261, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Kiss', [-2.680724859237671, -0.7734470367431641], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.8057247996330261, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.8057247996330261, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.8057247996330261, -3.10093355178833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Purple Rain', [-2.930724859237671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('When Do', [-2.305724859237671, -0.04941174387931824], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Raspberry Ber', [-2.805724859237671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.8057247996330261, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.8057247996330261, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kiss', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Batdance'}

Key: 322028746654654665756847932195004492378
Value: {'question': 'Man In The Mirror first featured on which Michel Jackson album?', 'responses': [('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.1641504317522049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which series had the characters Felix Unger and Oscar Madison?', 'responses': [('Odd Couple', [-1.2236855030059814, -0.0658353641629219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odd Couple', [-1.2236855030059814, -0.0658353641629219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odd Couple', [-1.2236855030059814, -0.0658353641629219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Odd', [-0.6611854434013367, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Odd', [-0.6611854434013367, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seinfeld', [-3.4111855030059814, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odd Couple', [-1.2236855030059814, -0.0658353641629219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odd Couple', [-1.2236855030059814, -0.0658353641629219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Odd', [-0.6611854434013367, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odd Man', [-1.2236855030059814, -2.753335475921631], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Odd Couple', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'The Odd Couple'}

Key: 21853083108770756378834560008172198066
Value: {'question': 'Who along with Philips developed the CD in the late 70s?', 'responses': [('Philips and', [-1.2159935235977173, -0.9533784985542297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sony and', [-0.4034935235977173, -2.3502066135406494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sony', [-0.4034935235977173, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sony', [-0.4034935235977173, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toshiba', [-4.028493404388428, -0.20567165315151215], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sony', [-0.4034935235977173, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sony', [-0.4034935235977173, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sony', [-0.4034935235977173, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philips', [-1.2159935235977173, -0.7033784985542297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sony', [-0.4034935235977173, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Philips and', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Sony'}

Key: 98125762700425547512337024627292480172
Value: {'question': 'Where is the multinational Nestle based?', 'responses': [('Switzerland', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vevey', [-1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vevey', [-1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Switzerland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Switzerland'}

Key: 211834833514264067819618047124103821429
Value: {'question': "Do You Know Where You're Going To? was the theme from which film?", 'responses': [('Chitty', [-2.924419403076172, -0.13458658754825592], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Psycho', [-3.736919403076172, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Midnight Cowboy', [-3.236919403076172, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clockwork', [-4.799419403076172, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bonnie and', [-4.549419403076172, -0.3506864011287689], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Willy Won', [-3.986919403076172, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('My Fair', [-4.736919403076172, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Superman', [-4.674419403076172, -0.3011341392993927], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Poseidon', [-0.9869194030761719, -4.746837615966797], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Graduate', [-0.9869194030761719, -0.8718375563621521], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chitty', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Mahogany'}

Key: 68253144028380128918616534733933436531
Value: {'question': '19969 was the Chinese year of which creature?', 'responses': [('Rat', [-2.2914531230926514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snake', [-2.2914531230926514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rabbit', [-2.1664531230926514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger', [-3.7914531230926514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horse', [-2.6664531230926514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monkey', [-2.6664531230926514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rat', [-2.2914531230926514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pig', [-2.6664531230926514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horse', [-2.6664531230926514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snake', [-2.2914531230926514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Rat'}

Key: 323563735345956029941176144195105218928
Value: {'question': 'In the 90s how many points have been awarded for finishing second in a Grand Prix?', 'responses': [('5', [-0.09095871448516846, -2.2317299842834473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.09095871448516846, -2.6067299842834473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.09095871448516846, -1.6067301034927368], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.09095871448516846, -2.2317299842834473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zero', [-3.590958595275879, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.09095871448516846, -2.3567299842834473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.09095871448516846, -2.2317299842834473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.09095871448516846, -1.2317301034927368], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.09095871448516846, -2.2317299842834473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.09095871448516846, -1.2317301034927368], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '5', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': '6'}

Key: 333597564054129115162605069983064115255
Value: {'question': 'Stapleton international airport is in which US state?', 'responses': [('Virginia', [-2.3997716903686523, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-1.837271809577942, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.3997716903686523, -1.1041306257247925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-1.837271809577942, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wyoming', [-3.0247716903686523, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-3.5247716903686523, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wyoming', [-3.0247716903686523, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virginia', [-2.3997716903686523, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nebraska', [-4.337271690368652, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-3.2747716903686523, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Virginia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Colorado'}

Key: 167610813939300460861054993907759624787
Value: {'question': "What was Kevin Kline's first movie?", 'responses': [('Shampoo', [-3.3650448322296143, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A night', [-3.0544979572296143, -2.3232979774475098], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pirates', [-1.2068417072296143, -4.453913688659668], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Milk Money', [-4.359185218811035, -2.268521547317505], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rich Kids', [-4.054497718811035, -2.269376516342163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great', [-1.2068417072296143, -1.242976427078247], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bad News', [-4.816216468811035, -0.20851558446884155], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('An Un', [-3.3728573322296143, -1.3438211679458618], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('American Hot', [-3.1912167072296143, -0.4679354429244995], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Silverado', [-2.7537167072296143, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Shampoo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': "Sophie's Choice"}

Key: 320055430866320295958709776981664299747
Value: {'question': 'Which actor had a Doberman Pinscher called Kirk?', 'responses': [('Bruce Willis', [-3.241410493850708, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirk Douglas', [-1.991410493850708, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Douglas', [-2.741410493850708, -1.8369240760803223, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gene Hackman', [-3.116410493850708, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gary Oldman', [-4.366410255432129, -1.2089085578918457, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burt Reynolds', [-3.741410493850708, -0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Gere', [-2.741410493850708, -1.026384949684143, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bruce Willis', [-3.241410493850708, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Nicholson', [-3.116410493850708, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Paxton', [-4.366410255432129, -2.3350296020507812, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bruce Willis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'William Shatner'}

Key: 211958119303777843176176348207140663034
Value: {'question': 'What day of the week was the Wall Street Crash?', 'responses': [('Thursday', [-0.9040952920913696, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-0.9040952920913696, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-0.9040952920913696, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuesday', [-1.0915952920913696, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-0.9040952920913696, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuesday', [-1.0915952920913696, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuesday', [-1.0915952920913696, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-0.9040952920913696, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Black Thursday', [-2.77909517288208, -0.4322863519191742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thursday', [-0.9040952920913696, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Thursday', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Thursday'}

Key: 196168567317702710612261720488645759670
Value: {'question': 'The US signed a treaty with which country to allow the construction of the Panama Canal?', 'responses': [('Columbia', [-1.8641092777252197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Panama', [-1.8016092777252197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Panama', [-1.8016092777252197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.5516093373298645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.5516093373298645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.5516093373298645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.5516093373298645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.8641092777252197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.8641092777252197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Panama', [-1.8016092777252197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Columbia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Columbia'}

Key: 139566501576575618039115175274670282314
Value: {'question': "What was Prince's last No 1 of the 80s?", 'responses': [('Kiss', [-0.38206541538238525, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.38206541538238525, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.38206541538238525, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.38206541538238525, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('When Do', [-2.8820652961730957, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-4.194565296173096, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.38206541538238525, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Little Red', [-2.8820652961730957, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Batdance', [-3.1320652961730957, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiss', [-0.38206541538238525, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kiss', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Batdance'}

Key: 322028746654654665756847932195004492378
Value: {'question': 'Man In The Mirror first featured on which Michel Jackson album?', 'responses': [('Thriller', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Thriller', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Bad'}

Key: 196985574513020705262105449380613604309
<<<<<<< HEAD
Value: {'question': 'Where was the first battle with US involvement in the Korean War?', 'responses': [('Pusan Perimeter', [-1.3669624328613281, 0.0, -0.404762864112854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Inchon', [-1.3669624328613281, -0.411177396774292, -0.4267236590385437], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Chosin', [-1.8669624328613281, -1.3302773237228394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pusan Perimeter', [-1.3669624328613281, 0.0, -0.404762864112854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pusan', [-1.8669624328613281, -1.4552773237228394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pusan Perimeter', [-1.3669624328613281, 0.0, -0.404762864112854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pusan Perimeter', [-1.3669624328613281, 0.0, -0.404762864112854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pusan', [-1.8669624328613281, -1.4552773237228394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Korean attack', [-3.116962432861328, -1.9102240800857544, -2.8285393714904785], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pusan Perimeter', [-1.3669624328613281, 0.0, -0.404762864112854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pusan Perimeter', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Suwon'}

Key: 10881289729456216200873296904560161752
Value: {'question': 'On which Caribbean island did Princess Diana spend he first Christmas after her divorce was announced?', 'responses': [('The Cayman', [-2.991489887237549, -4.188499450683594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.49148982763290405, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.49148982763290405, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.49148982763290405, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mauritius', [-4.553989887237549, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.49148982763290405, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bahamas', [-2.991489887237549, -0.18849967420101166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbados', [-2.303989887237549, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.49148982763290405, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bahamas', [-2.991489887237549, -0.18849967420101166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Cayman', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Barbuda'}

Key: 235876136254617275667572987595450556287
Value: {'question': 'In which decade was Arnold Schwarzenegger born?', 'responses': [('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Where was the first battle with US involvement in the Korean War?', 'responses': [('In the', [-1.5333993434906006, -2.2560272216796875], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The In', [-1.5333993434906006, -2.3814432621002197], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pork Chop', [-4.15839958190918, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-3.6583993434906006, -0.43682336807250977], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Battle', [-1.5333993434906006, -2.1314432621002197], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Korea', [-2.4083993434906006, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Inchon', [-1.5333993434906006, -0.881027102470398], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pusan', [-2.1583993434906006, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korea', [-2.6583993434906006, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Inchon', [-1.5333993434906006, -0.881027102470398], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'In the', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Suwon'}

Key: 10881289729456216200873296904560161752
Value: {'question': 'On which Caribbean island did Princess Diana spend he first Christmas after her divorce was announced?', 'responses': [('Mustique', [-0.2748793959617615, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.2748793959617615, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('St.', [-3.0873794555664062, -0.8918247222900391], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.2748793959617615, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.2748793959617615, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.2748793959617615, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jamaica', [-2.6498794555664062, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.2748793959617615, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.2748793959617615, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mustique', [-0.2748793959617615, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mustique', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Barbuda'}

Key: 235876136254617275667572987595450556287
Value: {'question': 'In which decade was Arnold Schwarzenegger born?', 'responses': [('1947', [0.0, 0.0, 0.0, -0.04858732968568802, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, -0.04858732968568802, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, -0.04858732968568802, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, -0.04858732968568802, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, -0.04858732968568802, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, -0.04858732968568802, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, -0.04858732968568802, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, -0.04858732968568802, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, -0.04858732968568802, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [0.0, 0.0, 0.0, -0.04858732968568802, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1947', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1950s'}

Key: 25911169994715296157711298168308041513
<<<<<<< HEAD
Value: {'question': 'Which musical featured the song Thank Heaven for Little Girls?', 'responses': [('The King', [-1.6609995365142822, -1.8792431354522705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The King', [-1.6609995365142822, -1.8792431354522705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver!', [-3.4109995365142822, -0.6112474203109741], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guys and', [-3.6609995365142822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Annie', [-2.4109995365142822, -0.5790652632713318], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-2.0359995365142822, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Annie get', [-2.4109995365142822, -3.2040653228759766], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter and', [-4.160999298095703, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('My Fair', [-2.6609995365142822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Pan', [-4.160999298095703, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The King', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Gigi'}

Key: 148252821328110070762037412177102348432
Value: {'question': 'The Queen Elizabeth liner was destroyed by fire in the 70s in which harbour?', 'responses': [('Hamburg', [-3.6800479888916016, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.6175479888916016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sydney', [-1.6800479888916016, -0.30388909578323364], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sydney', [-1.6800479888916016, -0.30388909578323364], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hong Kong', [-3.0550479888916016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Southampton', [-1.8050479888916016, -0.07946828007698059], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Southampton,', [-1.8050479888916016, -3.204468250274658], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Southampton', [-1.8050479888916016, -0.07946828007698059], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sydney', [-1.6800479888916016, -0.30388909578323364], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liverpool', [-2.4925479888916016, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hamburg', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Hong Kong'}

Key: 235296375412834410324859687738575233732
Value: {'question': 'What breed of dog did Columbo own?', 'responses': [('Akita', [-4.543756008148193, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doberman', [-2.9187560081481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rottweiler', [-3.9187560081481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yorkshire Terrier', [-3.2937560081481934, -0.34070447087287903], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dachshund', [-2.9187560081481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Russell', [-3.9187560081481934, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Labrador Retriever', [-3.6687560081481934, -0.9935803413391113], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dachshund', [-2.9187560081481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maltese', [-3.1687560081481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doberman', [-2.9187560081481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Akita', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Basset hound'}

Key: 186550072179518908282014546151610400762
Value: {'question': 'What was the first movie western called?', 'responses': [('The Desper', [-0.3752145767211914, -4.724090576171875, -0.8081640005111694], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Western Union', [-3.8127145767211914, -1.773669719696045, -0.10545314848423004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Gunfighter', [-0.3752145767211914, -4.505340576171875, -0.13760460913181305], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Virginian', [-0.3752145767211914, -2.474090576171875, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stagecoach', [-2.4377145767211914, -0.2014133334159851, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great Train', [-0.3752145767211914, -0.7865904569625854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great Train', [-0.3752145767211914, -0.7865904569625854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Covered Wagon', [-0.3752145767211914, -2.036590576171875, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Big Trail', [-0.3752145767211914, -3.536590576171875, -0.0688856914639473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great Train', [-0.3752145767211914, -0.7865904569625854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Desper', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Kit Carson'}

Key: 260007600736825237725044267312891853119
Value: {'question': 'Which Oscar-winning actress was born on exactly the same day as actress Lindsay Wagner?', 'responses': [('Debra Winger', [-3.7389750480651855, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Who's", [-2.8639750480651855, -4.053871154785156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jane Fonda', [-2.6139750480651855, -0.29498806595802307, -0.10545314848423004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Jason Leigh', [-3.4889750480651855, -0.7570592761039734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellen Burstyn', [-4.2389750480651855, -0.11967968195676804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Ladd (', [-2.9889750480651855, -1.5530507564544678, -3.0512900352478027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kate Winslet', [-3.9889750480651855, -0.8375568985939026, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vanessa Redgrave', [-3.9889750480651855, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judy Davis', [-4.3639750480651855, -1.010420560836792, -0.1278369277715683], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jessica Lange', [-2.9889750480651855, -0.1797446459531784, -0.1278369277715683], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Debra Winger', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Meryl Streep'}

Key: 35664396824955691290957553979939168049
Value: {'question': 'Which Amendment to the Constitution brought in prohibition in 1920?', 'responses': [('18th', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th Amendment', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th Amendment', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th Amendment', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18th Amendment', [-0.14426162838935852, 0.0, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '18th', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '18th'}

Key: 339148907142639500979517450004500548231
Value: {'question': 'Which oil scandal hit the US in 1924?', 'responses': [('Rockefeller Oil', [-3.727051258087158, -1.734818458557129, -1.1898316144943237], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Teapot', [-1.3520512580871582, -0.07995261996984482, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.7270512580871582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Teapot', [-1.3520512580871582, -0.07995261996984482, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.7270512580871582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.7270512580871582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Teapot', [-3.852051258087158, -0.3038458824157715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.7270512580871582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.7270512580871582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Teapot', [-1.3520512580871582, -0.07995261996984482, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rockefeller Oil', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Teapot Dome Scandal'}

Key: 322237329832965163966007924447953526427
Value: {'question': 'Phil Collins appeared in which Spielberg film with Robin Williams?', 'responses': [('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Hook', [-3.529750347137451, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.029750416055321693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hook', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Hook'}

Key: 30393751189916050532485451961784191288
Value: {'question': '1998 was the Chinese year of which creature?', 'responses': [('Dragon', [-1.6763997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dog', [-2.6763997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ox', [-3.1138997077941895, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rat', [-1.8638997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rat', [-1.8638997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rat', [-1.8638997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rabbit', [-2.4888997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rabbit', [-2.4888997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snake', [-2.8013997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rabbit', [-2.4888997077941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dragon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931799, 'reference': 'Tiger'}

Key: 141527528992617758986938082421649661082
Value: {'question': 'Which country does musician Alfred Brendel come from?', 'responses': [('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-2.8793764114379883, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-1.6293764114379883, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.37937647104263306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Austria', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Austria'}

Key: 13567368464897662334830381845358852501
Value: {'question': 'Theodore Francis international airport is in which US state?', 'responses': [('Oregon', [-4.491940975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [-3.554440975189209, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-2.679440975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wisconsin', [-4.054440975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Jersey', [-2.429440975189209, -0.30635571479797363], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Connecticut', [-3.679440975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virginia', [-3.304440975189209, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Florida', [-2.429440975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-2.554440975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhode Island', [-2.429440975189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oregon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Rhode Island'}

Key: 177998405774535793944990725760638330972
Value: {'question': 'In which soap did Demi Moore find fame?', 'responses': [("As '", [-1.1865373849868774, -4.381828784942627], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.6865373849868774, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As a', [-1.1865373849868774, -0.44432878494262695], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.6865373849868774, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.6865373849868774, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.6865373849868774, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas', [-2.749037265777588, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As a', [-1.1865373849868774, -0.44432878494262695], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As a', [-1.1865373849868774, -0.44432878494262695], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.6865373849868774, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "As '", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'General Hospital'}

Key: 264175855792719724671714833676858700599
Value: {'question': 'To the nearest million, what is the population of London, England?', 'responses': [('70', [0.0, -1.2359517812728882, -3.9332330226898193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('7,', [0.0, -1.2359517812728882, -0.5582330226898193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('7 million', [0.0, -1.2359517812728882, -2.4332330226898193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8,', [0.0, -0.4859517812728882, -0.6782537698745728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8', [0.0, -0.4859517812728882, -2.178253650665283], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('7.', [0.0, -1.2359517812728882, -1.5582330226898193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8 million', [0.0, -0.4859517812728882, -1.9282537698745728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8 million', [0.0, -0.4859517812728882, -1.9282537698745728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('7', [0.0, -1.2359517812728882, -2.4332330226898193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8,', [0.0, -0.4859517812728882, -0.6782537698745728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '70', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576458, 'reference': '7 million'}

Key: 3669695212600559155447723462326271508
Value: {'question': 'What did Clarice Cliff create?', 'responses': [('A type', [-2.9429636001586914, -3.4482312202453613], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Art', [-2.5679636001586914, -3.1281423568725586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('B', [-3.1929636001586914, -4.455552577972412], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wedg', [-3.8179636001586914, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bizarre and', [-2.3179636001586914, -2.461289405822754], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bizarre pottery', [-2.3179636001586914, -2.336289405822754], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Royal Vale', [-3.8179636001586914, -2.862086296081543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art Pottery', [-2.0679636001586914, -1.5957143306732178], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Clar', [-2.5679636001586914, -3.2531423568725586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pottery', [-2.6929636001586914, -0.09654758870601654], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A type', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Pottery'}

Key: 153023692105618789346702632406289344096
Value: {'question': 'Which James Bond film features a song by Louis Armstrong?', 'responses': [('Diamonds Are Forever', [-2.741950511932373, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On Her Majesty', [-2.741950511932373, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldfinger', [-1.741950511932373, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thunderball', [-1.491950511932373, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thunderball', [-1.491950511932373, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldfinger', [-1.741950511932373, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Live and Let', [-1.991950511932373, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Live and Let', [-1.991950511932373, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On Her Majesty', [-2.741950511932373, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thunderball', [-1.491950511932373, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Diamonds Are Forever', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576458, 'reference': "On Her Majesty's Secret Service"}

Key: 21824530588489607946399377907283853870
Value: {'question': 'In what year were US ground troops first dispatched to Vietnam?', 'responses': [('1965', [0.0, 0.0, 0.0, -0.2014133334159851, -0.7621253132820129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.2014133334159851, -0.7621253132820129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.2014133334159851, -0.7621253132820129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1962', [0.0, 0.0, 0.0, -0.2014133334159851, -1.2621252536773682, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1954', [0.0, 0.0, 0.0, -1.7014133930206299, -1.4847829341888428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1961', [0.0, 0.0, 0.0, -0.2014133334159851, -1.6371252536773682, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.2014133334159851, -0.7621253132820129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1961', [0.0, 0.0, 0.0, -0.2014133334159851, -1.6371252536773682, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1964', [0.0, 0.0, 0.0, -0.2014133334159851, -2.887125253677368, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1955', [0.0, 0.0, 0.0, -1.7014133930206299, -1.3597829341888428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1965', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': '1965'}

Key: 27380348263737540923052007422421784519
Value: {'question': 'In 1999 Anna Kournikova signed a lucrative contract to model what?', 'responses': [('Underpants', [-4.019033432006836, -2.934040069580078], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the swimsuit', [-4.644033432006836, -3.590609073638916], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Playboy', [-4.644033432006836, -0.5863915681838989], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nike', [-2.144033432006836, -1.0463645458221436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nive', [-3.894033432006836, -0.07428312301635742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A tennis', [-2.894033432006836, -2.8641014099121094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("L'", [-4.394033432006836, -0.5529353618621826], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Her face', [-4.394033432006836, -3.318988561630249], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nike', [-2.144033432006836, -1.0463645458221436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tennis ra', [-2.519033432006836, -2.5669302940368652], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Underpants', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Bras'}

Key: 208799331739458533017705133176449996028
Value: {'question': 'Which member of the Monkees came from Washington DC?', 'responses': [('Peter Tork', [-1.8635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Tork', [-1.8635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Davy Jones', [-1.1135631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mike Nesmith', [-2.988563060760498, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Micky Dol', [-1.3635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Micky Dol', [-1.3635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Tork', [-1.8635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Tork', [-1.8635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Micky Dol', [-1.3635631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Davy Jones', [-1.1135631799697876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Peter Tork', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'Peter Tork'}

Key: 242366912056136646150507630339397215678
Value: {'question': 'Which ship was sunk by a German submarine in 1915 with a loss of 1400 lives including 128 Americans?', 'responses': [('The Lusitania', [-0.42836952209472656, -0.1376928985118866, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.42836952209472656, -0.1376928985118866, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.42836952209472656, -0.1376928985118866, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.42836952209472656, -0.1376928985118866, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.42836952209472656, -0.1376928985118866, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Lusitania', [-1.5533695220947266, 0.0, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Lusitania', [-1.5533695220947266, 0.0, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.42836952209472656, -0.1376928985118866, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Lusitania', [-1.5533695220947266, 0.0, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Lusitania', [-1.5533695220947266, 0.0, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Lusitania', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Lusitania'}

Key: 179346468034032003704523951025792443436
Value: {'question': 'In what decade were video recorders first developed?', 'responses': [('1960s', [0.0, -0.053237732499837875, 0.0, -1.580836296081543, 0.0, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, -0.053237732499837875, 0.0, -1.580836296081543, 0.0, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, -0.053237732499837875, 0.0, -1.580836296081543, 0.0, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("1950's", [0.0, -0.053237732499837875, 0.0, -1.830836296081543, 0.0, -1.7014133930206299, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, -0.053237732499837875, 0.0, -1.580836296081543, 0.0, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, -0.053237732499837875, 0.0, -1.830836296081543, 0.0, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, -0.053237732499837875, 0.0, -1.830836296081543, 0.0, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, -0.053237732499837875, 0.0, -0.4558362364768982, 0.0, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, -0.053237732499837875, 0.0, -1.830836296081543, 0.0, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, -0.053237732499837875, 0.0, -0.4558362364768982, 0.0, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1960s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0549201679861442, 'reference': '50s'}

Key: 238161062601069238420618588666373091125
Value: {'question': 'Who had the noels Spy Hook and Spy Line published in the 80s?', 'responses': [('Paul McCartney', [-4.4549641609191895, -0.6638920307159424, -0.13628888130187988], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Jennings', [-4.0799641609191895, -3.4720702171325684, -0.11008840054273605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Clash', [-2.7049641609191895, -4.153081893920898, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Clancy', [-2.7049641609191895, -0.18846699595451355, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ludlum', [-2.7049641609191895, -0.374858021736145, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mike Holmes', [-4.7049641609191895, -3.146358013153076, -0.09563114494085312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Travolta', [-2.3299641609191895, -4.2202467918396, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Holmes', [-2.3299641609191895, -2.7202467918395996, -0.10545314848423004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Clancy', [-2.7049641609191895, -0.18846699595451355, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stephen King', [-4.4549641609191895, -0.2249315232038498, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Paul McCartney', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Len Deighton'}

Key: 24417326290741017340790453872538106747
Value: {'question': 'the first credit cards were for use in what type of establishments?', 'responses': [('Restaurants', [-2.5305862426757812, -0.12835051119327545], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('department stores', [-1.4055863618850708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hotels', [-2.1555862426757812, -0.3645457923412323], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('department stores', [-1.4055863618850708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hotels and', [-2.5305862426757812, -1.8795850276947021], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hotels', [-2.1555862426757812, -0.3645457923412323], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Department stores', [-2.9055862426757812, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hotels', [-2.1555862426757812, -0.3645457923412323], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Department Stores', [-2.9055862426757812, -1.1368709802627563], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hotel rooms', [-4.280586242675781, -1.803963541984558], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Restaurants', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290393, 'reference': 'Restaurants'}

Key: 16613882892830467806546304374288024567
Value: {'question': 'In which country was Ursula Andrews born?', 'responses': [('Ireland', [-3.1971092224121094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.5721091032028198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-2.0721092224121094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.5721091032028198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The United', [-4.197109222412109, -1.2740478515625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United Kingdom', [-3.0721092224121094, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-1.9471091032028198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-1.9471091032028198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-2.9471092224121094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-1.9471091032028198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ireland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Switzerland'}

Key: 21781055362267300220747160657050769608
Value: {'question': "What was CBS TV news broadcaster Walter Cronkite's stock closing phrase?", 'responses': [('And that', [-2.890899896621704, -0.24495965242385864], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('...', [-3.390899896621704, -1.0670115947723389], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"That', [-0.7658998370170593, -1.7619785070419312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Good Night', [-2.265899896621704, -2.019347906112671], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("You'", [-4.265899658203125, -0.1857476532459259], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"And', [-0.7658998370170593, -0.38697853684425354], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"I', [-0.7658998370170593, -3.2619786262512207], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('And that', [-2.890899896621704, -0.24495965242385864], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The End', [-2.390899896621704, -1.6153647899627686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"And', [-0.7658998370170593, -0.38697853684425354], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'And that', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': "And that's the way it is"}

Key: 309273492966215528970942131797154850720
Value: {'question': 'Who had a 70s No 1 hit with Let Your Love Flow?', 'responses': [('The Bellamy Brothers', [-1.1339131593704224, -0.11619719862937927, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bellamy Brothers', [-2.243288040161133, -0.04170333594083786, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnie Riper', [-1.1651631593704224, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bellamy Brothers', [-1.1339131593704224, -0.11619719862937927, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bellamy Brothers', [-1.1339131593704224, -0.11619719862937927, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bellamy Brothers', [-2.243288040161133, -0.04170333594083786, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bellamy Brothers', [-1.1339131593704224, -0.11619719862937927, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bellamy Brothers', [-2.243288040161133, -0.04170333594083786, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doug Stone', [-3.573366165161133, -3.9978015422821045, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bellamy Brothers', [-1.1339131593704224, -0.11619719862937927, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Bellamy Brothers', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Bellamy Brothers'}

Key: 186123598465144826251467318872342578276
Value: {'question': "Which state renewed Mike Tyson's boxing license in 1998?", 'responses': [('Massachusetts', [-4.370985984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alabama', [-4.058485984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-4.120985984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Florida', [-2.745985984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-2.995985984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Missouri', [-4.120985984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tennessee', [-3.933485984802246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.058485984802246, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.058485984802246, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nevada', [-0.9959858655929565, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Massachusetts', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Nevada'}

Key: 335023223780136362376951443964298221404
Value: {'question': 'Neil Armstrong was a pilot in which war?', 'responses': [('WWII', [-2.0415291786193848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korean War', [-0.5415291786193848, -0.5036162734031677], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korean War', [-0.5415291786193848, -0.5036162734031677], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('WWII', [-2.0415291786193848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('World War', [-2.5415291786193848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korean', [-0.5415291786193848, -1.1286163330078125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('WWII', [-2.0415291786193848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korean War', [-0.5415291786193848, -0.5036162734031677], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korean war', [-0.5415291786193848, -2.6286163330078125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('World War', [-2.5415291786193848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'WWII', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': 'Korean'}

Key: 135113573813980774356105673568454822992
Value: {'question': 'Which English-born US citizen hosted Masterpiece theater?', 'responses': [('Sir Anthony Hopkins', [-2.292048454284668, -3.7824273109436035, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alistair Cooke', [-0.9795485138893127, -0.042999111115932465, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward Woodward', [-4.057673454284668, -1.07386314868927, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Farina', [-3.885798454284668, -3.2051408290863037, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Hughes', [-3.448298454284668, -4.112876892089844, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alistair Cooke', [-0.9795485138893127, -0.042999111115932465, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Potter', [-3.885798454284668, -0.5723283290863037, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alistair Cooke', [-0.9795485138893127, -0.042999111115932465, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir John G', [-2.292048454284668, -1.063677430152893, -0.4361126720905304], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir John T', [-2.292048454284668, -1.063677430152893, -2.592362642288208], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sir Anthony Hopkins', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Alistair Cooke'}

Key: 198451490229312318176250709688118112954
Value: {'question': 'Nickelodeon was founded in 1979 by which company?', 'responses': [('Via', [-0.42816978693008423], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-3.3031697273254395], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.2406697273254395], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Via', [-0.42816978693008423], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-3.3031697273254395], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Via', [-0.42816978693008423], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Via', [-0.42816978693008423], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Via', [-0.42816978693008423], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Via', [-0.42816978693008423], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('S', [-2.6156697273254395], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Via', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Warner Amex'}

Key: 47406603659318375826783680606456994248
Value: {'question': 'Which element along with polonium did the Curies discover?', 'responses': [('Astat', [-4.119539260864258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-0.9945390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radium', [-1.2445390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radium', [-1.2445390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-0.9945390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Americium', [-4.119539260864258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-0.9945390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radium', [-1.2445390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radium', [-1.2445390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-0.9945390224456787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Astat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Radium'}

Key: 241678550976756653580899220731445313393
Value: {'question': 'In The Banana Splits what sort of animal was Snorky?', 'responses': [('Monkey', [-1.6882556676864624, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dog', [-2.438255786895752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bear', [-2.938255786895752, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dog', [-2.438255786895752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Raccoon', [-3.938255786895752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Parrot', [-4.688255786895752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monkey', [-1.6882556676864624, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Dog', [-2.313255786895752, -4.339071273803711], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A tiger', [-2.313255786895752, -4.214071273803711], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dog', [-2.438255786895752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Monkey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Elephant'}

Key: 213216769864260958552302958462104687805
Value: {'question': "Who had an 80s No 1 hit with Can't Fight This Feeling?", 'responses': [('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.05687166750431061, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which musical featured the song Thank Heaven for Little Girls?', 'responses': [('South Pacific', [-2.8672103881835938, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('My Fair', [-2.6172103881835938, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sound', [-1.7422102689743042, -0.3913109600543976], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiddler', [-4.242210388183594, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sound', [-1.7422102689743042, -0.3913109600543976], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anything Goes', [-4.679710388183594, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Pacific', [-2.8672103881835938, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-1.8672102689743042, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiddler', [-4.242210388183594, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sound', [-1.7422102689743042, -0.3913109600543976], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'South Pacific', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Gigi'}

Key: 148252821328110070762037412177102348432
Value: {'question': 'The Queen Elizabeth liner was destroyed by fire in the 70s in which harbour?', 'responses': [('Sydney', [-1.5383074283599854, -0.19697274267673492], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Southampton', [-2.1008074283599854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Halifax', [-2.9133074283599854, -0.14743076264858246], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sydney', [-1.5383074283599854, -0.19697274267673492], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Southampton', [-2.1008074283599854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Southampton', [-2.1008074283599854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sydney', [-1.5383074283599854, -0.19697274267673492], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.3508074283599854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-3.2258074283599854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sydney', [-1.5383074283599854, -0.19697274267673492], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sydney', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456562, 'reference': 'Hong Kong'}

Key: 235296375412834410324859687738575233732
Value: {'question': 'What breed of dog did Columbo own?', 'responses': [('German Shepherd', [-2.6561014652252197, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poodle', [-2.9061014652252197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dachshund', [-2.9061014652252197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yorkshire Terrier', [-3.1561014652252197, -0.6101157069206238], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Labrador', [-3.1561014652252197, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Russell', [-4.031101226806641, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Terrier', [-4.281101226806641, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dalmatian', [-3.0311014652252197, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poodle', [-2.9061014652252197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rottweiler', [-3.7811014652252197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'German Shepherd', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Basset hound'}

Key: 186550072179518908282014546151610400762
Value: {'question': 'What was the first movie western called?', 'responses': [('Birth of a', [-3.5763421058654785, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great Train', [-0.26384207606315613, -0.49355000257492065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The silent western', [-0.26384207606315613, -4.993549823760986, -1.4151256084442139], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Big Trail', [-0.26384207606315613, -3.5560500621795654, -0.12284322828054428], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Birth of a', [-3.5763421058654785, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great Train', [-0.26384207606315613, -0.49355000257492065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great Train', [-0.26384207606315613, -0.49355000257492065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Cheat', [-0.26384207606315613, -4.681049823760986, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Man Without', [-4.2013421058654785, -0.8412565588951111, -1.841742992401123], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stagecoach', [-2.0763421058654785, -0.2131100296974182, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Birth of a', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Kit Carson'}

Key: 260007600736825237725044267312891853119
Value: {'question': 'Which Oscar-winning actress was born on exactly the same day as actress Lindsay Wagner?', 'responses': [('Jodie Foster', [-2.686037540435791, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marisa Tomei', [-4.561037540435791, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bette Davis', [-3.936037540435791, -0.3132617473602295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jessica Lange', [-3.311037540435791, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Whoopi Goldberg', [-3.436037540435791, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sarandon', [-3.186037540435791, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meryl Stre', [-2.311037540435791, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jessica Lange', [-3.311037540435791, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenn Close', [-3.811037540435791, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shirley MacLa', [-3.811037540435791, -0.03804141283035278, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jodie Foster', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Meryl Streep'}

Key: 35664396824955691290957553979939168049
Value: {'question': 'Which Amendment to the Constitution brought in prohibition in 1920?', 'responses': [('Eighteenth', [-2.2378222942352295, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eighteenth', [-2.2378222942352295, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Eighteenth', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': '18th'}

Key: 339148907142639500979517450004500548231
Value: {'question': 'Which oil scandal hit the US in 1924?', 'responses': [('Teapot Dome', [-0.9099242687225342, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot dome', [-0.9099242687225342, 0.0, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.9099242687225342, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.9099242687225342, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.9099242687225342, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Standard Oil', [-2.409924268722534, 0.0, -0.2017633616924286], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Teapot', [-3.659924268722534, -0.08890891820192337, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.9099242687225342, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teapot Dome', [-0.9099242687225342, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Teapot', [-0.7849242687225342, -0.03163906931877136, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Teapot Dome', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'Teapot Dome Scandal'}

Key: 322237329832965163966007924447953526427
Value: {'question': 'Phil Collins appeared in which Spielberg film with Robin Williams?', 'responses': [('Hook', [-0.17570769786834717, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.17570769786834717, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.17570769786834717, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Witches', [-1.9257076978683472, -2.003451347351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.17570769786834717, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Color', [-1.9257076978683472, -3.159701347351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.17570769786834717, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The War', [-1.9257076978683472, -4.019076347351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.17570769786834717, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hook', [-0.17570769786834717, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hook', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Hook'}

Key: 30393751189916050532485451961784191288
Value: {'question': '1998 was the Chinese year of which creature?', 'responses': [('The dragon', [-1.878218412399292, -1.583931803703308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Dragon', [-3.378218412399292, -1.5976316928863525], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rat', [-2.440718412399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dog', [-2.690718412399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snake', [-2.690718412399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rat', [-2.440718412399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dog', [-2.690718412399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dragon', [-1.628218412399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dragon', [-1.628218412399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pig', [-3.065718412399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The dragon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Tiger'}

Key: 141527528992617758986938082421649661082
Value: {'question': 'Which country does musician Alfred Brendel come from?', 'responses': [('Austria', [-0.6752794981002808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.8002794981002808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.8002794981002808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.6752794981002808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.8002794981002808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.8002794981002808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.8002794981002808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.6752794981002808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.8002794981002808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-0.6752794981002808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Austria', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'Austria'}

Key: 13567368464897662334830381845358852501
Value: {'question': 'Theodore Francis international airport is in which US state?', 'responses': [('Alaska', [-2.833543300628662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virginia', [-3.083543300628662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Massachusetts', [-3.333543300628662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Jersey', [-2.583543300628662, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alaska', [-2.833543300628662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Massachusetts', [-3.333543300628662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-2.083543300628662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Jersey', [-2.583543300628662, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-4.021043300628662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-4.333543300628662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alaska', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Rhode Island'}

Key: 177998405774535793944990725760638330972
Value: {'question': 'In which soap did Demi Moore find fame?', 'responses': [('As the', [-2.0675127506256104, -0.266189843416214], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.25501278042793274, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.25501278042793274, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.25501278042793274, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.25501278042793274, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.25501278042793274, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.25501278042793274, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.25501278042793274, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas', [-2.6300127506256104, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hospital', [-0.25501278042793274, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'As the', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'General Hospital'}

Key: 264175855792719724671714833676858700599
Value: {'question': 'To the nearest million, what is the population of London, England?', 'responses': [('8 million', [0.0, -0.37139198184013367, -1.430816650390625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9 million', [0.0, -1.746392011642456, -1.3239374160766602], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8 million', [0.0, -0.37139198184013367, -1.430816650390625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('75', [0.0, -1.996392011642456, -3.894773006439209], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9,', [0.0, -1.746392011642456, -0.9489374160766602], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9,', [0.0, -1.746392011642456, -0.9489374160766602], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8', [0.0, -0.37139198184013367, -1.805816650390625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90', [0.0, -1.746392011642456, -2.82393741607666], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8.', [0.0, -0.37139198184013367, -1.430816650390625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8', [0.0, -0.37139198184013367, -3.680816650390625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '8 million', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': '7 million'}

Key: 3669695212600559155447723462326271508
Value: {'question': 'What did Clarice Cliff create?', 'responses': [('Handpainted', [-4.037182807922363, -1.9648149013519287], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bizarre pattern', [-1.9121825695037842, -3.474708080291748], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bizarre', [-2.537182569503784, -2.845501661300659], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art pottery', [-2.287182569503784, -0.6448848843574524], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art pottery', [-2.287182569503784, -0.6448848843574524], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A decorative', [-2.787182569503784, -4.985825538635254], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bizarre pottery', [-1.9121825695037842, -1.9747079610824585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pottery', [-1.7871825695037842, -0.02630021423101425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bizarre Tea', [-1.9121825695037842, -4.599708080291748], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Artware', [-2.287182569503784, -2.5198848247528076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Handpainted', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Pottery'}

Key: 153023692105618789346702632406289344096
Value: {'question': 'Which James Bond film features a song by Louis Armstrong?', 'responses': [('Live And Let', [-1.581634283065796, -2.0176751613616943, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldfinger', [-1.706634283065796, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('You Only Live', [-3.206634283065796, -0.25192904472351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thunderball', [-1.581634283065796, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldfinger', [-1.706634283065796, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldfinger', [-1.706634283065796, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('From Russia with', [-2.456634283065796, 0.0, -0.6037852764129639], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Live and Let', [-1.581634283065796, -0.14267508685588837, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldfinger', [-1.706634283065796, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thunderball', [-1.581634283065796, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Live And Let', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': "On Her Majesty's Secret Service"}

Key: 21824530588489607946399377907283853870
Value: {'question': 'In what year were US ground troops first dispatched to Vietnam?', 'responses': [('1961', [0.0, 0.0, 0.0, -0.22541262209415436, -1.4399425983428955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1962', [0.0, 0.0, 0.0, -0.22541262209415436, -1.6899425983428955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1962', [0.0, 0.0, 0.0, -0.22541262209415436, -1.6899425983428955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1962', [0.0, 0.0, 0.0, -0.22541262209415436, -1.6899425983428955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1954', [0.0, 0.0, 0.0, -1.6004126071929932, -1.9217814207077026, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960', [0.0, 0.0, 0.0, -0.22541262209415436, -2.5649425983428955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960', [0.0, 0.0, 0.0, -0.22541262209415436, -2.5649425983428955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.22541262209415436, -0.6899425983428955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.22541262209415436, -0.6899425983428955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960', [0.0, 0.0, 0.0, -0.22541262209415436, -2.5649425983428955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1961', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': '1965'}

Key: 27380348263737540923052007422421784519
Value: {'question': 'In 1999 Anna Kournikova signed a lucrative contract to model what?', 'responses': [('swimwear', [-3.380279064178467, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champagne', [-4.692779064178467, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nike tennis', [-2.755279064178467, -2.5601515769958496], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nike', [-2.755279064178467, -1.1851515769958496], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Bikini'", [-4.880279064178467, -1.8553409576416016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clothes', [-3.380279064178467, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sportswear', [-2.505279064178467, -0.7708895206451416], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nike Clothing', [-2.755279064178467, -4.56015157699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reebok', [-5.005279064178467, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('swimwear', [-3.380279064178467, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'swimwear', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Bras'}

Key: 208799331739458533017705133176449996028
Value: {'question': 'Which member of the Monkees came from Washington DC?', 'responses': [('Micky Dol', [-1.4379342794418335, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Micky Dol', [-1.4379342794418335, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Nesmith', [-1.6879342794418335, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mickey Dolenz', [-2.437934398651123, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Micky Dol', [-1.4379342794418335, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Davy Jones', [-1.4379342794418335, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Nesmith', [-1.6879342794418335, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Tork', [-1.6879342794418335, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mickey Dolenz', [-2.437934398651123, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Nesmith', [-1.6879342794418335, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Micky Dol', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811906, 'reference': 'Peter Tork'}

Key: 242366912056136646150507630339397215678
Value: {'question': 'Which ship was sunk by a German submarine in 1915 with a loss of 1400 lives including 128 Americans?', 'responses': [('The Lusitania', [-0.2888748049736023, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.2888748049736023, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.2888748049736023, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lusitania', [-1.663874864578247, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.2888748049736023, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.2888748049736023, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lusitania', [-1.663874864578247, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.2888748049736023, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.2888748049736023, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.2888748049736023, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Lusitania', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Lusitania'}

Key: 179346468034032003704523951025792443436
Value: {'question': 'In what decade were video recorders first developed?', 'responses': [('1970s', [0.0, 0.0, 0.0, -0.43682336807250977, 0.0, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, 0.0, 0.0, -1.9368233680725098, 0.0, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, 0.0, 0.0, -0.43682336807250977, 0.0, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, 0.0, 0.0, -0.43682336807250977, 0.0, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, 0.0, 0.0, -0.43682336807250977, 0.0, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, 0.0, 0.0, -0.43682336807250977, 0.0, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, 0.0, 0.0, -0.43682336807250977, 0.0, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, 0.0, 0.0, -0.43682336807250977, 0.0, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, 0.0, 0.0, -0.43682336807250977, 0.0, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, 0.0, 0.0, -0.43682336807250977, 0.0, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1970s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': '50s'}

Key: 238161062601069238420618588666373091125
Value: {'question': 'Who had the noels Spy Hook and Spy Line published in the 80s?', 'responses': [('Jack Higgins', [-3.8058810234069824, -1.4533345699310303, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Terry Pratchett', [-4.055881023406982, -0.11431284993886948, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Hogan', [-4.430881023406982, -3.7607736587524414, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agatha Christie', [-3.0558810234069824, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ludlum', [-2.6808810234069824, -0.2728950083255768, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter O'", [-3.6808810234069824, -3.6987433433532715, -0.11946940422058105], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Icke', [-2.9308810234069824, -1.571140170097351, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jilly Cooper', [-3.8058810234069824, -2.187412738800049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Daniels', [-4.430881023406982, -2.3232736587524414, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard and Judy', [-3.5558810234069824, -2.7912206649780273, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jack Higgins', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Len Deighton'}

Key: 24417326290741017340790453872538106747
Value: {'question': 'the first credit cards were for use in what type of establishments?', 'responses': [('department stores', [-1.728002667427063, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stores', [-4.478002548217773, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Restaurants', [-1.728002667427063, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('department stores', [-1.728002667427063, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Petrol stations', [-4.228002548217773, -0.34537985920906067], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hotels and', [-1.603002667427063, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hotels', [-2.7280025482177734, -0.2317778319120407], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('department stores', [-1.728002667427063, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Restaurants', [-1.728002667427063, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('department stores', [-1.728002667427063, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'department stores', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'Restaurants'}

Key: 16613882892830467806546304374288024567
Value: {'question': 'In which country was Ursula Andrews born?', 'responses': [('Australia', [-2.329749345779419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.829749345779419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-4.45474910736084, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-1.704749345779419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-1.704749345779419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-3.454749345779419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.829749345779419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-3.829749345779419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.829749345779419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-2.329749345779419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Australia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Switzerland'}

Key: 21781055362267300220747160657050769608
Value: {'question': "What was CBS TV news broadcaster Walter Cronkite's stock closing phrase?", 'responses': [("And that's the way", [-0.31622207164764404, 0.0, -0.051641397178173065, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("And that's the way", [-0.31622207164764404, 0.0, -0.051641397178173065, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("And that's the way", [-0.31622207164764404, 0.0, -0.051641397178173065, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Good night and good luck', [-2.8787221908569336, -0.25151392817497253, -0.4076060354709625, -0.202803835272789, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("And that's the way", [-0.31622207164764404, 0.0, -0.051641397178173065, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("And that's the way", [-0.31622207164764404, 0.0, -0.051641397178173065, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("And that's the way", [-0.31622207164764404, 0.0, -0.051641397178173065, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("And that's the way", [-0.31622207164764404, 0.0, -0.051641397178173065, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("And that's the way", [-0.31622207164764404, 0.0, -0.051641397178173065, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("And that's the way", [-0.31622207164764404, 0.0, -0.051641397178173065, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "And that's the way", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': "And that's the way it is"}

Key: 309273492966215528970942131797154850720
Value: {'question': 'Who had a 70s No 1 hit with Let Your Love Flow?', 'responses': [('Minnie Riper', [-1.9316827058792114, -0.10322872549295425, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Commod', [-0.6660577058792114, -3.529750347137451, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnie Riper', [-1.9316827058792114, -0.10322872549295425, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doug Clifford', [-3.349651336669922, -3.114396572113037, -0.16298547387123108], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bellamy Brothers', [-0.6660577058792114, -0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wet Wet Wet', [-3.861370086669922, -0.13700948655605316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bellamy Brothers', [-0.6660577058792114, -0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnie Ripperton', [-1.9316827058792114, -2.321978807449341, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bellamy Brothers', [-0.6660577058792114, -0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bellamy Brothers', [-0.6660577058792114, -0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Minnie Riper', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Bellamy Brothers'}

Key: 186123598465144826251467318872342578276
Value: {'question': "Which state renewed Mike Tyson's boxing license in 1998?", 'responses': [('New York', [-1.4715044498443604, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Jersey', [-1.4715044498443604, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [-3.1590044498443604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Carolina', [-4.346504211425781, -0.5490548014640808], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [-3.1590044498443604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Jersey', [-1.4715044498443604, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nevada', [-0.9715044498443604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-3.3465044498443604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [-3.1590044498443604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nevada', [-0.9715044498443604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'New York', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Nevada'}

Key: 335023223780136362376951443964298221404
Value: {'question': 'Neil Armstrong was a pilot in which war?', 'responses': [('Korean war', [-1.048217535018921, -1.9561541080474854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Second', [-2.673217535018921, -1.0233325958251953], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('World War', [-2.173217535018921, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Korean', [-2.673217535018921, -0.7733325362205505], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('WW2', [-3.048217535018921, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Second world', [-1.298217535018921, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Second World', [-1.298217535018921, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korean', [-1.048217535018921, -1.2061541080474854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Korean', [-2.673217535018921, -0.7733325362205505], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korean', [-1.048217535018921, -1.2061541080474854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Korean war', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290392, 'reference': 'Korean'}

Key: 135113573813980774356105673568454822992
Value: {'question': 'Which English-born US citizen hosted Masterpiece theater?', 'responses': [('Alistair Cooke', [-0.7533485293388367, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Thaw', [-3.5658485889434814, -0.9176070690155029, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Frost', [-1.7689735889434814, -0.24958984553813934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alistair Cooke', [-0.7533485293388367, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alistair Cooke', [-0.7533485293388367, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Powell', [-4.001395225524902, -1.2435455322265625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenneth Branagh', [-3.3080360889434814, -0.29541054368019104, -0.07428312301635742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenneth Branagh', [-3.3080360889434814, -0.29541054368019104, -0.07428312301635742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alistair Cooke', [-0.7533485293388367, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Frost', [-1.7689735889434814, -0.24958984553813934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alistair Cooke', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': 'Alistair Cooke'}

Key: 198451490229312318176250709688118112954
Value: {'question': 'Nickelodeon was founded in 1979 by which company?', 'responses': [('Viacom', [-0.0854092389345169, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viacom', [-0.0854092389345169, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viacom', [-0.0854092389345169, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viacom', [-0.0854092389345169, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viacom', [-0.0854092389345169, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viacom', [-0.0854092389345169, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viacom', [-0.0854092389345169, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viacom', [-0.0854092389345169, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viacom', [-0.0854092389345169, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viacom', [-0.0854092389345169, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Viacom', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Warner Amex'}

Key: 47406603659318375826783680606456994248
Value: {'question': 'Which element along with polonium did the Curies discover?', 'responses': [('Radium', [-0.63295978307724, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radon', [-4.007959842681885, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radium', [-1.6329598426818848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Americium', [-4.007959842681885, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radium', [-1.6329598426818848, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Protact', [-2.8829598426818848, -0.1902991682291031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-0.63295978307724, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-0.63295978307724, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-0.63295978307724, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-0.63295978307724, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Radium', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Radium'}

Key: 241678550976756653580899220731445313393
Value: {'question': 'In The Banana Splits what sort of animal was Snorky?', 'responses': [('Pig', [-3.1726927757263184, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A pig', [-2.0476927757263184, -3.116331100463867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Squirrel', [-3.6726927757263184, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bear', [-3.0476927757263184, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sloth', [-4.297692775726318, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pig', [-3.1726927757263184, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zebra', [-4.672692775726318, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monkey', [-1.7976927757263184, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dog', [-2.1726927757263184, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cat', [-4.047692775726318, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pig', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Elephant'}

Key: 213216769864260958552302958462104687805
Value: {'question': "Who had an 80s No 1 hit with Can't Fight This Feeling?", 'responses': [('REO Speedwagon', [-0.1492866426706314, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.1492866426706314, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.1492866426706314, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.1492866426706314, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.1492866426706314, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.1492866426706314, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.1492866426706314, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.1492866426706314, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.1492866426706314, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REO Speedwagon', [-0.1492866426706314, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'REO Speedwagon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'REO Speedwagon'}

Key: 156374179212552768350401489190454700275
<<<<<<< HEAD
Value: {'question': 'Which parallel was the truce line in the Korean War?', 'responses': [('38th parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.575939416885376, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.575939416885376, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The 38th parallel', [-1.718239188194275, -0.02630021423101425, 0.0, 0.0, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.575939416885376, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th parallel.', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.575939416885376, -3.529750347137451], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.2182392030954361, 0.0, 0.0, 0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '38th parallel', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '38th Parallel'}

Key: 128057339182170355751883246785499552494
Value: {'question': 'On a computer keyboard which letter is between A and D?', 'responses': [('B', [-2.1688013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('G', [-3.6688013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Z', [-2.0438013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('J', [-3.7938013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Z', [-2.0438013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('E', [-1.1688013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C', [-2.9188013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('E', [-1.1688013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('O', [-3.7938013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-3.2938013076782227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'B', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'S'}

Key: 96614960828336329336745350067670580350
Value: {'question': 'Which musical featured the song Flash Bang, Wallop?', 'responses': [('Guys and Dolls', [-3.5825555324554443, -0.06993623077869415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Music Man', [-1.7075555324554443, -2.8806259632110596, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Pacific', [-3.4575555324554443, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Oliver"', [-3.3325555324554443, -1.6191498041152954, -0.6821185350418091], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sound of', [-1.7075555324554443, -1.1306259632110596, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-2.7075555324554443, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Producers', [-1.7075555324554443, -3.5056259632110596, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [-3.8325555324554443, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver Twist', [-1.8325555324554443, -2.70202374458313, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guys and Dolls', [-3.5825555324554443, -0.06993623077869415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Guys and Dolls', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Half'}

Key: 18100826639000837003152275054635383201
Value: {'question': "What was Hitchcock's first sound movie?", 'responses': [('The Ring', [-0.7838765382766724, -2.4118900299072266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The', [-0.7838765382766724, -1.349389910697937], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'The", [-4.221376419067383, -0.3219345510005951], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [-3.346376419067383, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The', [-1.7838765382766724, -0.4595724046230316], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Ring', [-0.7838765382766724, -2.4118900299072266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lod', [-0.7838765382766724, -1.099389910697937], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lod', [-0.7838765382766724, -1.099389910697937], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Man', [-0.7838765382766724, -2.2868900299072266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Number Seventeen', [-4.158876419067383, -1.467911958694458], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Ring', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Blackmail'}

Key: 46978202400019995803048513936387167406
Value: {'question': 'Which newspaper did Jackie Kennedy work for just before her marriage?', 'responses': [('The Washington', [-1.047366976737976, -0.28817033767700195], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.859866976737976, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.859866976737976, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington Times', [-1.547366976737976, -0.8026841282844543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Town and', [-4.484867095947266, -0.43303239345550537], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Town Talk', [-4.484867095947266, -3.370532512664795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington Herald', [-1.547366976737976, -2.8339340686798096], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vogue', [-4.484867095947266, -0.1392667144536972], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('American Newspaper', [-4.422367095947266, -2.4975438117980957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Look magazine', [-3.3598670959472656, -1.2943768501281738], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Washington', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Washington Times Herald'}

Key: 192425824554876041957222139665425232026
Value: {'question': 'What are the international registration letters of a vehicle from Turkey?', 'responses': [('TK', [-2.476736307144165, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.7267363667488098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.7267363667488098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TL', [-3.476736307144165, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.7267363667488098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.7267363667488098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TS', [-4.726736545562744, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.7267363667488098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.7267363667488098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TK', [-2.476736307144165, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'TK', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'TR'}

Key: 83528968516445433453509617831911615884
Value: {'question': 'Who wrote The Turn Of The Screw in the 19th century and The Ambassadors in the 20th?', 'responses': [('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Henry James', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Henry James'}

Key: 156104970120579737519646627577605740239
Value: {'question': 'Which American nuclear submarine was the first to sail across the North Pole under the ice cap?', 'responses': [('USS Skate', [-0.8881768584251404, -0.3439461290836334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seawolf', [-3.388176918029785, -0.07207804173231125], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Skate', [-0.8881768584251404, -0.3439461290836334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Skate', [-0.8881768584251404, -0.3439461290836334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Skate', [-0.8881768584251404, -0.3439461290836334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Skate', [-0.8881768584251404, -0.3439461290836334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Skate I', [-3.263176918029785, -3.3288285732269287], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-1.8881769180297852, -0.10770121216773987], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-1.8881769180297852, -0.10770121216773987], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The USS', [-1.6381769180297852, -0.5822343230247498], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'USS Skate', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452238, 'reference': 'Nautilus'}

Key: 68838839744752530396341501700714733790
Value: {'question': "What was John Glenn/'s first spacecraft called?", 'responses': [('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship Seven', [-0.16051004827022552, -2.0176751613616943, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.16051004827022552, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship Seven', [-0.16051004827022552, -2.0176751613616943, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which parallel was the truce line in the Korean War?', 'responses': [('The 38th Parallel', [-0.9089198112487793, 0.0, 0.0, 0.0, 0.0, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The 38th Parallel', [-0.9089198112487793, 0.0, 0.0, 0.0, 0.0, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th parallel', [-0.5339198112487793, 0.0, 0.0, -0.06242578104138374, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.5339198112487793, 0.0, 0.0, -0.06242578104138374, -1.1368709802627563, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th parallel', [-0.5339198112487793, 0.0, 0.0, -0.06242578104138374, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th parallel', [-0.5339198112487793, 0.0, 0.0, -0.06242578104138374, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.5339198112487793, 0.0, 0.0, -0.06242578104138374, -1.1368709802627563, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.5339198112487793, 0.0, 0.0, -0.06242578104138374, -1.1368709802627563, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th parallel', [-0.5339198112487793, 0.0, 0.0, -0.06242578104138374, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38th Parallel', [-0.5339198112487793, 0.0, 0.0, -0.06242578104138374, -1.1368709802627563, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The 38th Parallel', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '38th Parallel'}

Key: 128057339182170355751883246785499552494
Value: {'question': 'On a computer keyboard which letter is between A and D?', 'responses': [('V', [-4.228949546813965, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('E', [-0.9789495468139648, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('T', [-3.978949546813965, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-2.978949546813965, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('E', [-0.9789495468139648, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('B', [-2.353949546813965, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A', [-4.228949546813965, -0.016034230589866638], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('E', [-0.9789495468139648, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('G', [-3.728949546813965, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('G', [-3.728949546813965, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'V', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': 'S'}

Key: 96614960828336329336745350067670580350
Value: {'question': 'Which musical featured the song Flash Bang, Wallop?', 'responses': [('The Pirates of', [-2.1047821044921875, -1.7924578189849854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma!', [-3.1047821044921875, -0.8981232643127441, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver!', [-1.1047821044921875, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver!', [-1.1047821044921875, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sound Of', [-2.1047821044921875, -1.1674578189849854, -1.4536898136138916], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver!', [-1.1047821044921875, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Misérables', [-4.1047821044921875, -1.4061501026153564, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [-4.2297821044921875, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chitty Ch', [-3.1047821044921875, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bugsy Malone', [-3.4797821044921875, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Pirates of', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Half'}

Key: 18100826639000837003152275054635383201
Value: {'question': "What was Hitchcock's first sound movie?", 'responses': [('Shadow of', [-4.431399345397949, -0.10633727163076401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [-2.431399345397949, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lod', [-0.493899405002594, -2.261477470397949], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The', [-0.493899405002594, -0.7614773511886597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Farmer', [-0.493899405002594, -1.5114773511886597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Farmer', [-0.493899405002594, -1.5114773511886597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blackmail', [-1.3688993453979492, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blackmail', [-1.3688993453979492, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blackmail', [-1.3688993453979492, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The', [-0.493899405002594, -0.7614773511886597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Shadow of', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': 'Blackmail'}

Key: 46978202400019995803048513936387167406
Value: {'question': 'Which newspaper did Jackie Kennedy work for just before her marriage?', 'responses': [('the Washington', [-3.5332913398742676, -0.1768185794353485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('American Magazine', [-4.158291339874268, -1.5172739028930664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Washington', [-0.6582914590835571, -0.2622681260108948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington Post', [-1.7832914590835571, -1.0524394512176514], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Washington', [-0.6582914590835571, -0.2622681260108948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Washington', [-0.6582914590835571, -0.2622681260108948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Washington', [-0.6582914590835571, -0.2622681260108948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New', [-0.6582914590835571, -1.63726806640625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.0332913398742676, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vogue', [-3.2832913398742676, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'the Washington', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Washington Times Herald'}

Key: 192425824554876041957222139665425232026
Value: {'question': 'What are the international registration letters of a vehicle from Turkey?', 'responses': [('TR', [-0.5436571836471558, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TK', [-2.6686573028564453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.5436571836471558, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TU', [-2.6686573028564453, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TB', [-3.2936573028564453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TU', [-2.6686573028564453, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TL', [-3.5436573028564453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TL', [-3.5436573028564453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.5436571836471558, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TR', [-0.5436571836471558, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'TR', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'TR'}

Key: 83528968516445433453509617831911615884
Value: {'question': 'Who wrote The Turn Of The Screw in the 19th century and The Ambassadors in the 20th?', 'responses': [('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry James', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Henry James', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Henry James'}

Key: 156104970120579737519646627577605740239
Value: {'question': 'Which American nuclear submarine was the first to sail across the North Pole under the ice cap?', 'responses': [('USS Skate', [-0.7515816688537598, -0.10222228616476059, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Los Angeles', [-1.5015816688537598, -2.0835511684417725, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Skate', [-0.7515816688537598, -0.10222228616476059, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seawolf', [-3.1265816688537598, 0.0, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The USS Skate', [-1.5015816688537598, -0.5835512280464172, -0.1527596265077591], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Skate', [-0.7515816688537598, -0.10222228616476059, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The USS Nautilus', [-1.5015816688537598, -0.5835512280464172, -2.324634552001953], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Skate', [-0.7515816688537598, -0.10222228616476059, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Skate', [-0.7515816688537598, -0.10222228616476059, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The USS Skate', [-1.5015816688537598, -0.5835512280464172, -0.1527596265077591], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'USS Skate', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Nautilus'}

Key: 68838839744752530396341501700714733790
Value: {'question': "What was John Glenn/'s first spacecraft called?", 'responses': [('Friendship 7', [-0.04570977762341499, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.04570977762341499, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.04570977762341499, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.04570977762341499, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.04570977762341499, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.04570977762341499, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.04570977762341499, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship Seven', [-0.04570977762341499, -2.2378222942352295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.04570977762341499, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship 7', [-0.04570977762341499, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Friendship 7', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Friendship 7'}

Key: 29378418603318134791438896766579904102
<<<<<<< HEAD
Value: {'question': 'Which branch of medicine is concerned with disorders of the blood?', 'responses': [('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [-1.550844430923462, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [-1.550844430923462, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hematology', [-0.2383444905281067, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hematology', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Haematology'}

Key: 87636550321878124806882135170994952130
Value: {'question': 'Where was The Iron Triangle?', 'responses': [('in Spain', [-3.267399311065674, -4.698115348815918], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('in a', [-3.267399311065674, -3.073115348815918], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A location', [-3.392399311065674, -4.264634132385254], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-2.642399311065674, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The triangle', [-2.392399311065674, -3.805300712585449], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('San Francisco', [-2.892399311065674, -0.21614979207515717], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [-4.392399311065674, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-2.642399311065674, -2.688089609146118], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-4.642399311065674, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alabama', [-4.642399311065674, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'in Spain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Vietnam'}

Key: 45563207209849371914229685966159771508
Value: {'question': 'What is the correct name of laughing gas?', 'responses': [('Nitrous Oxide', [-0.4740769863128662, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous Oxide', [-0.4740769863128662, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.4740769863128662, 0.0, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('nitrous oxide', [-0.9740769863128662, 0.0, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous Oxide', [-0.4740769863128662, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous Oxide', [-0.4740769863128662, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous Oxide', [-0.4740769863128662, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.4740769863128662, 0.0, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous Oxide', [-0.4740769863128662, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.4740769863128662, 0.0, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nitrous Oxide', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Nitrous oxide'}

Key: 265936098235039201803308785227704747102
Value: {'question': 'What is the distance between bases on a little league baseball field?', 'responses': [('90 feet', [0.0, -0.8981232643127441, 0.0, -0.24813953042030334, -0.12472295016050339], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 feet', [0.0, -0.5231232643127441, 0.0, -0.3991394639015198, -0.35970133543014526], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 feet', [0.0, -0.5231232643127441, 0.0, -0.3991394639015198, -0.35970133543014526], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 feet', [0.0, -0.8981232643127441, 0.0, -0.24813953042030334, -0.12472295016050339], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 feet', [0.0, -0.8981232643127441, 0.0, -0.24813953042030334, -0.12472295016050339], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 feet', [0.0, -0.8981232643127441, 0.0, -0.24813953042030334, -0.12472295016050339], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 ft (', [0.0, -0.8981232643127441, 0.0, -1.998139500617981, -3.425161361694336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 ft', [0.0, -0.5231232643127441, 0.0, -1.774139404296875, -0.6810995936393738], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 feet', [0.0, -0.5231232643127441, 0.0, -0.3991394639015198, -0.35970133543014526], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 feet.', [0.0, -0.5231232643127441, 0.0, -0.3991394639015198, -3.23470139503479], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '90 feet', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': '60 feet'}

Key: 285930570199144441957972182976824804501
Value: {'question': 'How many home runs did baseball great Ty Cobb hit in the three world series in which he played?', 'responses': [('1', [-0.14707808196544647, -0.8928907513618469], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.14707808196544647, -2.642890691757202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.14707808196544647, -1.8928906917572021], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('0', [-0.14707808196544647, -2.642890691757202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.14707808196544647, -2.767890691757202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.14707808196544647, -2.767890691757202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.14707808196544647, -0.8928907513618469], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('0', [-0.14707808196544647, -2.642890691757202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('0', [-0.14707808196544647, -2.642890691757202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('None', [-3.022078037261963, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'None'}

Key: 8475934722060553222040500605260637358
Value: {'question': 'In cross-country bike racing, what do the initials BMX represent?', 'responses': [('Boys-Mountain', [-2.5158262252807617, -5.123229026794434, -2.003472089767456], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle motocross racing', [-0.45332634449005127, -0.8696132898330688, -3.0895884037017822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boys Mountain Bike', [-2.5158262252807617, -0.9982289671897888, -0.7266830801963806], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle motocross', [-0.45332634449005127, -0.8696132898330688, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle Motocross', [-0.45332634449005127, -0.7446132898330688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boys Modern X', [-2.5158262252807617, -5.060729026794434, -3.6318087577819824], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle Motor Cross', [-0.45332634449005127, -2.2446131706237793, -1.7983840703964233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Boy's", [-2.3908262252807617, -0.8930172920227051, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle motocross', [-0.45332634449005127, -0.8696132898330688, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle Motocross', [-0.45332634449005127, -0.7446132898330688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Boys-Mountain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9502705392332347, 'reference': 'Bicycle moto x (cross)'}

Key: 238843502758165140964368546019388873295
Value: {'question': 'After retiring as a player, with what team did baseball great Babe Ruth spend one year as a coach?', 'responses': [('The St', [-2.5989928245544434, -3.1907970905303955], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Philadelphia Athletics', [-3.8489928245544434, -0.3484445810317993], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Boston Red', [-0.9739928841590881, -0.5231232643127441], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('St.', [-3.2239928245544434, -0.10020658373832703], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('St.', [-3.2239928245544434, -0.10020658373832703], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Yankees', [-2.8489928245544434, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Cleveland Indians', [-3.7239928245544434, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Baltimore Orioles', [-2.0989928245544434, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Boston Braves', [-0.9739928841590881, -0.8981232643127441], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Boston Braves', [-0.9739928841590881, -0.8981232643127441], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The St', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'The Brooklyn Dodgers in 1938'}

Key: 334581350296120480367261421563983705765
Value: {'question': 'What is the maximum weight permitted for calves in rodeo calf-roping competition?', 'responses': [('500 lbs', [0.0, -2.2505624294281006, -0.1602240949869156, -0.06196761503815651, -1.2457284927368164, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('600 lbs', [0.0, -2.2505624294281006, -0.33509764075279236, -0.06993623077869415, -1.2381559610366821, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('180 pounds', [0.0, -1.5005624294281006, -2.8209421634674072, -0.2816230058670044, -0.7573891878128052, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('320 lbs', [0.0, -1.8755624294281006, -3.045189380645752, -0.7575989961624146, -1.1903669834136963, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('500 lb', [0.0, -2.2505624294281006, -0.1602240949869156, -0.06196761503815651, -2.7457284927368164, -0.5036162734031677], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('300 lbs', [0.0, -1.8755624294281006, -0.795189380645752, 0.0, -1.1583237648010254, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('160 lb.', [0.0, -1.5005624294281006, -2.8209421634674072, -0.3132617473602295, -2.9778928756713867, -1.0457854270935059], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('350 lb', [0.0, -1.8755624294281006, -0.920189380645752, 0.0, -2.5743613243103027, -0.5549569725990295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('100 lbs', [0.0, -1.5005624294281006, -1.4459421634674072, -0.06196761503815651, -1.4954583644866943, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('300 pounds.', [0.0, -1.8755624294281006, -0.795189380645752, 0.0, -0.5333237648010254, -2.6949362754821777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '500 lbs', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': '350 pounds. The minimum is 200 pounds'}

Key: 129907964634810605453053246002237295560
Value: {'question': 'What baseball player hit the only home run of his 212-year major league career off his own brother?', 'responses': [('Ken Griffey', [-4.27249002456665, -0.07595645636320114, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Bob Gibson', [-3.2724900245666504, -0.7194181084632874, -0.2878943383693695], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Joe Sewell (', [-2.8974900245666504, -2.3513169288635254, -2.7195613384246826], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Phil Niekro', [-3.6474900245666504, -0.9424135088920593, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Joe Carter', [-2.8974900245666504, -2.1638169288635254, -0.3565536141395569], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Don Mattingly', [-3.1474900245666504, -0.3976682424545288, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('David Ortiz', [-4.52249002456665, -0.6610312461853027, -0.44524040818214417], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Dave Winfield hit', [-3.6474900245666504, -0.6493819952011108, -2.714972734451294], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Bill Mazeros', [-3.2724900245666504, -1.9873172044754028, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Lou Brock', [-3.6474900245666504, -1.8405553102493286, -0.21797321736812592], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ken Griffey', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Joe Nickro in 1976. Nickro, a pitcher with the Houston Astros, hit a four-bagger off his brother Phil, who was pitching fro the Atlanta Braves. Houston won the game, 4-3'}

Key: 111522334749473954153894703786029711775
Value: {'question': 'Brooks Robinson and Carl Yastrzemski hold the major league baseball record for playing the greatest number of seasons with the same team. How many years did they play-- and with what teams?', 'responses': [('19', [-0.17948706448078156, -1.8047446012496948, -0.49769991636276245, -3.224821090698242], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('21 yrs', [-0.17948706448078156, -0.1797446459531784, -0.22097216546535492, -4.313727378845215], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('20 years', [-0.17948706448078156, -0.1797446459531784, -2.9709720611572266, -0.9198920130729675], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('196', [-0.17948706448078156, -1.8047446012496948, -0.49769991636276245, -3.599821090698242], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Robinson with the Orioles', [-3.0544869899749756, -3.111729145050049, -0.1797446459531784, -0.8981232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('21 seasons', [-0.17948706448078156, -0.1797446459531784, -0.22097216546535492, -1.6887274980545044], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('21 years', [-0.17948706448078156, -0.1797446459531784, -0.22097216546535492, -0.9387274980545044], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('21 years', [-0.17948706448078156, -0.1797446459531784, -0.22097216546535492, -0.9387274980545044], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Robinson played all', [-3.0544869899749756, -1.2367290258407593, -3.509152412414551, -0.1912800669670105], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('21 with', [-0.17948706448078156, -0.1797446459531784, -0.22097216546535492, -2.063727378845215], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '19', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': '23 years. Third baseman Robinson played with the Baltimore Orioles from 1955 to 1977; Carl Yastrzemski, outfielder/first baseman, played with the Boston Red Sox from 1961 to 1983'}

Key: 308452239157841251341747657848628630640
Value: {'question': 'Under the rules outlined in the charter of the International Olympic Committee, how much pure gold must there be in each gold medal awarded to first-place winners?', 'responses': [('98', [-0.2191106379032135, -2.7298450469970703, -3.054014205932617], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('5 ounces', [-0.2191106379032135, -1.3548451662063599, -2.584738254547119], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('7.', [-0.2191106379032135, -2.8548450469970703, -0.28356486558914185], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('10', [-0.2191106379032135, -1.1048451662063599, -1.3342970609664917], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('24', [-0.2191106379032135, -1.8548451662063599, -1.8903820514678955], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Five pounds', [-4.094110488891602, -4.505504608154297, -0.2512490451335907], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('10', [-0.2191106379032135, -1.1048451662063599, -1.3342970609664917], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('10', [-0.2191106379032135, -1.1048451662063599, -1.3342970609664917], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('25', [-0.2191106379032135, -1.8548451662063599, -2.1403820514678955], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('2.', [-0.2191106379032135, -1.8548451662063599, -1.5153820514678955], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '98', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'At least 6 grams. Silver medals must be at least .925 sterling silver'}

Key: 300688691761695500776736798416786589757
Value: {'question': 'Who was the famous great-great-grandfather of San Francisco 49er quarterback Steve Young?', 'responses': [('Brigham Young', [-1.8312433958053589, 0.0, -0.15132087469100952], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brigham Young', [-1.8312433958053589, 0.0, -0.15132087469100952], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Henry Harrison', [-2.8312435150146484, -1.882133960723877, -0.36422303318977356], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Abraham Lincoln', [-3.3312435150146484, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Jacob Astor', [-2.3312435150146484, -1.643141508102417, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mormon apostle Brigham', [-3.2062435150146484, -3.5335233211517334, -1.022051453590393], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General George Patton', [-4.206243515014648, -0.5567219853401184, -2.9413084983825684], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Burns', [-3.9562435150146484, -2.3770580291748047, -0.23207929730415344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('President Abraham Lincoln', [-2.5812435150146484, -2.8204846382141113, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daniel Boone', [-3.8312435150146484, -0.6807913780212402, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Brigham Young', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Mormon leader Brigham Young'}

Key: 56462358204221785575671081393392641828
Value: {'question': 'How many of the four Grand Slam trophies in tennis are gold; how many are silver?', 'responses': [('2 of each', [-0.8844073414802551, -0.7723734378814697, -1.9709460735321045, -0.4195221960544586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gold: 2', [-1.8844072818756104, -0.8478662967681885, -0.14867469668388367, -1.0338764190673828], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4 gold,', [-0.8844073414802551, -1.7723734378814697, -1.018271803855896, -0.5586935877799988], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('One gold, one', [-3.0094072818756104, -1.4533510208129883, -0.5896972417831421, -1.8705615997314453], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Both are silver', [-3.7594072818756104, -0.5696084499359131, -0.8042445778846741, -0.6865767240524292], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Silver, one gold', [-2.7594072818756104, -2.803192138671875, -3.130776882171631, -1.1675108671188354], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 gold,', [-0.8844073414802551, -1.5223734378814697, -0.944169282913208, -0.46411430835723877], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2 of each', [-0.8844073414802551, -0.7723734378814697, -1.9709460735321045, -0.4195221960544586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2 gold,', [-0.8844073414802551, -0.7723734378814697, -0.9709460735321045, -0.48939383029937744], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three; One', [-3.2594072818756104, -2.419248104095459, -1.4061501026153564, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '2 of each', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Only the Wimbledon trophy is gold; the others--for the U.S. Open, the French Open and the Australian Open--are sliver'}

Key: 264492954299989567625230528469723869397
Value: {'question': '"What breakfast food gets its name from the German word for ""stirrup""?"', 'responses': [('', [-4.29825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hot', [-4.04825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hash', [-2.54825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ra', [-4.42325496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('French', [-2.04825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hash', [-2.54825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('English', [-3.48575496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hamburger', [-4.67325496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C', [-4.04825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('French', [-2.04825496673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'The Bagel'}

Key: 123031215552768465947489488321763433747
Value: {'question': 'What popular drink did a Dutch medical professor produce in his laboratory while trying to come up with a blood cleanser that could be sold in drugstores?', 'responses': [('Gin', [-2.811152458190918, -0.14460685849189758], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coffee', [-2.498652458190918, -0.03804141283035278], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca-', [-0.561152458190918, -0.5231232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca Cola', [-0.561152458190918, -0.8981232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca-', [-0.561152458190918, -0.5231232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca-', [-0.561152458190918, -0.5231232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca Cola', [-0.561152458190918, -0.8981232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca-', [-0.561152458190918, -0.5231232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca Cola', [-0.561152458190918, -0.8981232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Coca-', [-0.561152458190918, -0.5231232643127441], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gin', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Gin'}

Key: 70034138503071488307301302515512325491
Value: {'question': 'On what vegetable did an ancient Egyptian place his right hand when taking an oath?', 'responses': [('An onion', [-4.5428948402404785, -2.1592459678649902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The date', [-3.0428948402404785, -2.168170213699341], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turnip', [-3.5428948402404785, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Palm', [-4.6678948402404785, -0.5329685807228088], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Onion', [-1.417894721031189, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A cucumber', [-3.1678948402404785, -2.132237434387207], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Date', [-2.4178948402404785, -0.7586114406585693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Onion', [-1.417894721031189, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lily', [-4.1678948402404785, -0.459962397813797], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Olive', [-2.9178948402404785, -0.1597548872232437], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'An onion', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'The onion. Its round shape symbolized eternity'}

Key: 159076132732291635240524174499427090219
Value: {'question': 'What American city produces most of the egg rolls sold in grocery stores in the United States?', 'responses': [('San Francisco', [-2.093059539794922, -0.08438294380903244], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-1.5930594205856323, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-1.5930594205856323, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Omaha', [-3.780559539794922, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbus,', [-3.780559539794922, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Atlanta', [-4.468059539794922, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Houston', [-4.843059539794922, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago,', [-1.5930594205856323, -2.1269280910491943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Los Angeles', [-2.405559539794922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('San Francisco', [-2.093059539794922, -0.08438294380903244], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'San Francisco', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Houston Texas'}

Key: 291144255699344419357989041002854457781
Value: {'question': 'Italy leads the world in pasta consumption with 61.7 pounds eaten per person per year. What country is second?', 'responses': [('Argentina', [-3.9463844299316406, -0.2012908160686493], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Greece', [-2.0713844299316406, -0.24914894998073578], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('US', [-4.071384429931641, -0.4478530287742615], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Belgium', [-3.9463844299316406, -0.24524188041687012], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Portugal', [-4.446384429931641, -0.2819128632545471], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Greece', [-2.0713844299316406, -0.24914894998073578], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Portugal', [-4.446384429931641, -0.2819128632545471], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Turkey', [-3.4463844299316406, -0.2275370955467224], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('India', [-3.9463844299316406, -0.2522427439689636], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Japan with', [-2.5713844299316406, -3.2687647342681885], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Argentina', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Venezuela, where the annual pasta consumption is 27.9 pounds'}

Key: 13854996707291025586055527354124847190
Value: {'question': 'When Birdseye introduced the first frozen food in 1930, what did the company call it/', 'responses': [("Bird's", [-2.1191060543060303, -1.4061501026153564, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Ice-o', [-3.7441060543060303, -2.2986555099487305, -1.7662808895111084], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Red Bird', [-4.619106292724609, -1.2445486783981323, -0.28111904859542847], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Frozen Food', [-3.1191060543060303, -2.9273605346679688, -0.521356463432312], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Frozen Food', [-1.7441060543060303, -1.3701541423797607, -0.21724066138267517], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Birds Eye', [-2.3691060543060303, -0.2697221040725708, -0.24104101955890656], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Frozen food', [-1.7441060543060303, -1.8701541423797607, -0.12812170386314392], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"The Magic', [-1.8691060543060303, -1.9057049751281738, -3.494413375854492], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"Space Food', [-1.8691060543060303, -4.780704975128174, -0.43967148661613464], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Quick Frozen Food', [-2.8691060543060303, -1.625661849975586, -1.372543215751648], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Bird's", 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456562, 'reference': 'Frosted food'}

Key: 168490295988734405249390154131935185029
Value: {'question': 'Which 100-mile long waterway links the Mediterranean and the Red Sea?', 'responses': [('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Suez', [-1.7416096925735474, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez', [-0.24160966277122498, -2.578889846801758], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('St.', [-3.866609573364258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.24160966277122498, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Suez Canal', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Suez Canal'}
=======
Value: {'question': 'Which branch of medicine is concerned with disorders of the blood?', 'responses': [('Haematology', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haematology', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Haematology', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Haematology'}

Key: 87636550321878124806882135170994952130
Value: {'question': 'Where was The Iron Triangle?', 'responses': [('Australia', [-2.786118984222412, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-4.786118984222412, -0.6539949178695679], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cornwall', [-4.536118984222412, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In the', [-2.786118984222412, -0.9545725584030151], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('in Scotland', [-4.286118984222412, -3.8402233123779297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yorkshire', [-4.161118984222412, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Isle', [-2.161118984222412, -2.07580304145813], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wales', [-3.536118984222412, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The UK', [-2.161118984222412, -3.20080304145813], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In France', [-2.786118984222412, -4.079572677612305], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Australia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Vietnam'}

Key: 45563207209849371914229685966159771508
Value: {'question': 'What is the correct name of laughing gas?', 'responses': [('nitrous oxide', [-2.1821796894073486, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.11967968195676804, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.11967968195676804, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.11967968195676804, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.11967968195676804, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.11967968195676804, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous Oxide', [-0.11967968195676804, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.11967968195676804, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous Oxide', [-0.11967968195676804, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nitrous oxide', [-0.11967968195676804, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'nitrous oxide', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Nitrous oxide'}

Key: 265936098235039201803308785227704747102
Value: {'question': 'What is the distance between bases on a little league baseball field?', 'responses': [('90 feet', [0.0, -0.6931471824645996, 0.0, -0.36927899718284607, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 feet', [0.0, -0.6931471824645996, 0.0, -0.36927899718284607, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 feet', [0.0, -0.6931471824645996, 0.0, -0.36927899718284607, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 feet', [0.0, -0.6931471824645996, 0.0, -0.5261728763580322, -0.20383088290691376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 ft', [0.0, -0.6931471824645996, 0.0, -2.119278907775879, -0.3125550448894501], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 ft', [0.0, -0.6931471824645996, 0.0, -2.119278907775879, -0.3125550448894501], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 feet', [0.0, -0.6931471824645996, 0.0, -0.5261728763580322, -0.20383088290691376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90 feet', [0.0, -0.6931471824645996, 0.0, -0.36927899718284607, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60 feet', [0.0, -0.6931471824645996, 0.0, -0.5261728763580322, -0.20383088290691376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60ft,', [0.0, -0.6931471824645996, 0.0, -1.7761728763580322, -3.714935302734375], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '90 feet', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': '60 feet'}

Key: 285930570199144441957972182976824804501
Value: {'question': 'How many home runs did baseball great Ty Cobb hit in the three world series in which he played?', 'responses': [('3', [-0.13691508769989014, -2.253683090209961], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.13691508769989014, -2.253683090209961], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('0', [-0.13691508769989014, -2.378683090209961], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.13691508769989014, -2.878683090209961], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.13691508769989014, -2.253683090209961], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('0', [-0.13691508769989014, -2.378683090209961], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('none', [-4.38691520690918, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('0', [-0.13691508769989014, -2.378683090209961], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('None', [-2.6369152069091797, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.13691508769989014, -0.8786830902099609], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '3', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': 'None'}

Key: 8475934722060553222040500605260637358
Value: {'question': 'In cross-country bike racing, what do the initials BMX represent?', 'responses': [('Bicycle Motocross', [-0.20716120302677155, -0.955147922039032, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle Motocross', [-0.20716120302677155, -0.955147922039032, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle motocross', [-0.20716120302677155, -0.580147922039032, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Boy's", [-2.7696611881256104, -0.5715613961219788, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle Motocross', [-0.20716120302677155, -0.955147922039032, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle motocross', [-0.20716120302677155, -0.580147922039032, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boys Mountain B', [-2.5821611881256104, -1.3599531650543213, -1.9810765981674194], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle motocross', [-0.20716120302677155, -0.580147922039032, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bicycle Motorcross', [-0.20716120302677155, -2.8926479816436768, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boys’ motocross', [-2.5821611881256104, -4.484952926635742, -4.209506511688232], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bicycle Motocross', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Bicycle moto x (cross)'}

Key: 238843502758165140964368546019388873295
Value: {'question': 'After retiring as a player, with what team did baseball great Babe Ruth spend one year as a coach?', 'responses': [('Yankees', [-2.4833316802978516, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston Red', [-0.7333317399024963, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New', [-2.2333316802978516, -1.2343707084655762], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Yankees', [-2.2333316802978516, -1.4843707084655762], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.6083316802978516, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New', [-2.2333316802978516, -1.2343707084655762], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston Braves', [-0.7333317399024963, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baltimore Orioles', [-3.3583316802978516, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Boston', [-2.2333316802978516, -1.2343707084655762], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston Red', [-0.7333317399024963, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Yankees', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': 'The Brooklyn Dodgers in 1938'}

Key: 334581350296120480367261421563983705765
Value: {'question': 'What is the maximum weight permitted for calves in rodeo calf-roping competition?', 'responses': [('180lbs', [0.0, -1.4004900455474854, -2.803924560546875, -0.49677813053131104, -1.7833977937698364], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('650 pounds', [0.0, -2.4004900455474854, -1.4304897785186768, -0.5321267247200012, -1.0554922819137573], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('500lbs', [0.0, -2.1504900455474854, -0.2100333720445633, -0.29760628938674927, -1.7335104942321777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('100 pounds', [0.0, -1.4004900455474854, -1.1789246797561646, -0.10340224206447601, -1.470801830291748], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('750 pounds', [0.0, -2.5254900455474854, -0.9238299131393433, -0.7893074154853821, -1.0927062034606934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('350lbs', [0.0, -2.0254900455474854, -1.1176681518554688, -0.043320056051015854, -1.6742558479309082], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80 pounds', [0.0, -2.6504900455474854, -0.3397788107395172, -2.1327686309814453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('300lbs', [0.0, -2.0254900455474854, -0.8676681518554688, -0.03891412541270256, -1.6789441108703613], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('600 lbs', [0.0, -2.4004900455474854, -0.43048974871635437, -0.34428760409355164, -1.4094507694244385], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('500 lbs', [0.0, -2.1504900455474854, -0.2100333720445633, -0.29760628938674927, -1.4835104942321777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '180lbs', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': '350 pounds. The minimum is 200 pounds'}

Key: 129907964634810605453053246002237295560
Value: {'question': 'What baseball player hit the only home run of his 212-year major league career off his own brother?', 'responses': [('Johnny Bench', [-3.793748617172241, -0.9585721492767334, -0.020541900768876076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nolan Ryan', [-3.793748617172241, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Scott', [-3.293748617172241, -2.7134578227996826, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Hubbell', [-4.16874885559082, -1.6069910526275635, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Glav', [-3.168748617172241, -1.123218059539795, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Lee', [-3.293748617172241, -1.0955356359481812, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roger Maris', [-3.668748617172241, -0.7075481414794922, -0.06064750999212265], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tommy Herr', [-3.668748617172241, -4.1507368087768555, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Gibson', [-3.293748617172241, -0.617194652557373, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pete Rose', [-3.918748617172241, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Johnny Bench', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Joe Nickro in 1976. Nickro, a pitcher with the Houston Astros, hit a four-bagger off his brother Phil, who was pitching fro the Atlanta Braves. Houston won the game, 4-3'}

Key: 111522334749473954153894703786029711775
Value: {'question': 'Brooks Robinson and Carl Yastrzemski hold the major league baseball record for playing the greatest number of seasons with the same team. How many years did they play-- and with what teams?', 'responses': [('22 years each', [-0.13634920120239258, -0.25192904472351074, -1.5907045602798462, -0.8079673051834106, -2.378225803375244, -2.5416512489318848], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('14 seasons each,', [-0.13634920120239258, -1.5019290447235107, -3.3090744018554688, -1.640538215637207, -2.3124656677246094, -1.6015605926513672], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('20 years with the', [-0.13634920120239258, -0.25192904472351074, -2.4657044410705566, -0.7322229743003845, -1.4599473476409912, -0.21635136008262634], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('21 years -- both', [-0.13634920120239258, -0.25192904472351074, -0.3407045602798462, -0.7827778458595276, -3.73998761177063, -3.734739303588867], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('20 years for the', [-0.13634920120239258, -0.25192904472351074, -2.4657044410705566, -0.7322229743003845, -2.459947347640991, -0.9059492945671082], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('21 years with the', [-0.13634920120239258, -0.25192904472351074, -0.3407045602798462, -0.7827778458595276, -1.3649876117706299, -0.24192529916763306], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Brooks Robinson (195', [-2.2613492012023926, -0.4916626214981079, -3.8270092010498047, -0.729385495185852, -0.07365573197603226, -0.1797446459531784], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('21 seasons with', [-0.13634920120239258, -0.25192904472351074, -0.3407045602798462, -1.5327777862548828, -1.2549322843551636, -2.613121747970581], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('21 years, Baltimore', [-0.13634920120239258, -0.25192904472351074, -0.3407045602798462, -0.7827778458595276, -1.9899876117706299, -1.1774959564208984], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('21 seasons with the', [-0.13634920120239258, -0.25192904472351074, -0.3407045602798462, -1.5327777862548828, -1.2549322843551636, -0.23812176287174225], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '22 years each', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': '23 years. Third baseman Robinson played with the Baltimore Orioles from 1955 to 1977; Carl Yastrzemski, outfielder/first baseman, played with the Boston Red Sox from 1961 to 1983'}

Key: 308452239157841251341747657848628630640
Value: {'question': 'Under the rules outlined in the charter of the International Olympic Committee, how much pure gold must there be in each gold medal awarded to first-place winners?', 'responses': [('2.5', [-0.12362552434206009, -1.9664679765701294, -1.3883447647094727, -0.5262935757637024], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3.7', [-0.12362552434206009, -2.46646785736084, -0.671841025352478, -0.9143480062484741], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10g', [-0.12362552434206009, -1.2164679765701294, -1.2149394750595093, -2.1304516792297363], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('99%', [-0.12362552434206009, -1.8414679765701294, -0.9460027813911438, -3.144458770751953], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('One milligram', [-2.9986255168914795, -3.393655776977539, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3.9', [-0.12362552434206009, -2.46646785736084, -0.671841025352478, -2.6643481254577637], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5 ounces (', [-0.12362552434206009, -1.5914679765701294, -3.184218168258667, -2.6949362754821777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5 ounces', [-0.12362552434206009, -1.5914679765701294, -3.184218168258667, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('23', [-0.12362552434206009, -1.9664679765701294, -2.6383447647094727, -2.350139617919922], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Two grains of gold', [-4.123625755310059, -3.928572654724121, -3.204468250274658, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '2.5', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'At least 6 grams. Silver medals must be at least .925 sterling silver'}

Key: 300688691761695500776736798416786589757
Value: {'question': 'Who was the famous great-great-grandfather of San Francisco 49er quarterback Steve Young?', 'responses': [('Jesse Owens', [-2.893064498901367, -0.992699146270752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert E Lee', [-4.393064498901367, -2.0172228813171387, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Louis', [-3.643064498901367, -2.291137218475342, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Abraham Lincoln', [-2.643064498901367, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brigham Young', [-2.143064498901367, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thomas Jefferson', [-4.018064498901367, -0.40395429730415344, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Clark', [-2.643064498901367, -4.6469831466674805, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Wallace', [-2.643064498901367, -3.5844829082489014, -0.22202131152153015], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack London', [-4.143064498901367, -1.1924636363983154, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Abraham Lincoln', [-2.643064498901367, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jesse Owens', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Mormon leader Brigham Young'}

Key: 56462358204221785575671081393392641828
Value: {'question': 'How many of the four Grand Slam trophies in tennis are gold; how many are silver?', 'responses': [('Four, one', [-2.3047478199005127, -2.739948034286499, -2.2129099369049072, -0.24223832786083221], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four are gold and', [-2.3047478199005127, -1.114948034286499, -0.1797446459531784, -1.5514447689056396], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1/3', [-0.8047477602958679, -1.7117633819580078, -3.532501220703125, -1.0025440454483032], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gold: 1', [-2.6797478199005127, -1.3964908123016357, -0.20546121895313263, -1.367466688156128], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four are gold;', [-2.3047478199005127, -1.114948034286499, -0.1797446459531784, -1.5514447689056396], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four - all are', [-2.3047478199005127, -3.739948034286499, -1.7400015592575073, -1.515566349029541], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three gold, one', [-2.6797478199005127, -1.4969815015792847, -0.5605152249336243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2;', [-0.8047477602958679, -0.711763322353363, -2.855801820755005, -0.11620324850082397], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Two are gold;', [-2.0547478199005127, -1.295312523841858, -0.14267508685588837, -1.8736379146575928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4 gold,', [-0.8047477602958679, -2.086763381958008, -1.031122088432312, -0.647921085357666], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Four, one', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Only the Wimbledon trophy is gold; the others--for the U.S. Open, the French Open and the Australian Open--are sliver'}

Key: 264492954299989567625230528469723869397
Value: {'question': '"What breakfast food gets its name from the German word for ""stirrup""?"', 'responses': [('Waffle', [-4.994383335113525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Waffles', [-2.8068833351135254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Crump', [-2.9318833351135254, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yorkshire Pudding', [-2.5568833351135254, -1.4061501026153564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('French toast', [-2.3068833351135254, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eggs Benedict', [-4.744383335113525, -1.194031834602356], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cornflakes', [-2.9318833351135254, -0.27137917280197144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Crump', [-2.9318833351135254, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hash', [-2.4318833351135254, -1.7275174856185913], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('English muffin', [-4.431883335113525, -0.4197388291358948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Waffle', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'The Bagel'}

Key: 123031215552768465947489488321763433747
Value: {'question': 'What popular drink did a Dutch medical professor produce in his laboratory while trying to come up with a blood cleanser that could be sold in drugstores?', 'responses': [('Gin', [-2.7959351539611816, -0.06820624321699142], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coca-', [-0.48343509435653687, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coke', [-4.608435153961182, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coca-', [-0.48343509435653687, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coca Cola', [-0.48343509435653687, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coca-', [-0.48343509435653687, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coca-', [-0.48343509435653687, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coca-', [-0.48343509435653687, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Bull', [-3.9834351539611816, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coca Cola', [-0.48343509435653687, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Gin'}

Key: 70034138503071488307301302515512325491
Value: {'question': 'On what vegetable did an ancient Egyptian place his right hand when taking an oath?', 'responses': [('Date', [-2.5658018589019775, -0.35814887285232544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cucumber', [-2.6908018589019775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wheat', [-3.5658018589019775, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nut', [-4.753301620483398, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Onion', [-1.0658018589019775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Onion', [-1.0658018589019775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cauliflower', [-4.753301620483398, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Onion', [-1.0658018589019775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cucumber', [-2.6908018589019775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cucumber', [-2.6908018589019775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Date', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'The onion. Its round shape symbolized eternity'}

Key: 159076132732291635240524174499427090219
Value: {'question': 'What American city produces most of the egg rolls sold in grocery stores in the United States?', 'responses': [('New York', [-2.247859001159668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-3.747859001159668, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.247859001159668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.247859001159668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('St Louis', [-4.372859001159668, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Omaha', [-4.435359001159668, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richmond,', [-2.747859001159668, -0.9456259608268738], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-1.1228588819503784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brooklyn,', [-3.622859001159668, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-1.1228588819503784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'New York', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Houston Texas'}

Key: 291144255699344419357989041002854457781
Value: {'question': 'Italy leads the world in pasta consumption with 61.7 pounds eaten per person per year. What country is second?', 'responses': [('Turkey', [-3.5604746341705322, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('China', [-2.4354746341705322, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [-3.3104746341705322, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-2.4354746341705322, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-2.1854746341705322, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The USA', [-3.9354746341705322, -1.5275808572769165], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-2.1854746341705322, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [-3.8104746341705322, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-2.6854746341705322, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-2.4354746341705322, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Turkey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580787, 'reference': 'Venezuela, where the annual pasta consumption is 27.9 pounds'}

Key: 13854996707291025586055527354124847190
Value: {'question': 'When Birdseye introduced the first frozen food in 1930, what did the company call it/', 'responses': [('Quick Frozen Food', [-2.6862826347351074, -1.2717809677124023, -1.4123835563659668], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Quick Cooking', [-3.3112826347351074, -2.49373197555542, -4.683548927307129], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frozen Delight', [-1.436282753944397, -3.9311137199401855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wonder Crisp', [-4.186282634735107, -4.227921485900879, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Birds Eye frozen', [-2.1862826347351074, -0.24682727456092834, -4.51973819732666], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The first frozen', [-2.6862826347351074, -2.6976425647735596, -0.4480118453502655], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Birds eye', [-2.1862826347351074, -1.871827244758606, -0.2424418032169342], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frozen foods', [-1.436282753944397, -2.6811137199401855, -0.037085697054862976], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Birdseye'", [-2.6862826347351074, -0.3484445810317993, -1.6166411638259888], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A-Fish', [-4.061282634735107, -2.8628292083740234, -4.593214988708496], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Quick Frozen Food', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Frosted food'}

Key: 168490295988734405249390154131935185029
Value: {'question': 'Which 100-mile long waterway links the Mediterranean and the Red Sea?', 'responses': [('The Suez Canal', [-1.5019290447235107, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Suez Canal', [-1.5019290447235107, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suez Canal', [-0.25192904472351074, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Suez Canal', [-1.5019290447235107, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Suez Canal', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Suez Canal'}
>>>>>>> 811d839 (new run)

Key: 6776802769051769365953897353838604966
Value: {'question': 'In which country is the Aswan Dam?', 'responses': [('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Egypt', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Egypt'}

Key: 123242803959710812315202709532554288982
Value: {'question': 'Where did Idi Amin rule from 1971-1979?', 'responses': [('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Uganda', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Uganda'}

Key: 42833698102290676464874163448767640135
Value: {'question': 'Which country has the rand as its currency?', 'responses': [('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'South Africa', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'South Africa'}

Key: 295095979444912691559926912168029105931
<<<<<<< HEAD
Value: {'question': "What is the former name of the People's Republic of Venin?", 'responses': [('Former name', [-4.892248630523682, -0.2818537950515747], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yugosla', [-4.329748630523682, -0.21256794035434723], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Socialist Republic', [-1.5172487497329712, -0.12387295067310333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Democratic Socialist', [-2.3922486305236816, -1.8506863117218018], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Democratic Socialist', [-2.3922486305236816, -1.8506863117218018], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vietnam', [-2.7672486305236816, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yugoslavia', [-0.8922487497329712, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yugoslavia', [-0.8922487497329712, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yugoslavia', [-0.8922487497329712, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Socialist People', [-1.5172487497329712, -2.623872995376587], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Former name', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Dohomey'}

Key: 252033550515368521307117691557852573643
Value: {'question': 'In which country are Tangier and Casablanca?', 'responses': [('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': "What is the former name of the People's Republic of Venin?", 'responses': [('Yugoslavia', [-0.7630116939544678, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yugoslavia', [-0.7630116939544678, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Korea', [-3.0130116939544678, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yugoslavia', [-0.7630116939544678, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yugoslavia', [-0.7630116939544678, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Socialist Republic', [-2.2630116939544678, -0.11976555734872818], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yugoslavia', [-0.7630116939544678, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Laos', [-3.5130116939544678, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Republic of', [-3.5130116939544678, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Laos', [-3.5130116939544678, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Yugoslavia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Dohomey'}

Key: 252033550515368521307117691557852573643
Value: {'question': 'In which country are Tangier and Casablanca?', 'responses': [('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Morocco', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Morocco'}

Key: 310174766979311185253216366138103365715
<<<<<<< HEAD
Value: {'question': 'Who was the Egyptian president who was assassinated in 1981?', 'responses': [('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar el-Sad', [0.0, -2.520780563354492, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar el-Sad', [0.0, -2.520780563354492, -0.2014133334159851, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.14578063786029816, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Anwar Sadat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Sadat'}

Key: 181774374650396046242406734049900143390
Value: {'question': 'Which country was called Upper Volta until 1984?', 'responses': [('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mali', [-2.6367831230163574, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mali', [-2.6367831230163574, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Burkina Faso', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Burkina Faso'}

Key: 331660614590016778135287642191726165628
Value: {'question': 'Who was the Egyptian king whose tomb an treasures were discovered in the Valley of the Kings in 1922?', 'responses': [('Tutankhamun', [-0.15497621893882751, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamun', [-0.15497621893882751, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamen', [-0.15497621893882751, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamun', [-0.15497621893882751, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamun', [-0.15497621893882751, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamen', [-0.15497621893882751, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Ramesses VI', [-3.4049761295318604, -0.12283510714769363, -1.0269876718521118, -0.09563114494085312], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamen', [-0.15497621893882751, 0.0, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tutankhamun', [-0.15497621893882751, 0.0, 0.0, -0.9740769863128662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Ramesses VI', [-3.4049761295318604, -0.12283510714769363, -1.0269876718521118, -0.09563114494085312], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tutankhamun', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Tutankhamen'}

Key: 324820970302933751186028874494426228771
Value: {'question': 'Name the East African country which lies on the equator.', 'responses': [('Equatorial Guinea', [-2.709057331085205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-0.45905739068984985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Equitorial', [-2.146557331085205, -1.5019290447235107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [-2.646557331085205, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-0.45905739068984985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Equator', [-2.146557331085205, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-0.45905739068984985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [-2.334057331085205, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [-2.646557331085205, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-0.45905739068984985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Equatorial Guinea', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'Kenya'}

Key: 130687210507135138158397592755308049218
Value: {'question': 'What are the two main arms of the River Nile called?', 'responses': [('Upper and', [-2.4974451065063477, -0.6359454989433289], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Nile', [-0.9974451065063477, -2.954836368560791], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Upper and', [-2.4974451065063477, -0.6359454989433289], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delta', [-3.9974451065063477, -1.3564256429672241], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White &', [-1.2474451065063477, -3.219496726989746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Upper and', [-2.4974451065063477, -0.6359454989433289], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nile Delta', [-3.9974451065063477, -1.4550374746322632], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The White', [-0.9974451065063477, -1.079836368560791], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The white', [-0.9974451065063477, -3.454836368560791], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The White', [-0.9974451065063477, -1.079836368560791], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Upper and', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576458, 'reference': 'Blue Nile and White Nile'}
=======
Value: {'question': 'Who was the Egyptian president who was assassinated in 1981?', 'responses': [('Anwar el Sadat', [0.0, -2.4136815071105957, -1.3132617473602295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.16368143260478973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.16368143260478973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.16368143260478973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.16368143260478973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar el-Sad', [0.0, -2.4136815071105957, -0.3132617473602295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.16368143260478973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.16368143260478973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.16368143260478973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [0.0, -0.16368143260478973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Anwar el Sadat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Sadat'}

Key: 181774374650396046242406734049900143390
Value: {'question': 'Which country was called Upper Volta until 1984?', 'responses': [('Burkina Faso', [-0.06011725217103958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.06011725217103958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.06011725217103958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.06011725217103958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.06011725217103958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mali', [-2.841367244720459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.06011725217103958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.06011725217103958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.06011725217103958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.06011725217103958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Burkina Faso', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Burkina Faso'}

Key: 331660614590016778135287642191726165628
Value: {'question': 'Who was the Egyptian king whose tomb an treasures were discovered in the Valley of the Kings in 1922?', 'responses': [('Tutankhamun', [0.0, 0.0, 0.0, -0.4073510468006134, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tutankhamen', [0.0, 0.0, 0.0, -1.094851016998291, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tutankhamun', [0.0, 0.0, 0.0, -0.4073510468006134, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tutankhamun', [0.0, 0.0, 0.0, -0.4073510468006134, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tutankhamen', [0.0, 0.0, 0.0, -1.094851016998291, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tutankhamun', [0.0, 0.0, 0.0, -0.4073510468006134, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tutankhamun', [0.0, 0.0, 0.0, -0.4073510468006134, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tutankhamen', [0.0, 0.0, 0.0, -1.094851016998291, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tutankhamun', [0.0, 0.0, 0.0, -0.4073510468006134, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tutankhamun', [0.0, 0.0, 0.0, -0.4073510468006134, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tutankhamun', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Tutankhamen'}

Key: 324820970302933751186028874494426228771
Value: {'question': 'Name the East African country which lies on the equator.', 'responses': [('Tanzania', [-2.614400863647461, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-0.7394009232521057, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-0.7394009232521057, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [-2.614400863647461, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [-2.614400863647461, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [-2.614400863647461, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Equator', [-2.645650863647461, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [-1.114400863647461, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [-1.114400863647461, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uganda', [-1.114400863647461, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tanzania', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'Kenya'}

Key: 130687210507135138158397592755308049218
Value: {'question': 'What are the two main arms of the River Nile called?', 'responses': [('The first is called', [-0.7879495620727539, -2.9791693687438965, -1.029605507850647, -2.0123095512390137], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White Nile and Blue', [-1.162949562072754, -1.3132617473602295, -0.18358570337295532, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Upper Nile and White', [-2.662949562072754, -1.253983497619629, -0.17552578449249268, -2.5707690715789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White and Blue', [-1.162949562072754, -0.3132617473602295, -0.3484445810317993, -1.0364840030670166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The white and blue', [-0.7879495620727539, -2.8541693687438965, -0.1797446459531784, -1.1381808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White Nile and Blue', [-1.162949562072754, -1.3132617473602295, -0.18358570337295532, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Blue Nile and', [-0.7879495620727539, -1.2291693687438965, -0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Upper Nile and Lower', [-2.662949562072754, -1.253983497619629, -0.17552578449249268, -0.3207690119743347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White and Blue Niles', [-1.162949562072754, -0.3132617473602295, -0.3484445810317993, -1.6614840030670166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The First Cataract', [-0.7879495620727539, -2.2291693687438965, -1.2836568355560303, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The first is called', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Blue Nile and White Nile'}
>>>>>>> 811d839 (new run)

Key: 53274303663405083422116175541800204370
Value: {'question': 'In which country did King Hassan II ascend the throne in 1961?', 'responses': [('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Morocco', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Morocco'}

Key: 250059352026955696053245304517372455893
<<<<<<< HEAD
Value: {'question': 'Which British general was killed at Khartoum in 1885?', 'responses': [('Gordon', [-2.04368257522583, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Gordon', [-3.60618257522583, -0.3858543336391449], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kitchener', [-1.7936824560165405, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Gordon', [-1.3561824560165405, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kitchener', [-1.7936824560165405, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles George', [-1.3561824560165405, -1.857227087020874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Gordon', [-1.3561824560165405, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kitchener', [-1.7936824560165405, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Gordon', [-1.8561824560165405, -0.3394295871257782], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lord Kitchener', [-1.7936824560165405, -0.1991376280784607], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gordon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'Gordon'}

Key: 189672046327043991060952109915984920985
Value: {'question': 'On the border of which two countries is Victoria Falls?', 'responses': [('Zimbabwe and Zambia', [-0.7575989961624146, -0.17628993093967438, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia and Zimbabwe', [-0.6325989961624146, -0.1980607658624649, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17628993093967438, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia and Zimbabwe', [-0.6325989961624146, -0.1980607658624649, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia, Zimbabwe', [-0.6325989961624146, -2.6980607509613037, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia and Zimbabwe', [-0.6325989961624146, -0.1980607658624649, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia & Zimbabwe', [-0.6325989961624146, -2.5730607509613037, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17628993093967438, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia, Zimbabwe', [-0.6325989961624146, -2.6980607509613037, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17628993093967438, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zimbabwe and Zambia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Zambia and Zimbabwe'}

Key: 233018890745564144579465153960735729748
Value: {'question': 'What is the name of the volcanic valley that runs from the Sinai peninsula to central Mozambique?', 'responses': [('The Great', [-1.2615121603012085, -0.26555484533309937], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rift Valley', [-3.199012279510498, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Etos', [-4.574012279510498, -0.7765059471130371], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Rift', [-0.8240121603012085, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Great', [-4.011512279510498, -0.3613221347332001], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nile', [-4.886512279510498, -0.6962561011314392], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambe', [-4.261512279510498, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Valley', [-1.2615121603012085, -3.703054904937744], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Rift', [-0.8240121603012085, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Rift', [-0.8240121603012085, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Great', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Great Rift Valley'}
=======
Value: {'question': 'Which British general was killed at Khartoum in 1885?', 'responses': [('Horatio Kitchener', [-3.279405117034912, -0.8936154842376709, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles George Gordon', [-1.279405117034912, -1.8309202194213867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Garnet Wolse', [-2.279405117034912, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lord Kitchener', [-1.341905117034912, -0.33321908116340637, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lord Kitchener', [-1.341905117034912, -0.33321908116340637, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lord Kitchener', [-1.341905117034912, -0.33321908116340637, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Gordon', [-3.341905117034912, -0.27164193987846375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horatio Herbert Kitchener', [-3.279405117034912, -0.5811154842376709, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thomas Gordon Gordon', [-3.966905117034912, -0.7318674921989441, -3.2085978984832764], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lord Kitchener', [-1.341905117034912, -0.33321908116340637, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Horatio Kitchener', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Gordon'}

Key: 189672046327043991060952109915984920985
Value: {'question': 'On the border of which two countries is Victoria Falls?', 'responses': [('Zambia, Zimbabwe', [-0.6325989961624146, -2.948124408721924, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17881537973880768, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17881537973880768, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17881537973880768, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17881537973880768, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17881537973880768, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia & Zimbabwe', [-0.6325989961624146, -2.448124408721924, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17881537973880768, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe and Zambia', [-0.7575989961624146, -0.17881537973880768, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia & Zimbabwe', [-0.6325989961624146, -2.448124408721924, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zambia, Zimbabwe', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Zambia and Zimbabwe'}

Key: 233018890745564144579465153960735729748
Value: {'question': 'What is the name of the volcanic valley that runs from the Sinai peninsula to central Mozambique?', 'responses': [('Great Rift Valley', [-1.1660470962524414, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Sea', [-3.1035470962524414, -0.13458658754825592, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Rift Valley', [-1.1660470962524414, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Rift Valley', [-0.7910471558570862, -2.178889751434326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wadi', [-3.9160470962524414], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Rift Valley', [-1.1660470962524414, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great Rift', [-0.7910471558570862, -0.4288896322250366, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Rift Valley', [-1.1660470962524414, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Rift Valley', [-0.7910471558570862, -2.178889751434326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rift valley', [-2.7910470962524414, -1.5019290447235107, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Great Rift Valley', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'Great Rift Valley'}
>>>>>>> 811d839 (new run)

Key: 31781941835902499588679515450999201167
Value: {'question': 'Which actor won an Academy Award for his performance in The African Queen?', 'responses': [('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Humphrey Bogart', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Humphrey Bogart', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Humphrey Bogart'}

Key: 234968202379226996441421362140775104446
Value: {'question': 'Who wrote the novel Cry, the Beloved Country about South Africa?', 'responses': [('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Paton', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alan Paton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Alan Paton'}

Key: 76545929122918191764793905510970574497
Value: {'question': 'What is the capital of Kenya?', 'responses': [('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nairobi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nairobi', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Nairobi'}

Key: 173636007320763489677299490209460787318
<<<<<<< HEAD
Value: {'question': 'From which European country did Angola achieve independence in 1975?', 'responses': [('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portuguese', [-2.578889846801758, -0.07843784987926483], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'From which European country did Angola achieve independence in 1975?', 'responses': [('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Portugal', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Portugal'}

Key: 229170318474524719034067957991549861814
<<<<<<< HEAD
Value: {'question': 'Which country mainly makes up the Horn of Africa?', 'responses': [('Ethiopia', [-0.43734973669052124, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.43734973669052124, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.43734973669052124, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-2.937349796295166, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.43734973669052124, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somalia', [-1.499849796295166, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.43734973669052124, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.43734973669052124, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.43734973669052124], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somalia', [-1.499849796295166, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ethiopia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'Somalia'}
=======
Value: {'question': 'Which country mainly makes up the Horn of Africa?', 'responses': [('Somalia', [-1.0909290313720703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somalia', [-1.0909290313720703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.6534289717674255, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eritrea', [-2.7159290313720703, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somalia', [-1.0909290313720703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somalia', [-1.0909290313720703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.6534289717674255, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eritrea', [-2.7159290313720703, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.6534289717674255, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somalia', [-1.0909290313720703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Somalia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Somalia'}
>>>>>>> 811d839 (new run)

Key: 93369735893925749978024214535270699686
Value: {'question': 'What is the capital of Sierra Leone?', 'responses': [('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freetown', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Freetown', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Freetown'}

Key: 44056024413547951322767394569150314419
Value: {'question': 'Which country is the island of Zanzibar part of?', 'responses': [('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tanzania', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tanzania', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Tanzania'}

Key: 81483122158632463877292180554803528640
<<<<<<< HEAD
Value: {'question': "What is Africa's largest country?", 'responses': [('Nigeria', [-0.5417052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Algeria', [-1.2917052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Algeria', [-1.2917052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [-4.697955131530762, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.5417052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.5417052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.5417052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.5417052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Algeria', [-1.2917052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.5417052507400513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nigeria', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Sudan'}

Key: 176684862188527662861425262290944169427
Value: {'question': 'Which African country is bordered by Benin, Ghana, Ivory Coast, Niger, and Mali?', 'responses': [('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.26102790236473083, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [-2.9485278129577637, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': "What is Africa's largest country?", 'responses': [('Algeria', [-1.3385636806488037, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.4479387402534485, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Algeria', [-1.3385636806488037, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [-3.1940324306488037, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.4479387402534485, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.4479387402534485, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.4479387402534485, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.4479387402534485, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.4479387402534485, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sudan', [-2.8502824306488037, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Algeria', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Sudan'}

Key: 176684862188527662861425262290944169427
Value: {'question': 'Which African country is bordered by Benin, Ghana, Ivory Coast, Niger, and Mali?', 'responses': [('Burkina Faso', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-2.2378222942352295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burkina Faso', [-0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Burkina Faso', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Burkino Faso'}

Key: 168274180611813134957082784511671141146
<<<<<<< HEAD
Value: {'question': 'Who was the woman sentenced to six years in jail after the murder of Stompei Seipi?', 'responses': [('Mrs. Sta', [-3.460540771484375, -0.07114000618457794, -4.672914981842041], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anna Seip', [-2.835540771484375, -0.775576114654541, -1.94868004322052], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stompei', [-2.835540771484375, -0.36107492446899414, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose Heilmann', [-3.460540771484375, -3.74285888671875, -2.6222848892211914], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The lady who', [-3.210540771484375, -4.925519943237305, -1.1012617349624634], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Irene Seipi', [-3.835540771484375, -1.3893500566482544, -0.3417187035083771], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anne Frank', [-3.085540771484375, -1.1533560752868652, -0.14426162838935852], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aloysia', [-3.585540771484375, -4.640690803527832, -0.4541274607181549], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A man who', [-3.585540771484375, -4.015690803527832, -2.6066784858703613], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maria Seip', [-2.585540771484375, -1.5457335710525513, -1.8999452590942383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mrs. Sta', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Winnie Mandela'}
=======
Value: {'question': 'Who was the woman sentenced to six years in jail after the murder of Stompei Seipi?', 'responses': [('Brenda Edwards', [-4.289555549621582, -2.1194934844970703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suki Se', [-4.039555549621582, -2.998534917831421, -1.4067531824111938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Bell', [-2.664555788040161, -0.3930361866950989, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yvonne Fletcher', [-4.289555549621582, -1.9148409366607666, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anne Marie Johnson', [-3.539555788040161, -1.9384639263153076, -4.032777309417725], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jean Harris', [-3.914555788040161, -1.5767037868499756, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Curgen', [-4.164555549621582, -4.459557056427002, -3.8038206100463867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Bell', [-2.664555788040161, -0.3930361866950989, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Wilson', [-3.289555788040161, -4.1738810539245605, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbara Windsor', [-3.414555788040161, -3.0059685707092285, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Brenda Edwards', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Winnie Mandela'}
>>>>>>> 811d839 (new run)

Key: 52723763469763288755377731346050960500
Value: {'question': 'In which country are the towns of Gweru and Kwekwe?', 'responses': [('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zimbabwe', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Zimbabwe'}

Key: 43767945769929223522955726760482847946
<<<<<<< HEAD
Value: {'question': 'Who was the founder of the Back to Africa movement who largely inspired Rastafarianism?', 'responses': [('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0955691784620285, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Who was the founder of the Back to Africa movement who largely inspired Rastafarianism?', 'responses': [('Marcus Garvey', [-0.0960441529750824, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0960441529750824, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0960441529750824, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0960441529750824, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0960441529750824, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0960441529750824, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0960441529750824, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0960441529750824, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0960441529750824, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcus Garvey', [-0.0960441529750824, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Marcus Garvey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Marcus Garvey'}

Key: 291271294390939978563718792459306252976
<<<<<<< HEAD
Value: {'question': 'Which African country is sandwiched between Ghana and Benin?', 'responses': [('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which African country is sandwiched between Ghana and Benin?', 'responses': [('Togo', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Togo', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Togo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Togo'}

Key: 32660404714146261594017691111433642169
<<<<<<< HEAD
Value: {'question': 'The Zambesi and which other river define the borders of Matabeleland?', 'responses': [('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-1.0897886753082275, 0.0, -0.12379933148622513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-1.0897886753082275, 0.0, -0.12379933148622513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-1.0897886753082275, 0.0, -0.12379933148622513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-0.46478861570358276, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zambezi', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Limpopo'}

Key: 38745243617510227643125850154034057959
Value: {'question': 'In which mountains are Camp David?', 'responses': [('Catoctin', [-0.6996200084686279, 0.0, -1.0575426816940308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland, USA', [-2.074620008468628, -3.189152240753174, -1.5164979696273804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Catoctin', [-0.6996200084686279, 0.0, -1.0575426816940308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In the Cato', [-4.199620246887207, -0.2345588654279709, -0.9610738158226013], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Antietam', [-4.074620246887207, -0.4516957998275757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Catoctin', [-0.6996200084686279, 0.0, -1.0575426816940308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Catoctin Mountains', [-0.6996200084686279, 0.0, -0.6825426816940308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Allegany', [-3.137120008468628, -1.502521276473999, -1.1605103015899658], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Catoctin', [-2.074620008468628, -0.6513371467590332, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Catoctin', [-0.6996200084686279, 0.0, -1.0575426816940308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Catoctin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Appalachian'}

Key: 217830041305300218403148931824146830234
Value: {'question': '"Which song say, ""The words of the prophet are written on the subway walls?"""', 'responses': [('"Subway"', [-0.9689304828643799, -1.8957693576812744, -0.8986033797264099, -1.3708674907684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('""The Words of', [-2.21893048286438, -0.8303197622299194, -1.9079149961471558, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Words of the', [-1.5939304828643799, -3.069286584854126, -0.23012255132198334, -0.10710643976926804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Informer"', [-0.9689304828643799, -4.270769119262695, -3.250912666320801, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jesus Christ Superstar', [-4.218930244445801, -0.6414836645126343, -0.37889018654823303, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"In My Life', [-0.9689304828643799, -4.270769119262695, -2.813412666320801, -0.06552022695541382], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('""God Bless the', [-2.21893048286438, -4.455319881439209, -0.9955735802650452, -0.723923921585083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('What Becomes Of The', [-5.343930244445801, -4.803647994995117, -1.550844430923462, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"What\'s', [-0.9689304828643799, -4.520769119262695, -0.8447428345680237, -0.4413798451423645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The Word of', [-0.9689304828643799, -0.7707693576812744, -4.300836086273193, -1.5623469352722168], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"Subway"', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460894, 'reference': 'Sound of Silence'}

Key: 192141693044942637706426934830526506075
Value: {'question': 'Who sang the title song for the Bond film A View To A Kill?', 'responses': [('Sheena Easton', [-2.3502066135406494, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sheena Easton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Duran Duran'}
=======
Value: {'question': 'The Zambesi and which other river define the borders of Matabeleland?', 'responses': [('Limpopo', [-0.46061497926712036, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-0.46061497926712036, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-1.0856149196624756, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-0.46061497926712036, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-0.46061497926712036, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-0.46061497926712036, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-0.46061497926712036, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-0.46061497926712036, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [-1.0856149196624756, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Limpopo', [-0.46061497926712036, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Limpopo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Limpopo'}

Key: 38745243617510227643125850154034057959
Value: {'question': 'In which mountains are Camp David?', 'responses': [('The Cats', [-0.6489324569702148, -1.4099611043930054], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judean', [-2.961432456970215, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blue Ridge', [-3.523932456970215, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [-2.398932456970215, -0.11008840054273605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [-2.398932456970215, -0.11008840054273605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judean', [-2.961432456970215, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [-2.398932456970215, -0.11008840054273605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [-2.398932456970215, -0.11008840054273605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Ju', [-0.6489324569702148, -2.159961223602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Car', [-0.6489324569702148, -4.097461223602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Cats', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Appalachian'}

Key: 217830041305300218403148931824146830234
Value: {'question': '"Which song say, ""The words of the prophet are written on the subway walls?"""', 'responses': [("Don't", [-3.859354019165039, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The prophet by', [-1.1093538999557495, -1.0476434230804443, -1.573434591293335], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Prophet', [-1.1093538999557495, -1.6726434230804443, -1.0798184871673584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Message -', [-1.1093538999557495, -3.0476434230804443, -2.463242769241333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Subway Song', [-1.1093538999557495, -2.7976434230804443, -0.2563686668872833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Marley-', [-4.359354019165039, -0.8981232643127441, -3.4269700050354004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Don't", [-3.859354019165039, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The prophet', [-1.1093538999557495, -1.0476434230804443, -0.6984345316886902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The prophet Muhammad', [-1.1093538999557495, -1.0476434230804443, -4.198434352874756], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Subway Songs', [-1.3593538999557495, -1.918804407119751, -2.957063674926758], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Don't", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Sound of Silence'}

Key: 192141693044942637706426934830526506075
Value: {'question': 'Who sang the title song for the Bond film A View To A Kill?', 'responses': [('Duran Duran', [-0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Duran Duran', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Duran Duran'}
>>>>>>> 811d839 (new run)

Key: 81487294908951603256996264237055243450
Value: {'question': 'In which country did General Jaruzelski impose marital law in 1981?', 'responses': [('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Poland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Poland'}

Key: 180318084724149222772728840765574049122
Value: {'question': 'Who won the Oscar for directing It Happened One Night?', 'responses': [('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Capra', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Frank Capra', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Frank Capra'}

Key: 181239352665575668831079258707160831262
Value: {'question': 'Hellenikon international airport is in which country?', 'responses': [('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Greece', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Greece'}

Key: 311057583501653341701886449639705592032
<<<<<<< HEAD
Value: {'question': "Who had a 60s No 1 with Lightnin' Strikes?", 'responses': [('Stevie Wonder', [-4.43320894241333, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Young Ras', [-0.8082087635993958, -3.5306122303009033, -0.13458658754825592], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Doors', [-0.8082087635993958, -4.030611991882324, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Honeycombs', [-0.8082087635993958, -4.468111991882324, -0.6323728561401367], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis Presley', [-4.55820894241333, -0.4118678867816925, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johnny Nash', [-3.433208703994751, -1.2111927270889282, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Wonder', [-4.43320894241333, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Tornados', [-0.8082087635993958, -4.218111991882324, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billy Fury', [-3.308208703994751, -1.0375468730926514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ray Charles', [-4.18320894241333, -0.4644159972667694, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Stevie Wonder', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Lou Christie'}

Key: 214550783653833022571217369943323361592
Value: {'question': 'In which year was CNN founded?', 'responses': [('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': "Who had a 60s No 1 with Lightnin' Strikes?", 'responses': [('Dusty Springfield', [-4.85563850402832, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Kinks', [-0.9181383848190308, -2.7902026176452637, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roy Orbison', [-3.9181385040283203, -0.25082966685295105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billy J Kramer', [-3.0431385040283203, -0.4532928466796875, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter & Gordon', [-4.29313850402832, -1.2189275026321411, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Walker Brothers', [-0.9181383848190308, -4.102702617645264, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Wonder', [-4.29313850402832, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chuck Berry', [-4.04313850402832, -0.11967968195676804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dave Berry', [-4.41813850402832, -2.360410213470459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Walker Brothers', [-0.9181383848190308, -4.102702617645264, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dusty Springfield', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Lou Christie'}

Key: 214550783653833022571217369943323361592
Value: {'question': 'In which year was CNN founded?', 'responses': [('1980', [0.0, 0.0, 0.0, 0.0, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, 0.0, 0.0, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1980', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1980'}

Key: 296535751176580299810137014679253839657
<<<<<<< HEAD
Value: {'question': "Who was President Reagan's Secretary for Defense from 1987 to 1989?", 'responses': [('Frank Carlu', [-1.3546472787857056, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Casper Weinberger', [-3.167147159576416, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Dick Cheney', [-1.5421472787857056, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Caspar Weinberger', [-1.1671472787857056, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Dick Cheney', [-1.5421472787857056, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Dick Cheney', [-1.5421472787857056, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Frank Carlu', [-1.3546472787857056, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Dick Cheney', [-1.5421472787857056, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Frank Carlu', [-1.3546472787857056, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Casper Weinberger', [-3.167147159576416, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Frank Carlu', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Frank Carlucci'}

Key: 100936852714345790077248097197540882670
Value: {'question': 'Which famous brother of Talia Shire does not share her last name?', 'responses': [('Dennis Qu', [-4.43770170211792, -2.4938459396362305], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard.', [-3.12520170211792, -4.466989517211914], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Du', [-1.9377018213272095, -3.518893241882324], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Talia Shire', [-2.37520170211792, -0.4542014002799988], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Casey', [-4.62520170211792, -0.6158963441848755], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nicholas Cage', [-4.31270170211792, -0.4674225449562073], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jon Vo', [-4.50020170211792, -0.8649448156356812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert De', [-1.9377018213272095, -0.8938932418823242], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Talia Shire', [-2.37520170211792, -0.4542014002799988], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Francis Ford', [-3.81270170211792, -0.8242008686065674], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dennis Qu', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Francis Ford Coppola'}

Key: 284630851124990253489091957857153631101
Value: {'question': 'In basketball where do the Celtics come from?', 'responses': [('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Massachusetts', [-2.6949362754821777, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston,', [-0.06993623077869415, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.06993623077869415, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Boston', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Boston'}

Key: 1683011395530086565720315096853711022
Value: {'question': 'Which Disney film had the theme tune A Whole New World?', 'responses': [('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': "Who was President Reagan's Secretary for Defense from 1987 to 1989?", 'responses': [('Caspar Weinberger', [-0.9382977485656738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Caspar Weinberger', [-0.9382977485656738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Carlu', [-1.5632977485656738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Caspar Weinberger', [-0.9382977485656738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Caspar Weinberger', [-0.9382977485656738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dick Cheney', [-1.5632977485656738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Caspar Weinberger', [-0.9382977485656738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dick Cheney', [-1.5632977485656738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Carlu', [-1.5632977485656738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donald Rums', [-3.250797748565674, -0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Caspar Weinberger', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': 'Frank Carlucci'}

Key: 100936852714345790077248097197540882670
Value: {'question': 'Which famous brother of Talia Shire does not share her last name?', 'responses': [('Jason', [-3.9848403930664062, -0.2975073456764221], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-1.7973403930664062, -4.206753730773926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-1.7973403930664062, -0.7067534923553467], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe', [-3.7973403930664062, -0.5376294851303101], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Caine', [-2.4223403930664062, -4.238120079040527], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sylvester Stall', [-3.1723403930664062, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Francis Ford', [-3.3598403930664062, -1.0231345891952515], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert De', [-1.7973403930664062, -1.130867838859558], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sylvester Stall', [-3.1723403930664062, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jason', [-3.9848403930664062, -0.2975073456764221], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jason', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Francis Ford Coppola'}

Key: 284630851124990253489091957857153631101
Value: {'question': 'In basketball where do the Celtics come from?', 'responses': [('Boston,', [-0.10020658373832703, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.10020658373832703, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston,', [-0.10020658373832703, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.10020658373832703, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.10020658373832703, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Massachusetts', [-2.3502066135406494, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Massachusetts', [-2.3502066135406494, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.10020658373832703, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.10020658373832703, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston', [-0.10020658373832703, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Boston,', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Boston'}

Key: 1683011395530086565720315096853711022
Value: {'question': 'Which Disney film had the theme tune A Whole New World?', 'responses': [('Aladdin', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aladdin', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Aladdin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Aladdin'}

Key: 150083440388240843763314275937542066776
<<<<<<< HEAD
Value: {'question': "What does MG sand for in Booker T & The MG's?", 'responses': [('Booker T.', [-2.6431045532226562, -0.07248425483703613, -1.0670278072357178], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melvins George', [-3.7681045532226562, -3.736753463745117, -2.909000873565674], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mellow Green', [-3.0181045532226562, -1.4031238555908203, -1.0238467454910278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Booker Taliaferro', [-2.6431045532226562, -3.822484254837036, -0.3310011625289917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Major General', [-3.1431045532226562, -0.3616727590560913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melvin Gay III', [-2.3931045532226562, -2.109861135482788, -4.297978401184082], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Gordon', [-3.1431045532226562, -1.7092576026916504, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melvin Davis', [-2.3931045532226562, -2.312986135482788, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Musical genius', [-3.5181045532226562, -0.6426267027854919, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Major General', [-3.1431045532226562, -0.3616727590560913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Booker T.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Memphis Group'}

Key: 81244332995537692179587915743895783266
Value: {'question': 'Florence Ballard was a member of which girl group?', 'responses': [('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Supremes', [-1.9637140035629272, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': "What does MG sand for in Booker T & The MG's?", 'responses': [('Booker T', [-1.3778382539749146, -0.035469330847263336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Booker', [-1.3778382539749146, -3.7854692935943604], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melvin Gay', [-1.9403382539749146, -1.7926815748214722], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Booker T', [-1.3778382539749146, -0.035469330847263336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Musical genius', [-3.565338134765625, -0.266189843416214], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Booker T', [-1.3778382539749146, -0.035469330847263336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melvin', [-3.690338134765625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Booker T', [-1.3778382539749146, -0.035469330847263336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Booker T', [-1.3778382539749146, -0.035469330847263336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Booker T', [-1.3778382539749146, -0.035469330847263336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Booker T', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Memphis Group'}

Key: 81244332995537692179587915743895783266
Value: {'question': 'Florence Ballard was a member of which girl group?', 'responses': [('The Supremes', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Supremes', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Supremes'}

Key: 307530010586069259921202592019591083231
<<<<<<< HEAD
Value: {'question': 'Who was born first, Susan Sarandon or Glenn Close?', 'responses': [('Susan Sar', [-0.8157694935798645, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenn Close', [-1.3157694339752197, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenn Close', [-1.3157694339752197, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenn Close', [-1.3157694339752197, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenn Close', [-1.3157694339752197, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sarandon', [-1.8157694339752197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.8157694935798645, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.8157694935798645, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenn', [-1.3157694339752197, -3.0485873222351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.8157694935798645, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Susan Sar', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': 'Susan Sarandon'}

Key: 17662878964593709817063920693736136015
Value: {'question': 'Who wrote the novel The Go Between?', 'responses': [('L. P. Hartley', [0.0, 0.0, -0.8981232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P. Hartley', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L. P. Hartley', [0.0, 0.0, -0.8981232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'L. P. Hartley', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'L. P. Hartley'}

Key: 237872808202852723530784495625826864930
Value: {'question': 'In which musical do the sweeps sing Chim Chim Cheree?', 'responses': [('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mary Poppins', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mary Poppins'}

Key: 152675490732111985212646801409407210227
Value: {'question': "Who had a big 60s No 1 with Tossin' and Turnin'?", 'responses': [('The Crystals', [-0.7739529609680176, -4.296119689941406, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Anka', [-3.8989529609680176, -1.3304071426391602, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gene Chandler', [-3.7739529609680176, -2.1664273738861084, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.7739529609680176, -2.921119451522827, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Tops', [-0.7739529609680176, -4.046119689941406, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Temptations', [-0.7739529609680176, -2.546119451522827, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [-3.7739529609680176, -1.9027467966079712, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The 5', [-0.7739529609680176, -3.796119451522827, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johnny Kidd', [-4.523952960968018, -2.4485127925872803, -0.9112027287483215], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Righteous Brothers', [-0.7739529609680176, -4.233619689941406, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Crystals', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Bobby Lewis'}

Key: 180498256462196551773436965902946247899
Value: {'question': 'Sam Phillips was owner of which legendary recording studio?', 'responses': [('Sun Studio', [0.0, -2.1500632762908936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.6500633358955383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Studios', [0.0, -1.6500632762908936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.6500633358955383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Studio', [0.0, -2.1500632762908936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.6500633358955383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Studio', [0.0, -2.1500632762908936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun', [0.0, -1.7750632762908936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.6500633358955383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.6500633358955383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sun Studio', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': 'Sun'}

Key: 39420177020957877944393328083549366158
Value: {'question': 'Which actor played Maxwell Smart?', 'responses': [('Steve Carell', [-1.3010929822921753, -0.9452396631240845, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.5823429822921753, -0.10633727163076401, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.5823429822921753, -0.10633727163076401, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Murray', [-3.410468101501465, -1.8637287616729736, -0.1278369277715683], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve Carell', [-1.3010929822921753, -0.9452396631240845, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.5823429822921753, -0.10633727163076401, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.5823429822921753, -0.10633727163076401, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve McQ', [-1.3010929822921753, -2.523364543914795, -1.370377779006958], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Niven', [-3.222968101501465, -1.5794165134429932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.5823429822921753, -0.10633727163076401, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Steve Carell', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Don Adams'}

Key: 250902319081714487332886945583981914965
Value: {'question': 'On a computer keyboard which letter on the same line is between C and B?', 'responses': [('Q', [-3.04641056060791, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A', [-2.79641056060791, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A', [-2.79641056060791, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Z', [-3.04641056060791, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('O', [-3.54641056060791, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D', [-1.5464106798171997, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D', [-1.5464106798171997, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('B', [-3.29641056060791, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D', [-1.5464106798171997, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D', [-1.5464106798171997, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Q', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'V'}

Key: 124179341112811498960819783087715892391
Value: {'question': "Lunar 10's Lunar Excursion Module was named after which famous character?", 'responses': [('Michael Caine', [-4.512409210205078, -4.069887161254883, -0.2307814657688141], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chekov', [-2.637408971786499, -2.0601658821105957, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Aldrin', [-0.887408971786499, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Lightyear', [-0.887408971786499, -1.0537006855010986, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chekov', [-2.637408971786499, -2.0601658821105957, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Aldrin', [-0.887408971786499, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C3PO', [-3.262408971786499, -2.6653523445129395, -0.12971262633800507], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo 1', [-2.887408971786499, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Aldrin', [-0.887408971786499, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Aldrin', [-0.887408971786499, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michael Caine', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Snoopy'}

Key: 320222099055156391546097176572902011225
Value: {'question': 'In which decade did golfer Gary Player last win the British Open?', 'responses': [('1974', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -0.3137805759906769, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1967', [-0.03804141283035278, -0.08893945813179016, 0.0, -1.6004126071929932, -2.4979896545410156, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -0.3137805759906769, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -0.3137805759906769, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -1.4387805461883545, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -0.3137805759906769, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1969', [-0.03804141283035278, -0.08893945813179016, 0.0, -1.6004126071929932, -2.1229896545410156, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -0.3137805759906769, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -1.4387805461883545, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [-0.03804141283035278, -0.08893945813179016, 0.0, -0.22541262209415436, -1.4387805461883545, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1974', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': '70s'}

Key: 232423417736115427988669265503815216208
Value: {'question': 'Sarah FitzGerald has been a 90s world champion in which sport?', 'responses': [('Golf', [-4.2584943771362305, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snooker', [-3.8834943771362305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Taekwondo', [-3.6334943771362305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Skateboarding', [-4.2584943771362305, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Taekwondo', [-3.6334943771362305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roller derby', [-2.6334943771362305, -1.9277201890945435], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Water polo', [-4.2584943771362305, -1.7431763410568237], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snowboarding', [-3.0084943771362305, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rugby', [-4.0084943771362305, -0.3620091378688812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fencing', [-4.0084943771362305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Golf', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Squash'}

Key: 294927688423627277710155037956184964832
Value: {'question': 'Where was the peace treaty signed that brought World War I to an end?', 'responses': [('Versailles', [-0.5736609101295471, -0.45593681931495667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hall', [-1.9486608505249023, -2.153442859649658], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles', [-0.5736609101295471, -0.45593681931495667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles', [-0.5736609101295471, -0.45593681931495667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles', [-0.5736609101295471, -0.45593681931495667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('...', [-3.9486608505249023, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles,', [-0.5736609101295471, -1.4559367895126343], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles', [-0.5736609101295471, -0.45593681931495667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Big', [-1.9486608505249023, -4.403442859649658], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-2.3236608505249023, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Versailles', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Versailles'}

Key: 213701650377957415909845329583462630559
Value: {'question': 'Which Welsh singer was invited to sing at the White House on Millennium Eve?', 'responses': [('Tom Jones', [-2.0662426948547363, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charlotte Church', [-2.2537426948547363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Catherine Zeta-', [-4.503742694854736, -0.3174879550933838, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shirley Bassey', [-1.0037428140640259, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katherine Jenkins', [-2.3787426948547363, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Catatonia', [-4.503742694854736, -0.46969252824783325, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charlotte Church', [-2.2537426948547363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bryn Terfel', [-2.2537426948547363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katherine Jenkins', [-2.3787426948547363, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bonnie Tyler', [-2.8162426948547363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tom Jones', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Tom Jones'}

Key: 216197810693029640402091533550140169337
Value: {'question': 'Which company was responsible for the oil spill in Alaska in 1989?', 'responses': [('Exxon Valdez', [-0.048855964094400406, -1.6656724214553833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon Valdez', [-0.048855964094400406, -1.6656724214553833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [-0.048855964094400406, -0.4156724512577057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('British Petroleum', [-3.736356019973755, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [-0.048855964094400406, -0.4156724512577057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [-0.048855964094400406, -0.4156724512577057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [-0.048855964094400406, -0.4156724512577057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [-0.048855964094400406, -0.4156724512577057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [-0.048855964094400406, -0.4156724512577057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ExxonMobil', [-0.048855964094400406, -3.790672540664673], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Exxon Valdez', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Exxon'}

Key: 206318651501085105639972272208241462796
Value: {'question': "What date is Father's Day?", 'responses': [('3rd Sunday', [-0.6272516250610352, -0.30635571479797363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3rd Sunday', [-0.6272516250610352, -0.30635571479797363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3rd Sunday', [-0.6272516250610352, -0.30635571479797363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Third Sunday in June', [-2.127251625061035, 0.0, -0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2nd Sunday', [-0.6272516250610352, -2.3063557147979736, -0.7582093477249146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('21st', [-0.6272516250610352, -2.3063557147979736, -1.3832093477249146, -0.5823919773101807], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sunday in June', [-3.064751625061035, -2.4329335689544678, -0.32656270265579224, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3rd Sunday', [-0.6272516250610352, -0.30635571479797363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Third Sunday of June', [-2.127251625061035, 0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3rd Sunday', [-0.6272516250610352, -0.30635571479797363, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '3rd Sunday', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452238, 'reference': '3rd Sunday in June'}

Key: 111897038798621056518831427631517755303
Value: {'question': 'In which decade of the 20th century was the FBI set up?', 'responses': [('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20s', [-0.04858732968568802, -2.2378222942352295, 0.0, -1.279762864112854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20s', [-0.04858732968568802, -2.2378222942352295, 0.0, -1.279762864112854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.04858732968568802, -0.11282224208116531, 0.0, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1908', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': '1900s'}

Key: 147779174368667496048909218673937204395
Value: {'question': 'In which decade of the 20th century was Dan Aykroyd born?', 'responses': [('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, 0.0, 0.0, 0.0, -1.8567777872085571, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.2317778319120407, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Who was born first, Susan Sarandon or Glenn Close?', 'responses': [('Susan Sar', [-0.7177708148956299, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.7177708148956299, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.7177708148956299, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.7177708148956299, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Close', [-2.09277081489563, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.7177708148956299, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.7177708148956299, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan', [-0.7177708148956299, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.7177708148956299, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Sar', [-0.7177708148956299, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Susan Sar', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Susan Sarandon'}

Key: 17662878964593709817063920693736136015
Value: {'question': 'Who wrote the novel The Go Between?', 'responses': [('L. P.', [0.0, -0.3292768895626068, -0.9356344938278198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P.', [0.0, -0.3292768895626068, -0.4981345236301422, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L P Hartley', [0.0, -1.4542769193649292, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P.', [0.0, -0.3292768895626068, -0.4981345236301422, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P.', [0.0, -0.3292768895626068, -0.4981345236301422, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L. P.', [0.0, -0.3292768895626068, -0.9356344938278198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L. P.', [0.0, -0.3292768895626068, -0.9356344938278198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L. P.', [0.0, -0.3292768895626068, -0.9356344938278198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L.P.', [0.0, -0.3292768895626068, -0.4981345236301422, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('L. P.', [0.0, -0.3292768895626068, -0.9356344938278198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'L. P.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'L. P. Hartley'}

Key: 237872808202852723530784495625826864930
Value: {'question': 'In which musical do the sweeps sing Chim Chim Cheree?', 'responses': [('The Jungle Book', [-2.521270275115967, -0.9664517045021057, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [-0.08377019315958023, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [-0.08377019315958023, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [-0.08377019315958023, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jungle Book', [-2.521270275115967, -0.9664517045021057, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [-0.08377019315958023, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Mary Poppins', [-2.521270275115967, -3.513326644897461, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [-0.08377019315958023, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Poppins', [-0.08377019315958023, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The jungle Book', [-2.521270275115967, -2.607076644897461, -1.6506099700927734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Jungle Book', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Mary Poppins'}

Key: 152675490732111985212646801409407210227
Value: {'question': "Who had a big 60s No 1 with Tossin' and Turnin'?", 'responses': [('Smokey Robinson', [-4.885619640350342, 0.0, -0.3969707489013672], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Herman's", [-4.573119640350342, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Tornadoes', [-0.8231194615364075, -3.306380271911621, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sam & Dave', [-4.010619640350342, -1.1213923692703247, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Coasters', [-0.8231194615364075, -2.431380271911621, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Castor', [-3.7606194019317627, -1.641418218612671, -0.1212046816945076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Animals', [-0.8231194615364075, -3.993880271911621, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Jones', [-3.7606194019317627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frankie Miller', [-4.073119640350342, -1.5069012641906738, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Lee Lewis', [-4.135619640350342, -0.15121398866176605, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Smokey Robinson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Bobby Lewis'}

Key: 180498256462196551773436965902946247899
Value: {'question': 'Sam Phillips was owner of which legendary recording studio?', 'responses': [('Sun Records', [0.0, -0.847237229347229], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Studio', [0.0, -1.972237229347229], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.847237229347229], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.847237229347229], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Studios', [0.0, -1.722237229347229], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun', [0.0, -1.472237229347229], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.847237229347229], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.847237229347229], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Studios', [0.0, -1.722237229347229], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sun Records', [0.0, -0.847237229347229], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sun Records', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'Sun'}

Key: 39420177020957877944393328083549366158
Value: {'question': 'Which actor played Maxwell Smart?', 'responses': [('Don Adams', [-0.49203336238861084, -0.06785587221384048, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.49203336238861084, -0.06785587221384048, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.49203336238861084, -0.06785587221384048, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.49203336238861084, -0.06785587221384048, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve Carell', [-0.9451583623886108, -1.461923599243164, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.49203336238861084, -0.06785587221384048, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.49203336238861084, -0.06785587221384048, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.49203336238861084, -0.06785587221384048, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Adams', [-0.49203336238861084, -0.06785587221384048, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve Carell', [-0.9451583623886108, -1.461923599243164, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Don Adams', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Don Adams'}

Key: 250902319081714487332886945583981914965
Value: {'question': 'On a computer keyboard which letter on the same line is between C and B?', 'responses': [('T', [-3.7027766704559326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A', [-2.5777766704559326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Q', [-2.5777766704559326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('K', [-3.4527766704559326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('F', [-3.7027766704559326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D', [-1.5777766704559326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('T', [-3.7027766704559326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D', [-1.5777766704559326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('V', [-2.8277766704559326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('P', [-3.5777766704559326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'T', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'V'}

Key: 124179341112811498960819783087715892391
Value: {'question': "Lunar 10's Lunar Excursion Module was named after which famous character?", 'responses': [('Buzz Light', [-0.3981076180934906, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Light', [-0.3981076180934906, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo', [-2.9606075286865234, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Ald', [-0.3981076180934906, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Light', [-0.3981076180934906, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Che', [-2.8981075286865234, -2.638521909713745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Light', [-0.3981076180934906, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chewb', [-2.8981075286865234, -0.3885219693183899], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buzz Ald', [-0.3981076180934906, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neil Armstrong', [-2.6481075286865234, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Buzz Light', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Snoopy'}

Key: 320222099055156391546097176572902011225
Value: {'question': 'In which decade did golfer Gary Player last win the British Open?', 'responses': [('1974', [0.0, -0.07888974994421005, 0.0, -0.25192904472351074, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [0.0, -0.07888974994421005, 0.0, -0.25192904472351074, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [0.0, -0.07888974994421005, 0.0, -0.25192904472351074, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [0.0, -0.07888974994421005, 0.0, -0.25192904472351074, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1968', [0.0, -0.07888974994421005, 0.0, -1.5019290447235107, -1.8072298765182495, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [0.0, -0.07888974994421005, 0.0, -0.25192904472351074, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [0.0, -0.07888974994421005, 0.0, -0.25192904472351074, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970s', [0.0, -0.07888974994421005, 0.0, -0.25192904472351074, -1.0537006855010986, -0.21570351719856262], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [0.0, -0.07888974994421005, 0.0, -0.25192904472351074, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [0.0, -0.07888974994421005, 0.0, -0.25192904472351074, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1974', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': '70s'}

Key: 232423417736115427988669265503815216208
Value: {'question': 'Sarah FitzGerald has been a 90s world champion in which sport?', 'responses': [('Bowling', [-3.5649008750915527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athletics', [-3.4399008750915527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Darts', [-2.6899008750915527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gymnastics', [-3.0649008750915527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Women'", [-4.314900875091553, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horse Riding', [-4.439900875091553, -2.6370534896850586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Darts', [-2.6899008750915527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bowling', [-3.5649008750915527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Speedos', [-4.314900875091553, -3.677673101425171], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cycling', [-3.6899008750915527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bowling', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Squash'}

Key: 294927688423627277710155037956184964832
Value: {'question': 'Where was the peace treaty signed that brought World War I to an end?', 'responses': [('Paris', [-2.134089708328247, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles,', [-1.009089708328247, -2.394261598587036], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hall', [-0.8840897083282471, -2.2767832279205322], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Compi', [-4.134089469909668, -0.0800376832485199], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-2.134089708328247, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Palace', [-0.8840897083282471, -0.8392832279205322], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-2.134089708328247, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles', [-1.009089708328247, -0.14426162838935852], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles', [-1.009089708328247, -0.14426162838935852], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Versailles', [-1.009089708328247, -0.14426162838935852], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Paris', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Versailles'}

Key: 213701650377957415909845329583462630559
Value: {'question': 'Which Welsh singer was invited to sing at the White House on Millennium Eve?', 'responses': [('Bonnie Tyler', [-2.1857972145080566, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shirley Bassey', [-1.0607973337173462, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shirley Bassey', [-1.0607973337173462, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cliff Richard', [-4.685797214508057, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Jones', [-1.7482973337173462, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shirley Bassey', [-1.0607973337173462, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bryn Terfel', [-2.8732972145080566, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katherine Jenkins', [-2.0607972145080566, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charlotte Church', [-2.3107972145080566, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shirley Bassey', [-1.0607973337173462, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bonnie Tyler', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Tom Jones'}

Key: 216197810693029640402091533550140169337
Value: {'question': 'Which company was responsible for the oil spill in Alaska in 1989?', 'responses': [('Exxon', [0.0, -0.40529972314834595], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.40529972314834595], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.40529972314834595], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon Valdez', [0.0, -1.5302996635437012], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.40529972314834595], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon Valdez', [0.0, -1.5302996635437012], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.40529972314834595], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.40529972314834595], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.40529972314834595], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.40529972314834595], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Exxon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Exxon'}

Key: 206318651501085105639972272208241462796
Value: {'question': "What date is Father's Day?", 'responses': [('21st June', [-0.27035900950431824, -1.1142507791519165, -0.5239090919494629, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The third Sunday in June', [-2.7703590393066406, -0.10020658373832703, 0.0, -0.3217625319957733, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20th June', [-0.27035900950431824, -1.1142507791519165, -1.023909091949463, -0.24922987818717957, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('19 June', [-0.27035900950431824, -0.9892507791519165, -0.4085603952407837, -1.4455974102020264, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3rd Sunday of', [-0.27035900950431824, -1.3642507791519165, 0.0, 0.0, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('21 June', [-0.27035900950431824, -1.1142507791519165, -0.5239090919494629, -1.0537006855010986, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Third Sunday in June', [-2.2703590393066406, 0.0, -0.3484445810317993, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20th June', [-0.27035900950431824, -1.1142507791519165, -1.023909091949463, -0.24922987818717957, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('16 June', [-0.27035900950431824, -0.9892507791519165, -3.283560276031494, -1.0471787452697754, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20 June', [-0.27035900950431824, -1.1142507791519165, -1.023909091949463, -1.624229907989502, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '21st June', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811906, 'reference': '3rd Sunday in June'}

Key: 111897038798621056518831427631517755303
Value: {'question': 'In which decade of the 20th century was the FBI set up?', 'responses': [('1908', [0.0, -0.10020658373832703, 0.0, -0.14267508685588837, -0.5659141540527344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1900', [0.0, -0.10020658373832703, 0.0, -0.14267508685588837, -1.3159141540527344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, -0.10020658373832703, 0.0, -0.14267508685588837, -0.5659141540527344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20th century', [0.0, -2.3502066135406494, 0.0, -0.1602240949869156, -1.0139224529266357], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20s', [0.0, -2.3502066135406494, 0.0, -1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1900', [0.0, -0.10020658373832703, 0.0, -0.14267508685588837, -1.3159141540527344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1900', [0.0, -0.10020658373832703, 0.0, -0.14267508685588837, -1.3159141540527344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, -0.10020658373832703, 0.0, -0.14267508685588837, -0.5659141540527344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, -0.10020658373832703, 0.0, -0.14267508685588837, -0.5659141540527344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, -0.10020658373832703, 0.0, -0.14267508685588837, -0.5659141540527344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1908', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': '1900s'}

Key: 147779174368667496048909218673937204395
Value: {'question': 'In which decade of the 20th century was Dan Aykroyd born?', 'responses': [('1952', [0.0, 0.0, 0.0, 0.0, -0.41130903363227844, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.41130903363227844, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, 0.0, 0.0, 0.0, -1.161309003829956, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.41130903363227844, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.41130903363227844, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.41130903363227844, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, 0.0, 0.0, 0.0, -1.161309003829956, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.41130903363227844, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.41130903363227844, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -0.41130903363227844, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1952', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '50s'}

Key: 291970198749930624026268518020421452676
<<<<<<< HEAD
Value: {'question': 'Which American wrote The Game of Chess in 1959?', 'responses': [('Bobby Fischer', [-1.95741868019104, -0.11282224208116531, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo Kogan', [-4.551168441772461, -2.2340128421783447, -4.277610778808594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Life magazine editor', [-4.301168441772461, -1.570268988609314, -3.4946346282958984], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Danzer', [-3.73866868019104, -3.1574416160583496, -0.1564284861087799], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Taper', [-4.238668441772461, -2.181069850921631, -0.2077118456363678], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reuben Fine', [-1.95741868019104, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Samuel Stanley Chess', [-3.98866868019104, -3.7833728790283203, -4.9224853515625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-1.95741868019104, -0.11282224208116531, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward Lasker', [-2.42616868019104, -0.5435662269592285, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur Koest', [-3.51991868019104, -0.18664410710334778, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bobby Fischer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Bobby Fischer'}

Key: 215734200375757970156916895600656412142
Value: {'question': 'Which leader did Hitler meet in the Brenner Pass in WWII?', 'responses': [('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mussolini', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mussolini'}

Key: 69473551309042707517281865305853677895
Value: {'question': 'Which company first manufactured the electric toothbrush?', 'responses': [('Philips', [-2.5675902366638184, -0.11716168373823166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gillette', [-1.692590355873108, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gillette', [-1.692590355873108, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oral-', [-3.5050902366638184, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gillette', [-1.692590355873108, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colgate', [-1.567590355873108, -0.42029085755348206], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Remington', [-2.4425902366638184, -0.17609143257141113], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gillette', [-1.692590355873108, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colgate', [-1.567590355873108, -0.42029085755348206], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phillips', [-2.5675902366638184, -0.10930826514959335], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Philips', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Squibb'}

Key: 198583945725721991674938870176852415309
Value: {'question': 'Who lived under the pseudonym of Harriet Brown in New York form the 40s to the 90s?', 'responses': [('Truman Capote', [-2.433851480484009, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Reverend Mother', [-3.183851480484009, -3.6446571350097656, -1.268862247467041], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Great Im', [-3.183851480484009, -2.8946571350097656, -4.486468315124512], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Theodora K', [-3.183851480484009, -2.6446571350097656, -1.3364183902740479], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Susan Sontag', [-4.05885124206543, -0.059829164296388626, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Nora Ephron', [-4.05885124206543, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-4.68385124206543, -0.025501256808638573, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Laura Ingalls', [-4.43385124206543, -1.3538436889648438, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Anna Delvey', [-3.433851480484009, -2.785254716873169, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('J.D', [-4.05885124206543, -0.06196761503815651, -0.8795642852783203], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Truman Capote', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Greta Garbo'}
=======
Value: {'question': 'Which American wrote The Game of Chess in 1959?', 'responses': [('Bobby Fischer', [-1.603918433189392, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dan Fogel', [-3.4789185523986816, -3.7118053436279297, -0.14297829568386078], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boris Spassky', [-4.541418552398682, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Perutz', [-4.353918552398682, -2.4145030975341797, -2.7207694053649902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur Hailey', [-2.8851685523986816, -3.50769305229187, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boris Spassky', [-4.541418552398682, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Mason', [-3.8226685523986816, -4.1101837158203125, -2.293837308883667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-1.603918433189392, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward Lasker', [-2.4164185523986816, -0.6198884844779968, -0.632909893989563], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donald Hamilton', [-3.4789185523986816, -1.0638604164123535, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bobby Fischer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Bobby Fischer'}

Key: 215734200375757970156916895600656412142
Value: {'question': 'Which leader did Hitler meet in the Brenner Pass in WWII?', 'responses': [('Mussolini', [-0.37348610162734985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.37348610162734985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.37348610162734985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.37348610162734985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.37348610162734985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.37348610162734985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.37348610162734985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Benito Mussolini', [-1.498486042022705, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-4.498486042022705, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mussolini', [-0.37348610162734985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mussolini', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Mussolini'}

Key: 69473551309042707517281865305853677895
Value: {'question': 'Which company first manufactured the electric toothbrush?', 'responses': [('Philips', [-2.3624396324157715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philips', [-2.3624396324157715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phillips', [-2.7999396324157715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Philips', [-2.9874396324157715, -3.6957414150238037], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colgate', [-1.299939513206482, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colgate-', [-1.299939513206482, -2.3502066135406494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gillette', [-1.549939513206482, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gillette', [-1.549939513206482, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colgate', [-1.299939513206482, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gillette', [-1.549939513206482, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Philips', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Squibb'}

Key: 198583945725721991674938870176852415309
Value: {'question': 'Who lived under the pseudonym of Harriet Brown in New York form the 40s to the 90s?', 'responses': [('Henry Luce', [-4.189486503601074, -2.889456033706665], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anonymous', [-4.064486503601074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('H.', [-4.064486503601074, -0.17457005381584167], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('H.', [-4.064486503601074, -0.17457005381584167], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sylvia Pl', [-1.7519865036010742, -0.4888923764228821], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saul Bellow', [-4.376986503601074, -0.0944129079580307], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anais', [-4.314486503601074, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The novelist', [-3.876986503601074, -2.141798496246338], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sylvia Beach', [-1.7519865036010742, -1.3951423168182373], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Erica Jong', [-4.064486503601074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Henry Luce', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Greta Garbo'}
>>>>>>> 811d839 (new run)

Key: 60991571921365122885230986129027391995
Value: {'question': 'Which actor bought the island of Tetiaroa?', 'responses': [('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlon Brando', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Marlon Brando', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Marlon Brando'}

Key: 112439347889379293097987252864404903518
<<<<<<< HEAD
Value: {'question': 'Between 1952 and 1954 did the number of TV stations in the USA double, triple or quadruple?', 'responses': [('Quadru', [-1.087140440940857, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('quadrupled', [-3.5871405601501465, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Quadru', [-1.087140440940857, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Doubled', [-1.462140440940857, -1.3132617473602295], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Triple', [-1.587140440940857, -0.22541262209415436], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Quadru', [-1.087140440940857, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Quadru', [-1.087140440940857, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Quadru', [-1.087140440940857, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Triple', [-1.587140440940857, -0.22541262209415436], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Doubled', [-1.462140440940857, -1.3132617473602295], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Quadru', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 0.9502705392332347, 'reference': 'Triple'}

Key: 11680331785068515148456340105560861847
Value: {'question': "What was Wham!'s first No 1?", 'responses': [('Wake Me Up', [-0.9217020273208618, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Young Guns', [-3.0467019081115723, 0.0, -0.932244062423706], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake Me Up', [-0.9217020273208618, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake Me Up', [-0.9217020273208618, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake Me Up', [-0.9217020273208618, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'Club Trop", [-2.7967019081115723, -1.9232783317565918, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake Me Up', [-0.9217020273208618, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Club Tropicana', [-1.7967020273208618, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Careless Whisper', [-2.6717019081115723, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake me up', [-0.9217020273208618, -1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wake Me Up', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Wake Me Up Before You Go Go'}

Key: 261254170806543673861855075642184546795
Value: {'question': "Which musical featured the song You'll Never Walk Alone?", 'responses': [('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [-0.01416344940662384, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Between 1952 and 1954 did the number of TV stations in the USA double, triple or quadruple?', 'responses': [('Tripled', [-1.1513545513153076, -1.2905125617980957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Quadru', [-1.1513545513153076, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Quadru', [-1.1513545513153076, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Double', [-1.2763545513153076, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Quadru', [-1.1513545513153076, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Double', [-1.2763545513153076, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Double', [-1.2763545513153076, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Quadru', [-1.1513545513153076, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tripled', [-1.1513545513153076, -1.2905125617980957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tripled', [-1.1513545513153076, -1.2905125617980957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tripled', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Triple'}

Key: 11680331785068515148456340105560861847
Value: {'question': "What was Wham!'s first No 1?", 'responses': [('Wake Me Up Before', [-0.5445192456245422, -0.22541262209415436, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake Me Up Before', [-0.5445192456245422, -0.22541262209415436, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Club Tropicana', [-1.4820191860198975, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake Me Up Before', [-0.5445192456245422, -0.22541262209415436, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake Me Up Before', [-0.5445192456245422, -0.22541262209415436, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Club Tropicana', [-1.4820191860198975, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Club Tropicana', [-1.4820191860198975, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake me up before', [-0.5445192456245422, -1.6004126071929932, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Club Tropicana', [-1.4820191860198975, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wake Me Up Before', [-0.5445192456245422, -0.22541262209415436, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wake Me Up Before', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'Wake Me Up Before You Go Go'}

Key: 261254170806543673861855075642184546795
Value: {'question': "Which musical featured the song You'll Never Walk Alone?", 'responses': [('Carousel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carousel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Carousel', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Carousel'}

Key: 78497034924490418530805762271807404193
Value: {'question': 'In which year was Bloody Sunday in Londonderry?', 'responses': [('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1972', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1972', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1972'}

Key: 299581464679262681850763517209068774618
<<<<<<< HEAD
Value: {'question': 'The first untethered space walk took place from which space craft?', 'responses': [('Skylab', [-1.558621883392334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Skylab', [-1.558621883392334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The space', [-2.308621883392334, -1.4351820945739746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Space', [-3.558621883392334, -2.1792221069335938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Space Shuttle', [-1.808621883392334, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mir', [-2.058621883392334, -0.3090508282184601], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Skylab', [-1.558621883392334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('STS', [-2.808621883392334, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('space shuttle', [-3.433621883392334, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo', [-4.433621883392334, -0.16368143260478973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Skylab', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456562, 'reference': 'Challenger'}

Key: 253715240938783311741038917831173056854
Value: {'question': 'What was the main color of a Storm trooper in Star Wars?', 'responses': [('White', [-0.970940887928009, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blue', [-2.4084408283233643, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.970940887928009, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Orange', [-4.345941066741943, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red', [-2.9709408283233643, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.970940887928009, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.970940887928009, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.970940887928009, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.970940887928009, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Black', [-1.7209408283233643, -0.07045131176710129], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'White', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'White'}

Key: 208489583093401191465113517026624910295
Value: {'question': 'Richard Nixon was Vice President to which US state?', 'responses': [('Gerald Ford', [-3.1387665271759033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spiro Agnew', [-2.5137665271759033, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.8887664675712585, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.8887664675712585, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Nixon', [-2.5137665271759033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Nixon', [-2.5137665271759033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George HW', [-4.701266288757324, -2.4580726623535156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spiro Agnew', [-2.5137665271759033, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alabama', [-3.7637665271759033], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.8887664675712585, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gerald Ford', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Dwight Eisenhower'}
=======
Value: {'question': 'The first untethered space walk took place from which space craft?', 'responses': [('Mir', [-2.9206957817077637, -0.12971262633800507], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The shuttle', [-2.0456957817077637, -3.251530647277832], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo', [-3.5456957817077637, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('STS Columbia', [-3.5456957817077637, -3.4430017471313477], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Space shuttle', [-1.2956956624984741, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Skylab', [-1.2956956624984741, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Space Shuttle', [-1.2956956624984741, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('STS Columbia', [-3.5456957817077637, -3.4430017471313477], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Soyuz', [-3.1706957817077637, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Soviet module', [-4.545695781707764, -4.495941638946533], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mir', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Challenger'}

Key: 253715240938783311741038917831173056854
Value: {'question': 'What was the main color of a Storm trooper in Star Wars?', 'responses': [('Green', [-2.821730852127075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.8217308521270752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.8217308521270752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.8217308521270752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.8217308521270752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green', [-2.821730852127075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.8217308521270752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.8217308521270752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-0.8217308521270752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Black', [-1.1967308521270752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Green', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'White'}

Key: 208489583093401191465113517026624910295
Value: {'question': 'Richard Nixon was Vice President to which US state?', 'responses': [('California', [-0.6818884015083313, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.6818884015083313, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delaware', [-3.9943883419036865, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.6818884015083313, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vice President', [-3.8068883419036865, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.6818884015083313, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.6818884015083313, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.6818884015083313, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.6818884015083313, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.6818884015083313, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'California', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Dwight Eisenhower'}
>>>>>>> 811d839 (new run)

Key: 46647447193045795628323596244589048931
Value: {'question': 'Luxor international airport is in which country?', 'responses': [('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Egypt', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Egypt'}

Key: 10966074543901517477364732942015778808
<<<<<<< HEAD
Value: {'question': 'Which country did Albert Einstein move to as the Nazis rose to power?', 'responses': [('United States', [-1.4728131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The US', [-3.097813129425049, -1.8703147172927856], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-1.4728131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-1.4728131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-1.4728131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-3.222813129425049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5978131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5978131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('America', [-3.597813129425049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5978131294250488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'United States', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'America'}

Key: 339149744893660285137218492256137297395
Value: {'question': 'In the 90s how many points have been awarded for finishing first in a Grand Prix?', 'responses': [('12', [0.0, -0.5998064279556274, -2.5363528728485107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -1.2248064279556274, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8', [0.0, -1.8498064279556274, -0.13009054958820343], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -1.2248064279556274, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10', [0.0, -0.5998064279556274, -0.16135281324386597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10', [0.0, -0.5998064279556274, -0.16135281324386597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -1.2248064279556274, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -1.2248064279556274, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10', [0.0, -0.5998064279556274, -0.16135281324386597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8', [0.0, -1.8498064279556274, -0.13009054958820343], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '12', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': '10'}

Key: 218275342711631337856973563624839051277
Value: {'question': 'Which lawyer made Raymond Burr famous?', 'responses': [('Richard', [-3.9871115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert', [-3.0496115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Raymond', [-2.8621115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [-1.8621115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Perry', [-2.0496115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles', [-4.799611568450928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.674611568450928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Perry', [-2.0496115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Perry', [-2.0496115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Erle', [-2.5496115684509277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Richard', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816237, 'reference': 'Perry Mason'}

Key: 175365714901545549037744153837609809091
Value: {'question': 'Which broadcasting company did Edward J Noble found?', 'responses': [('CBS', [-0.7470742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-0.7470742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('NBC', [-1.4970742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-0.7470742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-0.7470742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('NBC', [-1.4970742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('NBC', [-1.4970742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-0.7470742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('NBC', [-1.4970742464065552, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sports TV', [-4.622074127197266, -3.49984073638916], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'CBS', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'ABC'}

Key: 207405623594446908613910160083214920906
Value: {'question': 'In which decade did the Jackson 5 sign to Motown?', 'responses': [('60s', [-0.06993623077869415, -2.378518581390381, 0.0, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sixties', [-2.6949362754821777, -2.843623161315918, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('60s', [-0.06993623077869415, -2.378518581390381, 0.0, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('196', [-0.06993623077869415, -0.09726862609386444, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '60s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': '1960s'}

Key: 295721133551313037003218385038645841971
Value: {'question': 'How many vice presidents did Franklin D Roosevelt have?', 'responses': [('4', [-0.3015320599079132, -0.2663678824901581], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.6765320301055908, -0.09776365756988525], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.6765320301055908, -0.09776365756988525], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three', [-2.926532030105591, -0.1492825299501419], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.3015320599079132, -0.2663678824901581], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.3015320599079132, -1.7663679122924805], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.3015320599079132, -0.2663678824901581], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.3015320599079132, -0.2663678824901581], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.6765320301055908, -0.09776365756988525], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.3015320599079132, -0.2663678824901581], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '4', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Three'}

Key: 153087901943400500082408407976902961664
Value: {'question': "In which state is Harrah's Auto Collection situated?", 'responses': [('North Las', [-3.909956455230713, -1.2239822149276733], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.159956455230713, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nevada', [-2.034956455230713, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.159956455230713, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.159956455230713, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.159956455230713, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pennsylvania', [-4.409956455230713, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.159956455230713, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Orleans', [-2.909956455230713, -1.3202791213989258], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.159956455230713, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'North Las', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Nevada'}

Key: 147580453735844122318139985719229352195
Value: {'question': "What was the name of Gene Autry's horse?", 'responses': [('Trigger', [-2.6465845108032227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Silver', [-3.1778345108032227, -0.16233444213867188], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buttermilk', [-3.1309595108032227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.22470958530902863, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Trigger', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Champion'}

Key: 230252488792271781604711703219630814128
Value: {'question': 'Which city has a sports team of Steelers and team of Pirates?', 'responses': [('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh,', [0.0, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh,', [0.0, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh,', [0.0, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which country did Albert Einstein move to as the Nazis rose to power?', 'responses': [('USA', [-0.5589056611061096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5589056611061096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5589056611061096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('America', [-2.058905601501465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5589056611061096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5589056611061096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5589056611061096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('America', [-2.058905601501465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-1.9339056015014648, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5589056611061096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'USA', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'America'}

Key: 339149744893660285137218492256137297395
Value: {'question': 'In the 90s how many points have been awarded for finishing first in a Grand Prix?', 'responses': [('25', [0.0, -0.7240728139877319, -0.1718370020389557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -2.5990729331970215, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -0.7240728139877319, -0.1718370020389557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -0.7240728139877319, -0.1718370020389557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -0.7240728139877319, -0.1718370020389557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('14', [0.0, -1.349072813987732, -3.6217598915100098], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -0.7240728139877319, -0.1718370020389557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8', [0.0, -2.5990729331970215, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('25', [0.0, -0.7240728139877319, -0.1718370020389557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('35', [0.0, -2.8490729331970215, -2.3706889152526855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '25', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': '10'}

Key: 218275342711631337856973563624839051277
Value: {'question': 'Which lawyer made Raymond Burr famous?', 'responses': [('Robert H.', [-3.303237199783325, -1.1583855152130127, -0.20026974380016327], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Orson Wells', [-4.146986961364746, -0.38687101006507874, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mickey Spillane', [-4.740736961364746, -0.7902922630310059, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Erle Stanley Gardner', [-2.521987199783325, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Erle Stanley Gardner', [-2.521987199783325, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Perry Mason', [-0.6469871997833252, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward G Robinson', [-2.459487199783325, -0.48788198828697205, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Whitmore', [-4.740736961364746, -3.305436372756958, -0.8571590185165405], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Perry Mason', [-0.6469871997833252, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward G Robinson', [-2.459487199783325, -0.48788198828697205, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert H.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580787, 'reference': 'Perry Mason'}

Key: 175365714901545549037744153837609809091
Value: {'question': 'Which broadcasting company did Edward J Noble found?', 'responses': [('NBC', [-1.2370909452438354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radio Corporation', [-3.362091064453125, -0.25758370757102966], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-0.6120909452438354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('NBC', [-1.2370909452438354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia Broadcasting', [-4.987091064453125, -0.21419642865657806], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-0.6120909452438354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-0.6120909452438354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('NBC', [-1.2370909452438354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('NBC', [-1.2370909452438354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CBS', [-0.6120909452438354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'NBC', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290393, 'reference': 'ABC'}

Key: 207405623594446908613910160083214920906
Value: {'question': 'In which decade did the Jackson 5 sign to Motown?', 'responses': [('The 60s', [-2.6949362754821777, -0.08893945813179016, -2.0176751613616943, 0.0, -0.25192904472351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [-0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [-0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [-0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [-0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The 1960', [-2.6949362754821777, -0.08893945813179016, -0.14267508685588837, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [-0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [-0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [-0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The 1960', [-2.6949362754821777, -0.08893945813179016, -0.14267508685588837, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The 60s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1960s'}

Key: 295721133551313037003218385038645841971
Value: {'question': 'How many vice presidents did Franklin D Roosevelt have?', 'responses': [('4', [-0.31646811962127686, -0.46949678659439087], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.6914681196212769, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.31646811962127686, -0.46949678659439087], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.6914681196212769, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.31646811962127686, -1.094496726989746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.31646811962127686, -3.219496726989746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.6914681196212769, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.31646811962127686, -1.094496726989746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.31646811962127686, -0.46949678659439087], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.31646811962127686, -0.46949678659439087], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '4', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Three'}

Key: 153087901943400500082408407976902961664
Value: {'question': "In which state is Harrah's Auto Collection situated?", 'responses': [('Oklahoma', [-1.0149285793304443, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.0149285793304443, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arizona', [-4.514928817749023, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.0149285793304443, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.0149285793304443, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.0149285793304443, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Connecticut', [-4.139928817749023, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nevada', [-1.3899285793304443, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.0149285793304443, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Missouri', [-4.139928817749023, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oklahoma', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Nevada'}

Key: 147580453735844122318139985719229352195
Value: {'question': "What was the name of Gene Autry's horse?", 'responses': [('Champion', [-0.14343024790287018, -0.2480199933052063], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.14343024790287018], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.14343024790287018, -0.2480199933052063], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.14343024790287018, -0.2480199933052063], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion Jack', [-0.14343024790287018, -1.6542699337005615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.14343024790287018, -0.2480199933052063], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion Jack', [-0.14343024790287018, -1.6542699337005615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.14343024790287018, -0.2480199933052063], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.14343024790287018, -0.2480199933052063], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Champion', [-0.14343024790287018, -0.2480199933052063], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Champion', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Champion'}

Key: 230252488792271781604711703219630814128
Value: {'question': 'Which city has a sports team of Steelers and team of Pirates?', 'responses': [('Pittsburgh', [0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh,', [0.0, -2.3502066135406494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh', [0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pittsburgh', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Pittsburgh'}

Key: 94472712112606296234129770326955987808
<<<<<<< HEAD
Value: {'question': 'What did Fort Dearborn, Indian Territory change its name to?', 'responses': [('Chicago', [-0.5684362053871155, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort Dodge', [-1.1934361457824707, -2.5961806774139404], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort Dearborn', [-1.1934361457824707, -4.7211809158325195], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.5684362053871155, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.5684362053871155, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.5684362053871155, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort Dodge', [-1.1934361457824707, -2.5961806774139404], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.5684362053871155, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort Worth', [-1.1934361457824707, -2.7211806774139404], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort Smith', [-1.1934361457824707, -1.0961806774139404], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chicago', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Chicago, Illinois'}

Key: 107490582488842314494253911039828007872
Value: {'question': 'Bill Berry retired through ill health as a drummer in which band?', 'responses': [('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REM', [-1.008503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REM', [-1.008503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.633503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REM', [-1.008503794670105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'R.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'REM'}

Key: 338491303436063744531418221079735244352
Value: {'question': 'Leslie Nielsen trained in which of the armed services in WWII?', 'responses': [('Canadian navy', [-2.7825043201446533, -3.4590680599212646], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('U.', [-2.4075043201446533, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Air Force', [-2.4075043201446533, -0.25687500834465027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Navy', [-2.0325043201446533, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('US Navy', [-1.7825043201446533, -0.8815300464630127], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Army', [-2.4075043201446533], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('US Marines', [-1.7825043201446533, -3.2565300464630127], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Air Force', [-2.4075043201446533, -0.25687500834465027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USMC', [-1.7825043201446533, -3.0065300464630127], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Coast', [-2.1575043201446533, -3.5193638801574707], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Canadian navy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Royal Canadian'}

Key: 291282290886535409978909703339803815873
Value: {'question': 'What went with Blood and Sweat in the name of the 60s rock band?', 'responses': [('and Tears', [-1.612539529800415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('and Tears', [-1.612539529800415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('And Tears', [-1.987539529800415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diamonds', [-1.581289529800415, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tears', [-4.182851791381836, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roses?', [-3.800039529800415, -3.288041353225708], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('& Tears', [-2.050039529800415, -0.2213774174451828], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('And Tears', [-1.987539529800415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('and Tears', [-1.612539529800415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Experience', [-3.659414529800415, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'and Tears', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Tears'}

Key: 328447259032384053761863265516174750681
Value: {'question': 'Which musical featured the song I Feel Pretty?', 'responses': [('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Funny Girl', [-2.0631959438323975, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Funny Girl', [-2.0631959438323975, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.18819592893123627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'West Side Story', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'West Side Story'}

Key: 233558502341880634634735511533470717872
Value: {'question': 'Who produced the first Jetliner in 1957?', 'responses': [('Boeing', [-1.0930145978927612, -0.09092823415994644], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas Aircraft', [-1.2180145978927612, -0.3648648262023926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas Aircraft', [-1.2180145978927612, -0.3648648262023926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('McDonnell Douglas', [-3.593014717102051, -0.8042733669281006], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boeing', [-1.0930145978927612], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas Aircraft', [-1.2180145978927612, -0.3648648262023926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lockheed', [-2.218014717102051, -0.21638822555541992], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas', [-1.2180145978927612, -1.3648648262023926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boeing', [-1.0930145978927612, -0.09092823415994644], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('McDonnell', [-3.593014717102051, -1.1792733669281006], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Boeing', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Boeing'}

Key: 55263147172295123017909560426286568332
Value: {'question': 'In which decade of the 20th century was James Caan born?', 'responses': [('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -0.4092440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -1.7842440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -1.7842440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, -1.7842440605163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'What did Fort Dearborn, Indian Territory change its name to?', 'responses': [('Chicago', [-0.16199050843715668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.16199050843715668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.16199050843715668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma City', [-3.0369904041290283, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.16199050843715668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.16199050843715668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.16199050843715668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.16199050843715668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.16199050843715668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-0.16199050843715668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chicago', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Chicago, Illinois'}

Key: 107490582488842314494253911039828007872
Value: {'question': 'Bill Berry retired through ill health as a drummer in which band?', 'responses': [('The REM', [-1.2715544700622559, -1.9806549549102783], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('U2', [-2.302804470062256, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REM', [-1.5528044700622559, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.8965544700622559, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.8965544700622559, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REM', [-1.5528044700622559, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('U2', [-2.302804470062256, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('REM', [-1.5528044700622559, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.8965544700622559, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R.', [-0.8965544700622559, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The REM', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'REM'}

Key: 338491303436063744531418221079735244352
Value: {'question': 'Leslie Nielsen trained in which of the armed services in WWII?', 'responses': [('Navy', [-1.905495285987854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The U', [-1.155495285987854, -3.7037620544433594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Air Force', [-1.905495285987854, -0.4769526720046997], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Navy', [-1.905495285987854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Army', [-2.2804951667785645, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('RAF', [-3.2804951667785645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The US', [-1.155495285987854, -1.7037620544433594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The RAF', [-1.155495285987854, -2.0787620544433594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Army', [-1.155495285987854, -3.4537620544433594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The US', [-1.155495285987854, -1.7037620544433594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Navy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3661588475692017, 'reference': 'Royal Canadian'}

Key: 291282290886535409978909703339803815873
Value: {'question': 'What went with Blood and Sweat in the name of the 60s rock band?', 'responses': [('& Tears', [-2.0284900665283203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('And Tears', [-1.3097400665283203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tears', [-1.3097400665283203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('And Tears', [-1.3097400665283203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('And Tears', [-1.3097400665283203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('and Tears', [-1.2472400665283203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('and Tears', [-1.2472400665283203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tears', [-1.3097400665283203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('and Tears', [-1.2472400665283203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('& Tears', [-2.0284900665283203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '& Tears', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Tears'}

Key: 328447259032384053761863265516174750681
Value: {'question': 'Which musical featured the song I Feel Pretty?', 'responses': [('Funny Girl', [-1.6045318841934204, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Funny Girl', [-1.6045318841934204, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.292031854391098, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.292031854391098, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.292031854391098, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Funny Girl', [-1.6045318841934204, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.292031854391098, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.292031854391098, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Funny Girl', [-1.6045318841934204, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Funny Girl', [-1.6045318841934204, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Funny Girl', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': 'West Side Story'}

Key: 233558502341880634634735511533470717872
Value: {'question': 'Who produced the first Jetliner in 1957?', 'responses': [('Douglas Aircraft', [-1.3304836750030518, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas Aircraft', [-1.3304836750030518, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('De Hav', [-3.0804836750030518, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boeing', [-1.2054836750030518, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('De Hav', [-3.0804836750030518, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boeing', [-1.2054836750030518, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The McDonnell', [-3.4554836750030518, -3.107118606567383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boeing', [-1.2054836750030518, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grumman', [-4.580483436584473, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('de Hav', [-4.455483436584473, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Douglas Aircraft', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811906, 'reference': 'Boeing'}

Key: 55263147172295123017909560426286568332
Value: {'question': 'In which decade of the 20th century was James Caan born?', 'responses': [('1940s', [0.0, 0.0, 0.0, 0.0, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [0.0, 0.0, 0.0, 0.0, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [0.0, 0.0, 0.0, 0.0, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [0.0, 0.0, 0.0, 0.0, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [0.0, 0.0, 0.0, 0.0, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940', [0.0, 0.0, 0.0, 0.0, 0.0, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [0.0, 0.0, 0.0, 0.0, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [0.0, 0.0, 0.0, 0.0, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940', [0.0, 0.0, 0.0, 0.0, 0.0, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [0.0, 0.0, 0.0, 0.0, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1940s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1930s'}

Key: 237687854910576507567971273498027949574
Value: {'question': 'In which country is the deepwater port of Trondheim?', 'responses': [('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Norway', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Norway'}

Key: 16202945781029922120160777797256517657
Value: {'question': 'In which state is Camp David?', 'responses': [('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Maryland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Maryland'}

Key: 123584650545463914068196490215293723253
<<<<<<< HEAD
Value: {'question': 'What was the Statue of Liberty originally called?', 'responses': [('Lady Liberty', [-2.8370330333709717, -0.6037852764129639, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Colossus of', [-2.5870330333709717, -0.6549707055091858, -0.08377019315958023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening', [-0.4620329737663269, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening', [-0.4620329737663269, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberté éclair', [-2.4620330333709717, -2.3502066135406494, -3.5032846927642822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lady of Liberty', [-2.8370330333709717, -0.7912852764129639, -0.33874380588531494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening', [-0.4620329737663269, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Liberty Enlight', [-2.9620330333709717, -0.2906346023082733, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Liberty Enlight', [-2.9620330333709717, -0.2906346023082733, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening', [-0.4620329737663269, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lady Liberty', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'Liberty Enlightening the World'}

Key: 112512653525576048371295925030598196931
Value: {'question': 'Who sang the Bond theme form From Russia With Love?', 'responses': [('Matt Monro', [-0.5083795189857483, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.5083795189857483, -0.07888974994421005, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Barry', [-1.4146294593811035, 0.0, -0.09563114494085312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Barry', [-1.4146294593811035, 0.0, -0.09563114494085312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.5083795189857483, -0.07888974994421005, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.5083795189857483, -0.07888974994421005, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Barry', [-1.4146294593811035, 0.0, -0.09563114494085312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Barry', [-1.4146294593811035, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Anka', [-4.0396294593811035, -2.1940929889678955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Barry', [-1.4146294593811035, 0.0, -0.09563114494085312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Matt Monro', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'Matt Monro'}

Key: 45755384076082091870849779112089745287
Value: {'question': 'Which company was responsible for the oil spill in New York harbor in 1990?', 'responses': [('Exxon Valdez', [0.0, -1.940263271331787], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.31526321172714233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.31526321172714233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon Valdez', [0.0, -1.940263271331787], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.31526321172714233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon-', [0.0, -3.315263271331787], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.31526321172714233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -3.815263271331787], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.31526321172714233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.31526321172714233], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Exxon Valdez', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Exxon'}

Key: 55494487028716034782981453564402901944
Value: {'question': 'In which country was Arnold Schwarzenegger born?', 'responses': [('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'What was the Statue of Liberty originally called?', 'responses': [('Liberty Enlightening the', [-0.2872755825519562, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening the', [-0.2872755825519562, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Colossus of New', [-2.412275552749634, -0.8400299549102783, 0.0, -0.06400981545448303], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great Colossus of', [-2.412275552749634, -3.1525299549102783, -2.0276246070861816, -0.7912852764129639], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening the', [-0.2872755825519562, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New Colossus', [-2.412275552749634, -1.6525299549102783, -0.22439360618591309, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening the', [-0.2872755825519562, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening the', [-0.2872755825519562, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Enlightening the', [-0.2872755825519562, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colossus of New York', [-3.162275552749634, -0.1902991682291031, -0.3836612105369568, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Liberty Enlightening the', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Liberty Enlightening the World'}

Key: 112512653525576048371295925030598196931
Value: {'question': 'Who sang the Bond theme form From Russia With Love?', 'responses': [('Matt Monro', [-0.26836222410202026, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.26836222410202026, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.26836222410202026, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.26836222410202026, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.26836222410202026, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Barry', [-1.768362283706665, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Barry and', [-1.768362283706665, 0.0, -2.811967611312866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.26836222410202026, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.26836222410202026, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Monro', [-0.26836222410202026, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Matt Monro', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Matt Monro'}

Key: 45755384076082091870849779112089745287
Value: {'question': 'Which company was responsible for the oil spill in New York harbor in 1990?', 'responses': [('Exxon', [0.0, -0.3116465210914612], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.3116465210914612], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon-', [0.0, -3.1866464614868164], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon Mobil', [0.0, -3.1866464614868164], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon Valdez', [0.0, -1.6866464614868164], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.3116465210914612], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon Valdez', [0.0, -1.6866464614868164], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.3116465210914612], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.3116465210914612], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon', [0.0, -0.3116465210914612], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Exxon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Exxon'}

Key: 55494487028716034782981453564402901944
Value: {'question': 'In which country was Arnold Schwarzenegger born?', 'responses': [('Austria', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Austria', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Austria'}

Key: 87853895163434729299833218199025839501
<<<<<<< HEAD
Value: {'question': "Who had an 80s No 1 with Don't You Want Me?", 'responses': [('The Human League', [-1.0741660594940186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-1.0741660594940186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-1.0741660594940186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.4179159998893738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.4179159998893738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.4179159998893738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.4179159998893738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.4179159998893738, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-1.0741660594940186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-1.0741660594940186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': "Who had an 80s No 1 with Don't You Want Me?", 'responses': [('The Human League', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Human League', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Human League', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Human League'}

Key: 292684906998794697216328865562232074749
<<<<<<< HEAD
Value: {'question': 'Which star of Hannah And Her Sisters has a child called Free?', 'responses': [('Gwyneth Palt', [-2.9599475860595703, -0.6799575686454773, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Allen', [-1.2724475860595703, -0.1797446459531784, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Keaton', [-1.8974475860595703, -0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Allen', [-1.2724475860595703, -0.1797446459531784, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Keaton', [-1.8974475860595703, -0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dianne Wiest', [-2.0849475860595703, -0.042999111115932465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dianne Wiest', [-2.0849475860595703, -0.042999111115932465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Allen', [-1.2724475860595703, -0.1797446459531784, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anne Bancroft', [-3.2724475860595703, -0.16729751229286194, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Allen', [-1.2724475860595703, -0.1797446459531784, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gwyneth Palt', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': 'Barbara Hershey'}

Key: 195303369408133964774489111183950190455
Value: {'question': 'Who had 70s hits with Have You Seen Her and Oh Girl?', 'responses': [('Rose Royce', [-4.021017074584961, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peaches & Herb', [-3.606954574584961, -0.8615548014640808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Ohio Express', [-0.4819546341896057, -2.5189051628112793, -1.8309202194213867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Main Ingredient', [-0.4819546341896057, -2.8782801628112793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Weather Girls', [-0.4819546341896057, -3.5814051628112793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Five Stair', [-0.4819546341896057, -3.2064051628112793, -0.24493558704853058], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Main Ingredient', [-0.4819546341896057, -2.8782801628112793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Robinson', [-4.888204574584961, -4.246286869049072, -0.5522034168243408], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Spinners', [-0.4819546341896057, -3.0814051628112793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose Royce', [-4.021017074584961, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rose Royce', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Chi-Lites'}

Key: 268402708432426830177707196375572718936
Value: {'question': "In which decade of the 20th century was Father's Day first celebrated?", 'responses': [('18th', [-0.05488219112157822, 0.0, -1.8047446012496948, -1.9765732288360596, -0.40441542863845825], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1909', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.9332578182220459, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1910', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.6832578182220459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.9332578182220459, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1909', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.9332578182220459, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1910', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.6832578182220459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1909', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.9332578182220459, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1890', [-0.05488219112157822, 0.0, -1.8047446012496948, -2.1015732288360596, -0.3322916030883789], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1870', [-0.05488219112157822, 0.0, -1.8047446012496948, -0.8515731692314148, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1910', [-0.05488219112157822, 0.0, -0.1797446459531784, -0.6832578182220459, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '18th', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': '1910s'}

Key: 80036803484421873569794968191345607563
Value: {'question': '"What was the name of the ""girl with kaleidoscope eyes"" in a Beatles song?"', 'responses': [('Lucy In', [-0.9343842267990112, -2.480241298675537], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cynthia', [-2.496884346008301, -0.21795836091041565], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy', [-0.9343842267990112, -0.6364914178848267], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy in', [-0.9343842267990112, -0.9489914178848267], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cynthia', [-2.496884346008301, -0.21795836091041565], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Rigby', [-2.684384346008301, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Linda McCartney', [-4.590634346008301, -0.2383444905281067], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy', [-0.9343842267990112, -0.6364914178848267], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy In', [-0.9343842267990112, -2.480241298675537], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I can', [-3.309384346008301, -4.391400337219238], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lucy In', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Lucy'}

Key: 156845925365979044438433254302190351098
Value: {'question': 'Will Rogers airport was built in which US state?', 'responses': [('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('OK', [-2.929882287979126, -0.6187557578086853], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which star of Hannah And Her Sisters has a child called Free?', 'responses': [('Diane Keaton', [-1.8982415199279785, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dianne Wiest', [-1.4294915199279785, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbara Hershey', [-3.1794915199279785, -0.6037852764129639, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dianne Wiest', [-1.4294915199279785, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dianne Wiest', [-1.4294915199279785, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Allen', [-1.2107415199279785, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Caine', [-2.4919915199279785, -0.30437368154525757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Caine', [-2.4919915199279785, -0.30437368154525757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Caine', [-2.4919915199279785, -0.30437368154525757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dianne Wiest', [-1.4294915199279785, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Diane Keaton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Barbara Hershey'}

Key: 195303369408133964774489111183950190455
Value: {'question': 'Who had 70s hits with Have You Seen Her and Oh Girl?', 'responses': [('The Miracles', [-0.72818922996521, -4.445157051086426, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lynsey de', [-3.72818922996521, -0.1686374396085739, -0.3393513262271881], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sweet', [-0.72818922996521, -2.257657051086426, -0.43970704078674316], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hot Chocolate', [-2.29068922996521, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Weather Girls', [-0.72818922996521, -4.257657051086426, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hot Chocolate', [-2.29068922996521, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Evelyn "Champagne', [-4.103189468383789, -1.5909926891326904, -0.013945401646196842], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jive', [-0.72818922996521, -4.538907051086426, -1.3832117319107056], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Five O', [-0.72818922996521, -3.445157051086426, -2.6288652420043945], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Tops', [-0.72818922996521, -3.288907051086426, -0.14688695967197418], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Miracles', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Chi-Lites'}

Key: 268402708432426830177707196375572718936
Value: {'question': "In which decade of the 20th century was Father's Day first celebrated?", 'responses': [('20th', [-0.06993623077869415, -2.4069128036499023, 0.0, 0.0, -0.5811541676521301], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1909', [-0.06993623077869415, -0.0944129079580307, 0.0, -0.9422221183776855, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1909', [-0.06993623077869415, -0.0944129079580307, 0.0, -0.9422221183776855, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1910', [-0.06993623077869415, -0.0944129079580307, 0.0, -0.8172221183776855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1910', [-0.06993623077869415, -0.0944129079580307, 0.0, -0.8172221183776855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1910', [-0.06993623077869415, -0.0944129079580307, 0.0, -0.8172221183776855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1909', [-0.06993623077869415, -0.0944129079580307, 0.0, -0.9422221183776855, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1924', [-0.06993623077869415, -0.0944129079580307, 0.0, -3.1922221183776855, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1909', [-0.06993623077869415, -0.0944129079580307, 0.0, -0.9422221183776855, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1910', [-0.06993623077869415, -0.0944129079580307, 0.0, -0.8172221183776855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '20th', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0549201679861442, 'reference': '1910s'}

Key: 80036803484421873569794968191345607563
Value: {'question': '"What was the name of the ""girl with kaleidoscope eyes"" in a Beatles song?"', 'responses': [('Lucy In', [-0.5503227710723877, -2.0489141941070557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy in', [-0.5503227710723877, -0.4864141345024109], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cynthia', [-3.3003227710723877, -0.17566560208797455], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy in', [-0.5503227710723877, -0.4864141345024109], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy in', [-0.5503227710723877, -0.4864141345024109], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Jane', [-3.3628227710723877, -0.14423644542694092], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy in', [-0.5503227710723877, -0.4864141345024109], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy in', [-0.5503227710723877, -0.4864141345024109], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy in', [-0.5503227710723877, -0.4864141345024109], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucy in', [-0.5503227710723877, -0.4864141345024109], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lucy In', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Lucy'}

Key: 156845925365979044438433254302190351098
Value: {'question': 'Will Rogers airport was built in which US state?', 'responses': [('Oklahoma', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oklahoma', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Oklahoma'}

Key: 43814329345678189933879252960679007558
<<<<<<< HEAD
Value: {'question': 'What writer was expelled from West Point for showing up for a public parade wearing only a white belt and gloves?', 'responses': [('Mark Twain', [-0.9383733868598938, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.9383733868598938, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.9383733868598938, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.9383733868598938, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Robert Heinlein', [-3.438373327255249, -3.2428841590881348, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.9383733868598938, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Ambrose Bierce', [-3.813373327255249, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.9383733868598938, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.9383733868598938, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Ernest Hemingway', [-2.063373327255249, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mark Twain', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Edgar Allan Poe'}

Key: 76846769095736674064929847593683346275
Value: {'question': '"What couple live next door to Dagwood and Blondie Bumstead in ""Blondie""?"', 'responses': [('Gladys and George', [-3.1606225967407227, -0.023245446383953094, -1.9618619680404663, -0.9417592287063599], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pop and Mom', [-3.9106225967407227, -0.16630339622497559, -0.7709618806838989, -0.45403993129730225], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Herman and Lily', [-4.660622596740723, 0.0, -1.8735235929489136, -0.7417206764221191], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Biffers', [-1.5981227159500122, -2.222442626953125, -2.0815467834472656, -2.4054367542266846], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The McBrides', [-1.5981227159500122, -3.409942626953125, -3.1946864128112793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Homer and Marge Simpson', [-4.160622596740723, 0.0, -0.17417211830615997, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie and Edith', [-2.9731225967407227, -0.170610710978508, -0.8607392311096191, -2.027719497680664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr and Mrs Peabody', [-2.4731225967407227, -1.5019290447235107, 0.0, -3.271183490753174], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blondie and Dag', [-3.9106225967407227, 0.0, -0.5231232643127441, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Linus and Lucy Van', [-4.410622596740723, 0.0, 0.0, -0.5067813396453857], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gladys and George', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Herb and Tootsie Woodley'}

Key: 315960496772872662530234073742748693691
Value: {'question': "Who was the Lone Ranger's great grand-nephew?", 'responses': [('Tonto', [-0.6295303106307983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D. John', [-4.504530429840088, -1.67667555809021, -3.3525147438049316], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tonto', [-0.6295303106307983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-1.3170303106307983, 0.0, -0.06268490105867386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-1.3170303106307983, 0.0, -0.06268490105867386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tonto', [-0.6295303106307983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-1.3170303106307983, 0.0, -0.06268490105867386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tonto', [-0.6295303106307983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-1.3170303106307983, 0.0, -0.06268490105867386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-1.3170303106307983, 0.0, -0.06268490105867386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tonto', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290393, 'reference': 'The Green Hornet'}

Key: 315933313220252838540973137195040072500
Value: {'question': '"Psychologist William Moulton Marston, inventor of the polygraph, or lie detector, also created a famous comic book heroine,. Who was she?"""', 'responses': [('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wonder Woman', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Wonder Woman'}

Key: 322405567974317541848831685930586294097
Value: {'question': '"""Last night I dreamt I went to Manderley again,"" was the first line of what Daphne du Maurier novel?"', 'responses': [('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rebecca', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Rebecca'}

Key: 43606630774321893798265684732537957406
Value: {'question': '"What is the actual title of Leonardo da Vinci\'s ""Mona Lisa""?"', 'responses': [('La Gioconda', [-0.560475766658783, -0.188959538936615, 0.0, -0.08066262304782867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lisa Gherardini', [-2.8104758262634277, -1.2734706401824951, 0.0, -0.4695066213607788], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Gioconda', [-0.560475766658783, -0.188959538936615, 0.0, -0.08066262304782867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The Lady with', [-1.8104758262634277, -2.316685676574707, -0.5591940879821777, -0.40799692273139954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('""La Gioconda', [-3.9354758262634277, -0.3960641622543335, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portrait of Mona Lisa', [-3.1854758262634277, 0.0, -2.558703899383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Gioconda', [-0.560475766658783, -0.188959538936615, 0.0, -0.08066262304782867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The Lady with', [-1.8104758262634277, -2.316685676574707, -0.5591940879821777, -0.40799692273139954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Gioconda', [-0.560475766658783, -0.188959538936615, 0.0, -0.08066262304782867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Joconde', [-0.560475766658783, -1.9389595985412598, 0.0, -0.08066262304782867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'La Gioconda', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'La Gioconda'}

Key: 70752152378013812315822982763783822665
Value: {'question': "In Henry Wadsworth Longfellow's famous poem, Hiawatha, what was the name of Hiawatha's wife?", 'responses': [('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha.', [-0.10731483995914459, 0.0, -3.167999029159546], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Moccasin', [-2.8495023250579834, -1.6878266334533691, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Minnehaha', [-0.10731483995914459, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Minnehaha', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Minnehaha'}

Key: 305108324243777914518778592783408768615
Value: {'question': "How many husbands did the Wife of Bath have, as reported in Chaucer's Canterbury Tales?", 'responses': [('5', [-0.7340680360794067, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.7340680360794067, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.7340680360794067, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nine', [-2.609067916870117, -0.08995520323514938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nine', [-2.609067916870117, -0.08995520323514938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.3590680360794067, -0.09770473837852478], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.7340680360794067, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eight', [-3.484067916870117, -0.08995520323514938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.7340680360794067, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-1.3590680360794067, -0.09770473837852478], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '5', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': 'Five'}

Key: 283031692528067279999929630903321078117
Value: {'question': 'What was the name of the she-ape that rescued the infant Tarzan and raised him to be Lord of the Apes?', 'responses': [('Cheeta', [-1.9102240800857544, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Kala', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Cheeta', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Kala'}

Key: 299951613067303540681201935228417999477
Value: {'question': "What was the title of Mac West's 1959 autobiography?", 'responses': [("This Time it's", [-4.305454730987549, -2.8408472537994385, -3.025484561920166, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I'm Number Four", [-2.305454730987549, -0.7503478527069092, -0.37139198184013367, -3.6943740844726562, -4.072463035583496], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On With the Show', [-4.930454730987549, -4.957866668701172, -0.3589375615119934, -0.21798443794250488, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"My Life and Loves', [-1.4304546117782593, -2.340237617492676, -1.1350219249725342, -2.061279296875, -1.670224666595459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"I Heard it Through', [-1.4304546117782593, -1.7152377367019653, -4.940478324890137, -2.3535799980163574, -0.4293733239173889], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I'm Just Lucky", [-2.305454730987549, -0.7503478527069092, -0.37139198184013367, -2.6943740844726562, -2.016535520553589], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I Don't Want", [-2.305454730987549, -3.625347852706909, 0.0, 0.0, -0.8225192427635193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Long, Long Way', [-1.5554546117782593, -3.7217957973480225, -1.7506760358810425, -0.8013284206390381, -3.424412727355957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"You Can\'t', [-1.4304546117782593, -3.965237617492676, -1.1762421131134033, -0.31695011258125305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s Face', [-1.4304546117782593, -5.090237617492676, -0.573300302028656, 0.0, -2.422379493713379], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "This Time it's", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Goodness Had Nothing to Do With It'}

Key: 71195401009200096103012987519539618692
Value: {'question': '"What words did Lewis Carroll combine to come up with the term ""chortle"" in Through a Looking-Glass?"', 'responses': [('Chort', [-1.3541518449783325, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Short and', [-3.854151725769043, -0.5523681044578552], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('chort', [-2.354151725769043, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('chort', [-2.354151725769043, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('chort', [-2.354151725769043, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Laugh', [-1.4791518449783325, -2.2681899070739746], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Choke', [-3.979151725769043, -0.09379976242780685], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('to chuckle', [-3.979151725769043, -0.6462944746017456], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('chuckle and', [-3.354151725769043, -0.29329565167427063], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Laughter', [-4.354151725769043, -2.129300832748413], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chort', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.1935496040981333, 'reference': 'Chuckle and snort'}

Key: 242428669277065383800244648522680264114
Value: {'question': '"Shakespeare wrote that ""brevity is the soul of wit."" What did noted wit Dorothy Parker say it was?"', 'responses': [('The soul of a corpse.', [-2.1039857864379883, -0.7481856346130371, 0.0, -3.3336002826690674, -4.897593021392822, -0.9208433628082275], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Brevity is the soul of', [-3.1039857864379883, 0.0, -0.1988040804862976, -0.04858732968568802, -0.028346039354801178, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('""What did Shakespeare write that', [-1.7289857864379883, -4.133420467376709, -2.8385095596313477, -1.198848843574524, -0.3484445810317993, -0.1797446459531784], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('""You\'re the bee', [-1.7289857864379883, -4.508420467376709, -2.1868371963500977, -0.5453465580940247, -2.767423152923584, -2.853287696838379], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"The very model of a', [-0.6039857268333435, -1.6246089935302734, -4.8922929763793945, -0.6352289915084839, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Too much of a good', [-0.6039857268333435, -3.9996089935302734, -0.6024059653282166, -0.13318225741386414, -0.05488219112157822, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Brevity is the soul', [-0.6039857268333435, -1.4996089935302734, 0.0, -0.04009854421019554, -0.16368143260478973, -0.023245446383953094], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('""The ability to write short', [-1.7289857864379883, -1.8834205865859985, -4.70523738861084, 0.0, -2.2831897735595703, -2.0207719802856445], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('""The kiss of life.""', [-1.7289857864379883, -1.8834205865859985, -4.33023738861084, -0.17620837688446045, -0.28115010261535645, -0.49437570571899414], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("A woman's handbag", [-3.3539857864379883, -4.122486114501953, -1.0631182193756104, 0.0, -4.957066535949707, -0.42447182536125183], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The soul of a corpse.', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'The soul of lingerie'}
=======
Value: {'question': 'What writer was expelled from West Point for showing up for a public parade wearing only a white belt and gloves?', 'responses': [('Ernest Hemingway', [-1.9758100509643555, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.7883101105690002, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.7883101105690002, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.7883101105690002, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack London', [-3.4133100509643555, -0.14611834287643433, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.7883101105690002, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ernest Hemingway', [-1.9758100509643555, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.7883101105690002, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-0.7883101105690002, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ernest Hemingway', [-1.9758100509643555, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ernest Hemingway', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Edgar Allan Poe'}

Key: 76846769095736674064929847593683346275
Value: {'question': '"What couple live next door to Dagwood and Blondie Bumstead in ""Blondie""?"', 'responses': [('Gladys and Homer', [-3.561558246612549, -0.06669698655605316, -2.9720828533172607], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Homer and Marge', [-3.311558246612549, -0.07888974994421005, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dumbos', [-1.0615582466125488, -3.3190865516662598, -0.497048944234848], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dalt', [-1.0615582466125488, -3.1315865516662598, -2.639873504638672], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie and Edith', [-2.936558246612549, -0.04858732968568802, -0.33562207221984863], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie Andrews and', [-2.936558246612549, -3.0485873222351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Simpsons', [-1.0615582466125488, -2.3190865516662598, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie and Ethel', [-2.936558246612549, -0.04858732968568802, -2.6305439472198486], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethel and Archie', [-4.561558246612549, -0.042999111115932465, -3.230940103530884], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blondie and', [-4.311558246612549, 0.0, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gladys and Homer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Herb and Tootsie Woodley'}

Key: 315960496772872662530234073742748693691
Value: {'question': "Who was the Lone Ranger's great grand-nephew?", 'responses': [('Clayton Moore', [-0.8879687190055847, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tonto', [-1.8879687786102295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wayne', [-2.2629687786102295, -0.19312645494937897, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wayne', [-2.2629687786102295, -0.19312645494937897, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-0.8879687190055847, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Mix', [-3.5129687786102295, -0.3521822392940521, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-0.8879687190055847, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clayton Moore', [-0.8879687190055847, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buster Keaton', [-3.7317187786102295, -0.322318434715271, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wayne', [-2.2629687786102295, -0.19312645494937897, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Clayton Moore', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'The Green Hornet'}

Key: 315933313220252838540973137195040072500
Value: {'question': '"Psychologist William Moulton Marston, inventor of the polygraph, or lie detector, also created a famous comic book heroine,. Who was she?"""', 'responses': [('Wonder Woman', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wonder Woman', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wonder Woman', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Wonder Woman'}

Key: 322405567974317541848831685930586294097
Value: {'question': '"""Last night I dreamt I went to Manderley again,"" was the first line of what Daphne du Maurier novel?"', 'responses': [('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rebecca', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Rebecca'}

Key: 43606630774321893798265684732537957406
Value: {'question': '"What is the actual title of Leonardo da Vinci\'s ""Mona Lisa""?"', 'responses': [('La Joconde', [-0.6619188189506531, -1.8047446012496948, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Ginevra de'", [-3.911918878555298, 0.0, -0.10020658373832703, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Gioconda', [-0.6619188189506531, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Gioconda', [-0.6619188189506531, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Gioconda', [-0.6619188189506531, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Last Supper', [-2.411918878555298, -2.678473472595215, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lisa Gherardini da', [-2.911918878555298, -1.4267256259918213, 0.0, -4.596982479095459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Gioconda', [-0.6619188189506531, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Joconde', [-0.6619188189506531, -1.8047446012496948, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lady with an Erm', [-3.536918878555298, -0.11282224208116531, -0.08377019315958023, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'La Joconde', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'La Gioconda'}

Key: 70752152378013812315822982763783822665
Value: {'question': "In Henry Wadsworth Longfellow's famous poem, Hiawatha, what was the name of Hiawatha's wife?", 'responses': [('Minnehaha', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnehaha', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnehaha', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnehaha', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnehaha', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnehaha', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnehaha', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnehaha', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnehaha', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnehaha', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Minnehaha', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Minnehaha'}

Key: 305108324243777914518778592783408768615
Value: {'question': "How many husbands did the Wife of Bath have, as reported in Chaucer's Canterbury Tales?", 'responses': [('Four', [-2.1762938499450684, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.9262937903404236, -0.21898797154426575], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.9262937903404236, -2.9689879417419434], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Five', [-1.8012938499450684, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nine', [-1.5512938499450684, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.9262937903404236, -0.21898797154426575], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Five', [-1.8012938499450684, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Five', [-1.8012938499450684, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.9262937903404236, -0.21898797154426575], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eight', [-2.1762938499450684, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Four', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Five'}

Key: 283031692528067279999929630903321078117
Value: {'question': 'What was the name of the she-ape that rescued the infant Tarzan and raised him to be Lord of the Apes?', 'responses': [('Kala', [-0.051641397178173065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cheeta', [-2.9891414642333984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cheeta', [-2.9891414642333984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kala', [-0.051641397178173065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kala', [-0.051641397178173065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kala', [-0.051641397178173065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kala', [-0.051641397178173065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kala', [-0.051641397178173065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kala', [-0.051641397178173065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kala', [-0.051641397178173065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kala', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Kala'}

Key: 299951613067303540681201935228417999477
Value: {'question': "What was the title of Mac West's 1959 autobiography?", 'responses': [('The Man With the', [-1.2280625104904175, -2.2378830909729004, -2.3832640647888184, -1.258041501045227], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Last American Hero', [-1.2280625104904175, -2.9878830909729004, -3.589926242828369, -0.2077970802783966], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('One Of Our Ducks', [-3.978062629699707, -3.8363571166992188, -2.368536949157715, -4.854946136474609], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('One of the gang', [-3.978062629699707, -1.7113571166992188, -0.420441597700119, -3.091672897338867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Life of a Cowboy', [-4.353062629699707, -2.634787082672119, -1.2541639804840088, -2.361402988433838], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I can't", [-1.7280625104904175, -4.512441158294678, -0.8287197351455688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'I Used To", [-3.603062629699707, -1.3565585613250732, -4.991482734680176, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Hard Road', [-2.603062629699707, -2.674297571182251, -1.7237039804458618, -0.8992669582366943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Man with the', [-1.2280625104904175, -2.2378830909729004, -2.2582640647888184, -0.24560590088367462], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Man Called Horse', [-2.603062629699707, -1.674297571182251, -1.1976310014724731, -0.8745439052581787], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Man With the', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Goodness Had Nothing to Do With It'}

Key: 71195401009200096103012987519539618692
Value: {'question': '"What words did Lewis Carroll combine to come up with the term ""chortle"" in Through a Looking-Glass?"', 'responses': [('"Laugh and', [-2.2475290298461914, -2.009854316711426, -0.4801598787307739], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Laugh and C', [-1.622529149055481, -0.26317232847213745, -4.465742588043213], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Laugh and chuckle', [-1.622529149055481, -0.26317232847213745, -2.090742588043213], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Laugh and chatter', [-1.622529149055481, -0.26317232847213745, -3.340742588043213], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('chortle', [-3.6225290298461914, 0.0, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chocolate and giggle', [-4.622529029846191, -1.1793732643127441, -4.544342994689941], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chortle', [-1.622529149055481, 0.0, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Laugh + Little', [-1.622529149055481, -2.8881723880767822, -2.737326145172119], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'short'", [-2.9975290298461914, -4.720536231994629, -0.4112851023674011], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chorister', [-4.247529029846191, -1.3561429977416992, -0.5155179500579834], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"Laugh and', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Chuckle and snort'}

Key: 242428669277065383800244648522680264114
Value: {'question': '"Shakespeare wrote that ""brevity is the soul of wit."" What did noted wit Dorothy Parker say it was?"', 'responses': [('Poetry', [-4.985827922821045, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Bre', [-0.7358277440071106, -1.731825828552246], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Bre', [-0.7358277440071106, -1.731825828552246], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The', [-0.7358277440071106, -2.356825828552246], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"He', [-0.7358277440071106, -3.606825828552246], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Bre', [-0.7358277440071106, -1.731825828552246], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The soul', [-1.9858276844024658, -1.0349723100662231], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Damn', [-0.7358277440071106, -4.356825828552246], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The soul', [-1.9858276844024658, -1.0349723100662231], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('a great', [-4.360827922821045, -4.056087493896484], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Poetry', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'The soul of lingerie'}
>>>>>>> 811d839 (new run)

Key: 4083821256679784276648544188586882958
Value: {'question': "What is the native country of Agatha Chrisitie's detective Hercule Poirot?", 'responses': [('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Belgium', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Belgium'}

Key: 179500919441214507777366254358643215743
<<<<<<< HEAD
Value: {'question': 'What was the hometown of Sgt. Snorkel in Beetle Bailey?', 'responses': [('Springfield', [-2.9827990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South', [-3.9827990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West', [-4.232799053192139], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-3.8577990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Camp', [-3.7327990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sn', [-3.9827990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-3.8577990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort', [-2.2327990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New', [-2.2327990531921387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.107799053192139], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Springfield', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Pork Corners, Kansas'}

Key: 106672582804728343686434178520485926656
Value: {'question': 'In the Robin Hood stories, what was the real name of Little John?', 'responses': [('Robert Longlegs', [-1.932046890258789, -2.511561870574951, -3.5444841384887695], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Littlejohn', [-0.8695469498634338, -0.5053108930587769, -3.119903326034546], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Lox', [-1.932046890258789, -3.058436870574951, -0.04797643795609474], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert de la', [-1.932046890258789, -3.230311870574951, -1.8181777000427246], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Greene', [-1.932046890258789, -4.441249370574951, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Lackland', [-0.8695469498634338, -2.8256235122680664, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Little', [-0.8695469498634338, -0.5053108930587769, -0.11990334838628769], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Little', [-0.8695469498634338, -0.5053108930587769, -0.11990334838628769], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Lackland', [-0.8695469498634338, -2.8256235122680664, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friar Tuck', [-3.994546890258789, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert Longlegs', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'John Little'}

Key: 276056006835250280929354383841995492109
Value: {'question': "The Last Of The Really Great Whangdoodles and Mandy are children's books written by what well-known Oscar-winning actress?", 'responses': [('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Whoopi Goldberg', [-2.6206560134887695, -0.1764446347951889, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.1206560134887695, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Judy Garland', [-3.1831560134887695, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bette Davis', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Julie Andrews'}

Key: 297686009442561819588224118862021257564
Value: {'question': 'By what pseudonym is writer Frederick Dannay Manfred Bennington Lee better known?', 'responses': [('Ellery Queen', [-0.6196365356445312, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Dan"', [-2.7446365356445312, -2.89985728263855, -0.41269439458847046], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Ben Ames', [-2.7446365356445312, -3.05610728263855, -0.6344508528709412], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"I\'', [-2.7446365356445312, -3.24360728263855, -2.051807403564453], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.6196365356445312, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.6196365356445312, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rex Stout', [-3.2758865356445312, 0.0, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nero Wolfe', [-4.260261535644531, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Dickson Carr', [-4.619636535644531, -0.09047750383615494, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.6196365356445312, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ellery Queen', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Ellery Queen'}

Key: 83340959084944608675596273728971843621
Value: {'question': 'How many times did Ernest Hemingway revise the last page of A Farewell To Arms?', 'responses': [('1', [-0.2994185984134674, -1.281909465789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Five', [-3.6744186878204346, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.2994185984134674, -2.156909465789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.2994185984134674, -1.281909465789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.2994185984134674, -2.156909465789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Twice', [-3.4244186878204346, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.2994185984134674, -1.281909465789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.2994185984134674, -2.156909465789795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Once', [-3.9244186878204346, -0.08066273480653763], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three', [-2.9244186878204346, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': '39 times'}
=======
Value: {'question': 'What was the hometown of Sgt. Snorkel in Beetle Bailey?', 'responses': [('Fort Meade', [-1.439192771911621, -3.853292465209961], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Camp Swamp', [-1.689192771911621, -0.587928295135498], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dogpatch', [-3.814192771911621, -0.16764011979103088], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-4.439192771911621, -2.7098076343536377], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Camp Desert', [-1.689192771911621, -3.228553295135498], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Florida', [-4.626692771911621, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-3.564192771911621, -1.194769263267517], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort Thunder', [-1.439192771911621, -1.5197962522506714], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-4.439192771911621, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fort Thunder', [-1.439192771911621, -1.5197962522506714], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Fort Meade', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Pork Corners, Kansas'}

Key: 106672582804728343686434178520485926656
Value: {'question': 'In the Robin Hood stories, what was the real name of Little John?', 'responses': [('John Little', [-0.3556235730648041, -0.20981661975383759, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Little', [-0.3556235730648041, -0.20981661975383759, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("William 'Will", [-2.418123483657837, -4.569721698760986, -0.47093185782432556], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("William 'Robin", [-2.418123483657837, -4.569721698760986, -2.0334317684173584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John of Gaunt', [-0.3556235730648041, -2.8035666942596436, -0.5831708908081055], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Little', [-0.3556235730648041, -0.20981661975383759, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Little', [-0.3556235730648041, -0.20981661975383759, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Tuck', [-2.418123483657837, -3.1986279487609863, -0.904612123966217], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Little', [-0.3556235730648041, -0.20981661975383759, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Little', [-0.3556235730648041, -0.20981661975383759, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Little', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'John Little'}

Key: 276056006835250280929354383841995492109
Value: {'question': "The Last Of The Really Great Whangdoodles and Mandy are children's books written by what well-known Oscar-winning actress?", 'responses': [('Judy Garland', [-3.022528886795044, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.678778886795044, -0.28115010261535645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julie Andrews', [-1.178778886795044, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.678778886795044, -0.28115010261535645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Audrey Hepburn', [-2.710028886795044, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bette Davis', [-1.678778886795044, -0.28115010261535645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julie Andrews', [-1.178778886795044, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julie Andrews', [-1.178778886795044, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julie Andrews', [-1.178778886795044, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Whoopi Goldberg', [-2.960028886795044, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Judy Garland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Julie Andrews'}

Key: 297686009442561819588224118862021257564
Value: {'question': 'By what pseudonym is writer Frederick Dannay Manfred Bennington Lee better known?', 'responses': [('Ellery Queen', [-0.30533716082572937, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.30533716082572937, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.30533716082572937, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('S. S.', [-3.7584621906280518, -0.445463091135025, -1.094851016998291, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.30533716082572937, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.30533716082572937, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.30533716082572937, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edgar Rice Burroughs', [-3.0006496906280518, -0.3132617473602295, -0.08377019315958023, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.30533716082572937, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellery Queen', [-0.30533716082572937, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ellery Queen', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Ellery Queen'}

Key: 83340959084944608675596273728971843621
Value: {'question': 'How many times did Ernest Hemingway revise the last page of A Farewell To Arms?', 'responses': [('2', [-0.23521411418914795, -1.7452411651611328], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.23521411418914795, -2.120241165161133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.23521411418914795, -1.7452411651611328], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.23521411418914795, -2.120241165161133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.23521411418914795, -2.120241165161133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.23521411418914795, -1.7452411651611328], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.23521411418914795, -2.620241165161133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.23521411418914795, -2.245241165161133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.23521411418914795, -1.7452411651611328], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Twice', [-3.7352142333984375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '2', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': '39 times'}
>>>>>>> 811d839 (new run)

Key: 187841829121333818463300276451201285999
Value: {'question': "What was art-world guru Andy Warhol's name at birth?", 'responses': [('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Warhola', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Andrew Warhola', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Andrew Warhola'}

Key: 24985165128638620145160621829735847022
<<<<<<< HEAD
Value: {'question': 'What was the maiden name of Blondie Bumstead, the comic-strip wife of hapless Dagwood Bumstead?', 'responses': [('Dagwood', [-2.141030788421631, -0.0797952339053154], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Doris', [-2.703530788421631, -1.0452327728271484], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"B', [-4.078530788421631, -2.3436574935913086], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Dimp', [-3.266030788421631, -2.5769495964050293], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Van D', [-4.641030788421631, -1.6845316886901855], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Blondie', [-1.5785306692123413, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Mrs.', [-4.766030788421631, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Gladys B', [-3.578530788421631, -2.3649139404296875], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Velma', [-4.578530788421631, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Dumbrowski', [-3.891030788421631, -1.6269919872283936], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dagwood', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Boopadoop'}

Key: 142380867537269483316262219590494673257
Value: {'question': 'What famous comic strip character was inspired by the 1936 Henry Fonda film Trail of the Lonesome Pine?', 'responses': [('Pogo', [-3.1341681480407715, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Pecos Bill', [-4.3841681480407715, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Little Orphan Annie', [-1.759168267250061, -0.0469430536031723, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Henery Hawk', [-2.6341681480407715, -2.2968461513519287, -0.5824508666992188], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Little Orphan Annie', [-1.759168267250061, -0.0469430536031723, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Little Orphan Annie', [-1.759168267250061, -0.0469430536031723, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("Li'l", [-1.509168267250061, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Mark Trail', [-3.1341681480407715, -0.4509372115135193, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Little Orphan Annie', [-1.759168267250061, -0.0469430536031723, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("Li'l", [-1.509168267250061, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pogo', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': "Al Capp's Li'l Abner"}

Key: 99726541484321600103649435140893656675
Value: {'question': 'What was the original name of the orphan created in 1924 by cartoonist Harold Gray in the comic strip we know as Little Orphan Annie?', 'responses': [('Sandy Baxter', [-3.056973934173584, -4.474684715270996], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4944738745689392, -0.07372970879077911], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4944738745689392, -0.07372970879077911], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Mary', [-0.4944738745689392, -3.0112297534942627], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('"Little', [-3.119473934173584, -0.12559545040130615], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4944738745689392, -0.07372970879077911], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4944738745689392, -0.07372970879077911], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Sandy', [-3.056973934173584, -0.318434476852417], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4944738745689392, -0.07372970879077911], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4944738745689392, -0.07372970879077911], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sandy Baxter', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': 0.9502705392332347, 'reference': 'Otto'}

Key: 152839722919546948976103852745059232497
Value: {'question': "What was the name of Elizabeth Barrett Browning's pet golden cocker spaniel ?", 'responses': [('Michael Angelo', [-3.7412877082824707, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spot', [-3.4444127082824707, -0.4560443162918091], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alcy', [-4.342850208282471, -3.5434775352478027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Almeria', [-4.342850208282471, -3.7622275352478027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spot', [-3.4444127082824707, -0.4560443162918091], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth.', [-3.8037877082824707, -3.855267286300659], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Flush', [-3.0537877082824707, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fanta', [-2.5850377082824707, -3.3673338890075684], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Flos', [-1.5069128274917603, -1.391952633857727], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frith', [-4.553787708282471, -1.251575231552124], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michael Angelo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Flush'}

Key: 177223386861074003791905051369493153848
Value: {'question': 'The title of what poetic drama by Robert Browning was used to name a Kentucky town?', 'responses': [('Clo', [-4.218440532684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('East', [-4.530940532684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The', [-1.8434404134750366], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The', [-1.8434404134750366], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.718440532684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"', [-2.030940532684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The', [-1.8434404134750366], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ch', [-3.405940532684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A', [-1.4059404134750366], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pip', [-2.405940532684326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Clo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Pippa Passes'}

Key: 228675833131199846721054374212830680327
Value: {'question': 'What did L. Fran Baum, author of the The Wonderful Wizard of Oz, call his home in Hollywood?', 'responses': [('Emerald City', [-2.347609281539917, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Oz Cottage', [-1.597609281539917, -1.9659432172775269], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Silver', [-0.8476093411445618, -4.43664026260376], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('the Emerald', [-3.597609281539917, -0.9007994532585144], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Emerald', [-0.8476093411445618, -0.9366404414176941], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Emerald', [-0.8476093411445618, -0.9366404414176941], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Yellow', [-0.8476093411445618, -1.8116405010223389], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Yellow', [-0.8476093411445618, -1.8116405010223389], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Emerald City', [-2.347609281539917, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Oz', [-1.597609281539917, -1.4034432172775269], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Emerald City', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'Ozcot'}

Key: 80212411259148466639955645343916635416
Value: {'question': "What exotic city was featured in National Geographic magazine's first photo story in 1905?", 'responses': [('Venice,', [-2.978463649749756, -0.7575989961624146], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Cairo,', [-1.4784636497497559, -0.9740769863128662], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Cairo', [-1.4784636497497559, -0.4740769863128662], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Singapore', [-4.478463649749756, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Paris,', [-2.603463649749756, -1.6004126071929932], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Shanghai', [-2.353463649749756, -0.28115010261535645], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bangkok,', [-4.103463649749756, -1.0537006855010986], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Cairo', [-1.4784636497497559, -0.4740769863128662], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Istanbul', [-3.603463649749756, -0.31378084421157837], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Shanghai', [-2.353463649749756, -0.28115010261535645], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Venice,', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Lhasa, Tibet'}

Key: 153256292016964463443728984144206544304
Value: {'question': 'How much time did Jonah spend in the belly of the whale?', 'responses': [('40 days', [-0.11880791932344437, -1.7014133930206299, 0.0, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days and', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -1.9118678569793701], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days and', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -1.9118678569793701], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -0.4118678867816925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days and', [-0.11880791932344437, -0.2014133334159851, -0.08893945813179016, -1.9118678569793701], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '40 days', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Three days and three nights'}

Key: 134829948687202818572589460385578331208
Value: {'question': 'For what event in February 1964 did evangelist Billy Graham break his strict rule against watching TV on Sunday?', 'responses': [('Neil Armstrong walking', [-4.899230480194092, 0.0, -3.6635384559631348], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Winter Olympics', [-0.649230420589447, -4.872018814086914, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("JFK's", [-4.399230480194092, -0.2600022852420807, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Beatles first', [-0.649230420589447, -1.8720189332962036, -2.2577059268951416], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Presidential Inauguration', [-4.399230480194092, -1.5865933895111084, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Super Bowl', [-2.649230480194092, -0.1797446459531784, -1.4223707914352417], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Beatles debut', [-0.649230420589447, -1.8720189332962036, -2.8827059268951416], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Super Bowl I', [-2.649230480194092, -0.1797446459531784, -1.4223707914352417], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The coronation of', [-0.649230420589447, -2.997018814086914, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('the moon landing', [-3.149230480194092, -1.9109437465667725, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Neil Armstrong walking', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': "The Beatles' first appearance on The Ed Sullivan Show"}

Key: 244333762587516390385450239948625689676
Value: {'question': 'How tall was Goliath, the Philistine giant slain by David with a stone hurled from a sling?', 'responses': [('9 ft 1 in', [-0.07228665798902512, -0.5307025909423828, -1.9347524642944336, -0.865378737449646, -0.7454773187637329, -1.6360093355178833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9.5 ft', [-0.07228665798902512, -0.5307025909423828, -2.1847524642944336, -0.4409198760986328, -1.4712467193603516, -0.5245211124420166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6.1 m', [-0.07228665798902512, -1.5307025909423828, -1.3712942600250244, -1.094914436340332, -3.1853365898132324, -0.507208526134491], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9.25 feet', [-0.07228665798902512, -0.5307025909423828, -2.1847524642944336, -2.440919876098633, -0.6992614269256592, -0.51070636510849], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seven and a half cubits', [-4.072286605834961, -1.174849510192871, -0.12692804634571075, 0.0, -1.6004126071929932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9.5 feet', [-0.07228665798902512, -0.5307025909423828, -2.1847524642944336, -0.4409198760986328, -0.4712466597557068, -0.21700531244277954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9 ft 1 in', [-0.07228665798902512, -0.5307025909423828, -1.9347524642944336, -0.865378737449646, -0.7454773187637329, -1.6360093355178833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8 ft 6 in', [-0.07228665798902512, -2.530702590942383, -2.649322986602783, -0.8658711910247803, -1.4280667304992676, -0.1719117909669876], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18 feet,', [-0.07228665798902512, -2.155702590942383, -1.783719778060913, -0.5965123176574707, -2.3145194053649902, -0.04969615116715431], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9.5 feet', [-0.07228665798902512, -0.5307025909423828, -2.1847524642944336, -0.4409198760986328, -0.4712466597557068, -0.21700531244277954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '9 ft 1 in', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Six cubits and a span,'}

Key: 337522999038418189640469009530678824485
Value: {'question': '"In the Bible, for what ""price"" did Esau sell his birthright to his younger twin brother, Jacob?"', 'responses': [('A bowl of', [-0.6188465356826782, -0.5352994799613953, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A bowl of', [-0.6188465356826782, -0.5352994799613953, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A pot of', [-0.6188465356826782, -2.16029953956604, -0.28115010261535645], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A stew of', [-0.6188465356826782, -2.66029953956604, -1.5031851530075073], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A bowl of', [-0.6188465356826782, -0.5352994799613953, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A plate of', [-0.6188465356826782, -3.91029953956604, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A bowl of', [-0.6188465356826782, -0.5352994799613953, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('a bowl of', [-2.1188464164733887, -0.4051731526851654, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The blessing', [-3.2438464164733887, -2.4035415649414062, -1.1544679403305054], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('a pot of', [-2.1188464164733887, -2.2801730632781982, -0.28115010261535645], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A bowl of', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Pottage of lentils (Genesis 25:29-34)'}

Key: 104847848039824276425096391399031703872
Value: {'question': 'What bird is named for the apostle Peter?', 'responses': [('Peter bird', [-0.7431896924972534, -3.3916306495666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-0.7431896924972534, -0.26663076877593994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apostle bird', [-4.243189811706543, -2.2634010314941406], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-0.7431896924972534, -0.26663076877593994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-0.7431896924972534, -0.26663076877593994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-0.7431896924972534, -0.26663076877593994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pelican', [-3.118189811706543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-0.7431896924972534, -0.26663076877593994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peregrine', [-3.493189811706543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-0.7431896924972534, -0.26663076877593994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Peter bird', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'The petrel, from a diminutive form of Petrus, or Peter, in Latin'}

Key: 66993385727059141259201975501285124633
Value: {'question': 'Who is the only woman whose age is mentioned in the Bible?', 'responses': [('Rachel', [-3.291471004486084, -0.2829866111278534], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sarah', [-1.041471004486084, -0.2116667628288269], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rachel,', [-3.291471004486084, -1.9079866409301758], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rahab', [-4.291471004486084, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('She was', [-3.791471004486084, -0.6602619290351868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Esther', [-3.166471004486084, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Abigail', [-4.166471004486084, -0.26980265974998474], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Deborah', [-4.166471004486084, -0.11008840054273605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Naomi', [-4.416471004486084, -0.25142502784729004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miriam', [-2.791471004486084, -0.2241203933954239], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rachel', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Sarah'}

Key: 74005814613361634380303201665114635117
Value: {'question': 'What is the most common name in the Bible--shared by 32 people in the Old Testament and one in the New Testament?', 'responses': [('Samuel', [-3.0999197959899902, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Joseph', [-1.7874196767807007, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mary', [-3.4749197959899902, -0.058641258627176285], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('John', [-2.0999197959899902, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('David', [-3.1624197959899902, -0.029750416055321693], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Jacob', [-1.4749196767807007, -0.12201537191867828], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Abraham', [-2.2249197959899902, -0.029750416055321693], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Jacob (', [-1.4749196767807007, -3.1220154762268066], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Noah', [-4.53741979598999, -0.029750416055321693], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Abraham', [-2.2249197959899902, -0.029750416055321693], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Samuel', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Zechariah'}

Key: 12146232797421686173302789665794077167
Value: {'question': 'In what language was the New Testament originally written?', 'responses': [('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aramaic', [-3.1620683670043945, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Koine', [-2.4120683670043945, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Koine', [-2.4120683670043945, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [-0.16206836700439453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Greek', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'In Greek'}

Key: 292015171333082662839991725743703126216
Value: {'question': 'What was the total population of the world at the time of Christ?', 'responses': [('500', [-0.018149960786104202, -2.56461763381958, -0.3508569598197937, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2.5', [-0.018149960786104202, -0.8146176338195801, -3.2248024940490723, -1.0179555416107178], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('About 30', [-4.0181498527526855, 0.0, -1.8540339469909668, -0.34863242506980896], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('200', [-0.018149960786104202, -0.8146176338195801, -1.3498024940490723, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('230', [-0.018149960786104202, -0.8146176338195801, -2.8498024940490723, -0.6446090340614319], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('120', [-0.018149960786104202, -1.31461763381958, -2.371380090713501, -0.5715804696083069], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('277', [-0.018149960786104202, -0.8146176338195801, -2.3498024940490723, -3.7018914222717285], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('200', [-0.018149960786104202, -0.8146176338195801, -1.3498024940490723, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1 billion', [-0.018149960786104202, -1.31461763381958, -2.621380090713501, -0.11765173822641373], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('180', [-0.018149960786104202, -1.31461763381958, -2.246380090713501, -0.3687935173511505], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '500', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'About 200 million'}

Key: 101448505624018060527723288489005141638
Value: {'question': 'Who were the parents of King Solomon?', 'responses': [('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rehoboam and Rebek', [-3.7525854110717773, -0.02754512056708336, 0.0, -0.21493150293827057, -3.6900649070739746, -2.465224027633667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King David and Bathsheba', [-1.7525854110717773, 0.0, -0.12971262633800507, -0.300302118062973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.37758538126945496, -0.06993623077869415, 0.0, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'What was the maiden name of Blondie Bumstead, the comic-strip wife of hapless Dagwood Bumstead?', 'responses': [('Blondie', [-1.6674740314483643, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diamond', [-4.636223793029785, -0.03163906931877136], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doris Hope', [-2.7299740314483643, -3.0201611518859863], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dagwood', [-2.6049740314483643, -0.215639129281044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dagmar', [-2.6049740314483643, -2.215639114379883], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dagwood', [-2.6049740314483643, -0.215639129281044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bumstead', [-1.7299740314483643, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bumstead', [-1.7299740314483643, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawson', [-4.792473793029785, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daisy', [-2.8549740314483643, -1.5833309888839722], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Blondie', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Boopadoop'}

Key: 142380867537269483316262219590494673257
Value: {'question': 'What famous comic strip character was inspired by the 1936 Henry Fonda film Trail of the Lonesome Pine?', 'responses': [('Little Orphan Annie', [-1.305320143699646, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Huckleberry Hound', [-2.6178202629089355, 0.0, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andy Capp', [-1.836570143699646, -0.3660624027252197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Popeye', [-4.0553202629089355, 0.0, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pokey F', [-4.6803202629089355, -0.2748165428638458, -4.7243123054504395], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Little Ras', [-2.8053202629089355, -1.6946327686309814, -0.5637007355690002], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Woodpecker', [-3.4615702629089355, -0.15200841426849365, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dan Patch', [-3.4303202629089355, -1.2445523738861084, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sheriff Woody Wood', [-3.9615702629089355, -0.1590416431427002, -2.7528367042541504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Li'l", [-2.1178202629089355, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Little Orphan Annie', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': "Al Capp's Li'l Abner"}

Key: 99726541484321600103649435140893656675
Value: {'question': 'What was the original name of the orphan created in 1924 by cartoonist Harold Gray in the comic strip we know as Little Orphan Annie?', 'responses': [('Sandy', [-2.6829514503479004, -0.21774379909038544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4329513609409332, -0.14717994630336761], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Orphan Annie', [-1.9329513311386108, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4329513609409332, -0.14717994630336761], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Orphan Ann', [-1.9329513311386108, -2.3502066135406494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sandy', [-2.6829514503479004, -0.21774379909038544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4329513609409332, -0.14717994630336761], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4329513609409332, -0.14717994630336761], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Orphan Annie', [-1.9329513311386108, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Little Orphan', [-0.4329513609409332, -0.14717994630336761], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sandy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Otto'}

Key: 152839722919546948976103852745059232497
Value: {'question': "What was the name of Elizabeth Barrett Browning's pet golden cocker spaniel ?", 'responses': [('Browning', [-3.4284825325012207, -0.03891412541270256], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fido', [-1.6941076517105103, -0.9970036745071411], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Muffin', [-3.5222325325012207, -0.9549449682235718], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Flush', [-3.0378575325012207, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fifi', [-1.6941076517105103, -1.9970036745071411], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albus', [-4.459732532501221, -4.023879051208496], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth', [-4.053482532501221, -0.15083935856819153], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Flush', [-3.0378575325012207, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hero', [-4.444107532501221, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portia', [-4.498795032501221, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Browning', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Flush'}

Key: 177223386861074003791905051369493153848
Value: {'question': 'The title of what poetic drama by Robert Browning was used to name a Kentucky town?', 'responses': [('A Ballad of the', [-2.1064958572387695, -2.3980953693389893, 0.0, -0.2596178352832794], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('My Last Duchess', [-1.793995976448059, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'The Creation'", [-2.8564958572387695, -1.852318286895752, -3.8242650032043457, -0.13918457925319672], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('My Last Duchess', [-1.793995976448059, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('My Last Duchess', [-1.793995976448059, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A play called "', [-2.1064958572387695, -4.35122013092041, -2.4403765201568604, -1.7153898477554321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("A Shepherd's", [-2.1064958572387695, -3.4605953693389893, -0.5139828324317932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ring and The Valley', [-2.7939958572387695, -0.29012206196784973, -2.190199851989746, -1.671839952468872], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A. E.', [-2.1064958572387695, -4.27309513092041, -1.6801948547363281, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Childe Roland to', [-2.9189958572387695, 0.0, -0.9740769863128662, -0.22695089876651764], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A Ballad of the', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Pippa Passes'}

Key: 228675833131199846721054374212830680327
Value: {'question': 'What did L. Fran Baum, author of the The Wonderful Wizard of Oz, call his home in Hollywood?', 'responses': [('The Emerald City', [-0.7667031288146973, -0.580744206905365, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emerald City', [-1.7667031288146973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Emerald City', [-0.7667031288146973, -0.580744206905365, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emerald City', [-1.7667031288146973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Castle', [-0.7667031288146973, -3.9557442665100098, -0.518180787563324], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Emerald City', [-0.7667031288146973, -0.580744206905365, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baum-Castle', [-3.5167031288146973, -3.3175411224365234, -3.5691187381744385], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Munchkinland', [-4.204203128814697, 0.0, -0.20455798506736755], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emerald City', [-1.7667031288146973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Never Never Land', [-4.391703128814697, -1.550844430923462, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Emerald City', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Ozcot'}

Key: 80212411259148466639955645343916635416
Value: {'question': "What exotic city was featured in National Geographic magazine's first photo story in 1905?", 'responses': [('Tokyo', [-1.8208894729614258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-1.8208894729614258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tokyo', [-1.8208894729614258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shanghai', [-2.570889472961426, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tokyo', [-1.8208894729614258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rome', [-4.070889472961426, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.320889472961426, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tokyo', [-1.8208894729614258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tokyo', [-1.8208894729614258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tokyo', [-1.8208894729614258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tokyo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Lhasa, Tibet'}

Key: 153256292016964463443728984144206544304
Value: {'question': 'How much time did Jonah spend in the belly of the whale?', 'responses': [('3 days', [-0.1797446459531784, -0.14267508685588837, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three days,', [-1.8047446012496948, 0.0, -2.398909568786621], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.1797446459531784, -0.14267508685588837, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 Days', [-0.1797446459531784, -0.14267508685588837, -2.3502066135406494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.1797446459531784, -0.14267508685588837, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.1797446459531784, -0.14267508685588837, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.1797446459531784, -0.14267508685588837, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three days and', [-1.8047446012496948, 0.0, -1.148909568786621], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three days', [-1.8047446012496948, 0.0, -0.5239095687866211], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3 days', [-0.1797446459531784, -0.14267508685588837, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '3 days', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Three days and three nights'}

Key: 134829948687202818572589460385578331208
Value: {'question': 'For what event in February 1964 did evangelist Billy Graham break his strict rule against watching TV on Sunday?', 'responses': [('The Olympic Games', [-0.15982834994792938, -3.2222671508789062, -0.23850612342357635], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beatles Ed', [-0.15982834994792938, -1.9722670316696167, -3.106391429901123], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beatles', [-0.15982834994792938, -1.9722670316696167, -2.106391429901123], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Super Bowl', [-0.15982834994792938, -1.7222670316696167, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Super Bowl', [-0.15982834994792938, -1.7222670316696167, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('World Weightlifting', [-4.784828186035156, -4.894698143005371, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Winter Olympics', [-0.15982834994792938, -1.9722670316696167, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Super Bowl', [-0.15982834994792938, -1.7222670316696167, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Superbowl', [-0.15982834994792938, -1.7222670316696167, -1.4061501026153564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Superbowl', [-0.15982834994792938, -1.7222670316696167, -1.4061501026153564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Olympic Games', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': "The Beatles' first appearance on The Ed Sullivan Show"}

Key: 244333762587516390385450239948625689676
Value: {'question': 'How tall was Goliath, the Philistine giant slain by David with a stone hurled from a sling?', 'responses': [('9 ft', [-0.08567440509796143, -0.5458751320838928, -1.5720841884613037], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nine feet', [-4.210674285888672, -0.5479591488838196, -0.5131500363349915], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9 ft', [-0.08567440509796143, -0.5458751320838928, -1.5720841884613037], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9 feet', [-0.08567440509796143, -0.5458751320838928, -1.3220841884613037], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9ft', [-0.08567440509796143, -0.5458751320838928, -1.0720841884613037], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('13', [-0.08567440509796143, -1.920875072479248, -1.3570671081542969], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6m', [-0.08567440509796143, -1.545875072479248, -2.486872673034668], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9 feet', [-0.08567440509796143, -0.5458751320838928, -1.3220841884613037], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9ft', [-0.08567440509796143, -0.5458751320838928, -1.0720841884613037], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("9'", [-0.08567440509796143, -0.5458751320838928, -4.197084426879883], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '9 ft', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Six cubits and a span,'}

Key: 337522999038418189640469009530678824485
Value: {'question': '"In the Bible, for what ""price"" did Esau sell his birthright to his younger twin brother, Jacob?"', 'responses': [('A bowl of lentil', [-0.6065422296524048, -0.8149929046630859, 0.0, -2.118460178375244], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A dish of red', [-0.6065422296524048, -3.189992904663086, 0.0, -2.315232515335083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A bowl of soup', [-0.6065422296524048, -0.8149929046630859, 0.0, -1.7434601783752441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A piece of bread', [-0.6065422296524048, -2.564992904663086, 0.0, -1.0658929347991943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A bowl of soup', [-0.6065422296524048, -0.8149929046630859, 0.0, -1.7434601783752441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His right to be', [-2.7315421104431152, -2.145700216293335, -0.5343554019927979, -1.99513578414917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A bowl of lentils', [-0.6065422296524048, -0.8149929046630859, 0.0, -2.618460178375244], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A bowl of soup', [-0.6065422296524048, -0.8149929046630859, 0.0, -1.7434601783752441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('300', [-3.6065421104431152, -2.419696092605591, -0.6284447312355042, -1.2025799751281738], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His right eye', [-2.7315421104431152, -2.145700216293335, -3.159355401992798, -0.1371692419052124], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A bowl of lentil', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Pottage of lentils (Genesis 25:29-34)'}

Key: 104847848039824276425096391399031703872
Value: {'question': 'What bird is named for the apostle Peter?', 'responses': [("Peter'", [-1.0198822021484375, -0.2348388433456421], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter'", [-1.0198822021484375, -0.2348388433456421], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peregrine', [-3.1448822021484375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robin', [-4.1448822021484375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peregrine', [-3.1448822021484375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter’', [-1.0198822021484375, -3.2035889625549316], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rock Pigeon', [-4.6448822021484375, -0.9553802609443665], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peregrine', [-3.1448822021484375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cardinal', [-3.1448822021484375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peregrine', [-3.1448822021484375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Peter'", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456562, 'reference': 'The petrel, from a diminutive form of Petrus, or Peter, in Latin'}

Key: 66993385727059141259201975501285124633
Value: {'question': 'Who is the only woman whose age is mentioned in the Bible?', 'responses': [('Esther', [-2.735532283782959, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sarah', [-1.2980324029922485, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Bath', [-2.423032283782959, -4.12229585647583], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-2.735532283782959, -0.3771558701992035], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sarah', [-1.2980324029922485, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sarah', [-1.2980324029922485, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sarah', [-1.2980324029922485, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-2.735532283782959, -0.3771558701992035], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eve', [-2.860532283782959, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary the', [-2.735532283782959, -3.5021557807922363], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Esther', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Sarah'}

Key: 74005814613361634380303201665114635117
Value: {'question': 'What is the most common name in the Bible--shared by 32 people in the Old Testament and one in the New Testament?', 'responses': [('Jacob', [-1.058580994606018, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacob', [-1.058580994606018, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacob', [-1.058580994606018, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacob/', [-1.058580994606018, -3.167999029159546], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacob', [-1.058580994606018, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Abraham', [-2.4960808753967285, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sarah', [-3.6210808753967285, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacob', [-1.058580994606018, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacob', [-1.058580994606018, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacob', [-1.058580994606018, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jacob', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Zechariah'}

Key: 12146232797421686173302789665794077167
Value: {'question': 'In what language was the New Testament originally written?', 'responses': [('Greek', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greek', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Greek', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'In Greek'}

Key: 292015171333082662839991725743703126216
Value: {'question': 'What was the total population of the world at the time of Christ?', 'responses': [('400', [0.0, -2.6244897842407227, -0.736901044845581, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('200', [0.0, -0.8744899034500122, -1.5048201084136963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2 billion', [0.0, -0.8744899034500122, -3.2548201084136963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('250', [0.0, -0.8744899034500122, -0.8798201680183411, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('245', [0.0, -0.8744899034500122, -3.1298201084136963, -2.1176884174346924], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2 billion', [0.0, -0.8744899034500122, -3.2548201084136963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('326', [0.0, -1.4994899034500122, -2.1448006629943848, -3.4694643020629883], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('500', [0.0, -2.7494897842407227, -0.16920106112957, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('340', [0.0, -1.4994899034500122, -3.6448006629943848, -0.6286424994468689], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('200', [0.0, -0.8744899034500122, -1.5048201084136963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '400', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'About 200 million'}

Key: 101448505624018060527723288489005141638
Value: {'question': 'Who were the parents of King Solomon?', 'responses': [('David and Bathsheba', [-0.8481330275535583, -0.06196761503815651, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.8481330275535583, -0.06196761503815651, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David and Bathsheba', [-0.8481330275535583, -0.06196761503815651, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King David and Bathsheba', [-0.7856330275535583, 0.0, -0.06993623077869415, -0.300302118062973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King David and Bathsheba', [-0.7856330275535583, 0.0, -0.06993623077869415, -0.300302118062973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King David and Bathsheba', [-0.7856330275535583, 0.0, -0.06993623077869415, -0.300302118062973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King David and Queen Bathshe', [-0.7856330275535583, 0.0, -0.06993623077869415, -1.9253021478652954, -0.20843477547168732, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King David and Bathsheba', [-0.7856330275535583, 0.0, -0.06993623077869415, -0.300302118062973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King David and King Solomon', [-0.7856330275535583, 0.0, -0.06993623077869415, -2.175302028656006, -3.0818023681640625, -0.4779643416404724], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King David and Bathsheba', [-0.7856330275535583, 0.0, -0.06993623077869415, -0.300302118062973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David and Bathsheba', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'David and Bathsheba'}

Key: 222834287041971500716170819521959227536
<<<<<<< HEAD
Value: {'question': "What is the name of Dr. Seuss's egg-hatching elephant?", 'responses': [('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton the', [-0.10739942640066147, -2.4268531799316406], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gertrude Mc', [-3.1698994636535645, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.10739942640066147, -0.42685312032699585], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton H', [-0.10739942640066147, -1.5518531799316406], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': "What is the name of Dr. Seuss's egg-hatching elephant?", 'responses': [('Horton', [-0.09624317288398743, -0.4082716405391693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.09624317288398743, -0.4082716405391693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton the', [-0.09624317288398743, -2.158271551132202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton H', [-0.09624317288398743, -1.6582716703414917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sam I', [-4.096243381500244, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.09624317288398743, -0.4082716405391693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton the', [-0.09624317288398743, -2.158271551132202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.09624317288398743, -0.4082716405391693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton H', [-0.09624317288398743, -1.6582716703414917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horton', [-0.09624317288398743, -0.4082716405391693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Horton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Horton'}

Key: 161800859772386730977746924386748438294
<<<<<<< HEAD
Value: {'question': "Who was Clark Kent's high school sweetheart?", 'responses': [('Lois Lane', [-1.7270348072052002, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.19578485190868378, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lois Lane', [-1.7270348072052002, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lois Lane', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Lana Lang'}

Key: 317392834670341283338937660944642671091
Value: {'question': '"What famous book begins: ""Chug, chug, chug. Puff, puff, puff""?"', 'responses': [("Alice's Adventures in", [-3.9522287845611572, -1.2248058319091797, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"The Wind in the', [-1.9522287845611572, -0.5628894567489624, -0.3819384276866913, -0.08377019315958023, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('A Charlie Brown Christmas', [-3.7022287845611572, -3.712008476257324, 0.0, 0.0, -0.12663400173187256], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Tom Swift and His Motor', [-3.7022287845611572, -1.7906975746154785, -0.32625970244407654, -0.3127604126930237, -2.7721784114837646], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"The Cat in the', [-1.9522287845611572, -0.5628894567489624, -3.5694384574890137, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"The Wind in the', [-1.9522287845611572, -0.5628894567489624, -0.3819384276866913, -0.08377019315958023, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('A Connecticut Yankee in King', [-3.7022287845611572, -4.087008476257324, 0.0, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Wind in the Will', [-0.9522287845611572, -0.535569429397583, -0.11282224208116531, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"Huckleberry Finn"', [-1.9522287845611572, -4.062889575958252, -0.04044583439826965, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Wind in the Will', [-0.9522287845611572, -0.535569429397583, -0.11282224208116531, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Alice's Adventures in", 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'The Little Engine that Could'}

Key: 220114823797530422479613664235492973818
Value: {'question': 'To whom did Herman Melville dedicate his novel, Moby Dick?', 'responses': [('Whale hunting and', [-4.382075786590576, -3.2087841033935547, -4.418257236480713], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain Ahab', [-1.7570756673812866, -0.6853770613670349, -0.09163712710142136], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles A.', [-2.132075786590576, -1.882148265838623, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Cullen Bryant', [-3.132075786590576, -1.3773521184921265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry David Thoreau', [-3.882075786590576, -0.8190969228744507, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nathaniel Hawthorne', [-2.257075786590576, -0.0944129079580307, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nathaniel Hawthorne', [-2.257075786590576, -0.0944129079580307, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His wife,', [-2.507075786590576, -1.5022894144058228, -1.2866361141204834], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Darwin', [-2.132075786590576, -3.179023265838623, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Eliot Norton', [-2.132075786590576, -2.085273265838623, -0.31208059191703796], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Whale hunting and', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Nathanial Hawthorne'}

Key: 296061616975693079742725890138030707089
Value: {'question': '"Under what assumed name did Oscar Wilde live out the last three years of his life, in ""France?"', 'responses': [('Earl of', [-2.983105421066284, -0.14491866528987885], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Alfred Douglas', [-2.233105421066284, -0.04044583439826965], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Sebastien', [-4.170605659484863, -0.24039144814014435], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"Bo', [-2.108105421066284, -1.123537540435791], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"Se', [-2.108105421066284, -1.686037540435791], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Constance Lloyd', [-4.295605659484863, -0.1285751760005951], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Richard Wallace', [-4.108105659484863, -2.8877110481262207], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Wilson', [-4.670605659484863, -0.17469899356365204], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Robert Ross', [-2.858105421066284, -0.6866691708564758], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Earl of', [-2.983105421066284, -0.14491866528987885], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Earl of', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Sebastian Melmoth'}

Key: 82380072878334709551789764190468102902
Value: {'question': "What was Scarlett O'Hara's real first name?", 'responses': [('Nevil', [-4.758636474609375, -4.7181220054626465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.7742613554000854, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.7742613554000854, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellen', [-2.149261474609375, -0.08314927667379379], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.7742613554000854, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.7742613554000854, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.7742613554000854, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.7742613554000854, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adaline', [-4.743011474609375, -1.70316481590271], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ashley', [-3.680511474609375, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nevil', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Katie'}

Key: 31646887928656831682804429014150804823
Value: {'question': 'How many years did Robinson Crusoe spend shipwrecked on his island?', 'responses': [('28', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28 years', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('22 years', [-0.027972843497991562, 0.0, -2.17209529876709, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28 years', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28 years', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28 years', [-0.027972843497991562, 0.0, -0.29709529876708984, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('22', [-0.027972843497991562, 0.0, -2.17209529876709, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '28', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': '24'}

Key: 69166693196422708753888601844846509758
Value: {'question': '"What one word was intentionally left out of the movie version of Mario Puzo\'s novel, ""The Godfather"". even though this word was the working title of the book?"', 'responses': [('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Mafia', [-0.04991527646780014, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mafia', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mafia'}

Key: 81397792270458025916087351257338446815
Value: {'question': "In the comic strips, what was the name of Mandrake the Magician's giant partner?", 'responses': [('Topaz', [-1.7584062814712524, -1.9755301475524902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.39121881127357483, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.39121881127357483, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mandra', [-3.205672025680542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toot', [-1.7584062814712524, -3.3153738975524902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.39121881127357483, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mandra', [-3.205672025680542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.39121881127357483, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.39121881127357483, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tolly', [-1.7584062814712524, -3.0849051475524902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Topaz', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Lothar'}

Key: 94778603903644324200835741443076382878
Value: {'question': "What was the name of the pig leader in George Orwell's Animal Farm?", 'responses': [('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.10710643976926804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Napoleon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Napoleon'}

Key: 52332608898712027033396783383356001165
Value: {'question': 'Tess Trueheart is the wife of what comic strip character?', 'responses': [('Dennis the', [-1.345894694328308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tillie', [-4.095894813537598, -1.3190051317214966], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mutt', [-3.6583948135375977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis the', [-1.345894694328308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Calvin and', [-4.595894813537598, -0.27470678091049194], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dick Tracy', [-2.4708948135375977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peanuts', [-3.1583948135375977, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis the', [-1.345894694328308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis the', [-1.345894694328308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis the', [-1.345894694328308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dennis the', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Dick Tracy'}

Key: 196864679396378089813647532371966589890
Value: {'question': "In the Little Orphan Annie comic strip, what was the name of Daddy Warbucks's Giant bodyguard who wore a turban?", 'responses': [('Pancho', [-4.385646343231201, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('King Kong', [-1.7293962240219116, -2.664216995239258], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Sandy', [-3.885646343231201, -2.922823667526245], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('King Congo', [-1.7293962240219116, -4.320466995239258], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jimmy', [-4.010646343231201, -0.461306631565094], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Sandy', [-1.9168962240219116, -0.07759368419647217], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Little Orphan', [-3.229396343231201, -0.41887468099594116], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Goliath', [-4.729396343231201, -0.0980934351682663], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Mutt', [-3.823146343231201, -0.06888847053050995], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Buttons', [-3.510646343231201, -0.09092823415994644], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pancho', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Punjab'}

Key: 109960501429823556753511885200987861139
Value: {'question': "The Terror of the Monster was an early title for a best-selling novel which inspired one of the highest-grossing movies of the mid-70's. Under what name did it eventually terrify the reading and film going public?", 'responses': [('Jaws', [-0.6524600982666016, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jaws', [-0.6524600982666016, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jaws', [-0.6524600982666016], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Alien', [-3.1524600982666016], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('King Kong', [-3.1524600982666016, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Friday the', [-4.152460098266602, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jaws', [-0.6524600982666016, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jaws', [-0.6524600982666016, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Invasion of', [-4.152460098266602, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"The', [-3.5274600982666016, -1.122159481048584], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jaws', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'Jaws'}

Key: 134029215028438592027055662214418344169
Value: {'question': 'Who wrote the story upon which Alfred Hitchcock based his 1963 suspense film The Birds?', 'responses': [('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne Du Maurier', [-0.04356226325035095, -1.7014133930206299, -0.10633727163076401, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne Du Maurier', [-0.04356226325035095, -1.7014133930206299, -0.10633727163076401, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [-0.04356226325035095, -0.2014133334159851, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne Du Maurier', [-0.04356226325035095, -1.7014133930206299, -0.10633727163076401, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': "Who was Clark Kent's high school sweetheart?", 'responses': [('Lana Lang', [-0.42870065569877625, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.42870065569877625, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lois Lane', [-1.0537006855010986, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lois Lane', [-1.0537006855010986, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lois Lane', [-1.0537006855010986, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lois Lane', [-1.0537006855010986, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lois Lane', [-1.0537006855010986, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.42870065569877625, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lois Lane', [-1.0537006855010986, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lana Lang', [-0.42870065569877625, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lana Lang', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'Lana Lang'}

Key: 317392834670341283338937660944642671091
Value: {'question': '"What famous book begins: ""Chug, chug, chug. Puff, puff, puff""?"', 'responses': [('Alice in Wonderland', [-3.0745863914489746, -0.4293736219406128, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Puff the Magic Dragon', [-3.1995863914489746, -0.33932262659072876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Wind In The', [-0.5745862722396851, -0.22072526812553406, -1.9102240800857544, -0.11450104415416718], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Wind in the', [-0.5745862722396851, -0.22072526812553406, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Wind in the', [-0.5745862722396851, -0.22072526812553406, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Wind in the', [-0.5745862722396851, -0.22072526812553406, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wind in the Will', [-2.3245863914489746, -0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Puff the Magic Dragon', [-3.1995863914489746, -0.33932262659072876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alice in Wonderland', [-3.0745863914489746, -0.4293736219406128, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wind in the Will', [-2.3245863914489746, -0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alice in Wonderland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9502705392332347, 'reference': 'The Little Engine that Could'}

Key: 220114823797530422479613664235492973818
Value: {'question': 'To whom did Herman Melville dedicate his novel, Moby Dick?', 'responses': [('Captain Ahab', [-1.6299961805343628, -0.4361906051635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thomas Carlyle', [-3.3799962997436523, -1.0121030807495117, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ralph Waldo Emerson', [-4.067496299743652, -0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His brother', [-1.8799961805343628, -2.864130973815918, -0.41367700695991516], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain George Pollard', [-1.6299961805343628, -4.029940605163574, -0.3964616656303406], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Captain A', [-2.8174962997436523, -3.959080696105957, -0.960530161857605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John G.', [-2.8799962997436523, -2.1687111854553223, -0.799299418926239], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain Ahab', [-1.6299961805343628, -0.4361906051635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nathaniel Hawthorne', [-2.3799962997436523, -0.05832047387957573, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain Marryat', [-1.6299961805343628, -4.154940605163574, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Captain Ahab', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Nathanial Hawthorne'}

Key: 296061616975693079742725890138030707089
Value: {'question': '"Under what assumed name did Oscar Wilde live out the last three years of his life, in ""France?"', 'responses': [('Charles', [-2.134129047393799, -2.599646806716919], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Merlin Lloyd', [-3.134129047393799, -3.3038625717163086], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lord Alfred', [-2.759129047393799, -0.37538641691207886], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Robert', [-2.134129047393799, -3.146521806716919], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alroy', [-3.509129047393799, -0.37961864471435547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sebastien', [-3.759129047393799, -0.10633727163076401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alfred Douglas', [-1.6341289281845093, -0.0914585068821907], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alfred Douglas', [-1.6341289281845093, -0.0914585068821907], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lord Alfred', [-2.759129047393799, -0.37538641691207886], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alfred Douglas', [-1.6341289281845093, -0.0914585068821907], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charles', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Sebastian Melmoth'}

Key: 82380072878334709551789764190468102902
Value: {'question': "What was Scarlett O'Hara's real first name?", 'responses': [('Melanie', [-0.4240320026874542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.4240320026874542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.4240320026874542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.4240320026874542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lavonia', [-4.252157211303711, -2.511321544647217], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.4240320026874542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.4240320026874542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellen', [-2.205281972885132, -0.04044583439826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ellen', [-2.205281972885132, -0.04044583439826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melanie', [-0.4240320026874542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Melanie', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'Katie'}

Key: 31646887928656831682804429014150804823
Value: {'question': 'How many years did Robinson Crusoe spend shipwrecked on his island?', 'responses': [('22 years', [0.0, 0.0, -1.4545574188232422, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28 years', [0.0, 0.0, -0.892057478427887, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('22 years', [0.0, 0.0, -1.4545574188232422, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28 years', [0.0, 0.0, -0.892057478427887, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20', [0.0, 0.0, -2.079557418823242, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('22', [0.0, 0.0, -1.4545574188232422, -1.5019290447235107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('24', [0.0, 0.0, -1.8295574188232422, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('28 years', [0.0, 0.0, -0.892057478427887, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20 years', [0.0, 0.0, -2.079557418823242, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('22', [0.0, 0.0, -1.4545574188232422, -1.5019290447235107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '22 years', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456562, 'reference': '24'}

Key: 69166693196422708753888601844846509758
Value: {'question': '"What one word was intentionally left out of the movie version of Mario Puzo\'s novel, ""The Godfather"". even though this word was the working title of the book?"', 'responses': [('the', [-3.361016273498535, -0.5103172659873962], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Father', [-1.6110162734985352, -4.000402450561523], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("'the", [-2.611016273498535, -2.8223037719726562], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('I', [-4.486016273498535, -0.4284699261188507], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The', [-1.9860162734985352, -0.3665822446346283], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('the word', [-3.361016273498535, -2.010317325592041], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Family', [-2.986016273498535, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Corle', [-3.111016273498535, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Family', [-2.986016273498535, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"I', [-1.6110162734985352, -3.3754024505615234], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'the', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': 'Mafia'}

Key: 81397792270458025916087351257338446815
Value: {'question': "In the comic strips, what was the name of Mandrake the Magician's giant partner?", 'responses': [('Lothar', [-0.27071598172187805, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Topper', [-1.4894659519195557, -1.9583947658538818], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.27071598172187805, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.27071598172187805, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toth', [-1.4894659519195557, -0.5433557629585266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.27071598172187805, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.27071598172187805, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.27071598172187805, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.27071598172187805, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lothar', [-0.27071598172187805, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lothar', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Lothar'}

Key: 94778603903644324200835741443076382878
Value: {'question': "What was the name of the pig leader in George Orwell's Animal Farm?", 'responses': [('Napoleon', [-0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snowball', [-1.9118670225143433, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon', [-0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Napoleon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Napoleon'}

Key: 52332608898712027033396783383356001165
Value: {'question': 'Tess Trueheart is the wife of what comic strip character?', 'responses': [('Beetle Bailey', [-2.2514290809631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis the', [-1.3764290809631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dan Dare', [-5.001429080963135, -1.610672116279602], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beetle Bailey', [-2.2514290809631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Popeye', [-2.5639290809631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dick Tracy', [-2.2514290809631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beetle Bailey', [-2.2514290809631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Krazy', [-3.1889290809631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heathcliff', [-3.6889290809631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peanuts', [-3.2514290809631348, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Beetle Bailey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Dick Tracy'}

Key: 196864679396378089813647532371966589890
Value: {'question': "In the Little Orphan Annie comic strip, what was the name of Daddy Warbucks's Giant bodyguard who wore a turban?", 'responses': [('Jook', [-4.831661701202393, -3.455995559692383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sandy', [-1.0347868204116821, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sandy', [-1.0347868204116821, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill', [-2.5191617012023926, -0.2786785662174225], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sabina', [-4.616817951202393, -0.03163906931877136], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sandy', [-1.0347868204116821, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sandy', [-1.0347868204116821, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andy Panda', [-4.702755451202393, -2.8774359226226807], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rooster', [-4.214474201202393, -0.0857248455286026], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill', [-2.5191617012023926, -0.2786785662174225], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jook', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Punjab'}

Key: 109960501429823556753511885200987861139
Value: {'question': "The Terror of the Monster was an early title for a best-selling novel which inspired one of the highest-grossing movies of the mid-70's. Under what name did it eventually terrify the reading and film going public?", 'responses': [('Psycho', [-4.008313179016113, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Jaws', [-0.8833131790161133, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Dr.', [-3.2583131790161133, -0.8260359764099121], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Exor', [-1.8833131790161133, -0.41524994373321533], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Jaws', [-0.8833131790161133, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Exor', [-1.8833131790161133, -0.41524994373321533], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The Amity', [-1.8833131790161133, -2.165249824523926], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Jaws', [-0.8833131790161133, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Jaws', [-0.8833131790161133, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Dracula', [-2.6333131790161133, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Psycho', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Jaws'}

Key: 134029215028438592027055662214418344169
Value: {'question': 'Who wrote the story upon which Alfred Hitchcock based his 1963 suspense film The Birds?', 'responses': [('Daphne du Maurier', [0.0, -0.22541262209415436, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne Du Maurier', [0.0, -1.6004126071929932, -0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [0.0, -0.22541262209415436, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [0.0, -0.22541262209415436, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne Du Maurier', [0.0, -1.6004126071929932, -0.10020658373832703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [0.0, -0.22541262209415436, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [0.0, -0.22541262209415436, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [0.0, -0.22541262209415436, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [0.0, -0.22541262209415436, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daphne du Maurier', [0.0, -0.22541262209415436, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Daphne du Maurier', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Daphne du Maurier, best known for Rebecca'}

Key: 11110009608968042593656899603872158858
<<<<<<< HEAD
Value: {'question': 'Who was British Prime Minister when World War II broke out?', 'responses': [('Neville Chamberlain', [-0.9422181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.9422181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-0.8172181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chamberlain', [-2.192218065261841, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.9422181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-0.8172181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.9422181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-0.8172181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-0.8172181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.9422181248664856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Who was British Prime Minister when World War II broke out?', 'responses': [('Neville Chamberlain', [-0.356228768825531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.356228768825531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-1.3562288284301758, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-1.3562288284301758, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.356228768825531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-1.3562288284301758, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-1.3562288284301758, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.356228768825531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.356228768825531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-0.356228768825531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Neville Chamberlain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'Neville Chamberlain'}

Key: 77506916900047788238958554595438049547
<<<<<<< HEAD
Value: {'question': 'How was Oflag IVC prison camp better known?', 'responses': [('Stalag Luft', [-0.6263195276260376, 0.0, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.6263195276260376, 0.0, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('It was better', [-3.376319408416748, -0.07946817576885223, -1.7938987016677856], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.6263195276260376, 0.0, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.6263195276260376, 0.0, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dachau', [-3.251319408416748, 0.0, -0.11407091468572617], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag IV', [-0.6263195276260376, 0.0, -2.7870278358459473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.6263195276260376, 0.0, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Stalag', [-2.501319408416748, -1.448448896408081, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.6263195276260376, 0.0, -0.41202786564826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Stalag Luft', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452238, 'reference': 'Colditz'}

Key: 252669435748910899623263754414312690896
Value: {'question': 'Who succeeded Theodore Roosevelt as President?', 'responses': [('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Taft', [0.0, -1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'How was Oflag IVC prison camp better known?', 'responses': [('Stalag Luft', [-0.461855947971344, 0.0, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dulag', [-3.836855888366699, -1.7014133930206299, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.461855947971344, 0.0, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Stalag', [-2.461855888366699, -1.368793249130249, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.461855947971344, 0.0, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prisoner Of War', [-4.836855888366699, -2.0176751613616943, -0.052232854068279266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colditz', [-1.9618558883666992, 0.0, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colditz', [-1.9618558883666992, 0.0, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stalag Luft', [-0.461855947971344, 0.0, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('HMP P', [-4.524355888366699, -3.011894464492798, -4.0346832275390625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Stalag Luft', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Colditz'}

Key: 252669435748910899623263754414312690896
Value: {'question': 'Who succeeded Theodore Roosevelt as President?', 'responses': [('William Howard Taft', [0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Taft', [0.0, -1.8047446012496948, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Taft', [0.0, -1.8047446012496948, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'William Howard Taft', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'William Howard Taft'}

Key: 17045368034541867220548974201820633708
<<<<<<< HEAD
Value: {'question': 'To whom did the Bee Gees pay tribute in Tapestry Revisited?', 'responses': [('The Bee Gees', [-1.943684697151184, -1.4766011238098145, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beatles', [-1.943684697151184, -0.6016011834144592, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Wonder', [-3.9436845779418945, 0.0, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-2.9436845779418945, 0.0, -0.10545314848423004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Harrison', [-3.5686845779418945, -0.3173660337924957, -0.11985692381858826], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carole King', [-1.693684697151184, 0.0, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burt Bacharach', [-3.8186845779418945, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Lennon', [-3.5686845779418945, -0.10020658373832703, -0.1841067522764206], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [-3.9436845779418945, 0.0, -0.15497621893882751], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ABBA', [-4.1936845779418945, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Bee Gees', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Carole King'}

Key: 167200520357687557394268844053969708623
Value: {'question': 'Who was born first, James Caan or Michael Douglas?', 'responses': [('Michael Douglas', [-1.63677179813385, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7617717981338501, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7617717981338501, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7617717981338501, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Douglas', [-1.63677179813385, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7617717981338501, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7617717981338501, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas', [-2.1367716789245605, -0.1100882962346077], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Douglas', [-1.63677179813385, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7617717981338501, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michael Douglas', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'James Caan'}
=======
Value: {'question': 'To whom did the Bee Gees pay tribute in Tapestry Revisited?', 'responses': [('Carole King', [-2.64546537399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burt Bach', [-2.77046537399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shirley Bas', [-4.33296537399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carole King', [-2.64546537399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen', [-3.89546537399292, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobbie', [-4.64546537399292, -0.759172260761261], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beatles', [-1.7704654932022095, -0.2966352701187134], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen', [-3.89546537399292, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dusty Springfield', [-3.08296537399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dusty Springfield', [-3.08296537399292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Carole King', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Carole King'}

Key: 167200520357687557394268844053969708623
Value: {'question': 'Who was born first, James Caan or Michael Douglas?', 'responses': [('Caan', [-1.7921440601348877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7921440005302429, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7921440005302429, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Caan', [-1.7921440601348877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7921440005302429, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7921440005302429, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7921440005302429, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Caan', [-1.7921440601348877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Ca', [-0.7921440005302429, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas', [-1.7921440601348877, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Caan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'James Caan'}
>>>>>>> 811d839 (new run)

Key: 90647169565663770435649390074455838336
Value: {'question': 'In which country is the deepwater ort of Brindisi?', 'responses': [('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Italy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Italy'}

Key: 214171447194455008324172539811036652175
<<<<<<< HEAD
Value: {'question': 'The word anchorman was credited by Sig Michelson about which CBS News Legend?', 'responses': [('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-0.1685219258069992, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'The word anchorman was credited by Sig Michelson about which CBS News Legend?', 'responses': [('Walter Cronkite', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Walter Cronkite', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Walter Cronkite'}

Key: 144446484166853296547792704745560379337
Value: {'question': 'Who wrote The Picture Of Dorian Gray?', 'responses': [('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oscar Wilde', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Oscar Wilde'}

Key: 322903503459104039778253693027568287887
<<<<<<< HEAD
Value: {'question': 'Who sang the title song for the Bond film You Only Live Twice?', 'responses': [('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08486884832382202, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nancy Sinatra', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Nancy Sinatra'}

Key: 72110887102142614205440589573441924887
Value: {'question': 'Who had a big 90s No 1 with This Is How We Do It?', 'responses': [('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Who sang the title song for the Bond film You Only Live Twice?', 'responses': [('Nancy Sinatra', [-0.08631781488656998, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08631781488656998, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08631781488656998, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08631781488656998, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08631781488656998, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shirley Bassey', [-2.492567777633667, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08631781488656998, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08631781488656998, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08631781488656998, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Sinatra', [-0.08631781488656998, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nancy Sinatra', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Nancy Sinatra'}

Key: 72110887102142614205440589573441924887
Value: {'question': 'Who had a big 90s No 1 with This Is How We Do It?', 'responses': [('Montell Jordan', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montell Jordan', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Montell Jordan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Montell Jordan'}

Key: 296872415682283940678852136686230882255
<<<<<<< HEAD
Value: {'question': 'Which national park, famous for aboriginal rock paintings, is near Darwin?', 'responses': [('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu National', [-0.3132617473602295, 0.0, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.3132617473602295, 0.0, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kakadu', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Kakadu National Park'}

Key: 104146792580125066021016972289598001726
Value: {'question': "In TV's All In The Family what was Mike and Gloria's son called?", 'responses': [('Tommy', [-2.009087085723877, -0.05782408267259598], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joey', [-4.009087085723877, -0.02630021423101425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Boy', [-3.134087085723877, -3.4492709636688232], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie', [-1.634087085723877, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Midge', [-3.821587085723877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joey', [-4.009087085723877, -0.02630021423101425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eugene', [-4.509087085723877, -0.22903569042682648], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie', [-1.634087085723877, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tommy', [-2.009087085723877, -0.05782408267259598], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buster', [-3.634087085723877, -0.07045131176710129], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tommy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Joey'}

Key: 88429078320492598381044410827950508049
Value: {'question': 'Who sang with Crosby, Stills and Young?', 'responses': [('David Crosby', [-1.2710018157958984, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Nash', [-1.5210018157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Nash', [-1.5210018157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stephen Stills', [-2.0522518157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Crosby', [-1.2710018157958984, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Nash', [-1.5210018157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neil Young', [-1.2085018157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stephen Stills', [-2.0522518157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Nash', [-1.5210018157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neil Young', [-1.2085018157958984, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Crosby', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3321790402101223, 'reference': 'Graham Nash'}

Key: 85286463986533970642614509758082100138
Value: {'question': 'In which John Logie Baird invent television?', 'responses': [('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-1.6402604579925537, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-1.6402604579925537, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.6402605175971985, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': '1920s'}

Key: 88958774668608811073473067547267050289
Value: {'question': 'Who sang the title song for the Bond film License To Kill?', 'responses': [('Gladys Knight', [-0.574975848197937, 0.0, -0.5998064875602722], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight &', [-0.574975848197937, 0.0, -1.849806547164917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight', [-0.574975848197937, 0.0, -0.5998064875602722], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight', [-0.574975848197937, 0.0, -0.5998064875602722], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Jones', [-4.324975967407227, 0.0, -0.11363581568002701], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shirley Bassey', [-4.074975967407227, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight and', [-0.574975848197937, 0.0, -1.224806547164917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight', [-0.574975848197937, 0.0, -0.5998064875602722], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-4.340600967407227, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight and', [-0.574975848197937, 0.0, -1.224806547164917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gladys Knight', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Gladys Knight'}

Key: 59693379031259720215479941060194179579
Value: {'question': 'Black or White came from which Michael Jackson album?', 'responses': [('Off The', [-2.0134270191192627, -1.094851016998291], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dangerous', [-2.8884270191192627, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.6384270787239075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bad', [-1.2634270191192627, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.6384270787239075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.6384270787239075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.6384270787239075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.6384270787239075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.6384270787239075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bad', [-1.2634270191192627, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Off The', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Dangerous'}

Key: 311962492123096900289948659360878686863
Value: {'question': 'On a computer keyboard, which letter is between G ad J?', 'responses': [('Q', [-2.8867299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('D', [-4.449230194091797, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('G', [-3.5117299556732178, -0.08675938844680786], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-1.1367299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-1.1367299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-1.1367299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('i', [-3.5117299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-1.1367299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('K', [-1.6367299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('H', [-1.7617299556732178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Q', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'H'}

Key: 69173108873872114886616497958100476857
Value: {'question': 'In which town or city was General Motors founded?', 'responses': [('Detroit', [-0.1902991682291031, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit,', [-0.1902991682291031, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit,', [-0.1902991682291031, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.1902991682291031, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit,', [-0.1902991682291031, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.1902991682291031, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit,', [-0.1902991682291031, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.1902991682291031, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit,', [-0.1902991682291031, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Flint,', [-1.752799153327942, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Detroit', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Flint, Michigan'}

Key: 121033822342009854936179535069547388125
Value: {'question': 'In which country was the Russian Revolutionary Leon Trotsky murdered?', 'responses': [('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which national park, famous for aboriginal rock paintings, is near Darwin?', 'responses': [('Kakadu', [-0.08377019315958023, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.08377019315958023, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.08377019315958023, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu National', [-0.08377019315958023, 0.0, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.08377019315958023, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.08377019315958023, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uluru', [-2.521270275115967, 0.0, -0.3338621258735657], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.08377019315958023, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.08377019315958023, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kakadu', [-0.08377019315958023, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kakadu', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Kakadu National Park'}

Key: 104146792580125066021016972289598001726
Value: {'question': "In TV's All In The Family what was Mike and Gloria's son called?", 'responses': [('Tommy', [-2.0687077045440674, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meathead', [-3.1624577045440674, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tommy', [-2.0687077045440674, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie', [-1.1937077045440674, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edith', [-3.3812077045440674, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie', [-1.1937077045440674, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie Bunker', [-1.1937077045440674, -1.4061501026153564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie', [-1.1937077045440674, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie', [-1.1937077045440674, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archie', [-1.1937077045440674, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tommy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Joey'}

Key: 88429078320492598381044410827950508049
Value: {'question': 'Who sang with Crosby, Stills and Young?', 'responses': [('David Crosby', [-1.572326898574829, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Nash', [-1.041076898574829, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stephen Stills', [-2.228576898574829, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Nash', [-1.041076898574829, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neil Young', [-1.103576898574829, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Nash', [-1.041076898574829, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neil Young', [-1.103576898574829, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neil Young', [-1.103576898574829, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stephen Stills', [-2.228576898574829, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neil Young', [-1.103576898574829, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Crosby', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336676, 'reference': 'Graham Nash'}

Key: 85286463986533970642614509758082100138
Value: {'question': 'In which John Logie Baird invent television?', 'responses': [('Glasgow', [-3.8807244300842285, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-1.5057244300842285, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('UK', [-2.8807244300842285, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Britain', [-3.3807244300842285, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.5057243704795837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-1.5057244300842285, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.5057243704795837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.5057243704795837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.5057243704795837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United Kingdom', [-3.1307244300842285, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Glasgow', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': '1920s'}

Key: 88958774668608811073473067547267050289
Value: {'question': 'Who sang the title song for the Bond film License To Kill?', 'responses': [('Gladys Knight and', [-0.42343607544898987, 0.0, -1.158132791519165], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sheryl Crow', [-2.751561164855957, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sheryl Crow', [-2.751561164855957, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight and', [-0.42343607544898987, 0.0, -1.158132791519165], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sheryl Crow', [-2.751561164855957, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight', [-0.42343607544898987, 0.0, -0.658132791519165], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight', [-0.42343607544898987, 0.0, -0.658132791519165], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tina Turner', [-1.8296860456466675, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tina Turner', [-1.8296860456466675, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys Knight', [-0.42343607544898987, 0.0, -0.658132791519165], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gladys Knight and', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Gladys Knight'}

Key: 59693379031259720215479941060194179579
Value: {'question': 'Black or White came from which Michael Jackson album?', 'responses': [('Dangerous', [-1.6892608404159546, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.8142608404159546, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bad', [-1.1892608404159546, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.8142608404159546, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.8142608404159546, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bad', [-1.1892608404159546, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bad', [-1.1892608404159546, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bad', [-1.1892608404159546, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bad', [-1.1892608404159546, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-0.8142608404159546, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dangerous', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Dangerous'}

Key: 311962492123096900289948659360878686863
Value: {'question': 'On a computer keyboard, which letter is between G ad J?', 'responses': [('H', [-1.792809009552002, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Z', [-4.230309009552002, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('i', [-3.542809009552002, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-0.9178090691566467, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-0.9178090691566467, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('E', [-3.917809009552002, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-0.9178090691566467, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-0.9178090691566467, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('F', [-3.667809009552002, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I', [-0.9178090691566467, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'H', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'H'}

Key: 69173108873872114886616497958100476857
Value: {'question': 'In which town or city was General Motors founded?', 'responses': [('Detroit,', [-0.05488219112157822, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.05488219112157822, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.05488219112157822, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.05488219112157822, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.05488219112157822, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.05488219112157822, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.05488219112157822, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.05488219112157822, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.05488219112157822, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Detroit', [-0.05488219112157822, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Detroit,', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Flint, Michigan'}

Key: 121033822342009854936179535069547388125
Value: {'question': 'In which country was the Russian Revolutionary Leon Trotsky murdered?', 'responses': [('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mexico', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mexico'}

Key: 261947350263286873709591640621320515056
<<<<<<< HEAD
Value: {'question': 'Which duo had a 60s No 1 with A World Without Love?', 'responses': [('Engelbert Hum', [-3.2305688858032227, 0.0, -0.21142719686031342], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Shapiro and', [-4.605568885803223, -0.5231232643127441, -0.4212830364704132], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Englebert Hum', [-4.730568885803223, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Englebert Hum', [-4.730568885803223, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Tops', [-0.8555688858032227, -3.524545192718506, -0.7763983607292175], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Brotherhood of', [-0.8555688858032227, -3.774545192718506, -1.066418170928955], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Anka', [-3.7305688858032227, -1.2353907823562622, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Bee Gees', [-4.418068885803223, -3.984118938446045, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Move', [-0.8555688858032227, -4.712045192718506, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brotherhood Of Man', [-4.605568885803223, -1.6506099700927734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Engelbert Hum', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Peter & Gordon'}
=======
Value: {'question': 'Which duo had a 60s No 1 with A World Without Love?', 'responses': [('Lulu & Dave', [-3.3292765617370605, -1.4061501026153564, -3.4754910469055176], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Petula Clark', [-3.3292765617370605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tony Christie &', [-4.0792765617370605, -1.2437189817428589, -1.5034279823303223], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billy J Kramer', [-4.5167765617370605, -0.15121398866176605, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cliff Richard and', [-3.9542765617370605, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Scaffold', [-0.8292766809463501, -2.601558208465576, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.8292766809463501, -3.476558208465576, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Honeydri', [-0.8292766809463501, -3.976558208465576, -3.056030750274658], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Treme', [-0.8292766809463501, -2.476558208465576, -0.4073510468006134], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New Seek', [-0.8292766809463501, -3.476558208465576, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lulu & Dave', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Peter & Gordon'}
>>>>>>> 811d839 (new run)

Key: 288135975970724884702204693024559148054
Value: {'question': 'In which US state was Tennessee Williams born?', 'responses': [('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mississippi', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mississippi'}

Key: 195664885257877191041129408973687882665
<<<<<<< HEAD
Value: {'question': 'Who was Israeli Prime Minister from 1969 to 1974?', 'responses': [('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Levi Eshkol', [-2.7462046146392822, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.1212046816945076, 0.0, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Golda Meir', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Golda Meir'}

Key: 174558705266526467237165414233895069150
Value: {'question': 'Bob Gaudio and Nick Massi sang with which group?', 'responses': [('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four Seasons', [-2.459395170211792, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Four Seasons', [-3.021895170211792, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Four Seasons', [-3.021895170211792, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.33439522981643677, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Who was Israeli Prime Minister from 1969 to 1974?', 'responses': [('Golda Meir', [-0.18179376423358917, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.18179376423358917, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.18179376423358917, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.18179376423358917, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Ben-Gurion', [-2.869293689727783, 0.0, -0.4740769863128662, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.18179376423358917, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Levi Eshkol', [-2.619293689727783, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.18179376423358917, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golda Meir', [-0.18179376423358917, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yitzhak Rabin', [-3.306793689727783, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Golda Meir', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Golda Meir'}

Key: 174558705266526467237165414233895069150
Value: {'question': 'Bob Gaudio and Nick Massi sang with which group?', 'responses': [('The Four Seasons', [-0.0944129079580307, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.0944129079580307, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.0944129079580307, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.0944129079580307, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.0944129079580307, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.0944129079580307, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.0944129079580307, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.0944129079580307, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.0944129079580307, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Seasons', [-0.0944129079580307, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Four Seasons', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'The Four Seasons'}

Key: 14889918131517653356417178535904509760
<<<<<<< HEAD
Value: {'question': 'In which country was Angelica Huston born?', 'responses': [('England', [-1.6450181007385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United Kingdom', [-2.2700181007385254, -1.5755484104156494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the UK', [-4.645018100738525, -2.0641555786132812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-3.5200181007385254, -0.3260742127895355], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trinidad and', [-4.645018100738525, -1.2716550827026367], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-1.7700181007385254, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-3.5200181007385254, -0.3260742127895355], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.6450181007385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the US', [-4.645018100738525, -1.6891554594039917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-2.7700181007385254, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'England', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Ireland'}

Key: 187806677267255526399494688412642008595
Value: {'question': "What were the first two names of 'Cannonball' Adderley?", 'responses': [('Lee and', [-4.776598930358887, -0.25119414925575256], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Francis', [-4.526598930358887, -3.9955012798309326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Earl', [-4.401598930358887, -4.003195762634277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-2.526599168777466, -3.818910598754883], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cannonball', [-1.6515991687774658, -0.3320505917072296], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julian Thomas', [-4.026598930358887, -5.061135768890381], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elmore', [-4.526598930358887, -1.8651248216629028], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John and', [-2.526599168777466, -0.5689107179641724], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Adder', [-2.526599168777466, -2.818910598754883], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James A', [-3.276599168777466, -5.0731377601623535], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lee and', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Julian Edwin'}

Key: 111331075781019898258115626082852126745
Value: {'question': 'Carrasco international airport is in which country?', 'responses': [('South Africa', [-4.330636024475098, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-2.3306360244750977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.8306360244750977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cuba', [-4.580636024475098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Panama', [-3.4556360244750977, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Costa Rica', [-3.0806360244750977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-2.8306360244750977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-2.0806360244750977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [-1.9556360244750977, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paraguay', [-3.0806360244750977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'South Africa', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Uruguay'}

Key: 146309341802822935535420821108889041446
Value: {'question': 'Which record company signed Fabian?', 'responses': [('ABC Records', [-3.1027300357818604, -1.0654112100601196], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Motown', [-4.102729797363281, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mercury', [-2.6027300357818604, -0.7246109247207642], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('RCA Victor', [-2.6027300357818604, -1.1893994808197021], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ABC-', [-3.1027300357818604, -1.1904112100601196], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('MGM Records', [-2.4777300357818604, -1.1590973138809204], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dot Records', [-3.9152300357818604, -0.29943081736564636], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chess Records', [-4.477729797363281, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mercury', [-2.6027300357818604, -0.7246109247207642], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ABC-', [-3.1027300357818604, -1.1904112100601196], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'ABC Records', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Chancellor'}

Key: 299840508447821089855369866240440724753
Value: {'question': 'Ron Bower and John Williams set a speed record for going round the world in a what?', 'responses': [('sail boat', [-4.431931972503662, -0.4647253155708313], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hot air', [-1.8069320917129517, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('plane', [-3.806931972503662, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Piper Cherokee', [-4.306931972503662, -1.5806790590286255], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hot air', [-1.8069320917129517, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hot air', [-1.8069320917129517, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jetboat', [-3.056931972503662, -4.000893592834473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Power Boat', [-4.056931972503662, -1.5034279823303223], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Motorboat', [-4.306931972503662, -0.8902251720428467], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yacht', [-4.806931972503662, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'sail boat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Helicopter'}

Key: 6285281377900569448923298952423180194
Value: {'question': 'What was the profession of New Yorker Garry Winogrand?', 'responses': [('photographer', [-2.3687736988067627, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photojournalist', [-1.7437736988067627, -0.1887570172548294], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photojournalist', [-1.7437736988067627, -0.1887570172548294], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.4937736988067627, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'photographer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Photographer'}

Key: 77865379524049111309272063660799097961
Value: {'question': 'Amelia Earhart was born in which state?', 'responses': [('Kansas', [-0.39752861857414246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-1.3037786483764648, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-0.39752861857414246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-0.39752861857414246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-0.39752861857414246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-0.39752861857414246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-0.39752861857414246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-1.3037786483764648, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-1.3037786483764648, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-1.3037786483764648, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kansas', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'Kansas'}

Key: 6469076388733372854115999629787206983
Value: {'question': "Who was Theodore Roosevelt's Vice President between 1901 and 1905?", 'responses': [('William Seymour', [-1.6951801776885986, -4.4089555740356445], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas Marshall', [-1.3826801776885986, -1.0917744636535645, -0.06196761503815651], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('<b>Calvin', [-3.8826801776885986, -2.5733561515808105, -3.6499595642089844], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('_________________', [-3.8826801776885986, -3.8233561515808105, -2.312124252319336], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('<em>Sherman', [-3.8826801776885986, -3.5733561515808105, -4.359595775604248], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas R.', [-1.3826801776885986, -1.6542744636535645, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Charles W.', [-1.9451801776885986, -0.7795053720474243, -0.12692804634571075], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Theodore Roosevelt', [-2.1951801776885986, -0.07119707018136978, -0.31011149287223816], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas Woodrow Wilson', [-1.3826801776885986, -3.0292744636535645, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('William J.', [-1.6951801776885986, -2.7214558124542236, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'William Seymour', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'No one'}

Key: 262307002069435293253338666165237699635
Value: {'question': "What was Phil Collins' last UK No 1 of the 80s?", 'responses': [("I Don'", [-2.69279146194458, -1.9137909412384033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Easy Lover', [-3.88029146194458, 0.0, -0.5252095460891724], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Two Hearts', [-2.06779146194458, -0.16598081588745117, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('One More Night', [-1.94279146194458, -0.14688695967197418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Another Day In', [-1.44279146194458, -0.07655314356088638, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Another Day in', [-1.44279146194458, -0.07655314356088638, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Another Day in', [-1.44279146194458, -0.07655314356088638, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Against All Odds', [-2.19279146194458, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Easy Lover', [-3.88029146194458, 0.0, -0.5252095460891724], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Separate Lives', [-3.69279146194458, 0.0, -0.3071153461933136], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "I Don'", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Another Day in Paradise'}

Key: 154998781240909760849730960724170257860
Value: {'question': "What was Al Pacino's first movie?", 'responses': [('The Panic In Needle Park', [-0.572761058807373, 0.0, -1.2905125617980957, -0.3049527704715729, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Panic in Needle Park', [-0.572761058807373, 0.0, -0.3217625319957733, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Me, My Girl and', [-2.916511058807373, -0.6324240565299988, -3.2447290420532227, -2.7525181770324707, -1.1105895042419434], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Panic in Needle Park', [-0.572761058807373, 0.0, -0.3217625319957733, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('They Shoot Horses, Don', [-4.850104808807373, 0.0, -0.21918417513370514, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), (': The Panic in Needle', [-3.971198558807373, -1.5082571506500244, -0.02185230888426304, -0.266189843416214, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Panic in the Streets', [-2.650886058807373, -0.6325989961624146, -0.905794620513916, -0.37224605679512024, -0.2948471009731293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Me, Myself and Irene', [-2.916511058807373, -0.6324240565299988, -1.057228922843933, -0.7047756314277649, -0.29683318734169006], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dir. John Cassav', [-4.857917308807373, -1.1489812135696411, -3.5017194747924805, -0.3419649302959442, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Panic In Needle Park', [-0.572761058807373, 0.0, -1.2905125617980957, -0.3049527704715729, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Panic In Needle Park', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Me Natalie'}
=======
Value: {'question': 'In which country was Angelica Huston born?', 'responses': [('Ireland', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ireland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Ireland'}

Key: 187806677267255526399494688412642008595
Value: {'question': "What were the first two names of 'Cannonball' Adderley?", 'responses': [('William Cannon and Lee', [-3.272756338119507, -1.8404353857040405, -0.29391103982925415, -4.243610382080078], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John and Walter', [-1.2727563381195068, -0.4001926779747009, -3.342585802078247, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Oliver and Charles', [-2.897756338119507, -4.426359176635742, -0.4481636881828308, -3.0055136680603027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eugene Louis and Henry', [-3.897756338119507, -3.7604355812072754, -0.3488644063472748, -4.45889949798584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Adderley and', [-2.897756338119507, -3.301358938217163, 0.0, -0.22777330875396729], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack and William', [-3.272756338119507, -0.23707376420497894, -3.742311716079712, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William and Eugene', [-3.272756338119507, -0.5904353857040405, -3.7577688694000244, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack and Louis', [-3.272756338119507, -0.23707376420497894, -4.179811477661133, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eugene and Charles Adder', [-3.897756338119507, -0.2604355812072754, -2.8369288444519043, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alphonso and', [-4.022756576538086, -1.7304145097732544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'William Cannon and Lee', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Julian Edwin'}

Key: 111331075781019898258115626082852126745
Value: {'question': 'Carrasco international airport is in which country?', 'responses': [('Brazil', [-2.495586395263672, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ecuador', [-3.745586395263672, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uruguay', [-1.3705863952636719, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.8705863952636719, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-3.120586395263672, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [-2.870586395263672, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uruguay', [-1.3705863952636719, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [-3.495586395263672, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uruguay', [-1.3705863952636719, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uruguay', [-1.3705863952636719, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Brazil', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Uruguay'}

Key: 146309341802822935535420821108889041446
Value: {'question': 'Which record company signed Fabian?', 'responses': [('Motown', [-3.1060523986816406, 0.0, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('RCA Records', [-2.3560523986816406, -2.019347906112671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('RCA Victor', [-2.3560523986816406, -1.644347906112671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United Artists Records', [-3.2310523986816406, 0.0, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Decca', [-2.1060523986816406, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liberty Records', [-3.9810523986816406, -1.1368709802627563, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('RCA Victor', [-2.3560523986816406, -1.644347906112671, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polydor', [-3.1060523986816406, 0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polydor', [-3.1060523986816406, 0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Decca', [-2.1060523986816406, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Motown', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Chancellor'}

Key: 299840508447821089855369866240440724753
Value: {'question': 'Ron Bower and John Williams set a speed record for going round the world in a what?', 'responses': [('Boat', [-2.904006004333496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sailplane', [-3.279006004333496, -1.5514447689056396], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Balloon', [-1.9040061235427856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hot air', [-1.5290061235427856, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mini', [-3.404006004333496, -0.31784874200820923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('hot air', [-3.279006004333496, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Submarine', [-2.654006004333496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Balloon', [-1.9040061235427856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Submarine', [-2.654006004333496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Submarine', [-2.654006004333496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Boat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Helicopter'}

Key: 6285281377900569448923298952423180194
Value: {'question': 'What was the profession of New Yorker Garry Winogrand?', 'responses': [('Photographer', [-0.1979352831840515, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.1979352831840515, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.1979352831840515, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.1979352831840515, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A photographer', [-4.135435104370117, -0.3039095103740692], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.1979352831840515, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.1979352831840515, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.1979352831840515, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photojournalist', [-2.1979353427886963, -0.2904428243637085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.1979352831840515, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Photographer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Photographer'}

Key: 77865379524049111309272063660799097961
Value: {'question': 'Amelia Earhart was born in which state?', 'responses': [('Kansas', [-1.1187846660614014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-0.6187846660614014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-0.6187846660614014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-1.1187846660614014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-1.1187846660614014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iowa', [-3.1344096660614014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-1.1187846660614014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iowa', [-3.1344096660614014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-0.6187846660614014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-1.1187846660614014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kansas', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Kansas'}

Key: 6469076388733372854115999629787206983
Value: {'question': "Who was Theodore Roosevelt's Vice President between 1901 and 1905?", 'responses': [('Thomas Marshall', [-1.6463924646377563, -0.48917025327682495, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles W.', [-1.4588924646377563, -1.0323245525360107, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William H.', [-1.2088924646377563, -2.3300299644470215, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William McKinley', [-1.2088924646377563, -1.392530083656311, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Fairbanks', [-1.4588924646377563, -0.5948245525360107, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thomas Wilson', [-1.6463924646377563, -2.9266703128814697, -0.1811486929655075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Fairbanks', [-1.4588924646377563, -0.5948245525360107, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles W.', [-1.4588924646377563, -1.0323245525360107, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Howard Taft', [-1.2088924646377563, -0.955030083656311, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Fairbanks', [-1.4588924646377563, -0.5948245525360107, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Thomas Marshall', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'No one'}

Key: 262307002069435293253338666165237699635
Value: {'question': "What was Phil Collins' last UK No 1 of the 80s?", 'responses': [('Another Day in', [-1.589346170425415, -0.25192904472351074, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I don'", [-2.589346170425415, -0.7022185325622559, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Another Day in', [-1.589346170425415, -0.25192904472351074, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Another Day In', [-1.589346170425415, -0.25192904472351074, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('One More Night', [-1.839346170425415, -0.16491271555423737, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sussudio', [-3.964346170425415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Something About The', [-3.464346170425415, -2.6512975692749023, -0.7912852764129639], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Two Hearts', [-1.589346170425415, -0.16491271555423737, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('One more night', [-1.839346170425415, -1.8836627006530762, -0.06291339546442032], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Easy Lover', [-3.339346170425415, 0.0, -0.1966211348772049], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Another Day in', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Another Day in Paradise'}

Key: 154998781240909760849730960724170257860
Value: {'question': "What was Al Pacino's first movie?", 'responses': [('The Panic in Needle', [-0.2427523136138916, -0.0443379171192646, -0.4509372115135193, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Panic In Needle', [-0.2427523136138916, -0.0443379171192646, -1.013437271118164, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Panic In Needle Park', [-2.3794710636138916, -0.4981345236301422, -0.1556587964296341, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Panic in Needle Park', [-2.3794710636138916, -0.9356344938278198, -0.21164272725582123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Me, Natalie', [-2.3716585636138916, -0.3315069377422333, -0.7932105660438538, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Panic in Needle', [-0.2427523136138916, -0.0443379171192646, -0.4509372115135193, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Panic In Needle', [-0.2427523136138916, -0.0443379171192646, -1.013437271118164, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Panic In Needle', [-0.2427523136138916, -0.0443379171192646, -1.013437271118164, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Panic in Needle', [-0.2427523136138916, -0.0443379171192646, -0.4509372115135193, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Panic In Needle', [-0.2427523136138916, -0.0443379171192646, -1.013437271118164, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Panic in Needle', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Me Natalie'}
>>>>>>> 811d839 (new run)

Key: 63601322601270515266656822792125783476
Value: {'question': 'In which year did Alcock and Brown make their Atlantic crossing?', 'responses': [('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1919', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1919'}

Key: 145011758783578328989203926872722943800
<<<<<<< HEAD
Value: {'question': 'Which movie director was born on exactly the same day as actor Tommy Lee Jones?', 'responses': [('Clint Eastwood', [-2.868530511856079, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sam Raimi', [-3.118530511856079, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-2.868530511856079, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Thomas Anderson', [-4.3685302734375, -1.3112460374832153, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Kubrick', [-3.243530511856079, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sam Raimi', [-3.118530511856079, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steven Spielberg', [-2.118530511856079, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-2.868530511856079, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steven Spielberg', [-2.118530511856079, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steven Spielberg', [-2.118530511856079, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Clint Eastwood', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': 'Oliver Stone'}

Key: 246120728694926540317017558027516956275
Value: {'question': 'Which singer wrote the musical Someone Like You?', 'responses': [('George She', [-3.550553798675537, -2.33418607711792], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Lennon', [-3.800553798675537, -0.8760663270950317], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Sinatra', [-2.988053798675537, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rod Stewart', [-4.113053798675537, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Man', [-2.675553798675537, -0.0658353641629219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbra', [-3.425553798675537, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-2.050553798675537, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbra', [-3.425553798675537, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Man', [-2.675553798675537, -0.0658353641629219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adele', [-2.050553798675537, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George She', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Petula Clark'}

Key: 225941412994868541563013298848715525610
Value: {'question': 'What state had its bi-centenary of joining the Union a year after North Carolina?', 'responses': [('Rhode Island', [-2.985881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delaware', [-3.235881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-2.985881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maryland', [-4.235881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-4.235881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-3.610881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-3.610881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-3.110881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mississippi', [-3.985881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Virginia', [-4.110881805419922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rhode Island', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Rhode Island'}

Key: 75396728442104296703947216153334871904
Value: {'question': 'With which instrument was Charlie Christian associated?', 'responses': [('Cornet', [-4.231045722961426, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trumpet', [-1.1685456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The electric', [-3.981045722961426, -1.1686625480651855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9810456037521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Cornet', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Guitar'}
=======
Value: {'question': 'Which movie director was born on exactly the same day as actor Tommy Lee Jones?', 'responses': [('Robert Altman', [-2.743168354034424, -0.9560627341270447, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joel Schumacher', [-3.368168354034424, -0.49143970012664795, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Miller', [-2.868168354034424, -2.8500287532806396, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Burton', [-2.993168354034424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Lucas', [-2.868168354034424, -0.10002884268760681, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sam Raimi', [-3.243168354034424, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Burton', [-2.993168354034424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Burton', [-2.993168354034424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steven Spielberg', [-1.4931684732437134, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Quentin Tarantino', [-2.243168354034424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert Altman', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Oliver Stone'}

Key: 246120728694926540317017558027516956275
Value: {'question': 'Which singer wrote the musical Someone Like You?', 'responses': [('Adele', [-1.4350041151046753, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billy Joel', [-2.841254234313965, -0.02812909334897995], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Smiths', [-3.653754234313965, -3.026897668838501], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Bolton', [-3.216254234313965, -2.2345218658447266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Jay', [-4.778754234313965, -1.7733949422836304], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Man', [-3.153754234313965, -0.13458658754825592], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adele', [-1.4350041151046753, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-1.4975041151046753, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Gibb', [-3.153754234313965, -2.0720865726470947], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adele', [-1.4350041151046753, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Adele', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Petula Clark'}

Key: 225941412994868541563013298848715525610
Value: {'question': 'What state had its bi-centenary of joining the Union a year after North Carolina?', 'responses': [('Missouri', [-4.443633556365967, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virginia', [-2.318633556365967, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tennessee', [-1.8186335563659668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhode Island', [-3.381133556365967, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tennessee', [-1.8186335563659668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delaware', [-2.693633556365967, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vermont', [-2.131133556365967, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delaware', [-2.693633556365967, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-2.881133556365967, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virginia', [-2.318633556365967, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Missouri', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Rhode Island'}

Key: 75396728442104296703947216153334871904
Value: {'question': 'With which instrument was Charlie Christian associated?', 'responses': [('Guitar', [-0.9189496636390686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9189496636390686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9189496636390686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('electric guitar', [-3.293949604034424, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9189496636390686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Electric guitar', [-1.9814496040344238, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9189496636390686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trumpet', [-0.9189496636390686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trumpet', [-0.9189496636390686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-0.9189496636390686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Guitar', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Guitar'}
>>>>>>> 811d839 (new run)

Key: 58760419811873730114451738515348744826
Value: {'question': 'In which country is the Howrah bridge?', 'responses': [('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'India', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'India'}

Key: 100153390631380258388116990866273230528
<<<<<<< HEAD
Value: {'question': 'What are the international registration letters of a vehicle from Brunei?', 'responses': [('BC', [-4.9410600662231445, -0.06356300413608551], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BC', [-4.9410600662231445, -0.06356300413608551], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BRN', [-1.1910598278045654, -1.3899953365325928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BS', [-4.9410600662231445, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BRU', [-1.1910598278045654, -0.8899953961372375], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BR', [-1.1910598278045654, -1.1399953365325928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BRN', [-1.1910598278045654, -1.3899953365325928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BR', [-1.1910598278045654, -1.1399953365325928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BBN', [-1.0660598278045654, -2.553262948989868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BRU', [-1.1910598278045654, -0.8899953961372375], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'BC', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336676, 'reference': 'BRU'}

Key: 39437776274176571007543378867113033501
Value: {'question': "What was Oliver Hardy's real first name?", 'responses': [('Edward', [-2.220351219177246, -0.03163906931877136], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan', [-0.5719137787818909, -0.1212046816945076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-3.882460594177246, -0.4994328022003174], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan', [-0.5719137787818909, -0.1212046816945076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan Laurel', [-0.5719137787818909, -2.7462046146392822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reginald Harris', [-4.622694969177246, -3.8621327877044678], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan', [-0.5719137787818909], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-2.220351219177246, -0.03163906931877136], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan Laurel', [-0.5719137787818909, -2.7462046146392822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnie Pearl', [-5.103163719177246, -1.0466115474700928], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Edward', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Norvell'}

Key: 193922828259217390007194120027606505159
Value: {'question': 'Benito Juarez international airport is in which country?', 'responses': [('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'What are the international registration letters of a vehicle from Brunei?', 'responses': [('BRU', [-1.2696082592010498, -1.5156173706054688], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BKN', [-1.0196082592010498, -3.217031717300415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BGP', [-1.0196082592010498, -4.467031478881836], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BM', [-4.394608497619629, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BG', [-4.144608497619629, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BKU', [-1.0196082592010498, -2.279531717300415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BV', [-4.019608497619629, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('B', [-1.0196082592010498, -1.217031717300415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BF', [-4.519608497619629, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BRU', [-1.2696082592010498, -1.5156173706054688], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'BRU', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'BRU'}

Key: 39437776274176571007543378867113033501
Value: {'question': "What was Oliver Hardy's real first name?", 'responses': [('Charles', [-3.5603556632995605, -0.10352285206317902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan', [-1.56670343875885, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-2.2307658195495605, -0.04552800580859184], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan', [-1.56670343875885, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albert', [-1.23857843875885, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur', [-2.9768595695495605, -0.06900697201490402], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albert', [-1.23857843875885, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hardy', [-3.8108439445495605, -0.040476057678461075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Herbert', [-3.7761759757995605, -0.17337025701999664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adol', [-3.9768595695495605, -1.3587872982025146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charles', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Norvell'}

Key: 193922828259217390007194120027606505159
Value: {'question': 'Benito Juarez international airport is in which country?', 'responses': [('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mexico', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mexico'}

Key: 250217648133966092798016996660493888130
<<<<<<< HEAD
Value: {'question': 'How old would Rocky Marciano have been had he lived to the end of the 20th century?', 'responses': [('101', [0.0, -0.903252363204956, -0.868496298789978, -2.1582424640655518], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('89', [0.0, -1.653252363204956, -2.297549247741699, -0.14267508685588837], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('125', [0.0, -0.903252363204956, -1.743496298789978, -2.389209508895874], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('66', [0.0, -2.903252363204956, -2.2550008296966553, -0.21579554677009583], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('111', [0.0, -0.903252363204956, -1.243496298789978, -2.102078676223755], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('120', [0.0, -0.903252363204956, -1.743496298789978, -1.514209508895874], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('94', [0.0, -1.528252363204956, -2.226383686065674, -0.19662123918533325], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('68', [0.0, -2.903252363204956, -2.0050008296966553, -0.1849365085363388], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('132', [0.0, -0.903252363204956, -2.6184964179992676, -1.8992724418640137], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('83', [0.0, -1.653252363204956, -2.297549247741699], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '101', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': '76'}

Key: 236776199463644069794603593839212480613
Value: {'question': 'Who had a 70s No 1 hit with The Night The Lights Went Out In Georgia?', 'responses': [('The Jackson', [-2.781982898712158, -1.2640634775161743, -0.4740769863128662], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-1.5944827795028687, -0.14097152650356293, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-1.5944827795028687, -0.14097152650356293, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bobbie Gentry', [-2.906982898712158, -2.447654962539673, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Vic Damone', [-3.875732898712158, -0.20406439900398254, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Electric Light Orchestra', [-3.219482898712158, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-1.5944827795028687, -0.14097152650356293, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-1.5944827795028687, -0.14097152650356293, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Rod Stewart', [-2.547607898712158, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Robert Palmer', [-2.547607898712158, -0.9125096797943115, -0.06196761503815651], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Jackson', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Vicki Lawrence'}

Key: 185023696551027618739728991234467789199
Value: {'question': 'Which country does the airline Gronlandsfly come from?', 'responses': [('Denmark', [-2.879734516143799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greenland', [-0.7547345757484436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greenland', [-0.7547345757484436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-1.0047345161437988, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greenland', [-0.7547345757484436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-2.879734516143799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [-2.879734516143799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greenland', [-0.7547345757484436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-1.0047345161437988, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [-2.879734516143799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Denmark', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9502705392332347, 'reference': 'Greenland'}

Key: 29698349225308754320918897774555060403
Value: {'question': 'Which famous actress was born on exactly the same day as gymnast Olga Korbut?', 'responses': [('Sharon Stone', [-3.054408311843872, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldie Hawn', [-3.304408311843872, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldie Hawn', [-3.304408311843872, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth Taylor', [-3.179408311843872, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meryl Stre', [-3.929408311843872, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gwyneth Palt', [-4.179408073425293, -0.8626687526702881, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth Taylor', [-3.179408311843872, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sandra Bullock', [-4.429408073425293, -0.06196761503815651, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kim Basinger', [-3.679408311843872, -0.3220656216144562, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Tyler Moore', [-4.179408073425293, -0.7266534566879272, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sharon Stone', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Debra Winger'}

Key: 113824320962058306970124055392943517183
Value: {'question': 'The diet of what mythical monster periodically included seven youths and seven maidens?', 'responses': [('A giant', [-4.536463737487793, -3.6290969848632812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hydra', [-2.348963737487793, -0.7935577630996704], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cerberus', [-1.973963737487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hydra', [-0.911463737487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cerberus', [-1.973963737487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cerberus', [-1.973963737487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cyclopes', [-4.098963737487793, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The min', [-2.348963737487793, -4.481057643890381], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minotaur', [-2.723963737487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cerberus', [-1.973963737487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A giant', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': "The Minotaur's"}
=======
Value: {'question': 'How old would Rocky Marciano have been had he lived to the end of the 20th century?', 'responses': [('120', [0.0, -0.8303548693656921, -1.8431402444839478, -1.5139541625976562], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('77 years', [0.0, -2.080354928970337, -2.082712173461914, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('96', [0.0, -1.455354928970337, -2.1707658767700195, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90', [0.0, -1.455354928970337, -2.1707658767700195, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('82', [0.0, -1.580354928970337, -2.1707658767700195, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('94', [0.0, -1.455354928970337, -2.1707658767700195, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('75', [0.0, -2.080354928970337, -2.082712173461914, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('98', [0.0, -1.455354928970337, -2.1707658767700195, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('85', [0.0, -1.580354928970337, -2.1707658767700195, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('113', [0.0, -0.8303548693656921, -1.2181402444839478, -2.2081992626190186], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '120', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': '76'}

Key: 236776199463644069794603593839212480613
Value: {'question': 'Who had a 70s No 1 hit with The Night The Lights Went Out In Georgia?', 'responses': [('David Lee Roth', [-4.220731258392334, -1.4501532316207886, -0.6751039624214172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-0.9472939372062683, -0.26735907793045044, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-0.9472939372062683, -0.26735907793045044, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Palmer', [-2.072293996810913, -0.9436362981796265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-0.9472939372062683, -0.26735907793045044, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-0.9472939372062683, -0.26735907793045044, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert John', [-2.072293996810913, -0.9280112981796265, -0.2733455300331116], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rod Stewart', [-1.490262746810913, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vicki Sue Robinson', [-0.9472939372062683, -0.26735907793045044, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwin Starr', [-3.861356496810913, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Lee Roth', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Vicki Lawrence'}

Key: 185023696551027618739728991234467789199
Value: {'question': 'Which country does the airline Gronlandsfly come from?', 'responses': [('Iceland', [-0.6177648305892944, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-1.6177648305892944, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-0.6177648305892944, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [-2.867764949798584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-1.6177648305892944, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-0.6177648305892944, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-0.6177648305892944, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-1.6177648305892944, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-0.6177648305892944, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-0.6177648305892944, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Iceland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Greenland'}

Key: 29698349225308754320918897774555060403
Value: {'question': 'Which famous actress was born on exactly the same day as gymnast Olga Korbut?', 'responses': [('Jennifer Aniston', [-3.328383207321167, -1.2457072734832764], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Faye Dun', [-3.828383207321167, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kate Moss', [-4.203383445739746, -2.6964833736419678], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shirley Mac', [-3.578383207321167, -0.44186604022979736], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldie Haw', [-2.703383207321167, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meryl', [-3.703383207321167, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Debbie Harry', [-4.453383445739746, -1.857227087020874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldie Haw', [-2.703383207321167, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Keaton', [-3.578383207321167, -0.3417181968688965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cher', [-3.453383207321167, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jennifer Aniston', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Debra Winger'}

Key: 113824320962058306970124055392943517183
Value: {'question': 'The diet of what mythical monster periodically included seven youths and seven maidens?', 'responses': [('Hydra', [-0.6216396689414978, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The basil', [-1.9341397285461426, -2.9652345180511475], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Chi', [-1.9341397285461426, -5.090234756469727], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hydra', [-0.6216396689414978, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cerberus', [-2.6841397285461426, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hydra', [-0.6216396689414978, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basilisk', [-3.3091397285461426, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A hydra', [-4.246639728546143, -1.6996619701385498], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hydra', [-0.6216396689414978, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hydra', [-0.6216396689414978, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hydra', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': "The Minotaur's"}
>>>>>>> 811d839 (new run)

Key: 193556839092800788621042905204362648334
Value: {'question': 'In Greek mythology, who was the goddess of the rainbow?', 'responses': [('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iris', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Iris', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Iris'}

Key: 202955777115811987280699418513788322856
<<<<<<< HEAD
Value: {'question': 'In ancient Athens, what tree was considered sacred -- with all its fruit belonging to the state, and death the penalty for anyone caught cutting one down?', 'responses': [('olive tree', [-1.7772055864334106, -1.1368709802627563], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Olive', [-0.6522055864334106, -0.2693469226360321], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('olive', [-1.7772055864334106, -0.38687101006507874], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Olive', [-0.6522055864334106, -0.2693469226360321], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('olive', [-1.7772055864334106, -0.38687101006507874], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Olive', [-0.6522055864334106, -0.2693469226360321], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('The olive', [-2.402205467224121, -0.8481096029281616], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Olive Tree', [-0.6522055864334106, -2.2693469524383545], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Olive', [-0.6522055864334106, -0.2693469226360321], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('olive tree', [-1.7772055864334106, -1.1368709802627563], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'olive tree', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'The olive tree'}

Key: 206956624581510942917270636149714907337
Value: {'question': "What legendary fire-breathing female monster had a lion's head, a goat's body and a dragon's tail?", 'responses': [('The Sphinx', [-3.273451566696167, -1.3885513544082642, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('S. Lam', [-4.273451805114746, -3.5727295875549316, -2.463189125061035], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lamia', [-0.8984516263008118, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Chimera', [-2.335951566696167, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Sphinx', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'The Chimera'}

Key: 250704740436419171438903828785577035864
Value: {'question': 'According to legend, who fired the arrow that hit Achilles in the heel, his only vulnerable spot?', 'responses': [('Paris', [-0.14191605150699615, -0.14272211492061615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris (', [-0.14191605150699615, -3.6427221298217773], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.14191605150699615, -0.14272211492061615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odysseus', [-3.954416036605835, -0.11058321595191956], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo', [-2.391916036605835, -0.1282658874988556], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.14191605150699615, -0.14272211492061615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.14191605150699615, -0.14272211492061615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris.', [-0.14191605150699615, -3.6427221298217773], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.14191605150699615, -0.14272211492061615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thetis', [-4.329416275024414, -0.5991449952125549], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Paris', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Paris'}
=======
Value: {'question': 'In ancient Athens, what tree was considered sacred -- with all its fruit belonging to the state, and death the penalty for anyone caught cutting one down?', 'responses': [('Olive tree', [-0.2429836541414261, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Olive', [-0.2429836541414261, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Olive tree', [-0.2429836541414261, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Olive', [-1.9929836988449097, -1.1917668581008911], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Olive', [-0.2429836541414261, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Olive', [-0.2429836541414261, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Olive tree', [-0.2429836541414261, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Olive', [-0.2429836541414261, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Olive', [-1.9929836988449097, -1.1917668581008911], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Olive tree', [-0.2429836541414261, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Olive tree', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'The olive tree'}

Key: 206956624581510942917270636149714907337
Value: {'question': "What legendary fire-breathing female monster had a lion's head, a goat's body and a dragon's tail?", 'responses': [('Lamia', [-1.5946972370147705, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lamia', [-1.5946972370147705, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Medusa', [-0.4696972966194153, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Medusa', [-0.4696972966194153, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Medusa', [-0.4696972966194153, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Medusa', [-0.4696972966194153, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lamia', [-1.5946972370147705, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Medusa', [-0.4696972966194153, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Medusa', [-0.4696972966194153, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Medusa', [-0.4696972966194153, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lamia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'The Chimera'}

Key: 250704740436419171438903828785577035864
Value: {'question': 'According to legend, who fired the arrow that hit Achilles in the heel, his only vulnerable spot?', 'responses': [('Paris', [-0.20052124559879303, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.20052124559879303, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.20052124559879303, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo', [-2.013021230697632, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.20052124559879303, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.20052124559879303, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.20052124559879303, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.20052124559879303, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.20052124559879303, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.20052124559879303, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Paris', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Paris'}
>>>>>>> 811d839 (new run)

Key: 209521623797531935144211717584153494097
Value: {'question': 'In Greek mythology, who was the queen of the underworld and wife of Hades?', 'responses': [('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Persephone', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Persephone', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Persephone'}

Key: 174263786485275069263006587250021091571
<<<<<<< HEAD
Value: {'question': '"Which entertainer said, ""He was into animal husbandry--until they caught him at it?"', 'responses': [('Sammy Davis Jr', [-3.524559497833252, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hope', [-2.149559497833252, -0.19673414528369904, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sammy Davis Jr', [-3.524559497833252, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bing Crosby', [-4.274559497833252, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Seinfeld', [-2.774559497833252, -1.1647002696990967, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carol Burnett', [-4.149559497833252, -0.266189843416214, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phyllis Diller', [-4.149559497833252, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Benny', [-3.774559497833252, -0.19779424369335175, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Rivers', [-3.399559497833252, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Which entertainer', [-3.649559497833252, -3.5765435695648193, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sammy Davis Jr', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Tom Lehrer'}

Key: 190219522625102596786086398618155153356
Value: {'question': '"According to hippy guru Dr. Timothy Leary, what did you do before you ""drop out?"""', 'responses': [('"Work"', [-1.884577989578247, -2.871244192123413, -0.9072921276092529, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"You have an', [-1.884577989578247, -0.49624425172805786, -4.3376665115356445, -2.602229595184326], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"You dropped in', [-1.884577989578247, -0.49624425172805786, -3.0876667499542236, -0.6931471824645996], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Get a job', [-1.884577989578247, -3.121244192123413, -0.6614251732826233, -0.092132568359375], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('You ""drop in', [-0.6345779895782471, -1.3772094249725342, -1.3927946090698242, -0.07689981907606125], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('You get a job', [-0.6345779895782471, -3.627209424972534, -0.8672371506690979, -0.10405014455318451], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"You took a', [-1.884577989578247, -0.49624425172805786, -3.7126667499542236, -1.8096305131912231], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Drop in', [-4.009577751159668, -1.3604952096939087], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('You ""came in', [-0.6345779895782471, -1.3772094249725342, -4.767794609069824, -0.5176628232002258], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('You ""drop in', [-0.6345779895782471, -1.3772094249725342, -1.3927946090698242, -0.07689981907606125], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"Work"', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': 'Turn on, tune in'}

Key: 204421269293614587598805783541708928077
Value: {'question': "What is Nelson Mandela's middle name?", 'responses': [('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madikizela', [-2.4069128036499023, 0.0, 0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madikizela', [-2.4069128036499023, 0.0, 0.0, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.0944129079580307, 0.0, 0.0, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': '"Which entertainer said, ""He was into animal husbandry--until they caught him at it?"', 'responses': [('The King of', [-3.8278183937072754, -2.6979124546051025, -1.984011173248291], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Stiller', [-2.9528183937072754, -2.9061384201049805, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Simon', [-4.327818393707275, -2.0245580673217773, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hope', [-2.3278183937072754, -0.17251379787921906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Burns', [-3.0778183937072754, -0.6623494625091553, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Burns', [-3.0778183937072754, -0.6623494625091553, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sammy Davis Jr', [-3.8278183937072754, 0.0, -0.39331451058387756], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Groucho Marx', [-2.7028183937072754, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Durante', [-3.8278183937072754, -0.18525679409503937, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Rivers', [-3.3278183937072754, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The King of', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Tom Lehrer'}

Key: 190219522625102596786086398618155153356
Value: {'question': '"According to hippy guru Dr. Timothy Leary, what did you do before you ""drop out?"""', 'responses': [('Study', [-3.9757089614868164, -0.4195471704006195], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Go to', [-2.7257089614868164, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('You work', [-0.47570884227752686, -3.050455093383789], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Went to', [-4.725708961486816, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('You get', [-0.47570884227752686, -3.300455093383789], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Get stoned', [-3.2257089614868164, -2.6666762828826904], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('You ""', [-0.47570884227752686, -2.550455093383789], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('You took', [-0.47570884227752686, -3.550455093383789], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Read books', [-4.100708961486816, -1.3663463592529297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('" You', [-4.225708961486816, -4.799094200134277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Study', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': 'Turn on, tune in'}

Key: 204421269293614587598805783541708928077
Value: {'question': "What is Nelson Mandela's middle name?", 'responses': [('Rolihlahla', [-0.07428312301635742, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.07428312301635742, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.07428312301635742, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.07428312301635742, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madikizela', [-2.6367831230163574, 0.0, -0.07207804173231125, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.07428312301635742, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.07428312301635742, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madikizela', [-2.6367831230163574, 0.0, -0.07207804173231125, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.07428312301635742, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rolihlahla', [-0.07428312301635742, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rolihlahla', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Rolihlahla'}

Key: 94881720502138050605234386150286378445
<<<<<<< HEAD
Value: {'question': 'How old would James Dean have been had he lived to the end of the 20th century?', 'responses': [('56', [0.0, -2.174562931060791, -2.19462251663208, -0.17542405426502228], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('57', [0.0, -2.174562931060791, -2.06962251663208, -0.18170738220214844], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('77', [0.0, -1.2995630502700806, -2.157269239425659, -0.14267508685588837], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('88', [0.0, -1.6745630502700806, -2.4701342582702637, -0.14267508685588837], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('87', [0.0, -1.6745630502700806, -2.4701342582702637, -0.19662123918533325], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('86', [0.0, -1.6745630502700806, -2.4701342582702637, -0.19043122231960297], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('111', [0.0, -2.299562931060791, -1.4011492729187012, -1.8956910371780396], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('56', [0.0, -2.174562931060791, -2.19462251663208, -0.17542405426502228], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('70', [0.0, -1.2995630502700806, -2.157269239425659, -0.1698460429906845], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('97', [0.0, -2.174562931060791, -2.575058937072754, -0.19043122231960297], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '56', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': '68'}

Key: 146183214139809971300961889467848906483
Value: {'question': 'Barry Clifford found fame discovering what?', 'responses': [('Barry Clifford', [-2.167396068572998, -0.13450592756271362], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Clifford', [-2.167396068572998, -0.13450592756271362], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('LSD', [-5.167396068572998, -0.09406715631484985], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The first', [-0.917396068572998, -2.5643298625946045], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Whod', [-4.792396068572998, -3.5345120429992676], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the', [-2.542396068572998, -2.5758938789367676], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('An extinct', [-4.667396068572998, -2.7971763610839844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Clifford', [-2.167396068572998, -0.13450592756271362], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Loch', [-2.542396068572998, -2.5758938789367676], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Loch', [-0.917396068572998, -2.5643298625946045], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Barry Clifford', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Sunken pirate ships'}

Key: 125221220887649825200727101574185473087
Value: {'question': "What was Christopher Reeve's first movie?", 'responses': [('"The Day of', [-1.7299997806549072, -1.1196988821029663, -2.6613309383392334, -1.2615737915039062], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kidnapped', [-4.940937042236328, -0.7927525639533997, 0.0, -0.20622029900550842], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Just One of the', [-3.5971872806549072, -1.3000209331512451, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Superman" (', [-1.7299997806549072, -2.065011501312256, -0.08995520323514938, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Superman: The Movie', [-1.6479685306549072, -3.5871734619140625, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Day the Earth', [-1.2339060306549072, -2.9422264099121094, -0.7864599227905273, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Day The Earth', [-1.2339060306549072, -2.9422264099121094, -2.9114599227905273, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The Devil and', [-1.7299997806549072, -1.1196988821029663, -2.0309598445892334, -2.4639394283294678], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The World of Henry', [-1.2339060306549072, -1.7864646911621094, -3.318108081817627, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beneath The Planet Of', [-2.8003122806549072, -1.9973857402801514, -0.049333903938531876, -0.3304581940174103], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"The Day of', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Gray Lady Down'}
=======
Value: {'question': 'How old would James Dean have been had he lived to the end of the 20th century?', 'responses': [('60', [0.0, -1.6371346712112427, -2.4106693267822266, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('63', [0.0, -1.6371346712112427, -2.2856693267822266, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('77', [0.0, -1.2621346712112427, -2.1840827465057373, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('96', [0.0, -2.137134552001953, -2.4558467864990234, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('53', [0.0, -2.137134552001953, -2.372506618499756, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('64', [0.0, -1.6371346712112427, -2.1606693267822266, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('63', [0.0, -1.6371346712112427, -2.2856693267822266, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('50', [0.0, -2.137134552001953, -2.372506618499756, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('88', [0.0, -1.6371346712112427, -2.525156021118164, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('78', [0.0, -1.2621346712112427, -2.1840827465057373, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '60', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': '68'}

Key: 146183214139809971300961889467848906483
Value: {'question': 'Barry Clifford found fame discovering what?', 'responses': [('The Beatles', [-0.5651876926422119, -1.4499614238739014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Mona Lisa', [-0.5651876926422119, -3.6999614238739014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('An unknown singer', [-4.690187454223633, -3.760465621948242, -1.5794775485992432], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A new mineral', [-2.065187692642212, -1.1788010597229004, -3.54312801361084], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The cure for', [-0.5651876926422119, -3.9499614238739014, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("the world'", [-3.565187692642212, -3.170093536376953, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A blue rock', [-2.065187692642212, -4.8038010597229, -4.763338088989258], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('An ancient Viking', [-4.690187454223633, -1.7604657411575317, -3.9428648948669434], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Higgs boson', [-0.5651876926422119, -4.0749616622924805, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Loch Ness', [-0.5651876926422119, -1.6999614238739014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Beatles', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Sunken pirate ships'}

Key: 125221220887649825200727101574185473087
Value: {'question': "What was Christopher Reeve's first movie?", 'responses': [("I'm fine", [-3.5285565853118896, -0.5441305637359619, -0.11282224208116531, -2.4302918910980225], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somewhere in Time', [-2.8098065853118896, -0.4740769863128662, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dead Heat on a', [-4.700431823730469, -2.0246217250823975, -0.3484085500240326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I'm of", [-3.5285565853118896, -0.5441305637359619, -0.11282224208116531, -3.4693543910980225], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Black Stallion', [-1.2121503353118896, -3.4596922397613525, -0.06993623077869415, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Day of the', [-1.2121503353118896, -3.3971922397613525, -1.1167848110198975, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Horse Whisperer', [-1.2121503353118896, -1.0690672397613525, -1.2358334064483643, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beneath the Planet of', [-1.7199628353118896, -0.16730396449565887, -0.2317984402179718, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beneath the planet of', [-1.7199628353118896, -0.16730396449565887, -1.5755484104156494, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kidnapped', [-4.606681823730469, -0.5561345815658569, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "I'm fine", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Gray Lady Down'}
>>>>>>> 811d839 (new run)

Key: 62024499569425870685725457815635055178
Value: {'question': 'The Porcaro Brothers featured in which group?', 'responses': [('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Toto', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Toto', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Toto'}

Key: 179160722281282151782102708865808211900
<<<<<<< HEAD
Value: {'question': 'Which city was called Leninakan until 1990?', 'responses': [('Bishkek', [-4.29188871383667, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yek', [-3.35438871383667, -0.0271238274872303], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bishkek', [-4.29188871383667, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku,', [-0.6043887138366699, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.6043887138366699, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.6043887138366699, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yerevan', [-1.97938871383667, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alma-', [-3.60438871383667, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku,', [-0.6043887138366699, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerevan', [-4.41688871383667, -0.20852284133434296], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bishkek', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'A: Kumayri'}

Key: 155511134717832663689479930712972377722
Value: {'question': "What is Iggy Pop's real name?", 'responses': [('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Newell Osterberg', [0.0, -1.7014133930206299, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg Jr', [0.0, -0.2014133334159851, 0.0, -1.1981292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg Jr', [0.0, -0.2014133334159851, 0.0, -1.1981292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.2014133334159851, 0.0, -0.4481292963027954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which city was called Leninakan until 1990?', 'responses': [('Yerevan', [-2.186065673828125, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.3110657036304474, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.3110657036304474, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.3110657036304474, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.3110657036304474, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.3110657036304474, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.3110657036304474, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.3110657036304474, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.3110657036304474, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baku', [-0.3110657036304474, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Yerevan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'A: Kumayri'}

Key: 155511134717832663689479930712972377722
Value: {'question': "What is Iggy Pop's real name?", 'responses': [('James Osterberg', [0.0, -0.3217625319957733, 0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Newell Osterberg', [0.0, -1.2905125617980957, 0.0, -0.06785587221384048], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg Jr', [0.0, -0.3217625319957733, 0.0, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.3217625319957733, 0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.3217625319957733, 0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.3217625319957733, 0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Newell Osterberg', [0.0, -1.2905125617980957, 0.0, -0.06785587221384048], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.3217625319957733, 0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg', [0.0, -0.3217625319957733, 0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Osterberg Jr', [0.0, -0.3217625319957733, 0.0, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'James Osterberg', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'James Osterberg'}

Key: 14745668222360339467712488372613992161
<<<<<<< HEAD
Value: {'question': 'What did Franz Kafka do for a day job?', 'responses': [('insurance', [-2.172165870666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('An', [-4.797165870666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insurance', [-1.2971657514572144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('he', [-3.797165870666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ins', [-3.797165870666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.672165870666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insurance', [-1.2971657514572144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insurance', [-1.2971657514572144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He', [-1.2971657514572144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Accounting', [-3.547165870666504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'insurance', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'Worked in insurance'}

Key: 251617701328195827460292184419158579844
Value: {'question': 'Dorval International airport is in which country?', 'responses': [('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Quebec', [-2.811967611312866, -0.5130981802940369], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Canada', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Canada'}

Key: 212775761963234218058773512393806725948
Value: {'question': 'In square miles how big is lake Michigan?', 'responses': [('12,381', [0.0, -1.082270622253418, -1.5347189903259277, -0.01416344940662384, -2.5107033252716064, -2.655211925506592, -2.2580947875976562], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,434', [0.0, -2.457270622253418, -0.5576425790786743, -2.179579734802246, -2.435361623764038, -2.4478211402893066, -0.08715388923883438], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('22,400', [0.0, -0.8322706818580627, -1.4595073461532593, 0.0, -1.4400622844696045, -0.219794362783432, -0.043320056051015854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,000', [0.0, -2.457270622253418, -0.5576425790786743, -1.679579734802246, -0.5430774688720703, 0.0, -0.11812767386436462], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10,000', [0.0, -1.082270622253418, -2.1597189903259277, -0.16255231201648712, -1.2988336086273193, -0.28225839138031006, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('23,000', [0.0, -0.8322706818580627, -1.2095073461532593, 0.0, -0.5350251197814941, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('26,000', [0.0, -0.8322706818580627, -2.959507465362549, 0.0, -1.1027121543884277, -0.018149960786104202, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('23,000', [0.0, -0.8322706818580627, -1.2095073461532593, 0.0, -0.5350251197814941, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('12,400', [0.0, -1.082270622253418, -1.5347189903259277, -0.01416344940662384, -1.7607033252716064, -1.144242525100708, -0.1388537585735321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20,000', [0.0, -0.8322706818580627, -2.584507465362549, -0.20304079353809357, -0.8025261759757996, -0.03389805555343628, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '12,381', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': '22,300'}

Key: 40905379070197253418111629514092720277
Value: {'question': 'Who wrote the song Momma Told Me Not To Come?', 'responses': [('The Carpenters', [-1.6205801963806152, -4.192200183868408, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Webb', [-3.6205801963806152, -1.5504363775253296, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Monkees', [-1.6205801963806152, -3.442200183868408, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Ruffin', [-3.6205801963806152, -3.362936496734619, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beach Boys', [-1.6205801963806152, -3.317200183868408, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ray Price', [-3.6205801963806152, -2.1052372455596924, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Cliff', [-3.6205801963806152, -1.6754363775253296, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johnny Cash', [-2.7455801963806152, -0.48023521900177, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Brown', [-3.6205801963806152, -0.9620037078857422, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Band', [-1.6205801963806152, -2.692200183868408, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Carpenters', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Randy Newman'}

Key: 264093883578664907058924731295477895800
Value: {'question': 'What star sign is Harrison Ford?', 'responses': [('Virgo', [-1.4505263566970825, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capricorn', [-2.888026237487793, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [-1.7630263566970825, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scorpio', [-1.6380263566970825, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scorpio', [-1.6380263566970825, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.4505263566970825, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.4505263566970825, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capricorn', [-2.888026237487793], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capricorn', [-2.888026237487793, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sagittarius', [-2.825526237487793, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Virgo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Cancer'}

Key: 307660029220089726176986829460726011041
Value: {'question': 'Who founded the Organization of Afro American Unity?', 'responses': [('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcom X', [-3.700347661972046, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.1378476619720459, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Malcolm X', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Malcolm X'}

Key: 9845967260448918489962827911867810225
Value: {'question': 'Which NASA space probe was launched to Venus in 1989?', 'responses': [('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Galileo', [-3.1285393238067627, -0.09448157250881195], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [-0.12853921949863434, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Magellan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Magellan'}

Key: 313875409464007107671048909662043149050
Value: {'question': 'Harry Weinstein became a world champion under which name?', 'responses': [('Mr.', [-4.133328914642334, -0.09770473837852478], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The', [-2.883328914642334, -1.0516796112060547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry the', [-0.8833289742469788, -2.5381312370300293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger', [-4.758328914642334, -0.9898587465286255], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry "', [-0.8833289742469788, -1.9131312370300293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Foreman', [-3.758328914642334, -0.48768794536590576], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry Fox', [-0.8833289742469788, -3.9131312370300293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Benny the', [-4.383328914642334, -1.2766833305358887], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hardie', [-4.508328914642334, -4.290060997009277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry Von', [-0.8833289742469788, -4.600631237030029], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mr.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Gary Kasparov'}

Key: 263364351530236104529878618221356339280
Value: {'question': 'Who directed Good Morning Vietnam?', 'responses': [('Barbra Stre', [-2.3602161407470703, -1.1368709802627563, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Milius', [-4.22545051574707, -0.8175387978553772, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ron Howard', [-2.9852161407470703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3211536705493927, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3211536705493927, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3211536705493927, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob Reiner', [-3.8272571563720703, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3211536705493927, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Kaufman', [-4.56724739074707, -1.960903286933899, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3211536705493927, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Barbra Stre', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769954, 'reference': 'Barry Levinson'}

Key: 131370138589744861108877479913920041808
Value: {'question': "What was Bette Davis's real first name?", 'responses': [('Bettie', [-3.24638295173645, -0.2392849326133728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.49442988634109497, -0.34435781836509705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.49442988634109497, -0.34435781836509705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary.', [-0.49442988634109497, -2.90685772895813], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Birg', [-3.86942982673645, -1.3861877918243408], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary?', [-0.49442988634109497, -3.96935772895813], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.49442988634109497, -0.34435781836509705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beulah', [-3.74052357673645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.49442988634109497, -0.34435781836509705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.49442988634109497, -0.34435781836509705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bettie', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Ruth'}

Key: 134823944242563590540537969890392563995
Value: {'question': 'In which sport did Hollywood star Sonja Henie win Olympic Gold?', 'responses': [('Figure skating', [-0.6500874161720276, -1.5019290447235107, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Speed Skating', [-2.275087356567383, -0.3484445810317993, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Figure Skating', [-0.6500874161720276, -0.25192904472351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice Hockey', [-1.7750873565673828, -1.4221853017807007, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice hockey', [-1.7750873565673828, -3.1721854209899902, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Figure skating', [-0.6500874161720276, -1.5019290447235107, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Figure Skating', [-0.6500874161720276, -0.25192904472351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice Hockey', [-1.7750873565673828, -1.4221853017807007, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice Skating', [-1.7750873565673828, -0.7971853017807007, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Speed skating', [-2.275087356567383, -1.2234445810317993, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Figure skating', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Ice Skating'}

Key: 104919144256012515767018783668691366367
Value: {'question': "In which decade was Alzheimer's disease first clinically described?", 'responses': [('1800s', [-0.05351461470127106, 0.0, -1.4061501026153564, -0.14998379349708557, 0.0, -0.35530349612236023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1907', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -3.059898614883423, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1906', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -0.4348985552787781, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1900', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -1.1848986148834229, -1.158132791519165], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1900s', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -1.1848986148834229, -0.658132791519165], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1906', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -0.4348985552787781, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1906', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -0.4348985552787781, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1906', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -0.4348985552787781, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1907', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -3.059898614883423, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1906', [-0.05351461470127106, 0.0, -0.28115010261535645, -0.042999111115932465, -0.4348985552787781, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1800s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'First decade'}

Key: 96233378685820066177191275564384480587
Value: {'question': 'What star sign is Glenda Jackson?', 'responses': [('Libra', [-2.3768112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scorpio', [-2.1268112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-2.3768112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [-2.3768112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pisces', [-1.8768112659454346, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cancer', [-1.7518112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [-2.3768112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-2.3768112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sagittarius', [-3.1268112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aquarius', [-2.7518112659454346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Libra', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Taurus'}

Key: 125362217489750988104121721680772121615
Value: {'question': 'Who won Super Bowl XXV?', 'responses': [('Tampa Bay Buccaneers', [-2.8589746952056885, 0.0, -0.14687328040599823], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buffalo Bills', [-1.858974575996399, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tampa Bay Buccaneers', [-2.8589746952056885, 0.0, -0.14687328040599823], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New York', [-2.9839746952056885, -0.40753450989723206, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-0.4839746057987213, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-0.4839746057987213, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-0.4839746057987213, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-0.4839746057987213, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-0.4839746057987213, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), (': New York', [-4.046474456787109, -0.8591476082801819, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tampa Bay Buccaneers', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'New York Giants'}

Key: 231849347051036993919710383258998616470
Value: {'question': 'Robert Mueller Municipal Airport is in which US state?', 'responses': [('Idaho', [-4.135684967041016, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.3856847286224365, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.3856847286224365, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alaska', [-3.6356847286224365, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.3856847286224365, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-3.0106847286224365, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.3856847286224365, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Dakota', [-2.8856847286224365, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.3856847286224365, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Dakota', [-2.8856847286224365, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Idaho', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Texas'}

Key: 212277403717066527502764818418537101893
Value: {'question': 'In what year were women first admitted to Harvard?', 'responses': [('1879', [0.0, 0.0, -1.8146722316741943, -0.6684328317642212, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1879', [0.0, 0.0, -1.8146722316741943, -0.6684328317642212, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, -0.5646722912788391, -1.3545056581497192, -0.8891714811325073, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1879', [0.0, 0.0, -1.8146722316741943, -0.6684328317642212, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, -0.5646722912788391, -2.8545055389404297, -0.8203133344650269, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1888', [0.0, 0.0, -1.8146722316741943, -1.6684328317642212, -2.4265875816345215, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1956', [0.0, 0.0, -0.5646722912788391, -1.3545056581497192, -2.014171600341797, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, -0.5646722912788391, -1.3545056581497192, -0.8891714811325073, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1642', [0.0, 0.0, -1.3146722316741943, -1.3132617473602295, -1.1848986148834229, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1879', [0.0, 0.0, -1.8146722316741943, -0.6684328317642212, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1879', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': '1969'}

Key: 59091154192150993839033613441229543530
Value: {'question': 'Who had 70s No 1 hit with Show and Tell?', 'responses': [('David Essex', [-3.249490976333618, -0.3160887658596039, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Wonder', [-4.374490737915039, -0.16051004827022552, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boney M', [-3.249490976333618, -0.4715947210788727, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Korg', [-0.8744909763336182, -2.9968361854553223, -0.9356344938278198], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Wonder', [-4.374490737915039, -0.16051004827022552, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Manil', [-4.374490737915039, -0.21539705991744995, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Olivia Newton-', [-4.624490737915039, 0.0, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("The O'", [-0.8744909763336182, -4.496836185455322, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve Winwood', [-4.624490737915039, -1.350218415260315, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Novy', [-3.999490976333618, -4.33827018737793, -0.43977224826812744], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Essex', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Al Wilson'}

Key: 160976786736071627638273556586770509819
Value: {'question': 'Balice international airport is in which country?', 'responses': [('Paraguay', [-4.544460773468018, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lithuania', [-2.2944607734680176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Luxembourg', [-3.9194607734680176, -0.04570977762341499], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albania', [-2.9194607734680176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lithuania', [-2.2944607734680176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [-3.9194607734680176, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latvia', [-3.7944607734680176, -0.05832047387957573], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bahamas', [-4.419460773468018, -2.2182812690734863], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-3.2944607734680176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [-2.1694607734680176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Paraguay', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Poland'}

Key: 263171183636945526207966135033027933846
Value: {'question': 'What was the first name of the original food manufacturer Mr. Heinz?', 'responses': [('Conrad', [-4.055466651916504, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mathias', [-4.836716651916504, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nicolas', [-4.274216651916504, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bernard', [-4.867966651916504, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ferdinand', [-2.461716651916504, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johann', [-4.242966651916504, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adam', [-4.211716651916504, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Karl', [-4.117966651916504, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anthony', [-2.461716651916504, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Antony', [-4.617966651916504, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Conrad', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.1639556568820564, 'reference': 'Henry'}

Key: 186500353307380592323903339731287435565
Value: {'question': 'Panama proclaimed independence in 1903 from which country?', 'responses': [('Colombia', [-0.8701202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Britain', [-3.1826202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-2.7451202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.8701202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.1201202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.1201202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.8701202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.8701202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.8701202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.8701202869415283, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Colombia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Columbia'}

Key: 113337858649939442265671630985285610422
Value: {'question': 'How old was Ronald Reagan when he became US President?', 'responses': [('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('70', [0.0, -1.730303406715393, -0.6073248386383057, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('42', [0.0, -2.1053032875061035, -0.7176980972290039, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.35530340671539307, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '69', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': '69'}
=======
Value: {'question': 'What did Franz Kafka do for a day job?', 'responses': [('He was', [-1.1003694534301758, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insurance clerk', [-1.1003694534301758, -0.962705135345459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insurance clerk', [-1.1003694534301758, -0.962705135345459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He worked', [-1.1003694534301758, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He worked', [-1.1003694534301758, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insurance broker', [-1.1003694534301758, -3.337705135345459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He worked', [-1.1003694534301758, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insurance salesman', [-1.1003694534301758, -1.462705135345459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was', [-1.1003694534301758, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('insurance', [-2.850369453430176, -3.4953556060791016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'He was', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Worked in insurance'}

Key: 251617701328195827460292184419158579844
Value: {'question': 'Dorval International airport is in which country?', 'responses': [('Canada', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Canada', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Canada'}

Key: 212775761963234218058773512393806725948
Value: {'question': 'In square miles how big is lake Michigan?', 'responses': [('26,000', [0.0, -0.8479074239730835, -3.1243417263031006, 0.0, -1.4223698377609253, -0.020541900768876076, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('54,000', [0.0, -1.5979074239730835, -1.9877605438232422, -0.24927587807178497, -0.6681201457977295, -0.04596279561519623, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('23,000', [0.0, -0.8479074239730835, -1.2493417263031006, 0.0, -0.5534229874610901, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('23,000', [0.0, -0.8479074239730835, -1.2493417263031006, 0.0, -0.5534229874610901, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('23,660', [0.0, -0.8479074239730835, -1.2493417263031006, 0.0, -2.5534229278564453, -2.274336814880371, -0.8990861773490906, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('13,500', [0.0, -1.3479074239730835, -2.1117587089538574, -0.12410189211368561, -2.5610392093658447, -1.306318998336792, -0.016034230589866638, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('33,000 square', [0.0, -2.597907543182373, -2.4046382904052734, -0.06820624321699142, -0.5739282369613647, -0.02630021423101425, 0.0, -2.811967611312866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('14,444', [0.0, -1.3479074239730835, -2.2367587089538574, -0.24270612001419067, -2.0288262367248535, -1.6695767641067505, -3.0535805225372314, -0.07694662362337112], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('53,900', [0.0, -1.5979074239730835, -2.612760543823242, -0.1438099443912506, -2.931692123413086, -1.6734669208526611, -0.18482454121112823, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('21,700 square', [0.0, -0.8479074239730835, -1.9993417263031006, -0.023245446383953094, -1.5639173984527588, -0.5827372670173645, -0.06593547761440277, -2.6949362754821777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '26,000', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': '22,300'}

Key: 40905379070197253418111629514092720277
Value: {'question': 'Who wrote the song Momma Told Me Not To Come?', 'responses': [('Eddie Rabbitt', [-4.412832260131836, -1.1777287721633911, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Flying Bur', [-1.5378321409225464, -4.7431745529174805, -0.2272038608789444], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Clash', [-1.5378321409225464, -4.1181745529174805, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jackson', [-1.5378321409225464, -3.2431745529174805, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sam Cooke', [-4.162832260131836, -0.36481741070747375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billy Ocean', [-2.912832260131836, -2.6612682342529297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenny Rogers', [-4.287832260131836, -0.28551098704338074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eric Burdon', [-4.162832260131836, -1.1899025440216064, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-4.412832260131836, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Prine', [-2.787832260131836, -1.8820478916168213, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Eddie Rabbitt', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Randy Newman'}

Key: 264093883578664907058924731295477895800
Value: {'question': 'What star sign is Harrison Ford?', 'responses': [('Virgo', [-1.894083023071289, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.894083023071289, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capricorn', [-2.081583023071289, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.894083023071289, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scorpio', [-2.081583023071289, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.894083023071289, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gemini', [-2.706583023071289, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.894083023071289, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sagittarius', [-1.894083023071289, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-1.894083023071289, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Virgo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Cancer'}

Key: 307660029220089726176986829460726011041
Value: {'question': 'Who founded the Organization of Afro American Unity?', 'responses': [('Malcolm X', [-0.09251995384693146, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.09251995384693146, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.09251995384693146, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.09251995384693146, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.09251995384693146, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stokely Carmichael', [-3.030019998550415, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.09251995384693146, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.09251995384693146, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.09251995384693146, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-0.09251995384693146, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Malcolm X', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Malcolm X'}

Key: 9845967260448918489962827911867810225
Value: {'question': 'Which NASA space probe was launched to Venus in 1989?', 'responses': [('Magellan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Magellan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Magellan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Magellan'}

Key: 313875409464007107671048909662043149050
Value: {'question': 'Harry Weinstein became a world champion under which name?', 'responses': [('Johnny Greco', [-4.23385763168335, -4.373256683349609], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry Gre', [-1.1088577508926392, -1.4950398206710815], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rocky Graz', [-3.3588576316833496, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry Bel', [-1.1088577508926392, -2.557539939880371], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Bernstein', [-4.60885763168335, -3.274787425994873], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billy Conn', [-3.7338576316833496, -1.9116915464401245], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince', [-4.35885763168335, -1.2875735759735107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry White', [-1.1088577508926392, -4.682539939880371], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kid Chocolate', [-3.7338576316833496, -0.7436404228210449], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Foreman', [-4.10885763168335, -0.23056699335575104], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Johnny Greco', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Gary Kasparov'}

Key: 263364351530236104529878618221356339280
Value: {'question': 'Who directed Good Morning Vietnam?', 'responses': [('Barry Levinson', [-0.3140384554862976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3140384554862976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3140384554862976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob Reiner', [-2.6148197650909424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3140384554862976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3140384554862976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3140384554862976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3140384554862976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3140384554862976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Levinson', [-0.3140384554862976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Barry Levinson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Barry Levinson'}

Key: 131370138589744861108877479913920041808
Value: {'question': "What was Bette Davis's real first name?", 'responses': [('Mary Frances', [-0.5110598206520081, -2.5039589405059814], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethel', [-3.8391847610473633, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.5110598206520081, -0.31645891070365906], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.5110598206520081, -0.31645891070365906], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elsie', [-4.659497261047363, -0.04195462167263031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Belle', [-0.5110598206520081, -2.3164589405059814], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eugenia', [-3.0403566360473633, -0.08129486441612244], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eugenia', [-3.0403566360473633, -0.08129486441612244], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.5110598206520081, -0.31645891070365906], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-0.5110598206520081, -0.31645891070365906], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mary Frances', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Ruth'}

Key: 134823944242563590540537969890392563995
Value: {'question': 'In which sport did Hollywood star Sonja Henie win Olympic Gold?', 'responses': [('Figure Skating', [-0.6709063649177551, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice skating', [-0.9834063649177551, -1.2080727815628052], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Figure Skating', [-0.6709063649177551, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Skating', [-2.8584063053131104, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice Skating', [-0.9834063649177551, -0.9580727815628052], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Figure Skating', [-0.6709063649177551, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Figure skating', [-0.6709063649177551, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Figure Skating', [-0.6709063649177551, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Figure Skating', [-0.6709063649177551, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Figure Skating', [-0.6709063649177551, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Figure Skating', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Ice Skating'}

Key: 104919144256012515767018783668691366367
Value: {'question': "In which decade was Alzheimer's disease first clinically described?", 'responses': [('The 1980', [-3.167999029159546, -0.04398319125175476, -0.12692804634571075, -0.3132617473602295, -3.522797107696533, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('19th century', [-0.042999111115932465, 0.0, -0.42870065569877625, -2.4639394283294678, -0.830218493938446, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1800s', [-0.042999111115932465, 0.0, -1.0537006855010986, -0.06196761503815651, 0.0, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1800', [-0.042999111115932465, 0.0, -1.0537006855010986, -0.06196761503815651, 0.0, -2.0193469524383545], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1900', [-0.042999111115932465, 0.0, -0.42870065569877625, -0.08893945813179016, -0.825939416885376, -1.2248057126998901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1800s', [-0.042999111115932465, 0.0, -1.0537006855010986, -0.06196761503815651, 0.0, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1906', [-0.042999111115932465, 0.0, -0.42870065569877625, -0.08893945813179016, -0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1800s', [-0.042999111115932465, 0.0, -1.0537006855010986, -0.06196761503815651, 0.0, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1900s', [-0.042999111115932465, 0.0, -0.42870065569877625, -0.08893945813179016, -0.825939416885376, -0.47480571269989014], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1800s', [-0.042999111115932465, 0.0, -1.0537006855010986, -0.06196761503815651, 0.0, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The 1980', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290392, 'reference': 'First decade'}

Key: 96233378685820066177191275564384480587
Value: {'question': 'What star sign is Glenda Jackson?', 'responses': [('Pisces', [-1.9854280948638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scorpio', [-2.4854280948638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gemini', [-1.8604280948638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gemini', [-1.8604280948638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capricorn', [-2.2354280948638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo', [-2.8604280948638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gemini', [-1.8604280948638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gemini', [-1.8604280948638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scorpio', [-2.4854280948638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capricorn', [-2.2354280948638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pisces', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1935496040981333, 'reference': 'Taurus'}

Key: 125362217489750988104121721680772121615
Value: {'question': 'Who won Super Bowl XXV?', 'responses': [('Tampa Bay Buccaneers', [-1.816014289855957, 0.0, -0.10243461281061172, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New York Giants', [-1.316014289855957, -0.26529303193092346, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-0.8160142302513123, 0.0, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tampa Bay Buccaneers', [-1.816014289855957, 0.0, -0.10243461281061172, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tampa Bay Bucs', [-1.816014289855957, 0.0, -2.8524346351623535, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tampa Bay Buccaneers', [-1.816014289855957, 0.0, -0.10243461281061172, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tampa Bay Buccaneers', [-1.816014289855957, 0.0, -0.10243461281061172, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tampa Bay Buccaneers', [-1.816014289855957, 0.0, -0.10243461281061172, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Buffalo Bills', [-1.316014289855957, -2.5152931213378906, 0.0, -0.038326092064380646], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-0.8160142302513123, 0.0, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tampa Bay Buccaneers', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'New York Giants'}

Key: 231849347051036993919710383258998616470
Value: {'question': 'Robert Mueller Municipal Airport is in which US state?', 'responses': [('Oregon', [-3.0296003818511963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-2.7796003818511963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.0296003818511963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-3.1546003818511963, -1.2013651132583618], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.0296003818511963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-4.154600143432617, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Jersey', [-3.1546003818511963, -1.2013651132583618], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.0296003818511963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-1.0296003818511963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Florida', [-2.9046003818511963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oregon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Texas'}

Key: 212277403717066527502764818418537101893
Value: {'question': 'In what year were women first admitted to Harvard?', 'responses': [('1977', [0.0, 0.0, -0.0944129079580307, -0.5457899570465088, -0.24162697792053223, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1977', [0.0, 0.0, -0.0944129079580307, -0.5457899570465088, -0.24162697792053223, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1976', [0.0, 0.0, -0.0944129079580307, -0.5457899570465088, -2.9916269779205322, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1977', [0.0, 0.0, -0.0944129079580307, -0.5457899570465088, -0.24162697792053223, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970', [0.0, 0.0, -0.0944129079580307, -0.5457899570465088, -2.8666269779205322, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1977', [0.0, 0.0, -0.0944129079580307, -0.5457899570465088, -0.24162697792053223, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1961', [0.0, 0.0, -0.0944129079580307, -2.295789957046509, -2.994396686553955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1879', [0.0, 0.0, -2.4069128036499023, -0.560084342956543, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980', [0.0, 0.0, -0.0944129079580307, -2.545789957046509, -0.8499792814254761, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1977', [0.0, 0.0, -0.0944129079580307, -0.5457899570465088, -0.24162697792053223, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1977', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': '1969'}

Key: 59091154192150993839033613441229543530
Value: {'question': 'Who had 70s No 1 hit with Show and Tell?', 'responses': [('Elton John', [-3.3592770099639893, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry White', [-4.60927677154541, -2.799281597137451, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Astley', [-2.9842770099639893, -0.1820710301399231, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Knack', [-0.9842770099639893, -3.2318356037139893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jackson Five', [-0.9842770099639893, -2.2318356037139893, -0.6623854041099548], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweet Dreams', [-4.60927677154541, -2.6255033016204834, -0.09362326562404633], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Rubettes', [-0.9842770099639893, -3.4193356037139893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jackson Five', [-0.9842770099639893, -2.2318356037139893, -0.6623854041099548], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Manil', [-4.60927677154541, -0.236781507730484, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Real Thing', [-0.9842770099639893, -3.2318356037139893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Elton John', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Al Wilson'}

Key: 160976786736071627638273556586770509819
Value: {'question': 'Balice international airport is in which country?', 'responses': [('Ireland', [-2.9841883182525635, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albania', [-2.9841883182525635, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lithuania', [-1.9841883182525635, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Romania', [-3.7341883182525635, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [-3.8591883182525635, -0.13458658754825592], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [-1.8591883182525635, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-4.359188079833984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albania', [-2.9841883182525635, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bulgaria', [-4.109188079833984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-2.4841883182525635, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ireland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Poland'}

Key: 263171183636945526207966135033027933846
Value: {'question': 'What was the first name of the original food manufacturer Mr. Heinz?', 'responses': [('Henry', [-1.316558837890625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles', [-2.285308837890625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-2.785308837890625, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('H', [-4.379058837890625, -1.0853185653686523], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Karl', [-4.566558837890625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph', [-5.035308837890625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles', [-2.285308837890625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Antony', [-4.472808837890625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-2.785308837890625, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anthony', [-2.754058837890625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Henry', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460894, 'reference': 'Henry'}

Key: 186500353307380592323903339731287435565
Value: {'question': 'Panama proclaimed independence in 1903 from which country?', 'responses': [('Columbia', [-1.7140192985534668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.3390193581581116, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.3390193581581116, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.3390193581581116, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.3390193581581116, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.3390193581581116, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.3390193581581116, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.7140192985534668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colombia', [-0.3390193581581116, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbia', [-1.7140192985534668, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Columbia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Columbia'}

Key: 113337858649939442265671630985285610422
Value: {'question': 'How old was Ronald Reagan when he became US President?', 'responses': [('69', [0.0, -0.4293736219406128, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('42 years', [0.0, -1.3043736219406128, -0.7878465056419373, -2.6949362754821777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('49', [0.0, -1.3043736219406128, -2.350346565246582, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.4293736219406128, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('49', [0.0, -1.3043736219406128, -2.350346565246582, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.4293736219406128, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.4293736219406128, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.4293736219406128, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('41', [0.0, -1.3043736219406128, -1.537846565246582, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('69', [0.0, -0.4293736219406128, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '69', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': '69'}
>>>>>>> 811d839 (new run)

Key: 122056861407679908085468613626097755985
Value: {'question': 'Which Iowa-born artist painted American Gothic and Spring Turning?', 'responses': [('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grant Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Grant Wood', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Grant Wood'}

Key: 49149507427707804655075809432066385847
Value: {'question': 'Which country does the airline Garuda come from?', 'responses': [('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indonesia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Indonesia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Indonesia'}

Key: 60470791367772132573084208911304249826
<<<<<<< HEAD
Value: {'question': 'To ten thousand square miles, what is the area of Idaho?', 'responses': [('198,542', [-0.0345723032951355, -2.4656858444213867, -2.835808277130127, -2.036440372467041, -0.4586886763572693, -2.0470519065856934, -2.488002300262451, -2.317697525024414], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('83,557 square', [-0.0345723032951355, -0.7156858444213867, -0.12158583104610443, 0.0, -0.3795638978481293, -2.1174206733703613, -2.68204402923584, -1.079192876815796], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('57,000 sq', [-0.0345723032951355, -0.9656858444213867, -2.672095537185669, -0.24665114283561707, -1.4419366121292114, -0.38340848684310913, 0.0, -1.929957628250122], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('89,212 miles', [-0.0345723032951355, -0.7156858444213867, -3.7465858459472656, 0.0, -2.0832176208496094, -1.513490915298462, -2.6608786582946777, -3.185208559036255], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('198,088', [-0.0345723032951355, -2.4656858444213867, -2.835808277130127, -2.036440372467041, -0.4586886763572693, -1.5470517873764038, -3.1868865489959717, -2.399211883544922], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,260 square miles', [-0.0345723032951355, -0.9656858444213867, -1.797095537185669, -1.4641057252883911, -2.652695417404175, -1.3204705715179443, -1.0430097579956055, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('50,140', [-0.0345723032951355, -0.9656858444213867, -2.547095537185669, -0.4841911792755127, -2.5474843978881836, -2.4231014251708984, -1.2029237747192383, -1.049410104751587], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('83,533 square', [-0.0345723032951355, -0.7156858444213867, -0.12158583104610443, 0.0, -0.3795638978481293, -2.7424206733703613, -2.227940320968628, -0.816256582736969], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('50,333 square', [-0.0345723032951355, -0.9656858444213867, -2.547095537185669, -0.4841911792755127, -2.6724843978881836, -2.561387538909912, -2.22238826751709, -0.8239952325820923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('198225', [-0.0345723032951355, -2.4656858444213867, -2.835808277130127, -2.036440372467041, -3.708688735961914, -2.5336461067199707, -3.048704147338867, -0.6971346139907837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '198,542', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': '82,751 square miles'}

Key: 205289216442866536138187278701515307724
Value: {'question': 'Sarah Vaughan first joined which band as singer?', 'responses': [("Louis Armstrong's Hot", [-3.5622336864471436, -0.11967968195676804, -1.021009922027588, 0.0, -1.7143850326538086], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmie Luncefords Orchestra', [-4.124733924865723, 0.0, 0.0, -1.6004126071929932, -1.628514051437378], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Billy Eckstine's", [-4.249733924865723, -0.05488219112157822, 0.0, -0.4579302668571472, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duke Ellington and his orchestra', [-2.9372336864471436, 0.0, -2.994887113571167, -0.3969707489013672, -0.7586241960525513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Savoy Imperials', [-2.3122336864471436, -1.6914831399917603, -2.9960474967956543, -0.21819491684436798, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sarah Vaughn first joined Cab', [-4.937233924865723, -2.2378222942352295, -0.3082793354988098, 0.0, -4.177983283996582], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Ray Charles's band", [-4.812233924865723, -0.30580049753189087, -2.060375928878784, -1.164231777191162, -0.7464535236358643], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Bob Crosby's band", [-4.562233924865723, -0.07290814816951752, -0.6314650774002075, 0.0, -1.8450367450714111], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Duke Ellington's orchestra", [-2.9372336864471436, 0.0, -0.8698871731758118, 0.0, -2.314399242401123], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Apollo Theater in New', [-2.3122336864471436, -4.753983020782471, -2.1632237434387207, -3.9037601947784424, -1.521304965019226], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Louis Armstrong's Hot", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Earl Hines'}

Key: 330407022483926413160105664294134650049
Value: {'question': 'Elmas international airport is in which country?', 'responses': [('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-3.847975969314575, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-3.722975969314575, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.5354759097099304, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cyprus', [-2.660475969314575, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Turkey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Italy'}

Key: 49352685196184792937678106306393922036
Value: {'question': 'Which pioneering aviator had a plane called Percival Gull?', 'responses': [('George Mallory', [-4.598690986633301, -1.908139944076538, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Alan Cob', [-1.6611907482147217, -1.143309473991394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Richard Atten', [-1.6611907482147217, -2.0808095932006836, -4.106374263763428], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Cobham', [-3.0986907482147217, -0.2399408519268036, -0.31348463892936707], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Pearse', [-3.7236907482147217, -0.47231000661849976, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-1.6611907482147217, -0.5358132123947144, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Alan Cob', [-1.6611907482147217, -1.143309473991394, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Richard Whit', [-1.6611907482147217, -2.0808095932006836, -2.7938742637634277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-1.6611907482147217, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-1.6611907482147217, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George Mallory', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Jean Batten'}

Key: 113872322750394112454757816259262059079
Value: {'question': 'Which British political figure became Baroness Kesteven?', 'responses': [('Baroness Thatcher', [-2.9096081256866455, -0.18134519457817078, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [-1.2846081256866455, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwina Currie', [-3.7846081256866455, 0.0, -0.5302586555480957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [-1.2846081256866455, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baroness Thatcher', [-2.9096081256866455, -0.18134519457817078, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [-1.2846081256866455, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tony Benn', [-1.9096081256866455, -0.1902991682291031, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tony Benn', [-1.9096081256866455, -0.1902991682291031, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baroness Thatcher', [-2.9096081256866455, -0.18134519457817078, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [-1.2846081256866455, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Baroness Thatcher', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'Margaret Thatcher'}

Key: 39170248099916900558289586686058872864
Value: {'question': 'Henri Becquerel shared a Nobel prize for his work in discovering what?', 'responses': [('Radium', [-2.3548436164855957, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radioactive elements', [-2.8548436164855957, -1.1820684671401978], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radioactivity', [-0.9798436164855957, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('X-', [-3.8548436164855957, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radioactivity', [-1.1048436164855957, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radioactivity', [-1.1048436164855957, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-2.3548436164855957, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radioactivity', [-1.1048436164855957, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radioactivity', [-1.1048436164855957, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('radioactivity', [-1.1048436164855957, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Radium', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Radioactivity'}

Key: 229727392527608249897353591410444346570
Value: {'question': 'Who was the first white music star to record on Atlantic, through its sister label Atco?', 'responses': [('Jerry Lee Lewis', [-2.9286599159240723, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bo Didd', [-4.428659915924072, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johnny Ace', [-3.9286599159240723, -1.1027740240097046, -0.10649567097425461], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackie Brenston', [-4.303659915924072, -2.293837308883667, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Lee Lewis', [-2.9286599159240723, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Dorsey', [-4.053659915924072, -2.7230541706085205, -0.06669709831476212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Lee Lewis', [-2.9286599159240723, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Platters', [-2.6786599159240723, -1.075670599937439, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fats Domino', [-2.4286599159240723, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Darin', [-3.3036599159240723, -0.9428282380104065, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jerry Lee Lewis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Bobby Darin'}

Key: 57562942092118846267439472803201849858
Value: {'question': 'Who took the assumed name Sebastian Melmoth when living in Paris?', 'responses': [('Jean de', [-4.905977249145508, -1.2434089183807373], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edgar Allen', [-1.0309773683547974, -1.4061501026153564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edgar Allan', [-1.0309773683547974, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Sand', [-3.405977249145508, -0.7303944826126099], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Baudelaire', [-2.030977249145508, -0.5643273591995239], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Baudelaire', [-2.030977249145508, -0.5643273591995239], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baudelaire', [-4.405977249145508, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Victor Hugo', [-4.155977249145508, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edgar Allan', [-1.0309773683547974, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Byron', [-3.405977249145508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jean de', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Oscar Wilde'}

Key: 331621212332039734995336435581409108222
Value: {'question': 'Who signed the Pacific Security Treaty with the USA in 1951?', 'responses': [('The Japanese', [-3.324124336242676, -2.2115797996520996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-0.6991244554519653, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-0.6991244554519653, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-0.6991244554519653, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-0.6991244554519653, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-0.6991244554519653, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Soviet', [-3.324124336242676, -1.83657968044281], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The US', [-3.324124336242676, -2.8365797996520996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Douglas', [-3.824124336242676, -0.3180460035800934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eisenhower', [-4.699124336242676, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Japanese', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Australia & New Zealand'}

Key: 1580797465582322765419462436601517782
Value: {'question': 'How many miles long is the canal which links the Pacific and Atlantic Oceans?', 'responses': [('383', [0.0, -1.7873643636703491, -2.688575267791748, -3.072977066040039], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,6', [0.0, -1.2873643636703491, -0.6630604267120361, -2.823669195175171], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4,1', [0.0, -2.4123644828796387, -1.4795366525650024, -2.0924203395843506], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('210', [0.0, -1.7873643636703491, -2.201467514038086, -1.8185813426971436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('101', [0.0, -1.5373643636703491, -2.112968921661377, -3.4115238189697266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('176', [0.0, -1.5373643636703491, -2.362968921661377, -2.9577012062072754], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('42.', [0.0, -2.4123644828796387, -2.979536533355713, -3.3450512886047363], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,4', [0.0, -1.2873643636703491, -0.6630604267120361, -2.698669195175171], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3,7', [0.0, -1.7873643636703491, -1.063575267791748, -0.9823058247566223], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('46', [0.0, -2.4123644828796387, -2.979536533355713, -2.608480215072632], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '383', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': '50 miles'}

Key: 268758124969872175167926290803148213661
Value: {'question': 'Who founded the off-Broadway theater where Hair had its premier?', 'responses': [('Joseph Papp', [-0.621499240398407, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.621499240398407, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harold Clurman', [-3.5746243000030518, -0.7743208408355713, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.621499240398407, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Houseman', [-2.9027493000030518, -1.1649045944213867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wulp', [-2.9027493000030518, -4.608202934265137, -1.3261690139770508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Papp', [-2.2308743000030518, -0.053035616874694824, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.621499240398407, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.621499240398407, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.621499240398407, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joseph Papp', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Joseph Papp'}

Key: 339903417967038959524902862720727815523
Value: {'question': "Established in 1919, which is the world's oldest surviving airline?", 'responses': [('KLM', [-0.4184451997280121, -0.6763525605201721], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Royal Air', [-3.293445110321045, -0.4398341476917267], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM Dutch', [-0.4184451997280121, -3.8013525009155273], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM Royal', [-0.4184451997280121, -1.1763525009155273], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM,', [-0.4184451997280121, -3.0513525009155273], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Royal Dutch', [-3.293445110321045, -1.8148341178894043], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM', [-0.4184451997280121, -0.6763525605201721], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lufthansa', [-3.043445110321045, -0.08485691249370575], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cathay', [-4.418445110321045, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lufthansa', [-3.043445110321045, -0.08485691249370575], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'KLM', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'KLM'}

Key: 251430741191328300808124836569128187120
Value: {'question': '"Which US First Lady said, ""No one can make you feel interior unless you consent?"""', 'responses': [('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lady Bird Johnson', [-3.011324882507324, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.2613249123096466, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lady Bird Johnson', [-3.011324882507324, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Eleanor Roosevelt', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Eleanor Roosevelt'}

Key: 156993193520069748257208725735874595891
Value: {'question': 'Who won super bowl X?', 'responses': [('Washington Football', [-3.653723955154419, -3.3477635383605957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-0.46622389554977417, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steelers', [-4.34122371673584, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-0.46622389554977417, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Bay', [-3.466223955154419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh Steelers', [-1.841223955154419, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas cowboys', [-0.46622389554977417, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-0.46622389554977417, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-0.46622389554977417, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-0.46622389554977417, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Washington Football', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Pittsburgh'}

Key: 301786368865695038725593009141202656879
Value: {'question': "Who brought to an end Jahangir Khan's long unbeaten run of success in squash in the 80s?", 'responses': [("England's", [-3.600864887237549, -0.06196761503815651, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("England's", [-3.600864887237549, -0.06196761503815651, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('John Walker', [-2.975864887237549, -2.685516357421875, -0.07045131176710129], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Imran Khan', [-3.538364887237549, -0.4085572361946106, -0.11985692381858826], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("Australia's", [-3.663364887237549, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jansher Khan', [-1.5383650064468384, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jansher Khan', [-1.5383650064468384, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Amjad Khan', [-2.163364887237549, -0.8300777673721313, -0.09087500721216202], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("Australia's", [-3.663364887237549, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jan-O', [-3.350864887237549, -0.7780429720878601, -0.41200384497642517], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "England's", 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Ross Norman'}

Key: 122725637288521254644216841310314437296
Value: {'question': 'Jomo Kenyatta was born into which tribe?', 'responses': [('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.03804141283035278, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'To ten thousand square miles, what is the area of Idaho?', 'responses': [('83,642 square', [0.0, -0.46879494190216064, -0.16138893365859985, 0.0, -1.4481931924819946, -2.3765861988067627, -2.507476329803467, -1.2336170673370361], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('83,665 square', [0.0, -0.46879494190216064, -0.16138893365859985, 0.0, -1.4481931924819946, -2.3765861988067627, -2.1201140880584717, -1.1869275569915771], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('83,630', [0.0, -0.46879494190216064, -0.16138893365859985, 0.0, -1.4481931924819946, -2.0015861988067627, -1.8731961250305176, -0.5643995404243469], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('83,636', [0.0, -0.46879494190216064, -0.16138893365859985, 0.0, -1.4481931924819946, -2.0015861988067627, -2.2481961250305176, -0.7971107363700867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('19,419 square', [0.0, -2.343794822692871, -2.655616283416748, -0.7627295255661011, -2.353245496749878, -2.141890048980713, -2.34509015083313, -1.3120131492614746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('55000 km²', [0.0, -1.8437949419021606, -2.8949379920959473, -1.8253471851348877, -0.3492189943790436, -0.421283096075058, -3.963916301727295, -1.5462090969085693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('118,804', [0.0, -2.343794822692871, -2.530616283416748, -2.987905263900757, -0.2711300253868103, -2.475019931793213, -1.8233081102371216, -2.8602871894836426], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('59590 square miles', [0.0, -1.8437949419021606, -3.1449379920959473, -3.194735527038574, -2.8181328773498535, -1.6911799907684326, -1.362563133239746, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('83,600 square', [0.0, -0.46879494190216064, -0.16138893365859985, 0.0, -1.4481931924819946, -1.8765861988067627, -0.6815662980079651, -0.9360975027084351], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('53,407 square', [0.0, -1.8437949419021606, -2.7699379920959473, -0.33100149035453796, -2.4442825317382812, -2.346400499343872, -2.9760406017303467, -1.2542868852615356], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '83,642 square', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': '82,751 square miles'}

Key: 205289216442866536138187278701515307724
Value: {'question': 'Sarah Vaughan first joined which band as singer?', 'responses': [('The Mills Brothers', [-1.0652565956115723, -1.9421312808990479, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teddy Wilson band', [-4.752756595611572, -0.5743418335914612, -3.747586250305176], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Ink Spots', [-1.0652565956115723, -1.8796312808990479, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenn Miller', [-3.8152565956115723, 0.0, -0.37082192301750183], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Apollo Stars', [-1.0652565956115723, -4.317131042480469, -4.316191673278809], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Benny Goodman'", [-2.8152565956115723, 0.0, -1.3888256549835205], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dixie Cups', [-1.0652565956115723, -4.692131042480469, -2.724879503250122], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johnny Hartman', [-4.752756595611572, -1.5125226974487305, -1.3383541107177734], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Mills Brothers', [-1.0652565956115723, -1.9421312808990479, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duke Ellington', [-2.6902565956115723, 0.0, -0.5463932752609253], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Mills Brothers', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Earl Hines'}

Key: 330407022483926413160105664294134650049
Value: {'question': 'Elmas international airport is in which country?', 'responses': [('Cyprus', [-2.1705379486083984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.4205379784107208, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.4205379784107208, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.4205379784107208, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.4205379784107208, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.4205379784107208, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.4205379784107208, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-0.4205379784107208, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egypt', [-4.170537948608398, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cyprus', [-2.1705379486083984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Cyprus', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Italy'}

Key: 49352685196184792937678106306393922036
Value: {'question': 'Which pioneering aviator had a plane called Percival Gull?', 'responses': [('John Alcock', [-2.6906533241271973, -0.13047198951244354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Cobham', [-3.3156533241271973, -0.012509571388363838, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Douglas Maw', [-1.7531533241271973, -4.327953338623047, -3.389188289642334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-1.0656533241271973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-1.0656533241271973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas Bader', [-4.003153324127197, -0.11788380146026611, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-1.0656533241271973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Sir James '", [-1.7531533241271973, -3.702953577041626, -2.4971635341644287], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-1.0656533241271973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-1.0656533241271973, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Alcock', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769954, 'reference': 'Jean Batten'}

Key: 113872322750394112454757816259262059079
Value: {'question': 'Which British political figure became Baroness Kesteven?', 'responses': [('Margaret Thatcher', [-1.1726760864257812, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baroness Thatcher', [-2.6726760864257812, -0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [-1.1726760864257812, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Owen', [-3.5476760864257812, -1.232880711555481, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tony Benn', [-2.7976760864257812, -0.13458658754825592, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwina Currie', [-2.7976760864257812, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lord Carrington', [-3.0476760864257812, -1.7601447105407715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [-1.1726760864257812, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clare Short', [-4.672676086425781, -0.46940064430236816, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Heselt', [-2.7976760864257812, -0.03922560438513756, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Margaret Thatcher', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Margaret Thatcher'}

Key: 39170248099916900558289586686058872864
Value: {'question': 'Henri Becquerel shared a Nobel prize for his work in discovering what?', 'responses': [('Radioactivity', [-0.7994019389152527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radiation', [-2.6744019985198975, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-1.6119019985198975, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radioactivity', [-0.7994019389152527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radioactive elements', [-2.9244019985198975, -1.204284906387329], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radioactivity', [-0.7994019389152527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radioactivity', [-0.7994019389152527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radion', [-1.6119019985198975, -1.5019290447235107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-1.6119019985198975, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-1.6119019985198975, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Radioactivity', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Radioactivity'}

Key: 229727392527608249897353591410444346570
Value: {'question': 'Who was the first white music star to record on Atlantic, through its sister label Atco?', 'responses': [('Bobby Vee', [-3.4357049465179443, -2.674752950668335, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Little Richard', [-2.1857049465179443, -0.13458658754825592, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Tops', [-2.5607049465179443, -2.911776542663574, -1.0444185733795166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Otis Redding', [-4.310705184936523, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ray Charles', [-2.1857049465179443, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roy Orbison', [-4.185705184936523, -0.2502065598964691, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Anka', [-4.685705184936523, -0.34878039360046387, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Platters', [-2.5607049465179443, -1.7867766618728638, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Shirelles', [-2.5607049465179443, -2.661776542663574, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Lee Lewis', [-3.1857049465179443, -0.08377019315958023, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bobby Vee', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Bobby Darin'}

Key: 57562942092118846267439472803201849858
Value: {'question': 'Who took the assumed name Sebastian Melmoth when living in Paris?', 'responses': [('William Blake', [-3.65606951713562, -1.6090081930160522, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry James', [-3.65606951713562, -0.4282090961933136, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edgar Allan Poe', [-1.3435695171356201, -0.2383444905281067, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Samuel Beckett', [-3.78106951713562, -1.5521374940872192, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [-1.5935695171356201, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edgar Allen Poe', [-1.3435695171356201, -1.550844430923462, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edgar Allan Poe', [-1.3435695171356201, -0.2383444905281067, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Baudelaire', [-1.9685695171356201, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edgar Allan Poe', [-1.3435695171356201, -0.2383444905281067, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Baudelaire', [-1.9685695171356201, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'William Blake', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Oscar Wilde'}

Key: 331621212332039734995336435581409108222
Value: {'question': 'Who signed the Pacific Security Treaty with the USA in 1951?', 'responses': [('Joji', [-4.082740783691406, -2.2673227787017822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Stalin', [-3.395240545272827, -0.4509372115135193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('President Sy', [-2.957740545272827, -2.9598276615142822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Murphy', [-4.270240783691406, -2.602687120437622], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-2.082740545272827, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-3.020240545272827, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prime Minister', [-1.4577405452728271, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Hide', [-3.832740545272827, -3.3091068267822266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King George', [-3.957740545272827, -1.4241355657577515], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('President Truman', [-2.957740545272827, -1.8348276615142822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joji', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Australia & New Zealand'}

Key: 1580797465582322765419462436601517782
Value: {'question': 'How many miles long is the canal which links the Pacific and Atlantic Oceans?', 'responses': [('100', [0.0, -1.5219669342041016, -2.1236236095428467, -1.0539884567260742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1,8', [0.0, -1.5219669342041016, -1.3736236095428467, -2.218207359313965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('175', [0.0, -1.5219669342041016, -2.6236236095428467, -2.1959261894226074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('150', [0.0, -1.5219669342041016, -2.6236236095428467, -0.7432028651237488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,1', [0.0, -1.3969669342041016, -0.41820889711380005, -2.239710569381714], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,0', [0.0, -1.3969669342041016, -0.41820889711380005, -1.1147105693817139], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('11', [0.0, -1.5219669342041016, -2.4986236095428467, -3.361499071121216], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('21,', [0.0, -1.7719669342041016, -2.594914436340332, -2.1553549766540527], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('200', [0.0, -1.7719669342041016, -1.8449143171310425, -0.33256739377975464], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('430', [0.0, -2.2719669342041016, -2.6840932369232178, -2.0572054386138916], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '100', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': '50 miles'}

Key: 268758124969872175167926290803148213661
Value: {'question': 'Who founded the off-Broadway theater where Hair had its premier?', 'responses': [('Joseph Papp', [-0.4181324541568756, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.4181324541568756, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.4181324541568756, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.4181324541568756, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.4181324541568756, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.4181324541568756, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.4181324541568756, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Papp', [-1.8556324243545532, -0.049333903938531876, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Butler', [-3.5509450435638428, -0.24167856574058533, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Papp', [-0.4181324541568756, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joseph Papp', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Joseph Papp'}

Key: 339903417967038959524902862720727815523
Value: {'question': "Established in 1919, which is the world's oldest surviving airline?", 'responses': [('KLM', [-0.4150311350822449, -0.3874899744987488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Qantas', [-2.5400311946868896, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM', [-0.4150311350822449, -0.3874899744987488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM', [-0.4150311350822449, -0.3874899744987488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM', [-0.4150311350822449, -0.3874899744987488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM Royal', [-0.4150311350822449, -1.2624900341033936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM Royal', [-0.4150311350822449, -1.2624900341033936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM Royal', [-0.4150311350822449, -1.2624900341033936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Air India', [-2.2900311946868896, -0.6923249363899231], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('KLM', [-0.4150311350822449, -0.3874899744987488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'KLM', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'KLM'}

Key: 251430741191328300808124836569128187120
Value: {'question': '"Which US First Lady said, ""No one can make you feel interior unless you consent?"""', 'responses': [('Eleanor Roosevelt', [-0.4542972445487976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.4542972445487976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacqueline Kennedy', [-2.8292973041534424, -0.05488219112157822, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacqueline Kennedy', [-2.8292973041534424, -0.05488219112157822, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacqueline Kennedy', [-2.8292973041534424, -0.05488219112157822, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.4542972445487976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.4542972445487976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.4542972445487976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.4542972445487976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eleanor Roosevelt', [-0.4542972445487976, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Eleanor Roosevelt', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Eleanor Roosevelt'}

Key: 156993193520069748257208725735874595891
Value: {'question': 'Who won super bowl X?', 'responses': [('Dallas Cowboys', [-1.650674819946289, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pittsburgh Steelers', [-1.900674819946289, -0.8448234796524048, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pittsburgh Steelers', [-1.900674819946289, -0.8448234796524048, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Bay Packers', [-1.275674819946289, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Bay Packers', [-1.275674819946289, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh Steelers', [-1.275674819946289, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh Steelers', [-1.275674819946289, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-1.650674819946289, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh Steelers', [-1.275674819946289, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Bay Packers', [-1.275674819946289, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dallas Cowboys', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Pittsburgh'}

Key: 301786368865695038725593009141202656879
Value: {'question': "Who brought to an end Jahangir Khan's long unbeaten run of success in squash in the 80s?", 'responses': [('John Walker', [-2.641732692718506, -2.9694595336914062, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jansher Khan', [-1.3292328119277954, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Australia's", [-3.391732692718506, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thierry Lincou', [-4.110482692718506, -0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jansher Khan', [-1.3292328119277954, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jansher Khan', [-1.3292328119277954, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jansher Khan', [-1.3292328119277954, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Palmer', [-2.204232692718506, -0.8940180540084839, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australian Rodney D', [-3.610482692718506, -3.916128158569336, -2.8889853954315186], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Nicol', [-2.891732692718506, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Walker', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Ross Norman'}

Key: 122725637288521254644216841310314437296
Value: {'question': 'Jomo Kenyatta was born into which tribe?', 'responses': [('Kikuyu', [-0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kikuyu', [-0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kikuyu', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Kikuyu'}

Key: 146896398869692673297925107012236880676
<<<<<<< HEAD
Value: {'question': 'Bryan Abrams, Sam Walters, Mark Calderon and Kevin Thornton formed which group?', 'responses': [('Third Eye Blind', [-4.766204357147217, -0.830185055732727, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The Commod', [-4.766204357147217, -0.6395360827445984, -2.322288990020752, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Real McKenz', [-0.7662043571472168, -3.6913986206054688, -1.1529520750045776, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New Kids on', [-0.7662043571472168, -2.4413986206054688, -1.7338201999664307, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A. B.', [-3.266204357147217, -2.997786521911621, -4.290421009063721, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A-Ha', [-3.266204357147217, -1.560286521911621, -1.3562166690826416, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human League', [-0.7662043571472168, -3.8163986206054688, -0.28115010261535645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Commodores', [-0.7662043571472168, -2.3163986206054688, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jacksons', [-0.7662043571472168, -3.9413986206054688, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boyz II Men', [-3.641204357147217, -0.04737302288413048, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Third Eye Blind', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Color Me Badd'}

Key: 4216313867758261359858286331956722274
Value: {'question': 'When was the Scrabble World championship first held?', 'responses': [('1997', [0.0, 0.0, 0.0, -2.371279239654541, -2.3422632217407227, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1989', [0.0, 0.0, 0.0, -1.9962793588638306, -1.5102719068527222, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1986', [0.0, 0.0, 0.0, -1.9962793588638306, -2.0102720260620117, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1989', [0.0, 0.0, 0.0, -1.9962793588638306, -1.5102719068527222, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1996', [0.0, 0.0, 0.0, -2.371279239654541, -2.3422632217407227, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1966', [0.0, 0.0, 0.0, -1.4962793588638306, -2.1912002563476562, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1966', [0.0, 0.0, 0.0, -1.4962793588638306, -2.1912002563476562, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1961', [0.0, 0.0, 0.0, -1.4962793588638306, -2.8162002563476562, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1991', [0.0, 0.0, 0.0, -2.371279239654541, -2.2172632217407227, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1989', [0.0, 0.0, 0.0, -1.9962793588638306, -1.5102719068527222, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1997', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': '1991'}
=======
Value: {'question': 'Bryan Abrams, Sam Walters, Mark Calderon and Kevin Thornton formed which group?', 'responses': [('The Real Mc', [-0.7947020530700684, -2.4880075454711914, -2.317033529281616], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Five Star', [-3.2947020530700684, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5ive', [-2.4197020530700684, -1.14049232006073, -0.17158952355384827], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Edition', [-3.5447020530700684, -0.7318225502967834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The 4', [-0.7947020530700684, -3.7380075454711914, -1.4879995584487915], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('B5', [-4.044702053070068, -1.111789584159851, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Real Deal', [-0.7947020530700684, -2.4880075454711914, -3.082658529281616], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3T', [-2.4197020530700684, -1.39049232006073, -0.3699090778827667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Fuge', [-0.7947020530700684, -3.3630075454711914, -0.1902991682291031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A-Ha', [-3.1697020530700684, -1.8593871593475342, -1.267791748046875], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Real Mc', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Color Me Badd'}

Key: 4216313867758261359858286331956722274
Value: {'question': 'When was the Scrabble World championship first held?', 'responses': [('1974', [0.0, 0.0, 0.0, -1.0205276012420654, -2.3679039478302, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1976', [0.0, 0.0, 0.0, -1.0205276012420654, -1.8679039478302002, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1977', [0.0, 0.0, 0.0, -1.0205276012420654, -1.9929039478302002, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1973', [0.0, 0.0, 0.0, -1.0205276012420654, -2.3679039478302, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1978', [0.0, 0.0, 0.0, -1.0205276012420654, -2.3679039478302, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, -2.3955276012420654, -2.4829487800598145, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1999', [0.0, 0.0, 0.0, -2.1455276012420654, -1.602940320968628, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1956', [0.0, 0.0, 0.0, -2.3955276012420654, -1.107948899269104, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -1.5205276012420654, -1.6142430305480957, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1988', [0.0, 0.0, 0.0, -1.8955276012420654, -2.0499935150146484, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1974', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': '1991'}
>>>>>>> 811d839 (new run)

Key: 24301856585106039922705646957603912112
Value: {'question': 'Arlanda international airport is in which country?', 'responses': [('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sweden', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Sweden'}

Key: 53493738472169836672569973090797325790
<<<<<<< HEAD
Value: {'question': 'What year was the centenary of Arkansas joining the Union?', 'responses': [('1991', [0.0, 0.0, -0.575939416885376, -0.7283578515052795, -0.28423911333084106, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1883', [0.0, 0.0, -0.825939416885376, -2.039463520050049, -0.9988044500350952, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1863', [0.0, 0.0, -0.825939416885376, -1.4144634008407593, -1.0426058769226074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1920', [0.0, 0.0, -0.575939416885376, -2.3533577919006348, -0.7246109247207642, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1921', [0.0, 0.0, -0.575939416885376, -2.3533577919006348, -0.7246109247207642, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1875', [0.0, 0.0, -0.825939416885376, -1.7894634008407593, -2.464094638824463, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1990', [0.0, 0.0, -0.575939416885376, -0.7283578515052795, -2.4092390537261963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1996', [0.0, 0.0, -0.575939416885376, -0.7283578515052795, -2.6592390537261963, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1864', [0.0, 0.0, -0.825939416885376, -1.4144634008407593, -1.9176058769226074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1987', [0.0, 0.0, -0.575939416885376, -1.8533577919006348, -1.7651357650756836, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1991', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': '1936'}

Key: 103796998466908453438328071639281647336
Value: {'question': 'Which singer formed his own Berlee record label?', 'responses': [('Elvis Presley', [-2.8800764083862305, -0.3943478465080261], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince', [-2.3800764083862305, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Collins', [-2.8800764083862305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Collins', [-2.8800764083862305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Collins', [-2.8800764083862305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis Presley', [-2.8800764083862305, -0.3943478465080261], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul McCartney', [-3.6300764083862305, -0.8432037234306335], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dion', [-4.6300764083862305, -1.2951968908309937], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('B.', [-4.0050764083862305, -0.4705027937889099], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cher', [-4.5050764083862305, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Elvis Presley', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Del Shannon'}

Key: 2598872478169432329643955533398354143
Value: {'question': 'Who duetted with Barbra Streisand on Till I Loved You in 1988?', 'responses': [('The Manhattan Transfer', [-3.619703769683838, -3.497163772583008, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Whitney Houston', [-3.119703769683838, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrea Bocelli', [-3.619703769683838, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Cole', [-4.557203769683838, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donna Summer', [-3.494703769683838, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neil Diamond', [-3.119703769683838, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donna Summer', [-3.494703769683838, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenny Rogers', [-2.932203769683838, -0.3408871591091156, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenny Rogers', [-2.932203769683838, -0.3408871591091156, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Michael', [-4.369703769683838, -0.9049393534660339, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Manhattan Transfer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Don Johnson'}

Key: 243465557792269031725477188344184851905
Value: {'question': 'What was first published on 21st December 1913 in the New York World?', 'responses': [('The Yellow Kid', [-0.5871676206588745, -3.0713889598846436, -0.7562787532806396, -0.3377021253108978], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The character of Peter', [-0.5871676206588745, -4.446389198303223, -0.45339077711105347, -4.650589942932129], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Yellow Kid', [-0.5871676206588745, -3.0713889598846436, -0.7562787532806396, -0.3377021253108978], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Adventures of Tom', [-0.5871676206588745, -1.9463889598846436, 0.0, -2.384565591812134], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('the story "The', [-3.712167739868164, -2.674743413925171, -2.087980270385742, -0.24584980309009552], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"The Kiss"', [-2.337167739868164, -0.48993420600891113, -4.094301223754883, -0.34594741463661194], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('A Christmas carol', [-2.837167739868164, -2.324876070022583, -3.2279458045959473, -0.2923015356063843], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Jungle by Upton', [-0.5871676206588745, -2.8213889598846436, -1.1723287105560303, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Great Gatsby', [-0.5871676206588745, -2.5713889598846436, -1.3285720348358154, -0.22080403566360474], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The first installment of', [-0.5871676206588745, -1.9463889598846436, -3.6204397678375244, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Yellow Kid', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'A crossword puzzle'}

Key: 31154385772208322335914570337316954002
Value: {'question': 'What finally knocked One Sweet Day off the No 1 position in the charts in the 90s?', 'responses': [('A little song', [-2.6818251609802246, -3.0693836212158203, -1.6617801189422607], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('When the music', [-4.056825160980225, -1.931341290473938, -4.417504787445068], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Celine Dion', [-2.4318251609802246, 0.0, -2.3267252445220947], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"Waterfalls', [-2.4318251609802246, -4.439207077026367, -0.14082355797290802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ("Britney Spears'", [-3.6818251609802246, 0.0, -0.7423009872436523], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('By 1', [-4.681825160980225, -3.78114652633667, -0.9140508770942688], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"In Your', [-2.4318251609802246, -4.439207077026367, -2.5406198501586914], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ("Mariah Carey'", [-2.1818251609802246, -0.2395448386669159, -0.5689675211906433], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('A Star Is', [-2.6818251609802246, -3.9443836212158203, -0.575939416885376], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ("Mariah Carey'", [-2.1818251609802246, -0.2395448386669159, -0.5689675211906433], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A little song', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Because You Loved Me'}

Key: 267955960749948228661903725027690629845
Value: {'question': 'In which American state are the Merril Collection and the Burke Museum of Fine Arts?', 'responses': [('Seattle,', [-2.2378222942352295, -1.5355110168457031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seattle', [-2.2378222942352295, -0.28551098704338074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-0.11282224208116531, -0.16800932586193085], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Seattle,', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Texas'}

Key: 20315429774617782646624378592628173322
Value: {'question': "Which actor paid $93,500 for the baseball which rolled between Bill Buckner's legs in game six of the 1986 World Series?", 'responses': [('Joe Pesci', [-2.9645273685455322, -1.51243257522583, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Steve Garvey', [-2.4645273685455322, -0.28439655900001526, -0.03804141283035278], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Joe Garag', [-2.9645273685455322, -3.51243257522583, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Tom Hanks', [-2.8395273685455322, -1.35308039188385, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Michael J.', [-2.5895273685455322, -1.919010043144226, -0.25192904472351074], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Tim McCarver', [-3.5895273685455322, -0.6031919717788696, 0.0], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Bill Murray', [-2.9645273685455322, -0.4413106143474579, -0.03804141283035278], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('George Brett', [-2.7145273685455322, -2.289907932281494, -0.03804141283035278], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Who won Super', [-4.589527130126953, -1.079017996788025, -0.14267508685588837], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)), ('Jerry Seinfeld', [-4.714527130126953, -0.26800158619880676, -0.042999111115932465], tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joe Pesci', 'embedding': tensor([ 0.2715, -0.1235,  0.7383,  ..., -2.7656,  0.2080, -0.7578],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Charlie Sheen'}

Key: 304930938478382788720383996921358992904
Value: {'question': "Who was Theodore Roosevelt's Vice President between 1905 and 1909?", 'responses': [('Charles Curtis', [-1.6393786668777466, -2.79571270942688, -0.07946828007698059], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas Marshall', [-1.2018786668777466, -0.5322179794311523, -0.06993623077869415], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Theodore Roosevelt', [-2.826878547668457, -0.04915346950292587, -0.30676454305648804], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas Wilson.', [-1.2018786668777466, -3.1572179794311523, -3.9773848056793213], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('His brother,', [-4.795628547668457, -1.6710158586502075, -0.430511474609375], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('John Sherman', [-3.389378547668457, -0.03689223900437355, -0.14320796728134155], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas Marshall', [-1.2018786668777466, -0.5322179794311523, -0.06993623077869415], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('William Howard Taft', [-1.5143786668777466, -0.43350812792778015, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas Marshall', [-1.2018786668777466, -0.5322179794311523, -0.06993623077869415], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Thomas R.', [-1.2018786668777466, -1.4697179794311523, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charles Curtis', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Charles W. Fairbanks'}

Key: 33280640827102717689957007688881802682
Value: {'question': 'Which nation was the first to ratify the United Nations charter in 1945?', 'responses': [('Iceland', [-4.87977409362793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-0.8797739744186401, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-3.3485240936279297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-0.8797739744186401, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-3.3797740936279297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [-4.44227409362793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-0.8797739744186401, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-0.8797739744186401, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-2.1922740936279297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Great Britain', [-3.3797740936279297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Iceland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Nicaragua'}

Key: 274249608338242007964661802160466087296
Value: {'question': 'What is the Alaskan terminus of the Alaskan Highway?', 'responses': [('Tok,', [-3.423938274383545, -0.9636589288711548], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawson City', [-1.173938274383545, -0.4073510468006134], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawson City', [-1.173938274383545, -0.4073510468006134], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delta Junction', [-1.298938274383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dead Horse', [-4.736438274383545, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delta Junction', [-1.298938274383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delta Junction', [-1.298938274383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fairbanks', [-2.923938274383545, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('What is', [-3.798938274383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delta Junction', [-1.298938274383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tok,', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Fairbanks'}

Key: 162856310908236233701211693920335344708
Value: {'question': "What was Buster Keaton's actual first name?", 'responses': [('Emmett', [-2.6972789764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emmett', [-2.6972789764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eddie', [-3.4863414764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.7285288572311401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buster', [-3.2832164764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-3.2050914764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George', [-3.1425914764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.7285288572311401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.7285288572311401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-3.2050914764404297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Emmett', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'Joseph'}

Key: 254904469063646884659019138994202922335
Value: {'question': 'From 1903 to 1958, every Pope--bar one--took which name?', 'responses': [('Clemente (', [-4.809679985046387, -3.067427635192871], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Leo (', [-3.3096797466278076, -3.4246346950531006], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Clement', [-3.8096797466278076, -0.40953299403190613], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Pius', [-2.1846797466278076, -0.23843634128570557], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The first', [-2.4346797466278076, -2.930962562561035], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('From', [-3.9346797466278076, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Benedict', [-3.4346797466278076, -0.2361014038324356], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Benedict.', [-3.4346797466278076, -3.3611013889312744], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Peter', [-2.8096797466278076, -0.1069769486784935], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The pope', [-2.4346797466278076, -2.930962562561035], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Clemente (', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Pius'}

Key: 96245766234754081845274940633608643614
Value: {'question': "Which brothers were Warner Bros' first major record success?", 'responses': [('The Four Jacks', [-0.9097439050674438, -2.5178561210632324, -1.0127007961273193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Belmon', [-0.9097439050674438, -5.080356121063232, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sons Of', [-0.9097439050674438, -4.080356121063232, -1.857227087020874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis & Dewey', [-4.534743785858154, -2.38212513923645, -4.716360092163086], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al and Bill', [-1.7847439050674438, -0.7095829844474792, -4.643257141113281], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Mills Brothers', [-0.9097439050674438, -2.5178561210632324, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dorsey brothers', [-4.284743785858154, -1.8886346817016602, -0.13726027309894562], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Three Suns', [-0.9097439050674438, -2.5178561210632324, -1.1297121047973633], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Jolson', [-1.7847439050674438, -1.084583044052124, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Fresh', [-0.9097439050674438, -2.5178561210632324, -2.0752007961273193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Four Jacks', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Everly'}

Key: 237627328673549738776281532618222920236
Value: {'question': "What was the title of Kitty Kelley's book about Elizabeth Taylor?", 'responses': [('Liz:', [-0.9696331024169922, -0.48199227452278137], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sun', [-1.8446331024169922, -2.7054522037506104], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth The', [-1.4071331024169922, -1.7279400825500488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Liz', [-2.719633102416992, -1.0307830572128296], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz:', [-0.9696331024169922, -0.48199227452278137], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth The', [-1.4071331024169922, -1.7279400825500488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth the', [-1.4071331024169922, -0.6029401421546936], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz', [-0.9696331024169922, -1.419492244720459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The world', [-1.8446331024169922, -1.9867022037506104], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz The', [-0.9696331024169922, -3.981992244720459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Liz:', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Elizabeth Taylor: The Last Star'}

Key: 179027564765484031394933204870708983636
Value: {'question': 'What are the international registration letters for a vehicle form Jordan?', 'responses': [('J.', [-1.2002768516540527, -2.947319984436035], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('JB', [-4.325276851654053, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-2.7002768516540527, -2.4290428161621094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('JR', [-3.5752768516540527, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"JJ', [-4.325276851654053, -3.4650416374206543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('JA', [-2.7002768516540527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-2.7002768516540527, -2.1790428161621094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('0', [-2.7002768516540527, -2.4290428161621094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('RJ', [-4.700276851654053, -0.06268490105867386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('J', [-1.2002768516540527, -0.6973198652267456], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'J.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'HKJ'}

Key: 128644870202509778169425799164530212377
Value: {'question': 'In which country was Julie Christie born?', 'responses': [('Great Britain', [-3.6924338340759277, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Britain', [-3.1924338340759277, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-0.9424338340759277, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.8174338340759277, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.8174338340759277, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.8174338340759277, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-0.9424338340759277, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.8174338340759277, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-0.8174338340759277, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-0.9424338340759277, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Great Britain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': 'India'}

Key: 182828260099965194252017383877802339988
Value: {'question': 'Which artist created the Katzenjammer Kids?', 'responses': [('Wilhelm Busch', [-3.071995496749878, -0.12042894214391708, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fritz Kredel', [-2.946995496749878, -0.1365867555141449, -0.4392073452472687], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles M.', [-2.665745496749878, -1.208296298980713, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theodor Seuss Ge', [-4.396214485168457, -0.85737144947052, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Hirschfeld', [-3.165745496749878, -0.38343578577041626, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wilhelm Busch', [-3.071995496749878, -0.12042894214391708, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gustave Dore', [-4.466526985168457, -0.2317984402179718, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winsor McC', [-2.571995496749878, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Barks', [-3.376682996749878, -1.0287535190582275, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Herriman', [-1.743870496749878, -0.18710067868232727, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wilhelm Busch', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Rudolph Dirks'}

Key: 60173673388890333035322288342789261387
Value: {'question': 'Who had a 60s No 1 hit with Johnny Angel?', 'responses': [('Joe Cocker', [-4.520928382873535, -1.756227731704712, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marmalade', [-4.020928382873535, -0.7032870650291443, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Crystals', [-0.583428144454956, -3.2566518783569336, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Angels', [-0.583428144454956, -2.1941518783569336, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Lindsay &', [-3.958428144454956, -1.0095124244689941, -3.3394687175750732], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Leyton', [-4.145928382873535, -0.4089163839817047, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New Vau', [-0.583428144454956, -4.537901878356934, -0.6862074136734009], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Tornadoes', [-0.583428144454956, -3.6316518783569336, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Shadows', [-0.583428144454956, -1.631651759147644, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hollies', [-0.583428144454956, -2.9441518783569336, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joe Cocker', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Shelley Fabares'}

Key: 77531749597658564846103506982483162066
Value: {'question': 'Which country does the airline VIASA come from?', 'responses': [('Spain', [-1.6651395559310913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-1.2276395559310913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.6651395559310913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [-2.977639675140381, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-1.2276395559310913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Netherlands', [-3.977639675140381, -1.0036234855651855], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-1.2276395559310913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [-4.227639675140381, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-1.2276395559310913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-4.477639675140381, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Spain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Venezuela'}
=======
Value: {'question': 'What year was the centenary of Arkansas joining the Union?', 'responses': [('1992', [0.0, -0.1797446459531784, -0.575939416885376, -0.7365050315856934, -3.185638427734375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1916', [0.0, -0.1797446459531784, -0.575939416885376, -1.3615050315856934, -0.4531797170639038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1890', [0.0, -0.1797446459531784, -0.825939416885376, -1.0739612579345703, -1.5224028825759888, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1916', [0.0, -0.1797446459531784, -0.575939416885376, -1.3615050315856934, -0.4531797170639038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2012', [0.0, -1.8047446012496948, 0.0, -0.4740769863128662, -2.395770311355591, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1868', [0.0, -0.1797446459531784, -0.825939416885376, -1.4489612579345703, -1.6923847198486328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1991', [0.0, -0.1797446459531784, -0.575939416885376, -0.7365050315856934, -0.31063851714134216, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1919', [0.0, -0.1797446459531784, -0.575939416885376, -1.3615050315856934, -3.0781798362731934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1916', [0.0, -0.1797446459531784, -0.575939416885376, -1.3615050315856934, -0.4531797170639038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1991', [0.0, -0.1797446459531784, -0.575939416885376, -0.7365050315856934, -0.31063851714134216, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1992', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': '1936'}

Key: 103796998466908453438328071639281647336
Value: {'question': 'Which singer formed his own Berlee record label?', 'responses': [('Michael Jackson', [-2.655174732208252, -0.05832047387957573], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [-3.030174732208252, -0.13482600450515747], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Lennon', [-3.905174732208252, -0.28498005867004395], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bruce Springsteen', [-4.155174732208252, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Brown', [-3.530174732208252, -0.08314905315637589], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marvin Gaye', [-3.655174732208252, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seal', [-4.780174732208252, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Jones', [-4.030174732208252, -0.16135281324386597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Collins', [-4.030174732208252, -0.13458658754825592], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beatles', [-3.155174732208252, -1.553001880645752], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michael Jackson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Del Shannon'}

Key: 2598872478169432329643955533398354143
Value: {'question': 'Who duetted with Barbra Streisand on Till I Loved You in 1988?', 'responses': [('Bryan Adams', [-4.092320919036865, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Celine Dion', [-1.7641960382461548, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donna Summer', [-2.9673209190368652, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Manil', [-2.7641959190368652, -0.29683318734169006, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Olivia Newton-', [-2.8579459190368652, 0.0, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Farnham', [-4.154820919036865, -1.5243266820907593, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul McCartney', [-4.451695919036865, -0.44995179772377014, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Jones', [-4.389195919036865, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Willie Nelson', [-3.7485709190368652, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Whitney Houston', [-2.8579459190368652, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bryan Adams', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Don Johnson'}

Key: 243465557792269031725477188344184851905
Value: {'question': 'What was first published on 21st December 1913 in the New York World?', 'responses': [('The Story of', [-0.3984054625034332, -4.51479434967041, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Titanic was', [-0.3984054625034332, -4.13979434967041, -3.1817541122436523], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Adventures of', [-0.3984054625034332, -2.1397945880889893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The sinking of', [-0.3984054625034332, -3.5147945880889893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Story of', [-0.3984054625034332, -4.51479434967041, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The yellow wallpaper', [-0.3984054625034332, -4.20229434967041, -0.5500877499580383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donald Duck', [-4.8984055519104, -0.15121398866176605, -0.06242578104138374], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Adventures of', [-0.3984054625034332, -2.1397945880889893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A photograph of', [-2.5234055519104004, -4.698409080505371, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A series of', [-2.5234055519104004, -4.198409080505371, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Story of', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'A crossword puzzle'}

Key: 31154385772208322335914570337316954002
Value: {'question': 'What finally knocked One Sweet Day off the No 1 position in the charts in the 90s?', 'responses': [("Spice Girls'", [-3.5257415771484375, 0.0, -1.2555618286132812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Puff daddy and', [-3.6507415771484375, -3.115807294845581, -0.6885935068130493], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spice Girls', [-3.5257415771484375, 0.0, -1.1305618286132812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A new single', [-2.4007415771484375, -2.9198007583618164, -2.014853000640869], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Day In', [-2.4007415771484375, -3.7948007583618164, -1.269970417022705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Mariah Carey'", [-2.5257415771484375, 0.0, -0.4707086682319641], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('50', [-3.9007415771484375, -2.827512264251709, -0.25234296917915344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Spice Girls', [-1.5257415771484375, -1.8259185552597046, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Puff Daddy and', [-3.6507415771484375, -0.1158071905374527, -1.2557671070098877], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Elton John'", [-3.2757415771484375, 0.0, -0.6637178659439087], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Spice Girls'", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Because You Loved Me'}

Key: 267955960749948228661903725027690629845
Value: {'question': 'In which American state are the Merril Collection and the Burke Museum of Fine Arts?', 'responses': [('Washington', [0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Washington', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Texas'}

Key: 20315429774617782646624378592628173322
Value: {'question': "Which actor paid $93,500 for the baseball which rolled between Bill Buckner's legs in game six of the 1986 World Series?", 'responses': [('Michael Jordan', [-1.6316922903060913, -0.4844008684158325, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Steve Garvey', [-1.4441922903060913, -0.04271324723958969, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Steve Garvey', [-1.4441922903060913, -0.04271324723958969, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Michael Jordan', [-1.6316922903060913, -0.4844008684158325, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Dan Aykro', [-4.006692409515381, -0.3696741759777069, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Robin Williams', [-5.006692409515381, -0.08574662357568741, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Jack Nicholson', [-4.444192409515381, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('David Letterman', [-2.756692409515381, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Steve Garvey', [-1.4441922903060913, -0.04271324723958969, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tom Hanks', [-2.944192409515381, -0.954069972038269, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michael Jordan', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Charlie Sheen'}

Key: 304930938478382788720383996921358992904
Value: {'question': "Who was Theodore Roosevelt's Vice President between 1905 and 1909?", 'responses': [('The', [-3.8337061405181885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles', [-1.4899561405181885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [-1.1774561405181885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thomas', [-1.2399561405181885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [-1.1774561405181885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-3.3024561405181885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-3.3024561405181885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [-1.1774561405181885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-3.6149561405181885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The', [-3.8337061405181885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'Charles W. Fairbanks'}

Key: 33280640827102717689957007688881802682
Value: {'question': 'Which nation was the first to ratify the United Nations charter in 1945?', 'responses': [('United States', [-1.0485310554504395, -0.0944129079580307], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [-4.4860310554504395, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-1.0485310554504395, -0.0944129079580307], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-1.3610310554504395, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-3.6110310554504395, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-1.3610310554504395, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The United', [-2.4235310554504395, -0.2660317122936249], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-3.6110310554504395, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-1.3610310554504395, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-1.0485310554504395, -0.0944129079580307], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'United States', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'Nicaragua'}

Key: 274249608338242007964661802160466087296
Value: {'question': 'What is the Alaskan terminus of the Alaskan Highway?', 'responses': [('Whitehorse', [-2.3582725524902344, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawson City', [-0.7332725524902344, -0.42870065569877625, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawson City', [-0.7332725524902344, -0.42870065569877625, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawson Creek', [-0.7332725524902344, -1.0537006855010986, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delta Junction', [-1.8582725524902344, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delta Junction', [-1.8582725524902344, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawson Creek', [-0.7332725524902344, -1.0537006855010986, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawson Creek', [-0.7332725524902344, -1.0537006855010986, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawson City', [-0.7332725524902344, -0.42870065569877625, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawson City', [-0.7332725524902344, -0.42870065569877625, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Whitehorse', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Fairbanks'}

Key: 162856310908236233701211693920335344708
Value: {'question': "What was Buster Keaton's actual first name?", 'responses': [('Joseph', [-1.5970174074172974, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [-3.175142288208008, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.5188924074172974, -0.024726316332817078], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph', [-1.5970174074172974, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.5188924074172974, -0.024726316332817078], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buster', [-3.057954788208008, -0.05434107780456543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwin', [-3.003267288208008, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.5188924074172974, -0.024726316332817078], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-0.5188924074172974, -0.024726316332817078], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buster', [-3.057954788208008, -0.05434107780456543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joseph', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'Joseph'}

Key: 254904469063646884659019138994202922335
Value: {'question': 'From 1903 to 1958, every Pope--bar one--took which name?', 'responses': [('Paul', [-2.8909244537353516, -0.020541900768876076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latin', [-3.8284244537353516, -0.09525308758020401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Benedict', [-3.5159244537353516, -0.10093361139297485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('St Peter', [-3.4534244537353516, -0.8325015306472778], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roman', [-4.703424453735352, -0.5680280923843384], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter', [-2.8909244537353516, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-1.6409244537353516, -0.04596279561519623], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pontiff', [-4.328424453735352, -0.437450110912323], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-1.6409244537353516, -0.04596279561519623], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-1.6409244537353516, -0.04596279561519623], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Paul', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Pius'}

Key: 96245766234754081845274940633608643614
Value: {'question': "Which brothers were Warner Bros' first major record success?", 'responses': [('The Sons of the', [-0.4552299976348877, -5.008662223815918, -0.3132617473602295, -0.15825361013412476], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Three Stooges', [-0.4552299976348877, -1.6336619853973389, -0.53737473487854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Ink Spots', [-0.4552299976348877, -1.8836619853973389, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Three Stooges', [-0.4552299976348877, -1.6336619853973389, -0.53737473487854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Carters', [-3.8927299976348877, -4.844144821166992, -1.7359907627105713, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hill Billies', [-0.4552299976348877, -3.321161985397339, -0.5159287452697754, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Three Keel', [-0.4552299976348877, -1.6336619853973389, -3.59987473487854, -2.2311158180236816], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al and Lew Ayres', [-2.3927299976348877, -0.7934567332267761, -2.8325400352478027, -4.06608772277832], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wilbur & Orville', [-5.080229759216309, -2.4657034873962402, 0.0, -0.07977773249149323], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hill Billies', [-0.4552299976348877, -3.321161985397339, -0.5159287452697754, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Sons of the', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Everly'}

Key: 237627328673549738776281532618222920236
Value: {'question': "What was the title of Kitty Kelley's book about Elizabeth Taylor?", 'responses': [('Taboo', [-4.214198112487793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz:', [-0.9798229336738586, -0.551328718662262], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diana V', [-4.761073112487793, -1.506975769996643], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Queen', [-1.6673228740692139, -1.9370845556259155], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dancer', [-1.6673228740692139, -3.991772174835205], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz:', [-0.9798229336738586, -0.551328718662262], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth Taylor', [-0.9798229336738586, -1.7662022113800049], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz', [-0.9798229336738586, -1.3013286590576172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth Taylor', [-0.9798229336738586, -1.7662022113800049], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz', [-0.9798229336738586, -1.3013286590576172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Taboo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Elizabeth Taylor: The Last Star'}

Key: 179027564765484031394933204870708983636
Value: {'question': 'What are the international registration letters for a vehicle form Jordan?', 'responses': [('JJ', [-3.655423164367676, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('YZ', [-4.280423164367676, -2.2373299598693848], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('J', [-1.0304231643676758, -0.3106116056442261], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('JD', [-3.655423164367676, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('JJ', [-3.655423164367676, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('JT', [-4.280423164367676, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('J', [-1.0304231643676758, -0.3106116056442261], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('J', [-1.0304231643676758, -0.3106116056442261], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('J', [-1.0304231643676758, -0.3106116056442261], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('JA', [-3.280423164367676, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'JJ', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456562, 'reference': 'HKJ'}

Key: 128644870202509778169425799164530212377
Value: {'question': 'In which country was Julie Christie born?', 'responses': [('Britain', [-3.186065912246704, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-1.186065912246704, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Britain', [-3.186065912246704, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('UK', [-2.811065912246704, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-1.186065912246704, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-1.186065912246704, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-2.936065912246704, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-0.6860659718513489, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-1.186065912246704, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-0.6860659718513489, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Britain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'India'}

Key: 182828260099965194252017383877802339988
Value: {'question': 'Which artist created the Katzenjammer Kids?', 'responses': [('Charles M.', [-3.281585216522217, -0.8676853775978088, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George McManus', [-1.6097103357315063, -3.100686550140381, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Herriman', [-1.6097103357315063, -0.35068655014038086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rudolph Dirks', [-1.3597103357315063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Hirschfeld', [-3.133147716522217, -0.5900942087173462, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fred and Har', [-4.123382091522217, -2.461747407913208, -0.272731751203537], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rudolph Dirks', [-1.3597103357315063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Herriman', [-1.6097103357315063, -0.35068655014038086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Capp', [-3.133147716522217, -0.9338442087173462, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Outcault', [-2.750335216522217, -1.0006189346313477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charles M.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Rudolph Dirks'}

Key: 60173673388890333035322288342789261387
Value: {'question': 'Who had a 60s No 1 hit with Johnny Angel?', 'responses': [('Chris Montez', [-3.9255530834198, -0.3484445810317993, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Shadows', [-0.597428023815155, -1.3047277927398682, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dickie Valentine', [-4.972427845001221, -0.4599081873893738, -0.05744180828332901], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hollies', [-0.597428023815155, -2.914102792739868, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marni Nixon', [-3.2693030834198, -2.4994776248931885, -0.06986130774021149], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Foundations', [-0.597428023815155, -3.351602792739868, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Shadows', [-0.597428023815155, -1.3047277927398682, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Manfred Mann', [-2.8474280834198, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Treme', [-0.597428023815155, -1.7422277927398682, -0.266189843416214], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Wynter', [-3.5036780834198, -1.3491175174713135, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chris Montez', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Shelley Fabares'}

Key: 77531749597658564846103506982483162066
Value: {'question': 'Which country does the airline VIASA come from?', 'responses': [('Argentina', [-3.132563591003418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brazil', [-2.882563591003418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-2.945063591003418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [-2.945063591003418, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-2.070063591003418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Angola', [-3.507563591003418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambia', [-4.257563591003418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-3.257563591003418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-4.820063591003418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-2.007563591003418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Argentina', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Venezuela'}
>>>>>>> 811d839 (new run)

Key: 326539575882893164728030538997132406953
Value: {'question': 'Who directed Back To The Future?', 'responses': [('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Zemeckis', [0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert Zemeckis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Robert Zemeckis'}

Key: 106593083475505750836729952728881582620
<<<<<<< HEAD
Value: {'question': 'Where was Che Guevara killed?', 'responses': [('Bolivia', [-0.2621394395828247, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Hig', [-2.574639320373535, -0.015070038847625256], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.2621394395828247, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cuba', [-2.762139320373535, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.2621394395828247, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.2621394395828247, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivian', [-3.824639320373535, -0.2383444905281067], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Hig', [-2.574639320373535, -0.015070038847625256], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.2621394395828247, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Hig', [-2.574639320373535, -0.015070038847625256], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bolivia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Bolivia'}

Key: 210851585520982376468564665992688936844
Value: {'question': 'Daryl Dragon used which name when he formed a 70s duo?', 'responses': [('The Captain and Tennille', [-3.5345144271850586, -0.1058022752404213, -0.4509372115135193, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and Tennille', [-0.12826453149318695, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain & Tennille', [-0.12826453149318695, -0.8981232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain & Tennille', [-0.12826453149318695, -0.8981232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and Tennille', [-0.12826453149318695, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain & Tennille', [-0.12826453149318695, -0.8981232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and Tennille', [-0.12826453149318695, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and Tennille', [-0.12826453149318695, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and Tennille', [-0.12826453149318695, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain & Tennille', [-0.12826453149318695, -0.8981232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Captain and Tennille', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Captain'}

Key: 335464748566950050198478317646551808700
Value: {'question': 'Which has the highest population, Rode island or South Dakota?', 'responses': [('Rhode Island', [-2.0078771114349365, -0.1602240949869156, -0.05908667668700218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhode island', [-2.0078771114349365, -1.9102240800857544, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode Island', [-1.0078771114349365, -0.575939416885376, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-0.7578771710395813, 0.0, -0.06669709831476212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-0.7578771710395813, 0.0, -0.06669709831476212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-0.7578771710395813, 0.0, -0.06669709831476212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode Island', [-1.0078771114349365, -0.575939416885376, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhode Island', [-2.0078771114349365, -0.1602240949869156, -0.05908667668700218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhode Island', [-2.0078771114349365, -0.1602240949869156, -0.05908667668700218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode Island', [-1.0078771114349365, -0.575939416885376, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rhode Island', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Rhode Island'}

Key: 197450559298194012679339395682072343849
Value: {'question': "What was Oliver Reed's real first name?", 'responses': [('Patrick', [-4.5660905838012695, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-2.6285908222198486, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael', [-4.5660905838012695, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-0.8785907626152039, -0.35004088282585144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-0.8785907626152039, -0.35004088282585144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert', [-3.2535908222198486, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-0.8785907626152039, -0.35004088282585144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-0.8785907626152039, -0.35004088282585144], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael', [-4.5660905838012695], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reginald', [-4.0035905838012695, -0.14894887804985046], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Patrick', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Robert'}

Key: 11764063432336950932290147533638348686
Value: {'question': 'Which country does the airline Sansa come from?', 'responses': [('Iceland', [-2.7032127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-3.5782127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-2.7032127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-3.5782127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-3.5782127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.5782127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-3.6407127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.5782127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.5782127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Finland', [-2.8282127380371094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Iceland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811906, 'reference': 'Costa Rica'}

Key: 230229352980133600316057024601341158341
Value: {'question': 'Who wrote the song Harper Valley PTA?', 'responses': [('Jeannie C', [-0.3397645354270935, 0.0, -0.19858106970787048], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie Se', [-0.3397645354270935, 0.0, -1.7142060995101929], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie Se', [-0.3397645354270935, 0.0, -1.7142060995101929], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Rogers', [-3.2928895950317383, -3.4964044094085693, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peggy King', [-4.183514595031738, -4.5769453048706055, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3397645354270935, 0.0, -0.19858106970787048], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roger Miller', [-3.5194520950317383, -0.1250782459974289, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3397645354270935, 0.0, -0.19858106970787048], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie Se', [-0.3397645354270935, 0.0, -1.7142060995101929], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3397645354270935, 0.0, -0.19858106970787048], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jeannie C', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456562, 'reference': 'Tom T. Hall'}

Key: 311195634190467684485689015458781618372
Value: {'question': "What was Elvis's last No 1 in his own lifetime?", 'responses': [('"It\'s', [-2.184221029281616, -3.3051836490631104, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suspicious Minds', [-1.5592210292816162, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"If I can', [-2.184221029281616, -3.7426836490631104, -0.1392667144536972, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suspicious Minds', [-1.5592210292816162, 0.0, 0.0, -0.12387295067310333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('It Was All You', [-3.184221029281616, -2.2060463428497314, -1.3420543670654297, -3.3723113536834717], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suspicious Minds', [-1.5592210292816162, 0.0, 0.0, -0.12387295067310333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suspicious Minds', [-1.5592210292816162, 0.0, 0.0, -0.12387295067310333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suspicious Minds', [-1.5592210292816162, 0.0, 0.0, -0.12387295067310333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viva Las Vegas', [-2.934221029281616, 0.0, 0.0, -0.11869104951620102], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I Can't", [-3.559221029281616, -0.7385028600692749, -0.3754006028175354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"It\'s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Suspicious Minds'}

Key: 248848692362025694205260992811040104034
Value: {'question': "Who choreographed the first performance of Copland's Rodeo?", 'responses': [('Jerome Robbins', [-3.997837543487549, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes de Mille', [-1.0603375434875488, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes de Mille', [-1.0603375434875488, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martha Graham', [-1.1228375434875488, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martha Graham', [-1.1228375434875488, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes de Mille', [-1.0603375434875488, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Fosse', [-4.310337543487549, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lester Horton', [-4.716587543487549, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martha Graham', [-1.1228375434875488, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martha Graham', [-1.1228375434875488, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jerome Robbins', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Agnes de Mille'}

Key: 278178236903659359332998521751266861672
Value: {'question': 'Who wrote Riders of the Purple Sage?', 'responses': [('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward Abbey', [-2.9891414642333984, -0.2860201597213745, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [-0.051641397178173065, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zane Grey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Zane Gray'}

Key: 8063326310999489857006450982497195180
Value: {'question': "What were D W Griffith's first names?", 'responses': [('David Wells', [0.0, -4.882452964782715], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William', [0.0, -0.8199530839920044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David', [0.0, -2.194952964782715], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David', [0.0, -4.632452964782715], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Wells', [0.0, -4.882452964782715], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William', [0.0, -0.8199530839920044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William', [0.0, -0.8199530839920044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William', [0.0, -0.8199530839920044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William', [0.0, -0.8199530839920044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David W', [0.0, -2.194952964782715], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Wells', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'David Wark'}

Key: 332535048030433131277634229561133705196
Value: {'question': '"Who created the line, ""Happiness is a warm puppy?"', 'responses': [('Leo Burnett', [-3.5550239086151123, -1.3549450635910034, -0.10842655599117279], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schultz', [-0.3987739682197571, -1.5754692554473877, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3987739682197571, -0.5129692554473877, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3987739682197571, -0.5129692554473877, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3987739682197571, -0.5129692554473877, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3987739682197571, -0.5129692554473877, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3987739682197571, -0.5129692554473877, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles M.', [-0.3987739682197571, -1.6379692554473877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3987739682197571, -0.5129692554473877, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I. J', [-3.9065864086151123, -0.0625733807682991, -2.4977564811706543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Leo Burnett', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Charles Schulz'}
=======
Value: {'question': 'Where was Che Guevara killed?', 'responses': [('Bolivia', [-0.10074640810489655, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-3.0382463932037354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-3.0382463932037354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.10074640810489655, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.10074640810489655, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.10074640810489655, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.10074640810489655, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.10074640810489655, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.10074640810489655, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-0.10074640810489655, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bolivia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Bolivia'}

Key: 210851585520982376468564665992688936844
Value: {'question': 'Daryl Dragon used which name when he formed a 70s duo?', 'responses': [('Captain &', [-0.5579542517662048, -0.8436275124549866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and', [-0.5579542517662048, -0.5623775124549866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and', [-0.5579542517662048, -0.5623775124549866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain &', [-0.5579542517662048, -0.8436275124549866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain &', [-0.5579542517662048, -0.8436275124549866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denny', [-4.80307149887085, -0.9509503841400146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Meek', [-2.7923293113708496, -2.9331092834472656], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain and', [-0.5579542517662048, -0.5623775124549866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burt Bach', [-3.0501418113708496, -0.6438339948654175], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain &', [-0.5579542517662048, -0.8436275124549866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Captain &', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Captain'}

Key: 335464748566950050198478317646551808700
Value: {'question': 'Which has the highest population, Rode island or South Dakota?', 'responses': [('South Dakota', [-1.1381808519363403, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode Island', [-0.5131808519363403, -0.9740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-1.1381808519363403, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode Island', [-0.5131808519363403, -0.9740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode Island', [-0.5131808519363403, -0.9740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode island', [-0.5131808519363403, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode Island', [-0.5131808519363403, -0.9740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode island', [-0.5131808519363403, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-1.1381808519363403, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rode island', [-0.5131808519363403, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'South Dakota', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Rhode Island'}

Key: 197450559298194012679339395682072343849
Value: {'question': "What was Oliver Reed's real first name?", 'responses': [('Charles', [-3.9729318618774414, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver James', [-0.7854318618774414, -3.5110723972320557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver William', [-0.7854318618774414, -4.261072635650635], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver Charles', [-0.7854318618774414, -3.6360723972320557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver Richard', [-0.7854318618774414, -3.3860723972320557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver Anthony', [-0.7854318618774414, -3.6360723972320557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lionel', [-4.535431861877441, -0.016034230589866638], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [-3.0354318618774414, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-0.7854318618774414, -0.7610724568367004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver', [-0.7854318618774414, -0.7610724568367004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charles', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Robert'}

Key: 11764063432336950932290147533638348686
Value: {'question': 'Which country does the airline Sansa come from?', 'responses': [('Slovenia', [-3.366300106048584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Slovenia', [-3.366300106048584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-3.866300106048584, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latvia', [-2.803800106048584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ukraine', [-3.053800106048584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Finland', [-2.491300106048584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-2.616300106048584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serbia', [-4.053800106048584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ukraine', [-3.053800106048584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [-3.366300106048584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Slovenia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Costa Rica'}

Key: 230229352980133600316057024601341158341
Value: {'question': 'Who wrote the song Harper Valley PTA?', 'responses': [('Gram Parsons', [-3.2751693725585938, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3337631821632385, 0.0, -0.33487993478775024], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lynn Anderson', [-4.833763122558594, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3337631821632385, 0.0, -0.33487993478775024], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3337631821632385, 0.0, -0.33487993478775024], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom T.', [-2.0075912475585938, -0.4033038020133972, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3337631821632385, 0.0, -0.33487993478775024], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3337631821632385, 0.0, -0.33487993478775024], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3337631821632385, 0.0, -0.33487993478775024], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeannie C', [-0.3337631821632385, 0.0, -0.33487993478775024], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gram Parsons', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Tom T. Hall'}

Key: 311195634190467684485689015458781618372
Value: {'question': "What was Elvis's last No 1 in his own lifetime?", 'responses': [("Can't", [-4.544944763183594, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In The Ghetto', [-1.2324446439743042, -1.094851016998291, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viva Las Vegas', [-3.1074447631835938, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'In The", [-4.419944763183594, -1.381862759590149, -1.3593331575393677], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In The Ghetto', [-1.2324446439743042, -1.094851016998291, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In the ghetto', [-1.2324446439743042, -0.4073510468006134, -3.0337088108062744], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jailhouse Rock', [-3.8574447631835938, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burning Love', [-2.6074447631835938, -0.13458658754825592, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In The Ghetto', [-1.2324446439743042, -1.094851016998291, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In The Ghetto', [-1.2324446439743042, -1.094851016998291, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Can't", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Suspicious Minds'}

Key: 248848692362025694205260992811040104034
Value: {'question': "Who choreographed the first performance of Copland's Rodeo?", 'responses': [('Agnes de Mille', [-0.5342893004417419, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes de Mille', [-0.5342893004417419, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martha Graham', [-1.3467893600463867, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes de Mille', [-0.5342893004417419, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes de Mille', [-0.5342893004417419, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes de Mille', [-0.5342893004417419, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martha Graham', [-1.3467893600463867, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Tamiris', [-4.690539360046387, -0.19169053435325623, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katherine Dunham', [-4.815539360046387, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes de Mille', [-0.5342893004417419, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Agnes de Mille', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Agnes de Mille'}

Key: 278178236903659359332998521751266861672
Value: {'question': 'Who wrote Riders of the Purple Sage?', 'responses': [('Zane Grey', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zane Grey', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zane Grey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Zane Gray'}

Key: 8063326310999489857006450982497195180
Value: {'question': "What were D W Griffith's first names?", 'responses': [('David W Griffith', [0.0, -2.123708724975586, -0.6327736973762512], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David W Griffith', [0.0, -2.123708724975586, -0.6327736973762512], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William Griffith', [0.0, -0.7487086653709412, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William Griffith', [0.0, -0.7487086653709412, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William', [0.0, -0.7487086653709412, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William Griffith', [0.0, -0.7487086653709412, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Warfield', [0.0, -3.498708724975586, -0.16230139136314392], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Westly', [0.0, -4.811208724975586, -2.6020407676696777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Weber', [0.0, -3.998708724975586, -1.073179006576538], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David William', [0.0, -0.7487086653709412, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David W Griffith', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'David Wark'}

Key: 332535048030433131277634229561133705196
Value: {'question': '"Who created the line, ""Happiness is a warm puppy?"', 'responses': [('Mr Meany', [-4.4554972648620605, -4.4652791023254395, -1.4460313320159912], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3656536042690277, -0.48444926738739014, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phyllis Diller', [-3.0219035148620605, -0.15121398866176605, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dr Seuss', [-2.4906535148620605, -1.7088215351104736], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3656536042690277, -0.48444926738739014, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Schulz', [-0.3656536042690277, -0.48444926738739014, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peggy Lee', [-5.2191691398620605, -1.0756886005401611, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles M Schulz', [-0.3656536042690277, -1.5469492673873901, -1.5019290447235107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phyllis Diller', [-3.0219035148620605, -0.15121398866176605, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phyllis Diller', [-3.0219035148620605, -0.15121398866176605, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mr Meany', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Charles Schulz'}
>>>>>>> 811d839 (new run)

Key: 120897105411395266991933240638091599007
Value: {'question': 'Who directed The Big Sleep and Gentlemen Prefer Blondes?', 'responses': [('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Hawks', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Howard Hawks', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Howard Hawks'}

Key: 84285215038753726249545095547437641050
Value: {'question': 'In which year was the talkie The Jazz Singer released?', 'responses': [('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1927', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1927'}

Key: 122537270215681954247623527813271837955
<<<<<<< HEAD
Value: {'question': 'Alborg Roedslet international airport is in which country?', 'responses': [('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [-3.0485873222351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [-0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Denmark', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Denmark'}

Key: 156438298418092728929811262073534774106
Value: {'question': "What was Elton John's first US No 1 hit?", 'responses': [('Crocodile Rock', [-2.0092928409576416, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiny Dancer', [-3.0092928409576416, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Crocodile Rock', [-2.0092928409576416, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Candle in the', [-3.6967928409576416, -0.3769513666629791, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiny Dancer', [-3.0092928409576416, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Saturday Night'", [-1.7592928409576416, -0.28069013357162476, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Your Song', [-1.6342928409576416, -0.8150401711463928, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Your Song', [-1.6342928409576416, -0.8150401711463928, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Saturday Night'", [-1.7592928409576416, -0.28069013357162476, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Your Song', [-1.6342928409576416, -0.8150401711463928, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Crocodile Rock', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576458, 'reference': 'Crocodile Rock'}

Key: 19118866562102393806109529524355418438
Value: {'question': 'In which decade was the Oral Roberts University founded at Tulsa?', 'responses': [('1960s', [0.0, 0.0, 0.0, -0.42870065569877625, -0.09448157250881195, -0.3153110444545746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.42870065569877625, -0.09448157250881195, -0.3153110444545746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, 0.0, 0.0, -1.0537006855010986, -0.17542405426502228, -0.35068631172180176], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1966', [0.0, 0.0, 0.0, -0.42870065569877625, -3.7194814682006836, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, -1.0537006855010986, -3.050424098968506, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.42870065569877625, -0.09448157250881195, -0.3153110444545746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, 0.0, 0.0, -1.0537006855010986, -0.17542405426502228, -0.35068631172180176], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960', [0.0, 0.0, 0.0, -0.42870065569877625, -0.09448157250881195, -2.0653109550476074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.42870065569877625, -0.09448157250881195, -0.3153110444545746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.42870065569877625, -0.09448157250881195, -0.3153110444545746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Alborg Roedslet international airport is in which country?', 'responses': [('Denmark', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Denmark', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Denmark', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Denmark'}

Key: 156438298418092728929811262073534774106
Value: {'question': "What was Elton John's first US No 1 hit?", 'responses': [('Your Song', [-0.4423728883266449, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Your Song', [-0.4423728883266449, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Your Song', [-0.4423728883266449, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Your Song', [-0.4423728883266449, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Your Song', [-0.4423728883266449, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I guess that', [-4.004872798919678, -2.782148838043213, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Crocodile Rock', [-2.6923727989196777, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Crocodile Rock', [-2.6923727989196777, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Your Song', [-0.4423728883266449, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Your Song', [-0.4423728883266449, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Your Song', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433373, 'reference': 'Crocodile Rock'}

Key: 19118866562102393806109529524355418438
Value: {'question': 'In which decade was the Oral Roberts University founded at Tulsa?', 'responses': [('1960s', [0.0, 0.0, 0.0, -0.38687101006507874, 0.0, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960', [0.0, 0.0, 0.0, -0.38687101006507874, 0.0, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.38687101006507874, 0.0, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.38687101006507874, 0.0, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.38687101006507874, 0.0, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, 0.0, 0.0, -1.1368709802627563, 0.0, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950', [0.0, 0.0, 0.0, -1.1368709802627563, 0.0, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.38687101006507874, 0.0, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950', [0.0, 0.0, 0.0, -1.1368709802627563, 0.0, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, -0.38687101006507874, 0.0, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1960s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': '1960s'}

Key: 307518824175457082030858663647596463009
<<<<<<< HEAD
Value: {'question': 'In which English city is the Burrows Toy Museum?', 'responses': [('Tunbridge', [-4.308852195739746, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ipswich', [-4.558852195739746, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leeds,', [-4.183852195739746, -2.929882287979126], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bradford', [-4.058852195739746, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sheffield', [-4.308852195739746, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cambridge', [-4.058852195739746, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bradford,', [-4.058852195739746, -3.0485873222351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colchester', [-4.433852195739746, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-1.8088523149490356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('York', [-4.058852195739746, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tunbridge', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Bath'}

Key: 149186725975161984472544802090937999789
Value: {'question': 'On which label did the Beach boys record most of their 60s hits?', 'responses': [('Capitol Records', [-0.20447665452957153, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-0.20447665452957153, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Decca', [-3.6107265949249268, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Capitol Records', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Capitol'}

Key: 81328885281548666794110735425775135138
Value: {'question': 'Whose musical works included Composition For Orchestra and Philomel?', 'responses': [('Charles Ives', [-3.1877174377441406, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aaron Copland', [-0.8752173185348511, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Copland', [-2.9377174377441406, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bartok', [-4.250217437744141, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rachmanin', [-4.062717437744141, 0.0, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Billings', [-4.062717437744141, -1.8325992822647095, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anton Webern', [-3.6252174377441406, -3.2817835807800293, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rachmaninov', [-4.062717437744141, 0.0, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Samuel Barber', [-3.0627174377441406, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aaron Copland', [-0.8752173185348511, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charles Ives', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Milton Babbit'}

Key: 176838896580123091534625122789634146552
Value: {'question': 'What was the first state to join the Union in the 20th century?', 'responses': [('Kansas', [-2.866706371307373, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montana', [-3.116706371307373, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Jersey', [-2.425300121307373, -2.4069128036499023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Dakota', [-2.944831371307373, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.8237375020980835, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Utah', [-2.245612621307373, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alaska', [-3.575690746307373, -0.07946828007698059], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Utah', [-2.245612621307373, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montana', [-3.116706371307373, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Mexico', [-2.425300121307373, -0.0944129079580307], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kansas', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Oklahoma'}

Key: 334408083050207523278510833473432068002
Value: {'question': 'Where were the 2004 Summer Olympic Games held?', 'responses': [('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens, Greece', [0.0, -0.25192904472351074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Athens, Greece', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Athens'}

Key: 319074744005416958627764075674726877142
Value: {'question': 'What did Arthur Blessitt carry with him on an around-the-world walk taking in 277 nations?', 'responses': [('A 1', [-0.6161388158798218, -2.247375249862671, -1.1784483194351196], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('a large white', [-1.7411388158798218, -2.3899903297424316, -3.1645565032958984], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('a cross made', [-1.7411388158798218, -1.7649904489517212, -1.924187421798706], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ("Jesus' Robe", [-3.9911389350891113, -1.2953606843948364, -4.023180961608887], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('an open bible', [-3.9911389350891113, -3.250685453414917, -1.5398985147476196], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A lighted cross', [-0.6161388158798218, -4.99737548828125, -0.45561373233795166], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A cross', [-0.6161388158798218, -1.747375249862671, -0.8692353963851929], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('a cross', [-1.7411388158798218, -1.7649904489517212, -0.674187421798706], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A huge cross', [-0.6161388158798218, -4.62237548828125, -1.290574550628662], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Ten Commandments', [-2.6161389350891113, -3.31815242767334, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A 1', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'A wooden cross'}

Key: 111828181098033545264522473987556850882
Value: {'question': 'Where in the former Soviet Union was Yul Brynner born?', 'responses': [('Ukraine', [-2.194854736328125, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Moscow,', [-2.819854736328125, -1.4061501026153564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Moscow', [-2.819854736328125, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-1.569854736328125, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiev', [-2.319854736328125, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-1.569854736328125, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dne', [-3.882354736328125, -0.33914029598236084], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sverd', [-4.069854736328125, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tashkent', [-3.194854736328125, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minsk,', [-4.069854736328125, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ukraine', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Siberia'}

Key: 52137381648763898586560821224474263500
Value: {'question': 'When she died how old was Karen Carpenter?', 'responses': [('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('31 years', [0.0, 0.0, -2.4639394283294678, -2.929882287979126], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.08893945813179016, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '32', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': '32'}

Key: 294962527403216860646916587605866786876
Value: {'question': '"According to the modern Olympics founder Baron de Coubertin, ""The essential thing is not conquering but..."" what?"', 'responses': [('Enjoying', [-3.9534735679626465, -0.2014133334159851], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Excellence.', [-3.9534735679626465, -2.8527731895446777], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('...the', [-3.5784735679626465, -2.4867258071899414], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Participating', [-2.0784735679626465, -0.07888974994421005], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Self Discipline', [-3.9534735679626465, -4.522607326507568], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Participating', [-2.0784735679626465, -0.07888974994421005], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('"Co', [-1.703473687171936, -4.306736946105957], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Being better', [-3.8284735679626465, -3.370777130126953], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Self-', [-3.9534735679626465, -0.14760728180408478], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Betterment', [-4.3284735679626465, -2.063276767730713], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Enjoying', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Fighting well'}

Key: 122198653356206234434244673865354792132
Value: {'question': 'In which state was Charles Schulz born?', 'responses': [('Ohio', [-2.0131895542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virginia', [-3.8413145542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-1.1694395542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-2.8100645542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-1.1694395542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-1.1694395542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-3.5444395542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-2.8100645542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iowa', [-2.8881895542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-1.1694395542144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ohio', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Minnesota'}

Key: 338613061531723216179057620367084413268
Value: {'question': '"Who wrote, ""What is this life if full of care, We have no time to stand and stare?"""', 'responses': [('Robert Herrick', [-3.0789709091186523, -1.9671275615692139], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Yeats', [-5.078970909118652, -0.05488219112157822], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('William Wordsworth', [-0.3289709985256195, -0.7247658967971802], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('William Wordsworth', [-0.3289709985256195, -0.7247658967971802], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('E.', [-4.922720909118652, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('William Butler', [-0.3289709985256195, -1.7560158967971802], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('William Morris', [-0.3289709985256195, -4.162265777587891], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('William Blake', [-0.3289709985256195, -1.8653908967971802], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Edwin Hubble', [-3.9539709091186523, -4.1287946701049805], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('W.', [-2.8289709091186523, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert Herrick', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'W H Davies'}

Key: 40516185208434270662182022415134392972
Value: {'question': 'In which decade was Charles Schulz born?', 'responses': [('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The 1920', [-2.929882287979126, -0.03421409800648689, -0.11282224208116531, 0.0, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.05488219112157822, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'In which English city is the Burrows Toy Museum?', 'responses': [('Birmingham', [-2.3773066997528076, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Birmingham', [-2.3773066997528076, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Newcastle', [-3.6273066997528076, -0.6482681632041931], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bristol', [-3.3773066997528076, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Manchester', [-3.0023066997528076, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nottingham', [-3.6273066997528076, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blackpool', [-3.6273066997528076, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Birmingham', [-2.3773066997528076, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reading', [-4.627306938171387, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grimsby', [-4.752306938171387, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Birmingham', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Bath'}

Key: 149186725975161984472544802090937999789
Value: {'question': 'On which label did the Beach boys record most of their 60s hits?', 'responses': [('Capitol', [0.0, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [0.0, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [0.0, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [0.0, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [0.0, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [0.0, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol Records', [0.0, -1.4061501026153564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [0.0, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [0.0, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol Records', [0.0, -1.4061501026153564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Capitol', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Capitol'}

Key: 81328885281548666794110735425775135138
Value: {'question': 'Whose musical works included Composition For Orchestra and Philomel?', 'responses': [('Samuel Barber', [-2.4813451766967773, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aaron Copland', [-1.5438451766967773, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aaron Copland', [-1.5438451766967773, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leonard Bernstein', [-3.9188451766967773, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schoenberg', [-2.4188451766967773, -0.20438629388809204, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gustav Holst', [-3.2313451766967773, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Gersh', [-3.1688451766967773, -0.6685656309127808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ralph Vaughan Williams', [-1.9188451766967773, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ralph Vaughan Williams', [-1.9188451766967773, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Igor Strav', [-4.168845176696777, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Samuel Barber', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Milton Babbit'}

Key: 176838896580123091534625122789634146552
Value: {'question': 'What was the first state to join the Union in the 20th century?', 'responses': [('Hawaii', [-1.6679049730300903, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-1.6679049730300903, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wyoming', [-2.121029853820801, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-4.066342353820801, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arizona', [-2.183529853820801, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-1.6679049730300903, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Utah', [-2.371029853820801, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-1.6679049730300903, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arizona', [-2.183529853820801, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-1.6679049730300903, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hawaii', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Oklahoma'}

Key: 334408083050207523278510833473432068002
Value: {'question': 'Where were the 2004 Summer Olympic Games held?', 'responses': [('Athens', [-0.12692804634571075, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens,', [-0.12692804634571075, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens', [-0.12692804634571075, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens,', [-0.12692804634571075, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens', [-0.12692804634571075, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens', [-0.12692804634571075, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens,', [-0.12692804634571075, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens', [-0.12692804634571075, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens,', [-0.12692804634571075, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens,', [-0.12692804634571075, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Athens', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Athens'}

Key: 319074744005416958627764075674726877142
Value: {'question': 'What did Arthur Blessitt carry with him on an around-the-world walk taking in 277 nations?', 'responses': [('A bucket', [-0.3063519299030304, -3.457101345062256, -2.1477677822113037], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A wooden cross', [-0.3063519299030304, -3.207101345062256, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A cross', [-0.3063519299030304, -1.8321013450622559, -0.14814914762973785], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A giant cross', [-0.3063519299030304, -3.832101345062256, -0.8156526684761047], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A sign asking', [-0.3063519299030304, -3.082101345062256, -3.6582486629486084], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A large doll', [-0.3063519299030304, -3.082101345062256, -4.553297519683838], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A live baby', [-0.3063519299030304, -4.582101345062256, -2.6800382137298584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A 6', [-0.3063519299030304, -2.832101345062256, -2.5469934940338135], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A crucifix and', [-0.3063519299030304, -3.332101345062256, -3.788914203643799], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A 1', [-0.3063519299030304, -2.832101345062256, -1.1719934940338135], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A bucket', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'A wooden cross'}

Key: 111828181098033545264522473987556850882
Value: {'question': 'Where in the former Soviet Union was Yul Brynner born?', 'responses': [('Russia', [-0.8790217638015747, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-0.8790217638015747, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Siberia', [-3.191521644592285, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kiev', [-3.254021644592285, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-0.8790217638015747, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [-4.191521644592285, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odessa', [-3.941521644592285, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ukraine', [-1.5040217638015747, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Odessa', [-3.941521644592285, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kharkov', [-3.691521644592285, -0.4509372115135193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Russia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Siberia'}

Key: 52137381648763898586560821224474263500
Value: {'question': 'When she died how old was Karen Carpenter?', 'responses': [('31', [0.0, 0.0, -1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('31', [0.0, 0.0, -1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('31', [0.0, 0.0, -1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('31', [0.0, 0.0, -1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [0.0, 0.0, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '31', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': '32'}

Key: 294962527403216860646916587605866786876
Value: {'question': '"According to the modern Olympics founder Baron de Coubertin, ""The essential thing is not conquering but..."" what?"', 'responses': [('The playing', [-2.4583687782287598, -4.556610107421875], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('taking part', [-4.58336877822876, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Co', [-2.5833687782287598, -4.3580827713012695], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Compete', [-2.8333687782287598, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The desire', [-2.4583687782287598, -4.556610107421875], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Playing', [-3.7708687782287598, -0.7218384742736816], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"particip', [-2.5833687782287598, -2.6080830097198486], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friendship', [-3.6458687782287598, -0.018149960786104202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Participating', [-2.2083687782287598, -0.02630021423101425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Compete', [-2.8333687782287598, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The playing', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Fighting well'}

Key: 122198653356206234434244673865354792132
Value: {'question': 'In which state was Charles Schulz born?', 'responses': [('Minnesota', [-0.8581461906433105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-0.8581461906433105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-3.1706461906433105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-0.8581461906433105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-0.8581461906433105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-3.1706461906433105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-0.8581461906433105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-3.1706461906433105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-1.4518961906433105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-3.6706461906433105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Minnesota', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Minnesota'}

Key: 338613061531723216179057620367084413268
Value: {'question': '"Who wrote, ""What is this life if full of care, We have no time to stand and stare?"""', 'responses': [('Emily Dickinson', [-3.877657413482666, -0.4197388291358948, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Shakespeare', [-0.45578253269195557, -3.1481361389160156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwin Muir', [-3.299532413482666, -1.3974757194519043, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dylan Thomas', [-4.166719913482666, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('W.H', [-1.7370325326919556, -0.11967968195676804, -0.47857534885406494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Butler Yeats', [-0.45578253269195557, -1.4606361389160156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Henry Davies', [-0.45578253269195557, -3.3590736389160156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Butler Yeats', [-0.45578253269195557, -1.4606361389160156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Henry Davies', [-0.45578253269195557, -3.3590736389160156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Wordsworth', [-0.45578253269195557, -0.7731361389160156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Emily Dickinson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816237, 'reference': 'W H Davies'}

Key: 40516185208434270662182022415134392972
Value: {'question': 'In which decade was Charles Schulz born?', 'responses': [('1922', [-0.07888974994421005, 0.0, 0.0, 0.0, 0.0, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.07888974994421005, 0.0, 0.0, 0.0, 0.0, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.07888974994421005, 0.0, 0.0, 0.0, 0.0, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.07888974994421005, 0.0, 0.0, 0.0, 0.0, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.07888974994421005, 0.0, 0.0, 0.0, 0.0, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.07888974994421005, 0.0, 0.0, 0.0, 0.0, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.07888974994421005, 0.0, 0.0, 0.0, 0.0, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.07888974994421005, 0.0, 0.0, 0.0, 0.0, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.07888974994421005, 0.0, 0.0, 0.0, 0.0, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1922', [-0.07888974994421005, 0.0, 0.0, 0.0, 0.0, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1922', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1930s'}

Key: 182738438937466943671076140354946281774
Value: {'question': 'In what year was Oliver Stone born?', 'responses': [('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1946', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1946'}

Key: 148096088184709529121250936179422321136
<<<<<<< HEAD
Value: {'question': "What is Axl Rose's real name?", 'responses': [('William Bruce Rose', [-0.12692804634571075, -0.30872371792793274, -0.25217103958129883, -0.1775428205728531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [-0.12692804634571075, -0.30872371792793274, -0.25217103958129883, -0.1775428205728531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [-0.12692804634571075, -0.30872371792793274, -0.25217103958129883, -0.1775428205728531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [-0.12692804634571075, -0.30872371792793274, -0.25217103958129883, -0.1775428205728531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Wilkerson', [-0.12692804634571075, -0.30872371792793274, -2.611546039581299, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Wilkerson', [-0.12692804634571075, -0.30872371792793274, -2.611546039581299, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Wilkerson', [-0.12692804634571075, -0.30872371792793274, -2.611546039581299, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('WIll.i', [-2.1269280910491943, -1.1402592658996582, -2.1795530319213867, -0.9067003130912781], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [-0.12692804634571075, -0.30872371792793274, -0.25217103958129883, -0.1775428205728531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Welch', [-0.12692804634571075, -0.30872371792793274, -4.939671039581299, -0.17443719506263733], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'William Bruce Rose', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'William Bailey'}

Key: 326790128592703342928678224758863951639
Value: {'question': 'What disability did singer Al Hibbler have?', 'responses': [('Blindness', [-2.245337963104248, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Hibbler', [-2.120337963104248, -0.14675047993659973, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was blind', [-1.120337963104248, -0.40272533893585205, -1.055004596710205], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He had one', [-1.120337963104248, -1.652725338935852, -2.5377037525177], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spina Bif', [-4.745337963104248, -0.9356344938278198, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('he was born', [-3.370337963104248, -0.3926753103733063, -2.445962429046631], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was born', [-1.120337963104248, -0.40272533893585205, -2.305004596710205], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He lost an', [-1.120337963104248, -2.7777252197265625, -2.7799177169799805], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('he was blind', [-3.370337963104248, -0.3926753103733063, -0.9459625482559204], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was born', [-1.120337963104248, -0.40272533893585205, -2.305004596710205], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Blindness', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'He was blind'}

Key: 194110398842607821572025177204660611877
Value: {'question': '"Which writer said, "" An atheist is a man who has no invisible means of support?"""', 'responses': [('H.', [-2.48756742477417, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-1.9875673055648804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-1.9875673055648804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Voltaire', [-2.23756742477417, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('G.', [-2.86256742477417, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ambrose Bier', [-3.98756742477417, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-1.9875673055648804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Voltaire', [-2.23756742477417, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Voltaire', [-2.23756742477417, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C.', [-3.98756742477417, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'H.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'John Buchan'}
=======
Value: {'question': "What is Axl Rose's real name?", 'responses': [('William Bruce Rose', [0.0, -0.4868692457675934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [0.0, -0.4868692457675934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [0.0, -0.4868692457675934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [0.0, -0.4868692457675934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [0.0, -0.4868692457675934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [0.0, -0.4868692457675934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [0.0, -0.4868692457675934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bruce Rose', [0.0, -0.4868692457675934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Michael Ar', [0.0, -3.4556193351745605, -0.852135956287384], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Shell', [0.0, -3.9087443351745605, -1.6716840267181396], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'William Bruce Rose', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'William Bailey'}

Key: 326790128592703342928678224758863951639
Value: {'question': 'What disability did singer Al Hibbler have?', 'responses': [('Hearing', [-3.505211353302002, -1.0064425468444824], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Strab', [-4.755211353302002, -2.106006145477295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colour blindness', [-3.630211353302002, -0.36300724744796753], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('blindness', [-3.630211353302002, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('he was', [-4.005211353302002, -0.2713175415992737], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cleft', [-4.505211353302002, -0.2383444905281067], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Deafness', [-2.630211353302002, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was', [-1.1302114725112915, -0.2678379714488983], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colourblind', [-3.630211353302002, -1.9880073070526123], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was', [-1.1302114725112915, -0.2678379714488983], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hearing', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'He was blind'}

Key: 194110398842607821572025177204660611877
Value: {'question': '"Which writer said, "" An atheist is a man who has no invisible means of support?"""', 'responses': [('A. J', [-4.823606967926025, -0.7248854041099548, -1.4710019826889038], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [-1.8861069679260254, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thomas Paine', [-3.2611069679260254, -0.6392006874084473, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [-1.8861069679260254, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('GK Chesterton', [-4.511106967926025, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Dawkins', [-4.823606967926025, -1.63338041305542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Bernard Shaw', [-2.7611069679260254, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-2.0111069679260254, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William James', [-4.011106967926025, -0.5053940415382385, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C.S', [-4.136106967926025, -0.10633727163076401, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A. J', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'John Buchan'}
>>>>>>> 811d839 (new run)

Key: 88814033403828465235509704196191027271
Value: {'question': 'Which country does the airline Ansett come from?', 'responses': [('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Australia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Australia'}

Key: 80155366273318938326794963246910030417
<<<<<<< HEAD
Value: {'question': "Where is New York's Empire State College located?", 'responses': [('In Albany', [-2.4790244102478027, -1.5543630123138428], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('It is', [-4.479024410247803, -0.3983074128627777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Manhattan', [-2.4790244102478027, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bronx', [-4.479024410247803, -0.3865095376968384], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buffalo,', [-3.9790244102478027, -0.5706259608268738], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.4790244102478027, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albany,', [-1.6040244102478027, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albany,', [-1.6040244102478027, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Purchase,', [-3.8540244102478027, -0.09492291510105133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.4790244102478027, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'In Albany', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Saratoga Springs'}

Key: 127381100577386363177225480136719250130
Value: {'question': 'Spear of the Nation was an armed wing of which group?', 'responses': [('NCO', [-4.962677955627441, -2.463721990585327, -0.8800430297851562], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Black Panthers', [-2.4626779556274414, -0.4168764352798462, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Black Panthers', [-2.4626779556274414, -0.4168764352798462, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natsons', [-4.962677955627441, -3.338721990585327, -3.4669151306152344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('SDS (Students', [-4.962677955627441, -2.929882287979126, -0.3874903619289398], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('British Union of', [-4.212677955627441, -0.4953281879425049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The British Union', [-1.712678074836731, -4.3777241706848145, -0.6730260252952576], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Black Panthers', [-2.4626779556274414, -0.4168764352798462, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nazi Party', [-4.462677955627441, -0.4295884072780609, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('American Indians', [-3.0876779556274414, -1.9780559539794922, -0.07045131176710129], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'NCO', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'ANC'}

Key: 224812378216949517283439716760912399137
Value: {'question': 'Where in Italy did a US military aircraft slice through the steel wire of a cable car in 1998?', 'responses': [('Bologna', [-3.792738914489746, -0.04858732968568802], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Pisa', [-3.417738914489746, -0.11409559100866318], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Venice', [-2.417738914489746, -0.07888974994421005], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A cable', [-4.042738914489746, -1.884954571723938], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A cruise', [-4.042738914489746, -4.759954452514648], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Spole', [-4.292738914489746, -1.8403908014297485], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('S.', [-4.292738914489746, -3.215390682220459], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Milan', [-1.917738914489746, -0.06196761503815651], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Venice', [-2.417738914489746, -0.07888974994421005], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Milan', [-1.917738914489746, -0.06196761503815651], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bologna', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Cavalese'}

Key: 179107895711269720461807915593659596417
Value: {'question': 'What star sign is shared by Meatloaf and Luciano Pavarotti?', 'responses': [('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libra', [0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Libra', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Libra'}

Key: 288367942961643881465726120092568230009
Value: {'question': 'Where was Pablo Casals buried before he was finally laid to rest in Spain?', 'responses': [('New York', [-2.0351500511169434, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His final', [-3.4101500511169434, -3.6483848094940186], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.6601500511169434, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The U', [-2.5351500511169434, -2.3002524375915527], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('in the', [-3.2851500511169434, -1.193462610244751], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Bronx', [-4.660150051116943, -2.289273977279663], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Massachusetts', [-4.410150051116943, -0.34538009762763977], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Massachusetts', [-4.410150051116943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The United', [-2.5351500511169434, -0.9252524971961975], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.0351500511169434, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'New York', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Puerto Rico'}

Key: 179756318009511142507628572961364908440
Value: {'question': 'According to Dateline figures, the highest percentage of male clients are in which profession?', 'responses': [('Police', [-2.824723243713379, -0.8372253179550171], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('CEO,', [-4.699723243713379, -3.6369895935058594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lawyers', [-1.6997231245040894, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Real Estate', [-3.449723243713379, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Firefighters', [-4.324723243713379, -1.041258692741394], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dentists', [-4.199723243713379, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lawyers', [-1.6997231245040894, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lawyers', [-1.6997231245040894, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Professional athletes', [-4.199723243713379, -0.916770875453949], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Law', [-2.699723243713379, -0.6079159379005432], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Police', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Accountancy'}
=======
Value: {'question': "Where is New York's Empire State College located?", 'responses': [('Queens', [-4.239283561706543, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On Long', [-3.239283561706543, -2.2752554416656494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albany', [-1.739283561706543, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In Manhattan', [-2.739283561706543, -1.838555097579956], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brooklyn', [-4.489283561706543, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Empire', [-3.239283561706543, -2.1013238430023193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-0.8642836213111877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-0.8642836213111877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buffalo,', [-3.364283561706543, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-0.8642836213111877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Queens', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Saratoga Springs'}

Key: 127381100577386363177225480136719250130
Value: {'question': 'Spear of the Nation was an armed wing of which group?', 'responses': [('Irish Republican', [-2.4461934566497803, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('IRA', [-1.0711934566497803, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('IRA', [-1.0711934566497803, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('IRA', [-1.0711934566497803, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('IRA', [-1.0711934566497803, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ETA', [-3.4461934566497803, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('IRA', [-1.0711934566497803, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('IRA', [-1.0711934566497803, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('IRA', [-1.0711934566497803, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('IRA', [-1.0711934566497803, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Irish Republican', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'ANC'}

Key: 224812378216949517283439716760912399137
Value: {'question': 'Where in Italy did a US military aircraft slice through the steel wire of a cable car in 1998?', 'responses': [('Lake Como', [-2.2795979976654053, -0.323231041431427], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aosta', [-3.8420979976654053, -0.68701171875], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cortina', [-3.7795979976654053, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venice', [-2.0920979976654053, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turin', [-2.9670979976654053, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stresa', [-3.5920979976654053, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lake Como', [-2.2795979976654053, -0.323231041431427], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Verona', [-3.2795979976654053, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lake Como', [-2.2795979976654053, -0.323231041431427], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('San Francisco', [-2.4670979976654053, -0.28932878375053406], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lake Como', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Cavalese'}

Key: 179107895711269720461807915593659596417
Value: {'question': 'What star sign is shared by Meatloaf and Luciano Pavarotti?', 'responses': [('Taurus', [-1.2334121465682983, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Taurus', [-1.2334121465682983, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pisces', [-2.545912265777588, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cancer', [-3.170912265777588, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gemini', [-2.358412265777588, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sagittarius', [-2.545912265777588, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Taurus', [-1.2334121465682983, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cancer', [-3.170912265777588, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Taurus', [-1.2334121465682983, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capricorn', [-1.9209121465682983, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Taurus', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Libra'}

Key: 288367942961643881465726120092568230009
Value: {'question': 'Where was Pablo Casals buried before he was finally laid to rest in Spain?', 'responses': [('The US', [-2.4106931686401367, -1.3451627492904663], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Florida', [-4.410693168640137, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.0356931686401367, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.2856930494308472, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.0356931686401367, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Massachusetts,', [-4.660693168640137, -1.1744718551635742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.2856930494308472, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('America', [-3.4106931686401367, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.2856930494308472, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.2856930494308472, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The US', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': 'Puerto Rico'}

Key: 179756318009511142507628572961364908440
Value: {'question': 'According to Dateline figures, the highest percentage of male clients are in which profession?', 'responses': [('Doctor', [-3.3239541053771973, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lawyers', [-1.9489541053771973, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lawyers', [-1.9489541053771973, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Businessman', [-2.6989541053771973, -2.996368646621704], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Executives', [-4.823954105377197, -0.08995520323514938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Business', [-2.6989541053771973, -0.37136873602867126], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lawyer', [-3.0739541053771973, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Accountant', [-4.573954105377197, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Law', [-3.3239541053771973, -0.04067030921578407], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Business', [-2.6989541053771973, -0.37136873602867126], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Doctor', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336676, 'reference': 'Accountancy'}
>>>>>>> 811d839 (new run)

Key: 279979582935656760007246914605323215224
Value: {'question': 'Santander international airport is in which country?', 'responses': [('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Spain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Spain'}

Key: 79974073255878754178828429521012675763
<<<<<<< HEAD
Value: {'question': 'In which year was Nigel Mansell Indy Car Champion?', 'responses': [('1989', [0.0, 0.0, 0.0, -0.8981232643127441, -1.0598478317260742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1991', [0.0, 0.0, 0.0, -0.5231232643127441, -1.8003113269805908, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1992', [0.0, 0.0, 0.0, -0.5231232643127441, -0.6753113865852356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1987', [0.0, 0.0, 0.0, -0.8981232643127441, -1.1848478317260742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1992', [0.0, 0.0, 0.0, -0.5231232643127441, -0.6753113865852356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1992', [0.0, 0.0, 0.0, -0.5231232643127441, -0.6753113865852356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1993', [0.0, 0.0, 0.0, -0.5231232643127441, -1.5503113269805908, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1992', [0.0, 0.0, 0.0, -0.5231232643127441, -0.6753113865852356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1992', [0.0, 0.0, 0.0, -0.5231232643127441, -0.6753113865852356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1993', [0.0, 0.0, 0.0, -0.5231232643127441, -1.5503113269805908, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1989', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': '1993'}

Key: 4702651428855226319458067758043103616
Value: {'question': 'Thomas Marshal was Vice President to which US President?', 'responses': [('John Adams', [-1.0278716087341309, -0.9178922176361084, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Abraham Lincoln', [-3.652871608734131, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Buchanan', [-3.402871608734131, -1.5863213539123535, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John F.', [-1.0278716087341309, -1.6678922176361084, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Jackson', [-2.027871608734131, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rutherford B.', [-3.652871608734131, -0.11282224208116531, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grover Cleveland', [-4.527871608734131, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George H.', [-3.152871608734131, -1.9747536182403564, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Franklin D.', [-3.652871608734131, -0.7098507881164551, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Millard Fillmore', [-4.152871608734131, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Adams', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Woodrow Wilson'}

Key: 232861013281196204453792394444385469419
Value: {'question': 'Which year was the first after 1927 that the USA lost the Ryder Cup on home soil?', 'responses': [('1999', [0.0, -0.14267508685588837, 0.0, -0.8990267515182495, -1.2603363990783691, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1929', [0.0, -0.14267508685588837, 0.0, -2.149026870727539, -0.8619948029518127, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1997', [0.0, -0.14267508685588837, 0.0, -0.8990267515182495, -2.260336399078369, -0.042999111115932465], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1989', [0.0, -0.14267508685588837, 0.0, -1.2740267515182495, -1.1451663970947266, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1989', [0.0, -0.14267508685588837, 0.0, -1.2740267515182495, -1.1451663970947266, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1989', [0.0, -0.14267508685588837, 0.0, -1.2740267515182495, -1.1451663970947266, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1999', [0.0, -0.14267508685588837, 0.0, -0.8990267515182495, -1.2603363990783691, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1983', [0.0, -0.14267508685588837, 0.0, -1.2740267515182495, -1.7701663970947266, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1989', [0.0, -0.14267508685588837, 0.0, -1.2740267515182495, -1.1451663970947266, -0.03804141283035278], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('1993', [0.0, -0.14267508685588837, 0.0, -0.8990267515182495, -1.2603363990783691, -0.06820624321699142], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1999', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': '1987'}

Key: 206874134562640033879086795966563508343
Value: {'question': 'Ellen Church is recognized as being the first female what?', 'responses': [('astronaut to', [-3.561795234680176, -3.5285849571228027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doctor of', [-3.436795234680176, -1.933110237121582], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pilot', [-3.311795234680176, -0.3032362163066864], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('professional golfer', [-3.186795234680176, -1.7588731050491333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fireman', [-2.686795234680176, -1.3050719499588013], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Architect', [-4.686795234680176, -0.21585164964199066], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surgeon', [-3.436795234680176, -0.341444730758667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surgeon in', [-3.436795234680176, -2.466444730758667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Professional Gol', [-3.311795234680176, -3.0999505519866943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baseball Player', [-3.686795234680176, -2.1688570976257324], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'astronaut to', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Air Hostess'}

Key: 294255499588660911297806806987036370470
Value: {'question': 'Which country does the airline Avensa come from?', 'responses': [('Sweden', [-4.73356819152832, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.6085680723190308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.6085680723190308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-1.2335680723190308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-4.73356819152832, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dominican Republic', [-4.23356819152832, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-1.2335680723190308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.6085680723190308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ecuador', [-3.4835681915283203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.6085680723190308, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sweden', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Venezuela'}

Key: 98367182678807292798741336081368154220
Value: {'question': "What was the USA's biggest attack of the Vietnam War when it took place in February 1967?", 'responses': [('Tet Offensive', [-0.9966657161712646, -0.08893945813179016, -0.042999111115932465], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('The Battle of', [-1.8716657161712646, -2.462841033935547, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('the Easter Offensive', [-3.7466657161712646, -4.730720043182373, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tet Offensive', [-0.9966657161712646, -0.08893945813179016, -0.042999111115932465], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Khe Sanh', [-3.8716657161712646, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tet Offensive', [-0.9966657161712646, -0.08893945813179016, -0.042999111115932465], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A: The', [-4.496665954589844, -3.060351610183716, -1.769195318222046], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Operation Cedar Falls', [-1.7466657161712646, -2.978921890258789, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Tet Offensive', [-0.9966657161712646, -0.08893945813179016, -0.042999111115932465], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Khe Sanh', [-3.8716657161712646, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tet Offensive', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Operation Junction City'}

Key: 152236925587542896734317026329795781446
Value: {'question': "What was Michael Keaton's first movie?", 'responses': [('Night Shift', [-0.6637008786201477, 0.0, -0.19043122231960297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.6637008786201477, 0.0, -0.19043122231960297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peeper', [-4.749638557434082, -2.845858335494995, -0.21325625479221344], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.6637008786201477, 0.0, -0.19043122231960297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.6637008786201477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.6637008786201477, 0.0, -0.19043122231960297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The paper boy', [-1.835575819015503, -3.440190076828003, -2.732966899871826], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Paper Chase', [-1.835575819015503, -2.207768201828003, -0.20718736946582794], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Night Shift', [-1.960575819015503, -0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.6637008786201477, 0.0, -0.19043122231960297], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Night Shift', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Night Shift'}

Key: 221890514532704585195938169608646909635
Value: {'question': "What is Uma Thurman's middle name?", 'responses': [('Katherine', [-3.97029447555542, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Letizia', [-2.28279447555542, -0.7281537652015686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leela', [-2.28279447555542, -2.618778705596924], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeanine', [-4.22029447555542, -2.529172897338867], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aime', [-3.59529447555542, -4.937188148498535], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret', [-3.78279447555542, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mavis', [-4.22029447555542, -1.932335376739502], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maria', [-3.78279447555542, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lee', [-3.78279447555542, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Simone', [-4.53279447555542, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Katherine', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Karuna'}

Key: 35476941957340041085050290222235843276
Value: {'question': 'Which liner launched in 1934 was the largest of her time?', 'responses': [('Queen Mary', [-0.5833704471588135, -0.22541262209415436, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Queen Elizabeth', [-2.2083704471588135, -0.3298283815383911, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Mary', [-0.5833704471588135, -0.22541262209415436, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Queen Mary', [-2.2083704471588135, -0.3298283815383911, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Elizabeth', [-0.5833704471588135, -1.6004126071929932, -0.38004744052886963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Elizabeth', [-0.5833704471588135, -1.6004126071929932, -0.38004744052886963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Mary', [-0.5833704471588135, -0.22541262209415436, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Queen Elizabeth', [-2.2083704471588135, -0.3298283815383911, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Mary', [-0.5833704471588135, -0.22541262209415436, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Mary', [-0.5833704471588135, -0.22541262209415436, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Queen Mary', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'Queen Mary'}

Key: 237258070974547432667437290565435978421
Value: {'question': "What was the name of NASA's manned space project whose astronauts were chosen in 1959?", 'responses': [('Gemini', [-1.3866429328918457, -0.3322162628173828], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Project Mercury', [-1.2616429328918457, -0.11967968195676804], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mercury Seven', [-0.7616428732872009, -3.508408546447754], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mercury', [-0.7616428732872009, -0.2584085762500763], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Project Mercury', [-1.2616429328918457, -0.11967968195676804], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mercury', [-0.7616428732872009, -0.2584085762500763], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Gemini', [-1.3866429328918457, -0.3322162628173828], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mercury Project', [-0.7616428732872009, -2.883408546447754], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Project Mercury', [-1.2616429328918457, -0.11967968195676804], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Mercury', [-0.7616428732872009, -0.2584085762500763], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gemini', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Project Mercury'}

Key: 82678587731806814010819305671138695619
Value: {'question': 'In which country was Anjelica Huston born?', 'responses': [('United States', [-1.9416694641113281, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-4.441669464111328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-1.8166694641113281, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-1.8166694641113281, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-3.441669464111328, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.5666694641113281, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-1.5666694641113281, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-3.066669464111328, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('U.', [-3.941669464111328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-4.691669464111328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'United States', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Ireland'}

Key: 124260990177341235496889431083083897600
Value: {'question': 'Who wrote the novel Delta Connection?', 'responses': [('John Grisham', [-1.7677116394042969, -0.6443418264389038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Clancy', [-3.017711639404297, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert B.', [-2.767711639404297, -3.333466053009033, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Hia', [-4.642711639404297, -0.4022029936313629, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Clancy', [-3.017711639404297, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Ford', [-3.517711639404297, -2.0873961448669434, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Kennedy', [-3.517711639404297, -2.3276047706604004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Sandford', [-1.7677116394042969, -2.9568419456481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Peter Blat', [-3.517711639404297, -3.4526047706604004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Higgins', [-3.767711639404297, -0.21577969193458557, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Grisham', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Hammond Innes'}

Key: 265924860364727688643032453922686888013
Value: {'question': 'In the 70s George Lee was a world champion in which sport?', 'responses': [('boxing', [-2.7800841331481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-1.1550841331481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-1.1550841331481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-1.1550841331481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Weight lifting', [-3.5300841331481934, -2.3662097454071045], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wrestling', [-2.5300841331481934, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Swimming', [-3.9050841331481934, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-1.1550841331481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('boxing', [-2.7800841331481934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diving', [-4.655084133148193, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'boxing', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Gliding'}

Key: 268222498102407144939205649296948911944
Value: {'question': 'Who preceded Hosni Mubarak as President of Egypt?', 'responses': [('Anwar Sadat', [-0.21724200248718262, -0.25453370809555054, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.21724200248718262, -0.25453370809555054, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-2.3422420024871826, -0.08377019315958023, -0.23968873918056488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.21724200248718262, -0.25453370809555054, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar al-Sad', [-0.21724200248718262, -2.8795337677001953, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-2.3422420024871826, -0.08377019315958023, -0.23968873918056488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.21724200248718262, -0.25453370809555054, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.21724200248718262, -0.25453370809555054, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar el Sadat', [-0.21724200248718262, -2.2545337677001953, -1.5019290447235107, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.21724200248718262, -0.25453370809555054, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Anwar Sadat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Anwar El-Sadat'}

Key: 196134602360483132967352780905596711332
Value: {'question': 'What instrument is associated with Illinois-born John Lewis?', 'responses': [('Violin', [-2.686469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tuba', [-3.686469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('harmonica', [-3.061469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saxophone', [-2.311469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Banjo', [-2.561469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Piano', [-2.061469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trumpet', [-1.9364696741104126, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Piano', [-2.061469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cello', [-4.186469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Banjo', [-2.561469554901123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Violin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Piano'}

Key: 159078860897131170897912649699703862635
Value: {'question': 'What type of aid was developed my Miller Hutchinson in the early years of the 20th century?', 'responses': [('Insulin', [-2.22052001953125, -0.08783937245607376], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('insulin', [-3.59552001953125, -0.19256643950939178], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('A motorized', [-3.34552001953125, -4.7197160720825195], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The hot', [-1.72052001953125, -4.372659683227539], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('"The', [-4.59552001953125, -1.311637282371521], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Insulin', [-2.22052001953125, -0.08783937245607376], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Milk substitute', [-3.34552001953125, -4.775315284729004], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('a portable', [-4.59552001953125, -2.298520803451538], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('A.', [-3.34552001953125, -3.3447158336639404], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Oxygen', [-2.97052001953125, -1.2737621068954468], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Insulin', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811906, 'reference': 'Hearing Aid'}

Key: 307851238542101931599530145732638197308
Value: {'question': '"Who said, ""My whole life has been one of rejection. Women. Dogs. Comic strips."""', 'responses': [('George Burns', [-2.5323805809020996, -0.496669739484787, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Gene Wilder', [-4.5323805809021, -0.5903438925743103], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Red Hot', [-4.0323805809021, -4.436835289001465, -2.6780447959899902], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Bill Murray', [-3.0323805809020996, -1.0336720943450928, -0.07151508331298828], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Walt Disney', [-2.6573805809020996, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('P.G', [-4.5323805809021, -0.6325989961624146, -0.6396673321723938], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Charlie Brown', [-3.5323805809020996, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Jerry Seinfeld', [-3.1573805809020996, -0.8372902274131775, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Walt Kelly,', [-2.6573805809020996, -0.6931471824645996, -2.300525665283203], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Stan Lee', [-3.4073805809020996, -0.3951761722564697, -0.06993623077869415], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George Burns', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Charles Schulz'}

Key: 290066546548647106909862790481745839219
Value: {'question': 'John Singer Sargent worked in which branch of the arts?', 'responses': [('Painting', [-0.5429432988166809, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.5429432988166809, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.5429432988166809, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('painting', [-1.6679432392120361, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painter', [-3.417943239212036, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.5429432988166809, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.5429432988166809, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('painting', [-1.6679432392120361, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oil Painting', [-3.542943239212036, -1.197556734085083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('painting', [-1.6679432392120361, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'In which year was Nigel Mansell Indy Car Champion?', 'responses': [('1993', [0.0, 0.0, 0.0, -0.575939416885376, -0.8771594166755676, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1992', [0.0, 0.0, 0.0, -0.575939416885376, -1.0021593570709229, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1993', [0.0, 0.0, 0.0, -0.575939416885376, -0.8771594166755676, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1993', [0.0, 0.0, 0.0, -0.575939416885376, -0.8771594166755676, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1988', [0.0, 0.0, 0.0, -0.825939416885376, -1.7883175611495972, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1993', [0.0, 0.0, 0.0, -0.575939416885376, -0.8771594166755676, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1991', [0.0, 0.0, 0.0, -0.575939416885376, -2.002159357070923, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1986', [0.0, 0.0, 0.0, -0.825939416885376, -2.4133176803588867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1987', [0.0, 0.0, 0.0, -0.825939416885376, -1.2883175611495972, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1991', [0.0, 0.0, 0.0, -0.575939416885376, -2.002159357070923, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1993', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': '1993'}

Key: 4702651428855226319458067758043103616
Value: {'question': 'Thomas Marshal was Vice President to which US President?', 'responses': [('Lyndon Johnson', [-3.0612902641296387, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John F.', [-0.8112902045249939, -0.5036163330078125, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Jackson', [-2.4362902641296387, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Adams', [-0.8112902045249939, -1.1286163330078125, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John F Kennedy', [-0.8112902045249939, -0.5036163330078125, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Johnson', [-2.4362902641296387, -1.6004126071929932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Jackson', [-2.4362902641296387, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Nixon', [-3.5612902641296387, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John F.', [-0.8112902045249939, -0.5036163330078125, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Jackson', [-2.4362902641296387, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lyndon Johnson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Woodrow Wilson'}

Key: 232861013281196204453792394444385469419
Value: {'question': 'Which year was the first after 1927 that the USA lost the Ryder Cup on home soil?', 'responses': [('1929', [0.0, -0.1797446459531784, 0.0, -2.4067749977111816, -0.6473228335380554, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1995', [0.0, -0.1797446459531784, 0.0, -0.9067750573158264, -1.8762681484222412, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1995', [0.0, -0.1797446459531784, 0.0, -0.9067750573158264, -1.8762681484222412, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1989', [0.0, -0.1797446459531784, 0.0, -1.4067749977111816, -1.3812758922576904, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1999', [0.0, -0.1797446459531784, 0.0, -0.9067750573158264, -1.1262681484222412, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1996', [0.0, -0.1797446459531784, 0.0, -0.9067750573158264, -3.126268148422241, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1993', [0.0, -0.1797446459531784, 0.0, -0.9067750573158264, -1.5012681484222412, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1994', [0.0, -0.1797446459531784, 0.0, -0.9067750573158264, -3.251268148422241, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1999', [0.0, -0.1797446459531784, 0.0, -0.9067750573158264, -1.1262681484222412, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1999', [0.0, -0.1797446459531784, 0.0, -0.9067750573158264, -1.1262681484222412, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1929', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': '1987'}

Key: 206874134562640033879086795966563508343
Value: {'question': 'Ellen Church is recognized as being the first female what?', 'responses': [('Footballer', [-2.4787161350250244, -0.999407947063446], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Professional boxer', [-2.7287161350250244, -2.1934804916381836], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('President of', [-4.353715896606445, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fireman', [-2.8537161350250244, -0.950098991394043], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Footballer', [-2.4787161350250244, -0.999407947063446], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surgeon', [-3.7287161350250244, -0.07946828007698059], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Professional bowler', [-2.7287161350250244, -4.443480491638184], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Footballer', [-2.4787161350250244, -0.999407947063446], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('President', [-4.353715896606445, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('professional tennis', [-4.353715896606445, -3.078512668609619], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Footballer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Air Hostess'}

Key: 294255499588660911297806806987036370470
Value: {'question': 'Which country does the airline Avensa come from?', 'responses': [('Spain', [-1.094854474067688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dominican Republic', [-4.219854354858398, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Venezuela', [-2.0948543548583984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ecuador', [-3.7198543548583984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.094854474067688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.094854474067688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.094854474067688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.094854474067688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peru', [-3.4698543548583984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-4.094854354858398, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Spain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Venezuela'}

Key: 98367182678807292798741336081368154220
Value: {'question': "What was the USA's biggest attack of the Vietnam War when it took place in February 1967?", 'responses': [('Battle of', [-4.101948261260986, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tet Offensive', [-0.6019484400749207, -0.2536264657974243], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Tet', [-1.6019484996795654, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tet Offensive', [-0.6019484400749207, -0.2536264657974243], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('My Lai', [-2.1019484996795654, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tet offensive', [-0.6019484400749207, -2.2536263465881348], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tet Offensive', [-0.6019484400749207, -0.2536264657974243], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TET', [-4.101948261260986, -1.2623913288116455], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Tet', [-1.6019484996795654, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tet', [-0.6019484400749207, -2.1286263465881348], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Battle of', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Operation Junction City'}

Key: 152236925587542896734317026329795781446
Value: {'question': "What was Michael Keaton's first movie?", 'responses': [('Night Shift', [-0.3474544882774353, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.3474544882774353, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr. Mom', [-2.79276704788208, -1.857227087020874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.3474544882774353, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Black Stallion', [-1.89432954788208, -4.2648491859436035, -0.36132845282554626], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Urban Cowboy', [-4.26542329788208, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.3474544882774353, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.3474544882774353, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.3474544882774353, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night Shift', [-0.3474544882774353, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Night Shift', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Night Shift'}

Key: 221890514532704585195938169608646909635
Value: {'question': "What is Uma Thurman's middle name?", 'responses': [('Mayeli', [-4.43314790725708, -2.2765002250671387], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Letizia', [-2.62064790725708, -1.129634976387024], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chan', [-4.49564790725708, -0.42676395177841187], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ruth', [-2.68314790725708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Patricia', [-3.12064790725708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Laura', [-4.55814790725708, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ruth', [-2.68314790725708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alexandra', [-4.43314790725708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lee', [-3.49564790725708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thurman', [-2.62064790725708, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mayeli', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Karuna'}

Key: 35476941957340041085050290222235843276
Value: {'question': 'Which liner launched in 1934 was the largest of her time?', 'responses': [('Queen Mary', [-0.739436686038971, -0.1902991682291031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Mary', [-0.739436686038971, -0.1902991682291031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [-1.6144366264343262, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [-1.6144366264343262, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Elizabeth', [-0.739436686038971, -1.752799153327942], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Mary', [-0.739436686038971, -0.1902991682291031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Queen', [-2.114436626434326, -0.3786640763282776], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Mary', [-0.739436686038971, -0.1902991682291031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mauret', [-4.614436626434326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Mary', [-0.739436686038971, -0.1902991682291031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Queen Mary', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': 'Queen Mary'}

Key: 237258070974547432667437290565435978421
Value: {'question': "What was the name of NASA's manned space project whose astronauts were chosen in 1959?", 'responses': [('Mercury', [-0.4195221960544586, -0.17832957208156586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mercury', [-0.4195221960544586, -0.17832957208156586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mercury Project', [-0.4195221960544586, -3.1783294677734375], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Project Mercury', [-1.4195221662521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gemini', [-2.294522285461426, -0.1480308324098587], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Project Mercury', [-1.4195221662521362, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gemini Project', [-2.294522285461426, -2.8980307579040527], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mercury Project', [-0.4195221960544586, -3.1783294677734375], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mercury', [-0.4195221960544586, -0.17832957208156586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mercury', [-0.4195221960544586, -0.17832957208156586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mercury', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Project Mercury'}

Key: 82678587731806814010819305671138695619
Value: {'question': 'In which country was Anjelica Huston born?', 'responses': [('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ireland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Ireland'}

Key: 124260990177341235496889431083083897600
Value: {'question': 'Who wrote the novel Delta Connection?', 'responses': [('Ken Follett', [-2.9563913345336914, -0.152077317237854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sidney Sheldon', [-4.081391334533691, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Patrick O'", [-4.206391334533691, -1.2350246906280518, -0.07655314356088638], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Ludlum', [-3.0813913345336914, -0.42762187123298645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chris Cleave', [-4.456391334533691, -1.2797646522521973, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Connelly', [-3.4563913345336914, -1.1509424448013306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Clancy', [-3.7063913345336914, -0.25604158639907837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackie Collins', [-4.081391334533691, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Wolfe', [-3.7063913345336914, -1.9435415267944336, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Patterson', [-2.5813913345336914, -2.2715282440185547, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ken Follett', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Hammond Innes'}

Key: 265924860364727688643032453922686888013
Value: {'question': 'In the 70s George Lee was a world champion in which sport?', 'responses': [('Chess', [-3.837843894958496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.8378437757492065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.8378437757492065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snooker', [-3.212843894958496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rugby League', [-3.712843894958496, -0.7871686816215515], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Football', [-3.837843894958496, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.8378437757492065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.8378437757492065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.8378437757492065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-0.8378437757492065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chess', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Gliding'}

Key: 268222498102407144939205649296948911944
Value: {'question': 'Who preceded Hosni Mubarak as President of Egypt?', 'responses': [('Anwar Sadat', [-0.274858683347702, -0.29329565167427063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gamal Abdul Nasser', [-1.8998587131500244, 0.0, -1.8366262912750244, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.274858683347702, -0.29329565167427063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.274858683347702, -0.29329565167427063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.274858683347702, -0.29329565167427063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar el Sadat', [-0.274858683347702, -2.1682956218719482, -1.5019290447235107, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-2.3998587131500244, -0.09726624190807343, -0.12783682346343994], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anoushirvan', [-2.3998587131500244, -3.25351619720459, -1.411453366279602, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.274858683347702, -0.29329565167427063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anwar Sadat', [-0.274858683347702, -0.29329565167427063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Anwar Sadat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Anwar El-Sadat'}

Key: 196134602360483132967352780905596711332
Value: {'question': 'What instrument is associated with Illinois-born John Lewis?', 'responses': [('Saxophone', [-2.2319765090942383, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-3.2944765090942383, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Drums', [-3.7319765090942383, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Piano', [-1.3569765090942383, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trumpet', [-1.9819765090942383, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saxophone', [-2.2319765090942383, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trumpet', [-1.9819765090942383, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-3.2944765090942383, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trumpet', [-1.9819765090942383, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trumpet', [-1.9819765090942383, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Saxophone', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': 'Piano'}

Key: 159078860897131170897912649699703862635
Value: {'question': 'What type of aid was developed my Miller Hutchinson in the early years of the 20th century?', 'responses': [('Oxygen mask', [-2.325343608856201, -0.8599977493286133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oxygen mask', [-2.325343608856201, -0.8599977493286133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Air Ambulance', [-2.825343608856201, -2.743245840072632], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lifeboat', [-3.200343608856201, -2.6080589294433594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wheelchair', [-3.200343608856201, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aircraft', [-4.575343608856201, -0.478499174118042], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Motor car', [-4.575343608856201, -1.7436347007751465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ambulance', [-3.325343608856201, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Insulin', [-2.825343608856201, -0.058641258627176285], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anti-', [-2.950343608856201, -0.8640164136886597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oxygen mask', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Hearing Aid'}

Key: 307851238542101931599530145732638197308
Value: {'question': '"Who said, ""My whole life has been one of rejection. Women. Dogs. Comic strips."""', 'responses': [('E.B', [-4.559412956237793, -0.16592971980571747, -0.9779587984085083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Capp', [-3.309412717819214, -0.28815576434135437, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Allen', [-4.059412956237793, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walt Kelly', [-2.934412717819214, -1.1368709802627563, -0.1278369277715683], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Jolson', [-3.309412717819214, -3.6631557941436768, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walt Disney', [-2.934412717819214, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Seinfeld', [-3.184412717819214, -0.8926527500152588, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walt Disney', [-2.934412717819214, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Callahan', [-4.559412956237793, -3.8790791034698486, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dr Seuss', [-4.309412956237793, -0.4098452627658844, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'E.B', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Charles Schulz'}

Key: 290066546548647106909862790481745839219
Value: {'question': 'John Singer Sargent worked in which branch of the arts?', 'responses': [('Painting', [-0.27035900950431824, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.27035900950431824, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.27035900950431824, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.27035900950431824, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.27035900950431824, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.27035900950431824, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.27035900950431824, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.27035900950431824, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painting', [-0.27035900950431824, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art', [-2.2703590393066406, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Painting', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Painting'}

Key: 288074179395323601639927433601895660754
<<<<<<< HEAD
Value: {'question': 'Cuscatlan international airport is in which country?', 'responses': [('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2928279936313629, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'El Salvador', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'El Salvador'}

Key: 171900842470072161729775133695082264500
Value: {'question': 'Who was Pope for the shortest length of time in the 20th century?', 'responses': [('Pope Pius', [-1.4494657516479492, -1.637721061706543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Benedict', [-3.324465751647949, -3.226675033569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo XIII', [-3.824465751647949, -0.12053969502449036], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John XXIII', [-0.8244656920433044, -2.4639394283294678], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Paul', [-0.8244656920433044, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pius XII', [-2.574465751647949, -0.31646811962127686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pious', [-4.824465751647949, -0.7571790218353271], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Paul', [-0.8244656920433044, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Paul', [-0.8244656920433044, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul VI', [-2.199465751647949, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pope Pius', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816237, 'reference': 'John Paul I'}

Key: 132462669459840330187021531713365647946
Value: {'question': "What was Gene Kelly's middle name?", 'responses': [('Louis', [-2.2134106159210205, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Francis', [-3.0259106159210205, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Le Blanc', [-3.6509106159210205, -1.6651556491851807], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert', [-3.3384106159210205, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly', [-3.7134106159210205, -0.05551977828145027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-4.525910377502441, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph', [-1.7759106159210205, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph', [-1.7759106159210205, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph', [-1.7759106159210205, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-3.2759106159210205, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Louis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Curran'}

Key: 311639562193110474642817049589052948057
Value: {'question': 'What was the profession of William Eugene Smith?', 'responses': [('He was', [-2.3955564498901367, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('photojournalist', [-3.6455564498901367, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('photojournalist', [-3.6455564498901367, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('photographer', [-2.2705564498901367, -0.11058321595191956], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.7705565094947815, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photo journalist', [-2.2705564498901367, -2.6477272510528564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('photographer', [-2.2705564498901367, -0.11058321595191956], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer.', [-0.7705565094947815, -3.32468843460083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Genetici', [-5.020556449890137, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.7705565094947815, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'He was', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Photographer'}

Key: 17618108878313622845203590258290222405
Value: {'question': 'Which country does the airline Pluna come form?', 'responses': [('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peru', [-3.769547700881958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-3.644547700881958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uruguay', [-2.394547700881958, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.2695477604866028, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Argentina', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Uruguay'}

Key: 201626797463778288844465772289575099014
Value: {'question': 'Who directed A Passage To India?', 'responses': [('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Cuscatlan international airport is in which country?', 'responses': [('El Salvador', [-0.2270963340997696, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2270963340997696, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2270963340997696, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2270963340997696, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2270963340997696, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guatemala', [-2.8520963191986084, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2270963340997696, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2270963340997696, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2270963340997696, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('El Salvador', [-0.2270963340997696, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'El Salvador', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'El Salvador'}

Key: 171900842470072161729775133695082264500
Value: {'question': 'Who was Pope for the shortest length of time in the 20th century?', 'responses': [('Paul VI', [-2.257138729095459, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Paul II', [-0.6321386098861694, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Paul II', [-0.6321386098861694, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo XIII (', [-4.007138729095459, -0.20438629388809204, -2.6949362754821777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Paul II', [-0.6321386098861694, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Paul II', [-0.6321386098861694, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Paul II', [-0.6321386098861694, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Paul II', [-0.6321386098861694, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul VI', [-2.257138729095459, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jean-Paul', [-4.632138729095459, -0.2101219743490219, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Paul VI', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'John Paul I'}

Key: 132462669459840330187021531713365647946
Value: {'question': "What was Gene Kelly's middle name?", 'responses': [('Francis', [-2.4681010246276855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vincent', [-2.5618510246276855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Francis', [-2.4681010246276855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eugene', [-3.5306010246276855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-3.5618510246276855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph', [-1.843100905418396, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vincent', [-2.5618510246276855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph', [-1.843100905418396, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis', [-1.874350905418396, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anthony', [-3.3431010246276855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Francis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Curran'}

Key: 311639562193110474642817049589052948057
Value: {'question': 'What was the profession of William Eugene Smith?', 'responses': [('photographer', [-3.5480637550354004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.5480638146400452, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.5480638146400452, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.5480638146400452, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Newspaper photographer', [-3.7980637550354004, -1.3983333110809326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lawyer', [-5.0480637550354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Journalist', [-1.9230637550354004, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.5480638146400452, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.5480638146400452, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Photographer', [-0.5480638146400452, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'photographer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Photographer'}

Key: 17618108878313622845203590258290222405
Value: {'question': 'Which country does the airline Pluna come form?', 'responses': [('Switzerland', [-4.471279144287109, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.5962789058685303, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bolivia', [-4.033779144287109, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uruguay', [-2.2212789058685303, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-2.9712789058685303, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uruguay', [-2.2212789058685303, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-0.5962789058685303, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-2.9712789058685303, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uruguay', [-2.2212789058685303, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paraguay', [-3.0962789058685303, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Switzerland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Uruguay'}

Key: 201626797463778288844465772289575099014
Value: {'question': 'Who directed A Passage To India?', 'responses': [('David Lean', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lean', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Lean', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'David Lean'}

Key: 139569287102954419832356661336159618606
<<<<<<< HEAD
Value: {'question': "What is Gregory Peck's real first name?", 'responses': [('"Le', [-3.8404107093811035, -2.5037944316864014], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-2.9810357093811035, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George', [-1.871660590171814, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George', [-1.871660590171814, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George', [-1.871660590171814, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harve', [-3.2779107093811035, -4.494687080383301], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Le', [-3.8404107093811035, -2.5037944316864014], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jonathan', [-4.7154107093811035, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George', [-1.871660590171814, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harrison', [-2.4654107093811035, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"Le', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Eldred'}

Key: 162018681089579160483307994706050259994
Value: {'question': 'Golfer Bobby Jones was born in which state?', 'responses': [('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Carolina', [-4.362300395965576, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [-4.487300395965576, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.23730048537254333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Georgia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Georgia'}

Key: 26700230961085068997014200729846470904
Value: {'question': "What was the world's first atomic-powered ship called?", 'responses': [('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Nautilus', [-2.205671548843384, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.20567165315151215, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nautilus', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Lenin'}

Key: 231966425157872201535229128918966973598
Value: {'question': 'Which soap boasted a cafe called the Hot Biscuit?', 'responses': [('One-', [-3.5923585891723633, -4.521141529083252], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Young', [-1.5923585891723633, -1.0951614379882812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lifebu', [-4.717358589172363, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('All three', [-1.8423585891723633, -1.6940839290618896], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Days of', [-3.0923585891723633, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coronation Street', [-3.3423585891723633, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('All', [-1.8423585891723633, -1.5065839290618896], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Day', [-4.092358589172363, -3.882673501968384], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As the', [-2.8423585891723633, -0.20745758712291718], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Days of', [-3.0923585891723633, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'One-', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Dallas'}

Key: 222845490348177567908780836878781808889
Value: {'question': 'Which architect designed the Seagram Building, New York City?', 'responses': [('Ludwig Mies van der', [-1.282287359237671, 0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mies van der Ro', [-0.6260372996330261, -0.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mies van der Ro', [-0.6260372996330261, -0.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mies van der Ro', [-0.6260372996330261, -0.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Le Corbusier', [-3.501037359237671, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ludwig Mies Van der', [-1.282287359237671, 0.0, -1.8047446012496948, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mies van der Ro', [-0.6260372996330261, -0.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mies van der Ro', [-0.6260372996330261, -0.3132617473602295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ludwig Mies van der', [-1.282287359237671, 0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Le Corbusier', [-3.501037359237671, 0.0, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ludwig Mies van der', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Philip Johnson'}

Key: 133415777412843876455131661572149103340
Value: {'question': 'Which gossip columnist was born in the same day as Sir Alexander Fleming who discovered penicillin?', 'responses': [('Richard Dimble', [-2.2262415885925293, -2.383030414581299, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jean Patchett', [-4.601241588592529, -1.903221607208252, -0.044334154576063156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judith Jamison', [-4.132491588592529, -1.5278064012527466, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz Smith', [-0.9137415885925293, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Eden', [-2.2262415885925293, -2.398655414581299, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz Smith', [-0.9137415885925293, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Dawson', [-2.2262415885925293, -4.683811664581299, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Mitford', [-3.2262415885925293, -1.4712965488433838, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Winchell', [-4.476241588592529, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A: Sue', [-4.413741588592529, -0.4769527316093445, -4.225733280181885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Richard Dimble', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Louella Parsons'}

Key: 206048988084187081166961380959641954550
Value: {'question': "In what year was the first performance of Copland's ballet Rodeo?", 'responses': [('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1935', [0.0, 0.0, 0.0, -1.7014133930206299, -1.0669574737548828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.2014133334159851, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1942', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': '1942'}
=======
Value: {'question': "What is Gregory Peck's real first name?", 'responses': [('Milton', [-3.223001480102539, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-1.9105013608932495, -0.06011725217103958], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leslie', [-4.238626480102539, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-1.8792513608932495, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wallace', [-4.894876480102539, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Waldemar', [-4.301126480102539, -0.08631781488656998], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George', [-1.7698763608932495, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George', [-1.7698763608932495, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Milton', [-3.223001480102539, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Milton', [-3.223001480102539, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Milton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Eldred'}

Key: 162018681089579160483307994706050259994
Value: {'question': 'Golfer Bobby Jones was born in which state?', 'responses': [('South Carolina', [-3.561396837234497, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alabama', [-1.436396837234497, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.5613968968391418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.5613968968391418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.5613968968391418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.5613968968391418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [-3.561396837234497, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.5613968968391418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.5613968968391418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Georgia', [-0.5613968968391418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'South Carolina', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Georgia'}

Key: 26700230961085068997014200729846470904
Value: {'question': "What was the world's first atomic-powered ship called?", 'responses': [('Nautilus', [-0.4593923091888428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Nautilus', [-1.8968923091888428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.4593923091888428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.4593923091888428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.4593923091888428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The USS', [-1.5218923091888428, -1.550844430923462], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.4593923091888428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Nautilus', [-1.8968923091888428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Nautilus', [-1.5218923091888428, -0.2383444905281067], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-0.4593923091888428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nautilus', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Lenin'}

Key: 231966425157872201535229128918966973598
Value: {'question': 'Which soap boasted a cafe called the Hot Biscuit?', 'responses': [('EastEnders', [-1.7535912990570068, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neighbours', [-3.378591299057007, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hollyoaks', [-3.628591299057007, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emmerdale', [-1.3785912990570068, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastenders', [-1.7535912990570068, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Crossroads', [-2.003591299057007, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emmerdale', [-1.3785912990570068, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('EastEnders', [-1.7535912990570068, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emmerdale', [-1.3785912990570068, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('EastEnders', [-1.7535912990570068, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'EastEnders', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.193549604098133, 'reference': 'Dallas'}

Key: 222845490348177567908780836878781808889
Value: {'question': 'Which architect designed the Seagram Building, New York City?', 'responses': [('Mies van der', [-0.8636706471443176, -0.3484445810317993, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philip Johnson', [-1.7386705875396729, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ludwig Mies van', [-1.2699205875396729, 0.0, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mies Van Der', [-0.8636706471443176, -1.2234445810317993, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philip Johnson', [-1.7386705875396729, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mies van der', [-0.8636706471443176, -0.3484445810317993, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Le Corbusier', [-3.066795587539673, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Le Corbusier', [-3.066795587539673, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ludwig Mies van', [-1.2699205875396729, 0.0, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Rudolph', [-3.082420587539673, -0.2301061600446701, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mies van der', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576455, 'reference': 'Philip Johnson'}

Key: 133415777412843876455131661572149103340
Value: {'question': 'Which gossip columnist was born in the same day as Sir Alexander Fleming who discovered penicillin?', 'responses': [('Cecil Beaton', [-2.9612605571746826, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judy Geeson', [-4.367510795593262, -3.6350202560424805, -0.19500917196273804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tabby Brown', [-4.336260795593262, -2.2187814712524414, -1.8558316230773926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diana Vre', [-1.5550105571746826, -0.5451930165290833, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('P.G', [-4.055010795593262, -0.024726316332817078, -0.7785758972167969], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Mitford', [-2.7737605571746826, -0.2087254524230957, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Sellers', [-4.305010795593262, -3.956235647201538, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diana Gould', [-1.5550105571746826, -3.4983179569244385, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liz Jones', [-2.0550105571746826, -0.3769513666629791, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nancy Mitford', [-2.7737605571746826, -0.2087254524230957, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Cecil Beaton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Louella Parsons'}

Key: 206048988084187081166961380959641954550
Value: {'question': "In what year was the first performance of Copland's ballet Rodeo?", 'responses': [('1935', [0.0, 0.0, 0.0, -1.6004126071929932, -0.6335001587867737, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.22541262209415436, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.22541262209415436, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1935', [0.0, 0.0, 0.0, -1.6004126071929932, -0.6335001587867737, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1936', [0.0, 0.0, 0.0, -1.6004126071929932, -1.883500099182129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1935', [0.0, 0.0, 0.0, -1.6004126071929932, -0.6335001587867737, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.22541262209415436, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.22541262209415436, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.22541262209415436, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1942', [0.0, 0.0, 0.0, -0.22541262209415436, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1935', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': '1942'}
>>>>>>> 811d839 (new run)

Key: 40243996919479275282745825598398755699
Value: {'question': 'Ferihegy international airport is in which country?', 'responses': [('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hungary', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Hungary'}

Key: 28498979740954328694639780805553282835
<<<<<<< HEAD
Value: {'question': 'Who was the defending champion when Virginia Wade won the Wimbledon singles?', 'responses': [('Billie Jean King', [-1.198784351348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-1.073784351348877, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Evonne Goo', [-3.761284351348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martina Navrat', [-3.323784351348877, -0.12442267686128616, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-1.073784351348877, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ann-Margaret', [-3.573784351348877, -2.0202043056488037, -0.5591806769371033], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chris Evert', [-1.948784351348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billie Jean King', [-1.198784351348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martina Navrat', [-3.323784351348877, -0.12442267686128616, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-1.073784351348877, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Billie Jean King', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Chris Evert'}

Key: 293734612520689255272682687730766392419
Value: {'question': 'Who is the youngest female tennis player to win the US Open?', 'responses': [('Mary Pierce', [-3.7401998043060303, -0.2935536205768585, -0.2117263674736023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('18', [-2.5526998043060303, 0.0, -2.462268114089966], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-0.7401997447013855, 0.0, -0.1212046816945076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martina Hingis', [-2.8026998043060303, -0.1902991682291031, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-0.7401997447013855, 0.0, -0.1212046816945076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-0.7401997447013855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monica Seles', [-3.4276998043060303, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-0.7401997447013855, 0.0, -0.1212046816945076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams (', [-0.7401997447013855, 0.0, -2.7462046146392822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martina Navrat', [-2.8026998043060303, -1.752799153327942, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mary Pierce', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Tracey Austin'}

Key: 20675158005487116313140304369763255047
Value: {'question': "How many 'victories' did The Red Baron claim in aerial dogfights?", 'responses': [('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, -0.029750416055321693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Who was the defending champion when Virginia Wade won the Wimbledon singles?', 'responses': [('Chris Evert', [-1.7849541902542114, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Christine Truman', [-3.097454071044922, -0.07167021930217743, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-1.0349541902542114, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chris Evert', [-1.7849541902542114, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-1.0349541902542114, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Betty Stove', [-3.909954071044922, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-1.0349541902542114, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chris Evert', [-1.7849541902542114, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martina Navrat', [-4.034954071044922, -0.13348272442817688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billie Jean King', [-1.1599541902542114, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chris Evert', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Chris Evert'}

Key: 293734612520689255272682687730766392419
Value: {'question': 'Who is the youngest female tennis player to win the US Open?', 'responses': [('Serena Williams', [-0.703300952911377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Capriati', [-3.203300952911377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Capriati', [-3.203300952911377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-0.703300952911377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('17', [-2.890800952911377, 0.0, -0.635055661201477], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-0.703300952911377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-0.703300952911377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maria Shara', [-2.203300952911377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-0.703300952911377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maria Shara', [-2.203300952911377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Serena Williams', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'Tracey Austin'}

Key: 20675158005487116313140304369763255047
Value: {'question': "How many 'victories' did The Red Baron claim in aerial dogfights?", 'responses': [('80', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('80', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '80', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '80'}

Key: 321830251965098813327794683585653114734
<<<<<<< HEAD
Value: {'question': 'Which great guitarist had the first names Aaron Thibodaux?', 'responses': [('Hendrix', [-4.110656261444092, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eddie Van', [-3.235656261444092, -0.7494088411331177], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eric Clapton', [-2.360656261444092, -0.2830178737640381], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimi Hendrix', [-2.735656261444092, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aaron Neville', [-1.4856561422348022, -0.7009063959121704], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Lee', [-4.235656261444092, -1.8711750507354736], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeff Beck', [-4.485656261444092, -0.2345588654279709], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A)', [-4.360656261444092, -3.6073737144470215], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Ray', [-2.735656261444092, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aaron "', [-1.4856561422348022, -3.950906276702881], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hendrix', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'T-Bone Walker'}

Key: 79578698876076704977975493904880280024
Value: {'question': "Who first coined the term paradigm for all the factors that influence the scientist's research?", 'responses': [('Popper', [-2.8630971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Popper', [-2.8630971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.363097190856934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Werner', [-4.988097190856934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kuhn', [-2.3630971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter', [-3.7380971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Popper', [-2.8630971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Karl', [-2.1130971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Francis', [-3.6130971908569336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael', [-4.488097190856934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Popper', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'TS Kuhn'}

Key: 36070154396712154643653036594315999644
Value: {'question': 'In which country was Sam Neill born?', 'responses': [('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-2.4880282878875732, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-0.11302828043699265, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'New Zealand', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'N. Ireland'}

Key: 36622441507917707257721454485516711226
Value: {'question': "What was Dorothy Parker's maiden name?", 'responses': [('Goldmark', [-4.322338104248047, -0.7500564455986023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('McLa', [-4.322338104248047, -3.961155891418457], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hardie', [-4.197338104248047, -2.1740927696228027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Davis', [-4.072338104248047, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duns', [-2.822338342666626, -3.800976276397705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('De Witt', [-3.697338342666626, -2.104464530944824], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Parker', [-1.947338342666626, -0.02630021423101425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kulp', [-4.197338104248047, -2.6596198081970215], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blad', [-3.697338342666626, -4.601907730102539], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rosenbloom', [-3.822338342666626, -1.8311634063720703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Goldmark', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Rothschild'}

Key: 312589320640282127554878433659917910685
Value: {'question': 'In which month in 1997 was The Notorious B.I.G. gunned down?', 'responses': [('April', [-1.3366914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('March', [-0.3991914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('April', [-1.3366914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('April', [-1.3366914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('March', [-0.3991914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('April', [-1.3366914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('April', [-1.3366914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('April', [-1.3366914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('March', [-0.3991914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('March', [-0.3991914987564087, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'April', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'March'}

Key: 124774877716016870596617776307572335909
Value: {'question': 'What was the official occupation of Sir Anthony Blunt who was unmasked as a Soviet spy in 1979?', 'responses': [('Curator', [-2.832974910736084, -1.7761727571487427], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Curator', [-2.832974910736084, -1.7761727571487427], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('A librarian', [-4.332974910736084, -3.5640625953674316], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Art historian', [-1.332974910736084, -0.7871275544166565], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Painter', [-2.707974910736084, -0.2580885887145996], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Art Historian', [-1.332974910736084, -0.6621275544166565], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('art historian', [-2.332974910736084, -0.07888974994421005], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Curator at', [-2.832974910736084, -1.7761727571487427], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Painter and', [-2.707974910736084, -2.2580885887145996], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('curator of', [-3.207974910736084, -0.4955616593360901], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Curator', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336676, 'reference': 'Art Historian'}

Key: 221494145827526289462458716220507483890
Value: {'question': 'Which famous name was accused f the abduction of Stompie Seipei?', 'responses': [('Swarts', [-3.094825029373169, -4.818841934204102, -0.43717172741889954], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fanie Mo', [-4.40732479095459, -1.394748568534851, -3.527907371520996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andries Vis', [-4.03232479095459, 0.0, -2.868101119995117], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mo Shab', [-4.03232479095459, -1.7124168872833252, -1.036908745765686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Snyman', [-3.094825029373169, -0.7524358630180359, -0.3304581940174103], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Zille', [-2.469825029373169, -1.0844812393188477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mosioua', [-4.03232479095459, -1.4702293872833252, -2.522334337234497], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('De Kler', [-3.344825029373169, -0.29686421155929565, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ferial B', [-4.40732479095459, -2.8947486877441406, -3.8735175132751465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reverend Fred West', [-3.094825029373169, -3.8875441551208496, -1.7320671081542969], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Swarts', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Winnie Mandela'}

Key: 106201516426833113297956256161784471258
Value: {'question': 'What was the highest rank Charles Lindbergh attained?', 'responses': [('Brigadier General', [-1.1599164009094238, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marshal,', [-3.534916400909424, -3.474168062210083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brig.', [-4.409916400909424, -0.24766086041927338], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brigadier General', [-1.1599164009094238, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brigadier General', [-1.1599164009094238, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brigadier General', [-1.1599164009094238, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brig', [-4.409916400909424, -3.3101608753204346], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marshall', [-5.034916400909424, -0.3176901638507843], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brigadier General', [-1.1599164009094238, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General', [-2.534916400909424, -0.544013261795044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Brigadier General', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Brigadier General'}

Key: 260342534036238364135277911986073399379
Value: {'question': 'Who was the second person to make a solo transatlantic flight?', 'responses': [('Charles Kingsford', [-0.4464392066001892, -1.8904298543930054, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-1.821439266204834, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindberg', [-0.4464392066001892, -3.421679973602295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-0.4464392066001892, -0.20292986929416656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-0.4464392066001892, -0.20292986929416656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindberg', [-0.4464392066001892, -3.421679973602295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-3.633939266204834, 0.0, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amy Johnson', [-3.633939266204834, 0.0, -0.08422527462244034], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-1.821439266204834, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-0.4464392066001892, -0.20292986929416656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charles Kingsford', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'Amelia Earhart'}

Key: 249093719641925845835948156585155931547
Value: {'question': 'Who became commanding general of the First Armored Corps in 1941?', 'responses': [('George S', [-0.3719708025455475, -0.5131808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Patton', [-0.3719708025455475, -1.1381808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas MacArthur', [-3.9969708919525146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George S', [-0.3719708025455475, -0.5131808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George S', [-0.3719708025455475, -0.5131808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Patton', [-0.3719708025455475, -1.1381808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George S', [-0.3719708025455475, -0.5131808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William H', [-4.6844706535339355, -2.2318029403686523], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George S', [-0.3719708025455475, -0.5131808519363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Patton', [-2.4969708919525146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George S', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'George Patton'}

Key: 249419115553623093756983007819816491547
Value: {'question': "Who was the third wife of the leader of China's Long March?", 'responses': [('Bo', [-3.0167031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang', [-1.3292031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dong', [-4.829203128814697], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang', [-1.3292031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zhu', [-3.4542031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang', [-1.3292031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zhu', [-3.4542031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang', [-1.3292031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.016703128814697], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang', [-1.3292031288146973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Jiang Qing'}

Key: 132532817351745135020936454935011230836
Value: {'question': 'In 1985 Terry Waite returned to Beirut after securing the release of four British hostages where?', 'responses': [('Lebanon', [-1.8870110511779785, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('On foot', [-4.0120110511779785, -3.6427571773529053], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Terry Waite', [-3.2620110511779785, -0.03364565595984459], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Saudi Arabia', [-4.5120110511779785, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('in a', [-4.1370110511779785, -0.9697409868240356], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('By car', [-4.5120110511779785, -3.8975181579589844], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Lebanon', [-1.8870110511779785, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Terry Waite', [-3.2620110511779785, -0.03364565595984459], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The airport', [-1.8870110511779785, -2.4553298950195312], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('The Syrian', [-1.8870110511779785, -4.705329895019531], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lebanon', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Libya'}

Key: 124102255095464627206439794718749384932
Value: {'question': 'Where did Ferdinand Marcos live in exile?', 'responses': [('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.0658353641629219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which great guitarist had the first names Aaron Thibodaux?', 'responses': [('Eric Clapton', [-2.586493492126465, -0.357710599899292], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duane', [-3.586493492126465, -0.7446132898330688], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Ray', [-2.023993492126465, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albert King', [-2.961493492126465, -1.5170871019363403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Ray', [-2.023993492126465, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince', [-4.898993492126465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BB King', [-4.648993492126465, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pete', [-4.461493492126465, -0.24607594311237335], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('SRV', [-3.273993492126465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Ray', [-2.023993492126465, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Eric Clapton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'T-Bone Walker'}

Key: 79578698876076704977975493904880280024
Value: {'question': "Who first coined the term paradigm for all the factors that influence the scientist's research?", 'responses': [('Karl Popper', [-1.8201078176498413, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Whe', [-4.570107936859131, -0.5323116779327393], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kurt Lewin', [-2.570107936859131, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Karl Popper', [-1.8201078176498413, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thomas Kuhn', [-1.3201078176498413, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Popper', [-2.820107936859131, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Med', [-3.320107936859131, -0.20390380918979645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wilkins', [-2.820107936859131, -2.7955474853515625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thomas Kuhn', [-1.3201078176498413, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Karl Popper', [-1.8201078176498413, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Karl Popper', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'TS Kuhn'}

Key: 36070154396712154643653036594315999644
Value: {'question': 'In which country was Sam Neill born?', 'responses': [('New Zealand', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'New Zealand', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'N. Ireland'}

Key: 36622441507917707257721454485516711226
Value: {'question': "What was Dorothy Parker's maiden name?", 'responses': [('Loring', [-4.295191764831543, -1.8163429498672485], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Palmer', [-4.420191764831543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("O'", [-3.920191764831543, -0.15678106248378754], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doughton', [-2.920191764831543, -4.490693092346191], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dorthy', [-2.920191764831543, -3.1469430923461914], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hardie', [-3.920191764831543, -2.69791841506958], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Deitz', [-3.357691764831543, -3.0464048385620117], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Parker', [-2.357691764831543, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dororthy', [-3.795191764831543, -2.594046115875244], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gish', [-4.232691764831543, -2.0750391483306885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Loring', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Rothschild'}

Key: 312589320640282127554878433659917910685
Value: {'question': 'In which month in 1997 was The Notorious B.I.G. gunned down?', 'responses': [('March', [-0.5269066095352173, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('March', [-0.5269066095352173, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('March', [-0.5269066095352173, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('March', [-0.5269066095352173, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('March', [-0.5269066095352173, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('April', [-1.2144066095352173, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('April', [-1.2144066095352173, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('March', [-0.5269066095352173, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('March', [-0.5269066095352173, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('March', [-0.5269066095352173, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'March', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'March'}

Key: 124774877716016870596617776307572335909
Value: {'question': 'What was the official occupation of Sir Anthony Blunt who was unmasked as a Soviet spy in 1979?', 'responses': [('Courtier', [-4.75113582611084, -0.6780191659927368], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art historian', [-0.5636358857154846, -0.6621275544166565], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art historian', [-0.5636358857154846, -0.6621275544166565], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painter', [-2.56363582611084, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art Historian', [-0.5636358857154846, -0.7871275544166565], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art Historian', [-0.5636358857154846, -0.7871275544166565], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art historian', [-0.5636358857154846, -0.6621275544166565], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art Historian', [-0.5636358857154846, -0.7871275544166565], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art Historian', [-0.5636358857154846, -0.7871275544166565], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Curator of', [-3.12613582611084, -1.1192946434020996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Courtier', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Art Historian'}

Key: 221494145827526289462458716220507483890
Value: {'question': 'Which famous name was accused f the abduction of Stompie Seipei?', 'responses': [('Fred Barends', [-4.746231555938721, -4.586645126342773, -0.5646405816078186], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Suzman', [-2.6837315559387207, -0.13070476055145264, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chris Panay', [-2.5274815559387207, -3.127112627029419, -0.05332408472895622], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chris Stals', [-2.5274815559387207, -2.173987627029419, -0.3304581940174103], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve Biko', [-2.4649815559387207, -0.5815582275390625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Suzman', [-2.6837315559387207, -0.13070476055145264, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Suzman', [-2.6837315559387207, -0.13070476055145264, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chris Hani', [-2.5274815559387207, -0.34586262702941895, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winnie Madik', [-2.9649815559387207, -1.3132617473602295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donald Woods', [-3.4649815559387207, -0.04060094803571701, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Fred Barends', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Winnie Mandela'}

Key: 106201516426833113297956256161784471258
Value: {'question': 'What was the highest rank Charles Lindbergh attained?', 'responses': [('Commander', [-3.9678497314453125, -0.9005247354507446], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Admiral of', [-3.5928497314453125, -2.3502066135406494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain in', [-2.4678497314453125, -2.3999838829040527], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Admiral', [-3.5928497314453125, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lieutenant Colonel', [-3.4678497314453125, -0.7824691534042358], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Major General', [-2.8428497314453125, -0.3874903619289398], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Private', [-4.5928497314453125, -0.32879573106765747], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brigadier General', [-1.217849612236023, -0.2693469226360321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain', [-2.4678497314453125, -0.14998379349708557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Knight Commander', [-3.9678497314453125, -1.1354243755340576], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Commander', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Brigadier General'}

Key: 260342534036238364135277911986073399379
Value: {'question': 'Who was the second person to make a solo transatlantic flight?', 'responses': [('Charles Lindbergh', [-0.2182392030954361, -0.05009171739220619, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-0.2182392030954361, -0.05009171739220619, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-0.2182392030954361, -0.05009171739220619, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-0.2182392030954361, -0.05009171739220619, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-0.2182392030954361, -0.05009171739220619, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-1.718239188194275, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-0.2182392030954361, -0.05009171739220619, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Lindbergh', [-0.2182392030954361, -0.05009171739220619, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Kingsford Smith', [-0.2182392030954361, -3.0188417434692383, 0.0, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amelia Earhart', [-1.718239188194275, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charles Lindbergh', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Amelia Earhart'}

Key: 249093719641925845835948156585155931547
Value: {'question': 'Who became commanding general of the First Armored Corps in 1941?', 'responses': [('George S Patton', [-0.15561604499816895, -0.6211479902267456, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Patton', [-0.15561604499816895, -0.9961479902267456, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Patton', [-0.15561604499816895, -0.9961479902267456, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George S.', [-0.15561604499816895, -0.6211479902267456, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George S Patton', [-0.15561604499816895, -0.6211479902267456, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dwight D.', [-2.905616044998169, -0.28115010261535645, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General George S', [-3.280616044998169, -0.12692804634571075, -0.7320835590362549], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Patton', [-0.15561604499816895, -0.9961479902267456, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas MacArthur', [-3.718116044998169, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George S.', [-0.15561604499816895, -0.6211479902267456, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George S Patton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'George Patton'}

Key: 249419115553623093756983007819816491547
Value: {'question': "Who was the third wife of the leader of China's Long March?", 'responses': [('Mao Zedong', [-1.2098240852355957, -0.22695089876651764, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mao Zedong', [-1.2098240852355957, -0.22695089876651764, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang Qing', [-0.9910740852355957, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mao Zedong', [-1.2098240852355957, -0.22695089876651764, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peng Ju', [-4.741074085235596, -4.524134635925293, -0.16196607053279877], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mao Zedong', [-1.2098240852355957, -0.22695089876651764, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang Qing', [-0.9910740852355957, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang Qing', [-0.9910740852355957, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zhou Enlai', [-4.678574085235596, -0.055722858756780624, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jiang Qing', [-0.9910740852355957, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mao Zedong', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.193549604098133, 'reference': 'Jiang Qing'}

Key: 132532817351745135020936454935011230836
Value: {'question': 'In 1985 Terry Waite returned to Beirut after securing the release of four British hostages where?', 'responses': [('Lebanon', [-1.2293267250061035, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lebanon', [-1.2293267250061035, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The British', [-1.8543267250061035, -1.4767335653305054], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beirut', [-1.9793267250061035, -0.1714010238647461], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beirut', [-1.9793267250061035, -0.1714010238647461], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iraq', [-4.3543267250061035, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Royal', [-1.8543267250061035, -4.351733684539795], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lebanon', [-1.2293267250061035, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('With the', [-4.8543267250061035, -1.1154453754425049], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beirut', [-1.9793267250061035, -0.1714010238647461], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lebanon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Libya'}

Key: 124102255095464627206439794718749384932
Value: {'question': 'Where did Ferdinand Marcos live in exile?', 'responses': [('Hawaii', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hawaii', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Hawaii'}

Key: 241716708195553408401475408183604654975
<<<<<<< HEAD
Value: {'question': 'Which American led a team to put 10 people on the summit of Everest in 1990?', 'responses': [('Eric Simonson', [-3.60577654838562, -0.9996805191040039, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Eric Simonson', [-3.60577654838562, -0.9996805191040039, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('George Mallory', [-1.7307765483856201, -0.41858309507369995, -0.08675938844680786], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Reinhold Messner', [-3.23077654838562, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Ed Viest', [-1.9807765483856201, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('George Leigh-', [-1.7307765483856201, -1.4498331546783447, -1.4143340587615967], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Ed Viest', [-1.9807765483856201, 0.0, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Rob Hall', [-1.9182765483856201, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Rob Hall', [-1.9182765483856201, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)), ('Scott Fischer', [-2.73077654838562, 0.0], tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Eric Simonson', 'embedding': tensor([ 0.2676, -0.1250,  0.7305,  ..., -2.7812,  0.2100, -0.7500],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'James Whittaker'}

Key: 218795540985323367096234144983786424140
Value: {'question': 'UN Secretary Dag Hammarskjold was killed over which country?', 'responses': [('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zaire', [-4.1918206214904785, -0.12379933148622513], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.12932074069976807, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zaire (', [-4.1918206214904785, -2.4987993240356445], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Congo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Congo'}

Key: 128915403974730318764757286641373842558
Value: {'question': 'What was the autobiography of the first president of non-Apartheid South Africa called?', 'responses': [('The Story of', [-1.6778326034545898, -2.5255463123321533, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Dream Deferred', [-1.9903326034545898, -3.2617552280426025, -0.4044163227081299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'In My", [-3.24033260345459, -3.4250173568725586, -0.5027875304222107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Long Walk', [-1.9903326034545898, -1.2383177280426025, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Long Walk', [-1.9903326034545898, -1.2383177280426025, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Gathering Storm', [-1.6778326034545898, -4.545077323913574, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Out of the', [-4.36533260345459, 0.0, -1.612511157989502], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The autobiography', [-1.9903326034545898, -1.0181013345718384, -3.177443504333496], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('My President', [-2.30283260345459, -3.2071704864501953, -0.516207754611969], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Life and', [-1.6778326034545898, -3.1661713123321533, -0.7340380549430847], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Story of', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Long Walk To Freedom'}

Key: 3776806781845316900668396464531678982
Value: {'question': 'Which terrorist group murdered Italian Prime Minister Aldo Moro?', 'responses': [('The Red Brig', [-1.6495778560638428, 0.0, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.399577796459198, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Red Brig', [-1.6495778560638428, 0.0, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.399577796459198, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Red Brig', [-1.6495778560638428, 0.0, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Red Brig', [-2.8995778560638428, -0.06196761503815651, -0.1902991682291031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.399577796459198, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.399577796459198, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigade', [-0.399577796459198, -1.6004126071929932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.399577796459198, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Which American led a team to put 10 people on the summit of Everest in 1990?', 'responses': [('David Breas', [-4.059908390045166, -0.5197798609733582, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob Hall', [-1.6849082708358765, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob Hall', [-1.6849082708358765, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ed Viest', [-1.5599082708358765, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ed Viest', [-1.5599082708358765, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edmund Hillary', [-3.434908390045166, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scott Fischer', [-2.747408390045166, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ed Viest', [-1.5599082708358765, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eric Simonson', [-3.809908390045166, -2.0460939407348633, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Mallory', [-2.122408390045166, -0.4225270748138428, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Breas', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'James Whittaker'}

Key: 218795540985323367096234144983786424140
Value: {'question': 'UN Secretary Dag Hammarskjold was killed over which country?', 'responses': [('Congo', [-0.07221391052007675, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.07221391052007675, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.07221391052007675, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.07221391052007675, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.07221391052007675, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.07221391052007675, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.07221391052007675, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Northern Rhodesia', [-3.822213888168335, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.07221391052007675, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.07221391052007675, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Congo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Congo'}

Key: 128915403974730318764757286641373842558
Value: {'question': 'What was the autobiography of the first president of non-Apartheid South Africa called?', 'responses': [('My own Country', [-2.4180970191955566, -2.0982460975646973, -3.0656230449676514, -0.06039178743958473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Life without bitterness', [-4.605597019195557, -4.735461711883545, -0.6903663277626038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('And the People of', [-3.1055970191955566, -0.9126220941543579, -0.7473046779632568, -1.8947808742523193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Long walk to freedom', [-2.6680970191955566, -1.7014133930206299, 0.0, -0.3672420084476471], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('From the dark continent', [-3.9493470191955566, -2.300581693649292, -3.9129462242126465, -0.6516219973564148], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The struggle is my', [-1.293096899986267, -3.934431552886963, 0.0, -0.13026219606399536], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In My Own Image', [-3.4805970191955566, -1.02511465549469, -0.5397053360939026, -0.5747286677360535], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Long Walk to Freedom', [-2.6680970191955566, -0.2014133334159851, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Long Walk to Freedom', [-2.6680970191955566, -0.2014133334159851, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('My own life', [-2.4180970191955566, -2.0982460975646973, -1.8546855449676514, -0.03868259862065315], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'My own Country', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Long Walk To Freedom'}

Key: 3776806781845316900668396464531678982
Value: {'question': 'Which terrorist group murdered Italian Prime Minister Aldo Moro?', 'responses': [('The Red Brig', [-1.1200990676879883, 0.0, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigade', [-0.4950990676879883, -1.6004126071929932, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.4950990676879883, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.4950990676879883, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.4950990676879883, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.4950990676879883, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Red Brig', [-1.1200990676879883, 0.0, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.4950990676879883, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Brigades', [-0.4950990676879883, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Red Brig', [-1.1200990676879883, 0.0, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Red Brig', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Red Brigade'}

Key: 156389365689999926360140935408621548462
<<<<<<< HEAD
Value: {'question': 'General Boris Gromov was the last Soviet soldier to leave where in 1989?', 'responses': [('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.10649556666612625, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Afghanistan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Afghanistan'}

Key: 191655695193997094037739397194130001083
Value: {'question': "Which politician's wife was acquitted in 1990 of defrauding US banks?", 'responses': [('Hillary Clinton', [-1.3235416412353516, -0.25192904472351074, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paula Jones', [-1.6360416412353516, 0.0, -0.12442604452371597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paula Jones', [-1.6360416412353516, 0.0, -0.12442604452371597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paula Jones', [-1.6360416412353516, 0.0, -0.12442604452371597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [-1.3235416412353516, -0.25192904472351074, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [-1.3235416412353516, -0.25192904472351074, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth Edwards', [-3.8860416412353516, -1.4927939176559448, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paula Jones', [-1.6360416412353516, 0.0, -0.12442604452371597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [-1.3235416412353516, -0.25192904472351074, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pat Buchanan', [-4.636041641235352, -0.9425654411315918, -0.2598815858364105], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hillary Clinton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.193549604098133, 'reference': 'Imelda Marcos'}
=======
Value: {'question': 'General Boris Gromov was the last Soviet soldier to leave where in 1989?', 'responses': [('Afghanistan', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [-0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('East Germany', [-3.529750347137451, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Afghanistan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Afghanistan'}

Key: 191655695193997094037739397194130001083
Value: {'question': "Which politician's wife was acquitted in 1990 of defrauding US banks?", 'responses': [('Hillary Clinton', [-0.5169540643692017, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Clinton', [-4.329453945159912, 0.0, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [-0.5169540643692017, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Linda Tripp', [-4.016953945159912, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [-0.5169540643692017, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Patricia Hearst', [-3.891953945159912, -0.5042949914932251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monica Lewinsky', [-2.829453945159912, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Clinton', [-4.329453945159912, 0.0, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbara Bush', [-3.391953945159912, -0.12765543162822723, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Rodham', [-0.5169540643692017, -1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hillary Clinton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Imelda Marcos'}
>>>>>>> 811d839 (new run)

Key: 153641513820618293740328822374027395913
Value: {'question': 'In what year did Saddam Hussein become President of Iraq?', 'responses': [('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1979', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1979'}

Key: 302994331910760981268139265879348494673
<<<<<<< HEAD
Value: {'question': 'Who became chair of Joint Chiefs of Staff in 1989?', 'responses': [('Colin Powell', [-0.4016849994659424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Colin Powell', [-2.7766849994659424, -0.0658353641629219, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.4016849994659424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gen Colin Powell', [-2.2766849994659424, -1.6768909692764282, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.4016849994659424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Admiral William Crowe', [-3.8391849994659424, -0.5229871273040771, -0.883621096611023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Vessey', [-3.4016849994659424, -2.1182191371917725, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Colin Powell', [-2.7766849994659424, -0.0658353641629219, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.4016849994659424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.4016849994659424, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Colin Powell', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Colin Powel'}

Key: 112336655863953727289151152239041489640
Value: {'question': 'Who became leader of the Bosnian Serbs in 1992?', 'responses': [('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.07991541922092438, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Radovan Karadzic', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Radovan Karadzic'}

Key: 251615365013322300496785118359100654136
Value: {'question': 'Who was deputy commander of the 1983 US invasion of Grenada?', 'responses': [('George Bush', [-3.050632953643799, -0.4802963137626648, -0.3411121368408203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-1.6131329536437988, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard V.', [-2.613132953643799, -1.9189406633377075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver North', [-3.425632953643799, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Bush', [-3.050632953643799, -0.4802963137626648, -0.3411121368408203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Admiral James Stock', [-2.113132953643799, -2.286562442779541, -1.7821601629257202], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norman Schwarzkopf', [-3.300632953643799, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Webster', [-2.238132953643799, -2.674563407897949, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Shinn', [-3.425632953643799, -2.8381993770599365, -3.405686378479004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William H.', [-2.238132953643799, -1.0183134078979492, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George Bush', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Norman Schwarzkopf'}

Key: 112621010749114873344690779061520400943
Value: {'question': "What was Mother Teresa's real first name?", 'responses': [('Anissa', [-2.6680572032928467, -3.718888282775879], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnieszka', [-3.4805572032928467, -2.511899948120117], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.10555730760097504, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Anissa', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Agnes'}

Key: 278153753257599531809888903373395552443
Value: {'question': 'Which famous daughter was made chief designer at Chloe in 1997?', 'responses': [('Charlotte Tilbury', [-3.454979181289673, -2.549668550491333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Portman', [-3.892479181289673, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stella McCartney', [-0.8299791216850281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gwyneth Palt', [-4.736228942871094, -0.9983144998550415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stella McCartney', [-0.8299791216850281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eva Herzigo', [-2.798729181289673, -0.8098893165588379, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("L'W", [-4.626853942871094, -2.2150988578796387, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stella McCartney', [-0.8299791216850281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stella McCartney', [-0.8299791216850281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stella McCartney', [-0.8299791216850281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charlotte Tilbury', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Stella McCartney'}

Key: 110718371274451688667629004812406078422
Value: {'question': 'Which supermodel was married to Rod Stewart?', 'responses': [('Kelly Emberg', [-0.9484848380088806, -0.06669698655605316, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alana Stewart', [-0.8547348380088806, 0.0, -0.31528720259666443, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.9484848380088806, -0.06669698655605316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alana Stewart', [-0.8547348380088806, 0.0, -0.31528720259666443, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.9484848380088806, -0.06669698655605316, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.9484848380088806, -0.06669698655605316, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alana Hamilton', [-0.8547348380088806, 0.0, -1.5652872323989868, -0.08995520323514938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.9484848380088806, -0.06669698655605316, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brittny Hyland', [-3.2297348976135254, -0.8274034857749939, -3.655165195465088, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.9484848380088806, -0.06669698655605316, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kelly Emberg', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Rachel Hunter'}

Key: 42541121178534249598581172585996043635
Value: {'question': "Who was America's first world chess champion?", 'responses': [('Alexander Alekh', [-3.0468101501464844, -0.13210901618003845, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.9530602097511292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.9530602097511292, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.9530602097511292, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.9530602097511292, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Marshall', [-2.8593101501464844, -0.07428312301635742, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Benjamin Finegold', [-3.1405601501464844, -2.2958192825317383, -1.2192764282226562], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alexander Alekh', [-3.0468101501464844, -0.13210901618003845, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Morphy', [-2.7030601501464844, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.9530602097511292, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alexander Alekh', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Bobby Fischer'}

Key: 36754556358022080508633952530327595840
Value: {'question': 'Which Swiss-born Californian first used an amplifier with a guitar?', 'responses': [('Les Paul', [-0.2883586883544922, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.2883586883544922, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Les Paul', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Adolph Rickenbacker'}

Key: 55649484334040535808025618933499393668
Value: {'question': 'Who was chairman of the Watergate hearings?', 'responses': [('Senator Sam Er', [-0.5957830548286438, -0.12887169420719147, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Baker', [-3.470782995223999, -0.024726316332817078, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sen. Sam', [-2.470782995223999, 0.0, -0.07428312301635742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Er', [-0.5957830548286438, -0.12887169420719147, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sam Ervin', [-1.345782995223999, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Howard Baker', [-0.5957830548286438, -2.3788716793060303, -0.1388506442308426], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Er', [-0.5957830548286438, -0.12887169420719147, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard Baker', [-3.470782995223999, -0.024726316332817078, -0.07468855381011963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Er', [-0.5957830548286438, -0.12887169420719147, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Er', [-0.5957830548286438, -0.12887169420719147, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Senator Sam Er', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Sam Ervin'}

Key: 180448380045309061665862502836458131534
Value: {'question': "Who was credited with popularizing the term rock 'n' roll?", 'responses': [('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Haley', [-2.075748920440674, 0.0, -0.39069485664367676], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Haley', [-2.075748920440674, 0.0, -0.39069485664367676], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.45074886083602905, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alan Freed', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Alan Freed'}

Key: 319998578712037567647451627927394052926
Value: {'question': "What were Gary Gilmore's final words before his execution in 1977?", 'responses': [('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it", [-3.197103261947632, 0.0, 0.0, -0.47014153003692627, 0.0, -0.680269718170166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Let\'s do it', [-0.1346033662557602, 0.0, 0.0, 0.0, -0.13857576251029968, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it.", [-3.197103261947632, 0.0, 0.0, -0.47014153003692627, 0.0, -1.180269718170166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"Let\'s do it', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': "Let's do it"}

Key: 91263013124951831420564963122303849014
Value: {'question': 'In which country was Ivana Trump born and brought up?', 'responses': [('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The former', [-3.496915340423584, -1.3558602333068848], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.1844152957201004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Czechoslovakia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Czechoslovakia'}

Key: 85558074199962147582474503274110867743
Value: {'question': 'Who wrote the stage musical Cabaret?', 'responses': [('John Kander', [-1.6463130712509155, -0.5385206937789917, 0.0, -0.7669399976730347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0, -0.10243461281061172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0, -0.10243461281061172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0, -0.10243461281061172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0, -0.10243461281061172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Kander', [-1.6463130712509155, -0.5385206937789917, 0.0, -0.7669399976730347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0, -0.10243461281061172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.33381304144859314, 0.0, 0.0, -0.10243461281061172], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kander and E', [-2.396312952041626, 0.0, -0.25192904472351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Kander', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Bob Fosse'}

Key: 114911040170031719467127176814513378046
Value: {'question': 'Flamenco dancer Joaquin Cortes hit the headlines in 1996 over his relationship with which supermodel?', 'responses': [('Cindy Crawford', [-3.1203813552856445, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.057881474494934, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.057881474494934, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Eva Herzigo', [-3.1828813552856445, -0.22541262209415436, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Naomi Campbell', [-0.9953814744949341, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Naomi Campbell', [-0.9953814744949341, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Naomi Campbell', [-0.9953814744949341, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.057881474494934, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.057881474494934, 0.0, 0.0], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)), ('Helena Christensen', [-3.6828813552856445, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Cindy Crawford', 'embedding': tensor([ 0.2676, -0.1211,  0.7461,  ..., -2.7500,  0.2090, -0.7617],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Naomi Campbell'}

Key: 118403327119291304726338423794480953093
Value: {'question': 'Which Italian fashion designer was murdered on the orders of his ex-wife?', 'responses': [('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianfranco Fer', [-2.2763209342956543, -0.1435224711894989, -0.266189843416214], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.15132087469100952, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
=======
Value: {'question': 'Who became chair of Joint Chiefs of Staff in 1989?', 'responses': [('Colin Powell', [-0.13443507254123688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Ves', [-3.7594351768493652, -1.46574068069458], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.13443507254123688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.13443507254123688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.13443507254123688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.13443507254123688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.13443507254123688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.13443507254123688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Powell', [-3.6344351768493652, -0.04631420224905014], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-0.13443507254123688, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Colin Powell', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Colin Powel'}

Key: 112336655863953727289151152239041489640
Value: {'question': 'Who became leader of the Bosnian Serbs in 1992?', 'responses': [('Radovan Karadzic', [-0.03804141283035278, 0.0, 0.0, 0.0, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.03804141283035278, 0.0, 0.0, 0.0, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Slobodan Milosevic', [-3.288041353225708, 0.0, 0.0, -0.13458658754825592, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.03804141283035278, 0.0, 0.0, 0.0, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.03804141283035278, 0.0, 0.0, 0.0, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Slobodan Milosevic', [-3.288041353225708, 0.0, 0.0, -0.13458658754825592, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadžić', [-0.03804141283035278, 0.0, 0.0, 0.0, -2.293837308883667, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.03804141283035278, 0.0, 0.0, 0.0, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.03804141283035278, 0.0, 0.0, 0.0, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radovan Karadzic', [-0.03804141283035278, 0.0, 0.0, 0.0, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Radovan Karadzic', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Radovan Karadzic'}

Key: 251615365013322300496785118359100654136
Value: {'question': 'Who was deputy commander of the 1983 US invasion of Grenada?', 'responses': [('General Oliver North', [-2.1308724880218506, -3.991084098815918, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-1.3183724880218506, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Vessey', [-3.0683724880218506, -1.8935049772262573, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-1.3183724880218506, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Robert B', [-2.1308724880218506, -4.018427848815918, -2.6937482357025146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General George H', [-2.1308724880218506, -2.952021598815918, -0.7753804922103882], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-1.3183724880218506, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colin Powell', [-1.3183724880218506, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General John F', [-2.1308724880218506, -2.569209098815918, -4.085923671722412], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Westmoreland', [-2.1933724880218506, -4.2166924476623535, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'General Oliver North', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Norman Schwarzkopf'}

Key: 112621010749114873344690779061520400943
Value: {'question': "What was Mother Teresa's real first name?", 'responses': [('Agnes', [-0.04044583439826965, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnieszka', [-3.2279458045959473, -2.2558188438415527], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.04044583439826965, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.04044583439826965, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.04044583439826965, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.04044583439826965, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.04044583439826965, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.04044583439826965, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.04044583439826965, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agnes', [-0.04044583439826965, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Agnes', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Agnes'}

Key: 278153753257599531809888903373395552443
Value: {'question': 'Which famous daughter was made chief designer at Chloe in 1997?', 'responses': [('Caroline de Ma', [-2.6645548343658447, -0.8782753944396973, -0.020541900768876076], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kate Moss', [-1.8208048343658447, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kate Moss', [-1.8208048343658447, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kate Moss', [-1.8208048343658447, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gaby Aghion', [-3.8208048343658447, 0.0, -0.05114768072962761], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stella McCartney', [-0.8833048343658447, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kate Moss', [-1.8208048343658447, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kate Moss', [-1.8208048343658447, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Portman', [-2.9926798343658447, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stella McCartney', [-0.8833048343658447, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Caroline de Ma', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Stella McCartney'}

Key: 110718371274451688667629004812406078422
Value: {'question': 'Which supermodel was married to Rod Stewart?', 'responses': [('Penny Lancaster', [-1.217017650604248, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.717017650604248, -0.24678805470466614, -0.10119447112083435], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.717017650604248, -0.24678805470466614, -0.10119447112083435], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Penny Lancaster', [-1.217017650604248, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Penny Lancaster', [-1.217017650604248, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.717017650604248, -0.24678805470466614, -0.10119447112083435], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Hoppen', [-0.717017650604248, -4.168663024902344, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rachel Hunter', [-2.357642650604248, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Emberg', [-0.717017650604248, -0.24678805470466614, -0.10119447112083435], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rachel Hunter', [-2.357642650604248, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Penny Lancaster', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'Rachel Hunter'}

Key: 42541121178534249598581172585996043635
Value: {'question': "Who was America's first world chess champion?", 'responses': [('Bobby Fischer', [-0.1935953050851822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.1935953050851822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.1935953050851822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.1935953050851822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.1935953050851822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reuben Fine', [-4.1310954093933105, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.1935953050851822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.1935953050851822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.1935953050851822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Fischer', [-0.1935953050851822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bobby Fischer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Bobby Fischer'}

Key: 36754556358022080508633952530327595840
Value: {'question': 'Which Swiss-born Californian first used an amplifier with a guitar?', 'responses': [('Leo Fender', [-1.2884913682937622, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.4134913682937622, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo Fender', [-1.2884913682937622, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo Fender', [-1.2884913682937622, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo Fender', [-1.2884913682937622, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.4134913682937622, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo Fender', [-1.2884913682937622, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leo Fender', [-1.2884913682937622, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.4134913682937622, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Paul', [-0.4134913682937622, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Leo Fender', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'Adolph Rickenbacker'}

Key: 55649484334040535808025618933499393668
Value: {'question': 'Who was chairman of the Watergate hearings?', 'responses': [('Sam Ervin', [-0.9409236907958984, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sam Ervin', [-0.9409236907958984, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Ervin', [-0.6909236907958984, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sam Ervin', [-0.9409236907958984, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Ervin', [-0.6909236907958984, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Ervin', [-0.6909236907958984, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sen John Danforth', [-3.6284236907958984, -2.5227813720703125, -2.6352460384368896, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Ervin', [-0.6909236907958984, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Ervin', [-0.6909236907958984, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Senator Sam Ervin', [-0.6909236907958984, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sam Ervin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Sam Ervin'}

Key: 180448380045309061665862502836458131534
Value: {'question': "Who was credited with popularizing the term rock 'n' roll?", 'responses': [('John Lennon', [-5.105413436889648, -0.5231232643127441, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.4179133474826813, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.4179133474826813, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.4179133474826813, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.4179133474826813, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Disc jockey Alan', [-5.042913436889648, -0.45600980520248413, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('DJ Alan Freed', [-2.6679134368896484, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Freed', [-0.4179133474826813, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dick Clark', [-3.4179134368896484, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Disc Jockey Alan', [-5.042913436889648, -1.206009864807129, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Lennon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Alan Freed'}

Key: 319998578712037567647451627927394052926
Value: {'question': "What were Gary Gilmore's final words before his execution in 1977?", 'responses': [("Let's do it", [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it", [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it", [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it", [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it", [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it", [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it", [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it", [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it", [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Let's do it", [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Let's do it", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': "Let's do it"}

Key: 91263013124951831420564963122303849014
Value: {'question': 'In which country was Ivana Trump born and brought up?', 'responses': [('Czechoslovakia', [-0.19063369929790497, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.19063369929790497, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.19063369929790497, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.19063369929790497, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Slovakia', [-3.253133773803711, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.19063369929790497, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.19063369929790497, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.19063369929790497, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-2.003133773803711, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czechoslovakia', [-0.19063369929790497, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Czechoslovakia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Czechoslovakia'}

Key: 85558074199962147582474503274110867743
Value: {'question': 'Who wrote the stage musical Cabaret?', 'responses': [('Joe Masteroff', [-0.22541262209415436, 0.0, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.22541262209415436, 0.0, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Kander and', [-1.6004126071929932, -0.8575592041015625, 0.0, -0.9517839550971985], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.22541262209415436, 0.0, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.22541262209415436, 0.0, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.22541262209415436, 0.0, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.22541262209415436, 0.0, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.22541262209415436, 0.0, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Masteroff', [-0.22541262209415436, 0.0, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Van Druten', [-1.6004126071929932, -1.3263092041015625, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joe Masteroff', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Bob Fosse'}

Key: 114911040170031719467127176814513378046
Value: {'question': 'Flamenco dancer Joaquin Cortes hit the headlines in 1996 over his relationship with which supermodel?', 'responses': [('Claudia Schiffer', [-1.1675333976745605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.1675333976745605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.1675333976745605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.1675333976745605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Naomi Campbell', [-0.9175333976745605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.1675333976745605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Claudia Schiffer', [-1.1675333976745605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Naomi Campbell', [-0.9175333976745605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Naomi Campbell', [-0.9175333976745605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kate Moss', [-2.5425333976745605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Claudia Schiffer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Naomi Campbell'}

Key: 118403327119291304726338423794480953093
Value: {'question': 'Which Italian fashion designer was murdered on the orders of his ex-wife?', 'responses': [('Gianni Versace', [-0.25151392817497253, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.25151392817497253, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.25151392817497253, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maurizio Gucci', [-2.001513957977295, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.25151392817497253, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.25151392817497253, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.25151392817497253, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.25151392817497253, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.25151392817497253, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gianni Versace', [-0.25151392817497253, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
>>>>>>> 811d839 (new run)
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gianni Versace', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Gucci'}

Key: 41386005276256069827578514489489948666
<<<<<<< HEAD
Value: {'question': 'How old was George Gershwin when he died?', 'responses': [('63', [0.0, -2.1821796894073486, -0.29959842562675476, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '63', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': '38'}
=======
Value: {'question': 'How old was George Gershwin when he died?', 'responses': [('38', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '38', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '38'}

Key: 260728163534429737930975324506906594183
Value: {'question': 'Who was the first black man to receive the Nobel Peace Prize?', 'responses': [('Desmond Tutu', [-3.273592472076416, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Desmond Tutu', [-3.273592472076416, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elie Wiesel', [-3.773592472076416, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ralph Bunche', [-1.4610923528671265, -0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elie Wiesel', [-3.773592472076416, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martin Luther King', [-1.0235923528671265, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Wilberforce', [-4.273592472076416, -1.4156122207641602, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ralph Bunche', [-1.4610923528671265, -0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nelson Mandela', [-3.023592472076416, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ralph Bunche', [-1.4610923528671265, -0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Desmond Tutu', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696344, 'reference': 'Ralph Johnson Bunche'}

Key: 317273800445463278638331861061583905647
Value: {'question': 'Which golfer became only the fifth in history to win both the British and US Open championships in the same year, in 1982?', 'responses': [('Tom Watson', [-0.17500434815883636, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-0.17500434815883636, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-0.17500434815883636, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-0.17500434815883636, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-0.17500434815883636, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-0.17500434815883636, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-0.17500434815883636, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-0.17500434815883636, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-0.17500434815883636, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tony Jacklin', [-3.550004243850708, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tom Watson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Tom Watson'}

Key: 114404383659750916271958502896020119357
Value: {'question': 'How many times did tennis legend Jimmy Connors win the US Open in the 1970s?', 'responses': [('2', [-0.37931886315345764, -3.078097105026245], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.37931886315345764, -0.9530971646308899], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seven', [-3.629318952560425, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three', [-2.504318952560425, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three', [-2.504318952560425, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.37931886315345764, -0.9530971646308899], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.37931886315345764, -1.2030971050262451], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.37931886315345764, -1.2030971050262451], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.37931886315345764, -3.078097105026245], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Twice', [-3.754318952560425, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '2', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Three'}

Key: 82113399767614852618301961634767083744
Value: {'question': 'Which pop star did model Iman marry in 1992?', 'responses': [('David Bowie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Bowie', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'David Bowie'}

Key: 49540638951359010748245541494873604342
Value: {'question': 'Which actress links Dorothy in The Golden Girls and Maude Findlay in Maude?', 'responses': [('Rue McClan', [-1.2615963220596313, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bea Arthur', [-1.0428463220596313, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bea Arthur', [-1.0428463220596313, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Betty White', [-1.3865963220596313, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beatrice Arthur', [-2.167846202850342, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Betty White', [-1.3865963220596313, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Betty White', [-1.3865963220596313, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bea Arthur', [-1.0428463220596313, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bea Arthur', [-1.0428463220596313, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beatrice Arthur', [-2.167846202850342, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rue McClan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Bea Arthur'}

Key: 114161214623348457555140620794349414024
Value: {'question': 'Which of the Friends cast has a son called Julian in real life?', 'responses': [('Courtney Cox', [-3.743303060531616, 0.0, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Schwimmer', [-1.7433030605316162, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Schwimmer', [-1.7433030605316162, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Courteney', [-2.243303060531616, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt LeBlanc', [-1.8683030605316162, -0.202803835272789, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Schwimmer', [-1.7433030605316162, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matthew Perry', [-1.1183030605316162, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Courteney', [-2.243303060531616, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matthew Perry', [-1.1183030605316162, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Aniston', [-2.118303060531616, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Courtney Cox', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': 'Lisa Kudrow'}

Key: 74902893885493003463426470230672194198
Value: {'question': "What was the name of Jed's nephew in The Beverly Hillbillies?", 'responses': [('Jethro', [-0.14293169975280762, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jethro', [-0.14293169975280762, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jethro', [-0.14293169975280762, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jethro', [-0.14293169975280762, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jethro', [-0.14293169975280762, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jethro', [-0.14293169975280762, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jethro', [-0.14293169975280762, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jethro', [-0.14293169975280762, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elly May', [-2.2679316997528076, 0.0, -0.1902991682291031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jethro', [-0.14293169975280762, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jethro', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Jethro Bodine'}

Key: 89675156571508832488515393451808959036
Value: {'question': 'What was Green Acres called on radio?', 'responses': [('Mr Ed', [-3.16546630859375, -0.3902914226055145, -0.07946828007698059], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Acres Jubilee', [-3.16546630859375, -0.10642408579587936, -3.8957314491271973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Little Ras', [-1.2279661893844604, -2.948455333709717, -2.3597609996795654], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mrs. Little', [-4.97796630859375, -1.347733497619629, -3.364985466003418], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hooray for', [-1.7904661893844604, -1.306281328201294, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Three's", [-4.10296630859375, -0.41870176792144775, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beer Barrel', [-1.2279661893844604, -3.995330333709717, -0.40054142475128174], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hooray For', [-1.7904661893844604, -1.306281328201294, -1.4061501026153564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hog Heaven', [-2.85296630859375, -1.2588679790496826, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Big Valley', [-1.2279661893844604, -3.964080333709717, -0.5953134894371033], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mr Ed', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': "Granby's Green Acres"}

Key: 124971783577525741940176776549560353252
Value: {'question': 'Which 90s sitcom character was said to be a symbol of failing values which caused LA riots, according to Dan Quayle?', 'responses': [('Alf', [-2.7145092487335205, -0.37197086215019226], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Homer Simpson', [-1.3395092487335205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Laverne', [-4.870759010314941, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Homer Simpson', [-1.3395092487335205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Homer Simpson', [-1.3395092487335205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alf', [-2.7145092487335205, -0.37197086215019226], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martin', [-2.0895092487335205, -0.9718193411827087], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uncle Jesse', [-4.027009010314941, -1.2849317789077759], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Fresh', [-1.5270092487335205, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Homer Simpson', [-1.3395092487335205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alf', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Murphy Brown'}

Key: 232211252438818668039188397089379885597
Value: {'question': 'According to the series when was the Cheers bar founded?', 'responses': [('1982', [0.0, 0.0, 0.0, -0.4443970322608948, -0.31702515482902527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1977', [0.0, 0.0, 0.0, -1.81939697265625, -0.49206674098968506, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1977', [0.0, 0.0, 0.0, -1.81939697265625, -0.49206674098968506, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1976', [0.0, 0.0, 0.0, -1.81939697265625, -2.8670668601989746, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1956', [0.0, 0.0, 0.0, -2.31939697265625, -1.1459404230117798, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1982', [0.0, 0.0, 0.0, -0.4443970322608948, -0.31702515482902527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1979', [0.0, 0.0, 0.0, -1.81939697265625, -2.6170668601989746, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1982', [0.0, 0.0, 0.0, -0.4443970322608948, -0.31702515482902527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1977', [0.0, 0.0, 0.0, -1.81939697265625, -0.49206674098968506, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1946', [0.0, 0.0, 0.0, -2.31939697265625, -1.1134580373764038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1982', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': '1895'}

Key: 214171935788296617074305467819744064136
Value: {'question': 'Which sitcom with Vickie Lawrence was a spin-off from the Carol Burnett Show?', 'responses': [("Mama's Family", [-0.2856491506099701, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Mama's Family", [-0.2856491506099701, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Mama's Family", [-0.2856491506099701, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Mama's Family", [-0.2856491506099701, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Mama's Family", [-0.2856491506099701, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Mama's Family", [-0.2856491506099701, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Mama's Family", [-0.2856491506099701, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Mama's Family", [-0.2856491506099701, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Mama's Family", [-0.2856491506099701, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Mama's Family", [-0.2856491506099701, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Mama's Family", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': "Mama's Family"}

Key: 94016489463103075097592268620800749611
Value: {'question': 'Who was creator and executive producer of Magnum PI?', 'responses': [('Jerry Bruck', [-3.4281740188598633, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Selleck', [-1.1078616380691528, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glen A Larson', [-1.4359866380691528, -0.2101299911737442, -0.919148862361908], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steven Bochco', [-1.7953616380691528, -0.12387295067310333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Selleck', [-1.1078616380691528, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Selleck', [-1.1078616380691528, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Bruck', [-3.4281740188598633, -0.07428312301635742, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Larry Hagman', [-3.9125490188598633, -0.08631781488656998, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steven Bochco', [-1.7953616380691528, -0.12387295067310333, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Horton', [-3.9125490188598633, -0.3974975347518921, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jerry Bruck', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Donald P. Bellisario'}

Key: 247618883214188536559700321425503291443
Value: {'question': 'What was the name of the vet in Daktari?', 'responses': [('Tommy', [-4.9053754806518555, -0.4065439999103546], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dr.', [-1.3311564922332764, -0.1694450080394745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dr.', [-1.3311564922332764, -0.1694450080394745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dack', [-0.8936565518379211, -2.995091199874878], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dakt', [-0.8936565518379211, -0.30759111046791077], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dakt', [-0.8936565518379211, -0.30759111046791077], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jim Hagen', [-4.4717817306518555, -2.6094727516174316], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dini', [-0.8936565518379211, -2.057591199874878], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sabu', [-4.1983442306518555, -0.22910301387310028], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tige', [-4.9170942306518555, -1.7777001857757568], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tommy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Marsh Tracy'}

Key: 174523508644839145320025032671338218496
Value: {'question': 'Who bought CBS in 1929 and remained on the board until 1983?', 'responses': [('Laurence S.', [-2.488323211669922, -1.7235398292541504, -0.028617966920137405], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Laurence Tisch', [-2.488323211669922, -0.4735398292541504, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sumner Redstone', [-3.175823211669922, -0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William S P', [-0.23832325637340546, -0.38687101006507874, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sumner Redstone', [-3.175823211669922, -0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William P.', [-0.23832325637340546, -1.1368709802627563, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William S P', [-0.23832325637340546, -0.38687101006507874, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William S.', [-0.23832325637340546, -0.38687101006507874, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William S P', [-0.23832325637340546, -0.38687101006507874, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sumner Redstone', [-3.175823211669922, -0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Laurence S.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'William S. Paley'}

Key: 309256373494868368099145378325512992169
Value: {'question': 'Which executive producer of Dream On is well known for films such as Trading Places?', 'responses': [('John Landis', [-2.211909055709839, -0.2844601571559906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [-2.211909055709839, -0.2844601571559906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel Brooks', [-3.649409055709839, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Simpson', [-3.461909055709839, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert B.', [-1.8994090557098389, -4.314846038818359, -1.2234445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Glenroy D', [-3.493159055709839, -2.8852572441101074, -4.498404502868652], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Reiner', [-3.399409055709839, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry Mangio', [-3.993159055709839, -4.943033218383789, -0.4999636709690094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Franklin Schaffner', [-3.805659055709839, -2.216911554336548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joel Silver', [-2.743159055709839, -0.02630021423101425, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Landis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'John Landis'}

Key: 152565417291398001400780794328851422454
Value: {'question': '"To which interviewer did Richard Nixon say, ""I never cry except in public?"', 'responses': [('Barbara Walters', [-2.987438440322876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbara Walters', [-2.987438440322876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Frost', [-2.237438440322876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Frost', [-2.237438440322876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hope', [-4.362438201904297, -2.3725571632385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William F Buckley', [-4.112438201904297, -1.4817065000534058, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Cronkite', [-1.862438440322876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard K.', [-2.924938440322876, -0.07428312301635742, -0.2131100296974182], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daniel Ells', [-4.612438201904297, -3.8833415508270264, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dan Rather', [-3.174938440322876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Barbara Walters', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'David Frost'}

Key: 13071032477997266460406828076098266798
Value: {'question': 'Who did Dick Van Dyke play in The Dick Van Dyke Show?', 'responses': [('Rob Pet', [-0.051641397178173065, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob', [-0.051641397178173065, -2.1821796894073486], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Reiner', [-2.9891414642333984, -1.0013978481292725], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob Pet', [-0.051641397178173065, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob Pet', [-0.051641397178173065, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob Pet', [-0.051641397178173065, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Reiner', [-2.9891414642333984, -1.0013978481292725], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob Pet', [-0.051641397178173065, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob Pet', [-0.051641397178173065, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob Pet', [-0.051641397178173065, -0.11967968195676804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rob Pet', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Rob Petrie'}

Key: 71824463603702974986837139683120026524
Value: {'question': 'Which English actress and star of Primary Colors appeared as a guest in Cheers?', 'responses': [('Meryl', [-0.4806809425354004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cher', [-4.6056809425354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madeline Kahn', [-4.1369309425354, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meryl', [-0.4806809425354004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Mir', [-2.6369309425354004, -0.3672420084476471], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meryl', [-0.4806809425354004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meryl', [-0.4806809425354004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meryl', [-0.4806809425354004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jane Fonda', [-5.0431809425354, -2.9240429401397705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meryl', [-0.4806809425354004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Meryl', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Emma Thompson'}

Key: 101488927130423351244820971570126412898
Value: {'question': 'What was the first sitcom to reach No 1 in the Nielsen ratings?', 'responses': [('All In', [-1.478395700454712, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('All In', [-1.478395700454712, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Flint', [-1.228395700454712, -3.1046266555786133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I Dream', [-1.353395700454712, -2.970445394515991], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Family Ties', [-4.603395462036133, -0.3877488672733307], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I Dream', [-1.353395700454712, -2.970445394515991], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I Love', [-1.353395700454712, -0.4079454839229584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seinfeld', [-3.353395700454712, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Andy', [-1.228395700454712, -2.4796266555786133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Brady', [-1.228395700454712, -3.4796266555786133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'All In', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'I Love Lucy'}

Key: 188100808541663966264606591390861454459
Value: {'question': 'Who in the singing Jackson family appeared in Different Strokes?', 'responses': [('Marlon', [-3.003932476043701, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackie Jackson', [-1.2539323568344116, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('La Toy', [-3.878932476043701, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Janet Jackson', [-1.5039323568344116, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tito', [-2.878932476043701, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Jackson', [-1.8789323568344116, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackie', [-1.2539323568344116, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Janet', [-1.5039323568344116, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jermaine', [-2.753932476043701, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Janet Jackson', [-1.5039323568344116, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Marlon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Janet'}

Key: 168322353913814597210607079579334717003
Value: {'question': 'What was the first spin-off from The Beverly Hillbillies called?', 'responses': [('The Odd Couple', [-1.1242337226867676, -2.3001832962036133, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New Beverly', [-1.1242337226867676, -0.9564331769943237, -0.6832441091537476], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Acres', [-0.4992336928844452, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Acres', [-0.4992336928844452, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New Beverly', [-1.1242337226867676, -0.9564331769943237, -0.6832441091537476], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Acres', [-0.4992336928844452, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Acres', [-0.4992336928844452, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Acres', [-0.4992336928844452, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New Beverly', [-1.1242337226867676, -0.9564331769943237, -0.6832441091537476], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Acres', [-0.4992336928844452, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Odd Couple', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Petticoat Junction'}

Key: 15399267072455528684600283653056202595
Value: {'question': 'Which series was a spin off from the Golden Girls spin-off, Empty Nest?', 'responses': [('The Nanny', [-0.6922311186790466, -1.1510353088378906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Golden Palace', [-0.6922311186790466, -0.5260353088378906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Nanny', [-0.6922311186790466, -1.1510353088378906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Golden Palace', [-0.6922311186790466, -0.5260353088378906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Golden Palace', [-0.6922311186790466, -0.5260353088378906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston Common', [-4.629731178283691, -1.4980168342590332, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Golden Palace', [-0.6922311186790466, -0.5260353088378906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Nanny', [-0.6922311186790466, -1.1510353088378906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Golden Palace', [-0.6922311186790466, -0.5260353088378906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Nanny', [-0.6922311186790466, -1.1510353088378906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Nanny', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'Nurses'}

Key: 78141616718090973809851994108575488605
Value: {'question': '"Who said, ""Married men live longer than single men, but married men are more willing to die""?"', 'responses': [('Sir John', [-4.102129936218262, -2.2893025875091553], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Haz', [-3.9771299362182617, -2.6009373664855957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-2.2271299362182617, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-2.2271299362182617, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Unknown', [-3.2271299362182617, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Samuel Johnson', [-3.6021299362182617, -0.39563673734664917], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Benjamin Franklin', [-3.4771299362182617, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Dudley', [-3.3521299362182617, -1.614532709121704], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Bench', [-3.3521299362182617, -2.036215305328369], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wayne', [-3.3521299362182617, -2.608154058456421], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sir John', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Johnny Carson'}

Key: 314790334599277753926466547469635123813
Value: {'question': "In Laverne & Shirley, what was Laverne's last name?", 'responses': [('Bolero', [-2.2641451358795166, -4.246273517608643], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cox', [-0.9125826358795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cox', [-0.9125826358795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baker', [-3.1118013858795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cox', [-0.9125826358795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cunningham', [-2.8505709171295166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cox', [-0.9125826358795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cox', [-0.9125826358795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cox', [-0.9125826358795166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miller', [-4.5688323974609375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bolero', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'De Fazio'}

Key: 311546199880526728184084028787046169292
Value: {'question': 'Which character did Burt Reynolds play in Evening Shade?', 'responses': [('Woody Boyd', [-2.875490188598633, -2.7162997722625732], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Otis Campbell', [-1.6645525693893433, -0.07428312301635742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cecil', [-3.348146438598633, -2.6509838104248047], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Otis Campbell', [-1.6645525693893433, -0.07428312301635742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ed Duke', [-3.996583938598633, -1.7691335678100586], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clay Banner', [-4.316896438598633, -2.616163492202759], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burt Reynolds', [-3.355958938598633, -0.12463044375181198], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ron Re', [-3.527833938598633, -3.318359375], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coach', [-2.553224563598633, -1.1064344644546509], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Otis Campbell', [-1.6645525693893433, -0.07428312301635742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Woody Boyd', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Wood Newton'}

Key: 82281910511269587178170491501889215676
Value: {'question': 'Which comedian starred in the ABC sitcom Chicken Soup?', 'responses': [('John Ritter', [-2.660903215408325, -0.40123194456100464, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Werner', [-3.410903215408325, -4.144193649291992, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norman Fell', [-3.785903215408325, -0.43551331758499146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Lewis', [-2.660903215408325, -1.9226412773132324, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Allen', [-2.535903215408325, -1.670217752456665, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Silvers', [-4.035902976989746, -2.2098255157470703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Allen', [-2.535903215408325, -1.670217752456665, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Lewis', [-4.160902976989746, -2.0646555423736572, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Cosby', [-2.285903215408325, -0.1314585655927658, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ted Danson', [-3.910903215408325, -2.0692944526672363, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Ritter', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Jackie Mason'}

Key: 144935405751067679645120858791571510349
Value: {'question': 'Who did Debbie play in The Debbie Reynolds Show?', 'responses': [('Debbie Reynolds', [-0.8809272646903992, -0.2382315844297409], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doris Day', [-5.005927085876465, -0.27919769287109375], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Debbie Reynolds', [-0.8809272646903992, -0.2382315844297409], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tammy', [-4.693427085876465, -0.7404611706733704], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judy Garland', [-2.130927324295044, -1.0389702320098877], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Debbie Reynolds', [-0.8809272646903992, -0.2382315844297409], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Debbie Reynolds', [-0.8809272646903992, -0.2382315844297409], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Debbie Reynolds', [-0.8809272646903992, -0.2382315844297409], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Debbie Reynolds', [-0.8809272646903992, -0.2382315844297409], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary', [-3.880927324295044, -4.381250858306885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Debbie Reynolds', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Debbie Thompson'}

Key: 161179766028496369792981771747347897134
Value: {'question': 'Who interviewed Dudley Moore about his illness in November 1999?', 'responses': [('Michael Parkinson', [-1.6377629041671753, -0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Rivers', [-4.262763023376465, -0.30147624015808105, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Terry Wogan', [-3.137763023376465, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hope', [-4.012763023376465, -1.20570969581604, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Clinton', [-4.262763023376465, -0.8407365679740906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Savile', [-4.137763023376465, -0.278158962726593, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graham Norton', [-3.762763023376465, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chris Evans', [-3.637763023376465, -0.48428863286972046, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johnny Ball', [-4.137763023376465, -1.5109519958496094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Parkinson', [-1.6377629041671753, -0.029750416055321693, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michael Parkinson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Barbara Walters'}

Key: 216383618068040202675959206945509212408
Value: {'question': 'Dorothy, Rose, Sophia and who else formed the Golden Girls?', 'responses': [('Blanche', [0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blanche', [0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blanche Dever', [0.0, -2.4639394283294678], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blanche', [0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blanche', [0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blanche', [0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blanche', [0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blanche', [0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blanche', [0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blanche', [0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Blanche', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Blanch'}

Key: 44894366637675720664625223070991296501
Value: {'question': 'Who first funded Sesame Street?', 'responses': [('George Lucas', [-3.3964099884033203, -1.0711997747421265], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Ganz', [-1.5839099884033203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Rogers', [-3.1464099884033203, -2.8348562717437744], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Library', [-1.3339099884033203, -3.7464747428894043], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lyndon B', [-4.02140998840332, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Rockefeller', [-1.3339099884033203, -3.0589747428894043], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Public Broadcasting', [-3.3964099884033203, -1.5196566581726074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Ganz', [-1.5839099884033203, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('NBC', [-4.39640998840332, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Newell', [-3.7714099884033203, -4.729396820068359], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George Lucas', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': "Children's Television Workshop"}

Key: 118196843360357231952900421274062215221
Value: {'question': 'In Family Affair what was the butler called?', 'responses': [('Uncle Arthur', [-1.7718536853790283, -1.6434754133224487, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uncle Bill', [-1.7718536853790283, -1.3075379133224487, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr French', [-0.4593537449836731, -0.11081596463918686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr French', [-0.4593537449836731, -0.11081596463918686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr French', [-0.4593537449836731, -0.11081596463918686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr French', [-0.4593537449836731, -0.11081596463918686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Jefferson', [-3.7249786853790283, -0.4509372115135193, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr Wilson', [-0.4593537449836731, -3.08737850189209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr French', [-0.4593537449836731, -0.11081596463918686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr French', [-0.4593537449836731, -0.11081596463918686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Uncle Arthur', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'French'}

Key: 130151587709240967998831907704503586203
Value: {'question': 'Which multi-millionaire was born the same day TV pioneer John Logie Baird died?', 'responses': [('Sir James Goldsmith', [-1.7254120111465454, -2.153142213821411, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rupert Murdoch', [-2.725411891937256, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Richard Branson', [-1.7254120111465454, -0.34064221382141113, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Beckham', [-3.600411891937256, -0.781341552734375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Alan Sugar', [-1.7254120111465454, -3.278142213821411, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Richard Branson', [-1.7254120111465454, -0.34064221382141113, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Richard Branson', [-1.7254120111465454, -0.34064221382141113, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Jim Rat', [-1.7254120111465454, -4.621891975402832, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Branson', [-1.2254120111465454, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Beckham', [-3.600411891937256, -0.781341552734375, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sir James Goldsmith', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Donald Trump'}

Key: 151061913087950305225990434939625368389
Value: {'question': "In the Addams Family, what is Gomez's octopus called?", 'responses': [('Uncle F', [-2.2780725955963135, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fester', [-1.4030725955963135, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thing', [-1.5593225955963135, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fester', [-1.4030725955963135, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fester', [-1.4030725955963135, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thing', [-1.5593225955963135, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thing', [-1.5593225955963135, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fester', [-1.4030725955963135, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thing', [-1.5593225955963135, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uncle F', [-2.2780725955963135, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Uncle F', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Aristotle'}

Key: 92403853528751819185302449795709359479
Value: {'question': "In the animation series, what was Godzilla's nephew called?", 'responses': [('Rodan', [-1.4038989543914795, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minilla', [-1.9038989543914795, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Godzilla Junior', [-3.8413989543914795, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Godzilla', [-2.9663989543914795, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anguirus', [-3.2163989543914795, -0.13337965309619904, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mothra', [-1.4663989543914795, 0.0, -0.08675938844680786], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mini-Godzilla', [-2.2163989543914795, -0.31378084421157837, -0.14106667041778564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mini-Godzilla', [-2.2163989543914795, -0.31378084421157837, -0.14106667041778564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Little Godzilla', [-2.5288989543914795, -0.09320893883705139, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mothra', [-1.4663989543914795, 0.0, -0.08675938844680786], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rodan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Godzooky'}

Key: 135298194996613183175479125649057440764
Value: {'question': 'Which character did Betty White play in The Betty White Show?', 'responses': [('The old lady', [-2.248913288116455, -3.8214926719665527, -0.4748057723045349], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Betty White', [-1.4989131689071655, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose Nylund', [-1.6239131689071655, -0.8471447229385376, -0.10477202385663986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Betty White', [-1.4989131689071655, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose Nylund', [-1.6239131689071655, -0.8471447229385376, -0.10477202385663986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Golden Girl', [-2.248913288116455, -2.0714926719665527, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Betty White', [-1.4989131689071655, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The character herself', [-2.248913288116455, -3.9464926719665527, -3.6593503952026367], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miss Pillbox', [-3.123913288116455, -4.694514274597168, -0.6849417686462402], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sue Ann Ni', [-2.436413288116455, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The old lady', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Joyce Whitman'}

Key: 292695318454140176556612248792519342434
Value: {'question': 'During the series Roseanne changed her name to Arnold from what?', 'responses': [('Arnold Schwarzenegger', [-1.1385986804962158, -0.29535481333732605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roseanne', [-1.6385986804962158, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schwarzenegger', [-1.1385986804962158, -0.29535481333732605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schwarzenegger', [-1.1385986804962158, -0.29535481333732605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roseanne', [-1.6385986804962158, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schwarzenegger', [-1.1385986804962158, -0.29535481333732605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roseanne', [-1.6385986804962158, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnie', [-3.013598680496216, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sheldon Cooper', [-5.263598442077637, -1.423748254776001], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ronald', [-5.138598442077637, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Arnold Schwarzenegger', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Barr'}

Key: 122697964850484066207380687703584882598
Value: {'question': 'Which hotel sitcom was based on the British series Fawlty Towers?', 'responses': [('The Beverley', [-0.44976145029067993, -4.296078205108643], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miami Vice', [-4.981011390686035, -0.12102566659450531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Holiday', [-0.44976145029067993, -2.2023282051086426], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Three', [-0.44976145029067993, -3.4835782051086426], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Holiday', [-0.44976145029067993, -2.2023282051086426], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Three', [-0.44976145029067993, -3.4835782051086426], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The hotel', [-0.44976145029067993, -4.577328205108643], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cheers', [-3.418511390686035, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Vicar', [-0.44976145029067993, -4.389828205108643], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beverly', [-0.44976145029067993, -1.9835782051086426], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Beverley', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': "Amanda's"}

Key: 90265132091098472041798183973369763937
Value: {'question': '"Who said, ""It is better to die on your feet than live on your knees?"""', 'responses': [('Alexander The Great', [-5.007874011993408, -2.587575912475586, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-1.7578741312026978, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nelson Mandela', [-1.3203741312026978, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Frost', [-3.820374011993408, -2.1331212520599365, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-2.132874011993408, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-2.132874011993408, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm X', [-1.7578741312026978, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nelson Mandela', [-1.3203741312026978, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jose Marti', [-3.695374011993408, -0.6044031381607056, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mahatma Ghandi', [-3.445374011993408, -1.6759374141693115, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alexander The Great', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Emiliano Zapata'}

Key: 283347097005031200133436071290232309659
Value: {'question': 'In which year did Tanganyika and Zanzibar merge to form Tanzania?', 'responses': [('1964', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1964', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1964', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1964', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1964', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1964', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1964', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1964', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1964', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1964', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1964', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1964'}

Key: 184495118614070302248883286062034544810
Value: {'question': 'In which decade did motor car pioneer Henry Ford die?', 'responses': [('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, -1.094851016998291, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, -1.094851016998291, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [-0.05488219112157822, 0.0, 0.0, 0.0, -0.4073510468006134, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, -1.094851016998291, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940s', [-0.05488219112157822, 0.0, 0.0, 0.0, -1.094851016998291, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [-0.05488219112157822, 0.0, 0.0, 0.0, -0.4073510468006134, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [-0.05488219112157822, 0.0, 0.0, 0.0, -0.4073510468006134, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1940', [-0.05488219112157822, 0.0, 0.0, 0.0, -1.094851016998291, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [-0.05488219112157822, 0.0, 0.0, 0.0, -0.4073510468006134, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1947', [-0.05488219112157822, 0.0, 0.0, 0.0, -0.4073510468006134, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1940s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1940s'}

Key: 268601313374906925584216667677721442142
Value: {'question': 'Ed Gagliardi, Al Greenwood and Dennis Elliot have all been in which group?', 'responses': [('The Moody Blues', [-0.19266191124916077, -2.7661008834838867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beatles', [-0.19266191124916077, -2.5161008834838867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hollies', [-0.19266191124916077, -1.8911010026931763, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Who', [-0.19266191124916077, -2.7661008834838867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bee Gees', [-0.19266191124916077, -3.5786008834838867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Who', [-0.19266191124916077, -2.7661008834838867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Treme', [-0.19266191124916077, -4.016100883483887, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Who', [-0.19266191124916077, -2.7661008834838867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Supremes', [-0.19266191124916077, -4.266100883483887, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Kinks', [-0.19266191124916077, -2.5161008834838867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Moody Blues', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Foreigner'}

Key: 212397669113140970342999223444900133960
Value: {'question': '"Which song starts, ""On a dark desert highway?"""', 'responses': [('The Last Thing', [-1.7195188999176025, -3.8235394954681396, -2.232233762741089], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The End', [-1.7195188999176025, -3.1614301204681396, -0.8436529040336609], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Desolation Row', [-0.8288938403129578, -1.0390464067459106, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Desperado', [-0.8288938403129578, -0.6015464067459106, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Deserter', [-0.8288938403129578, -2.320296287536621, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Taking It Easy', [-5.133581161499023, -2.489936351776123, -0.6090094447135925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Help!', [-4.219518661499023, -1.3186655044555664, -0.16962149739265442], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Route 6', [-2.2976438999176025, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Desolation Row', [-0.8288938403129578, -1.0390464067459106, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dark Side of', [-4.602331161499023, -0.60039883852005, -0.5623775124549866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Last Thing', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Hotel California'}

Key: 178833390236154531314723644811130908194
Value: {'question': 'For which movie did Katherine Hepburn win her third Oscar?', 'responses': [('The Rainmaker', [-0.5868845582008362, -0.3220656216144562, -0.1346249282360077, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lion in Winter', [-0.5868845582008362, -1.6970655918121338, -0.25192904472351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On Golden Pond', [-1.7118844985961914, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lion In Winter', [-0.5868845582008362, -1.6970655918121338, -1.5019290447235107, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Rainmaker', [-0.5868845582008362, -0.3220656216144562, -0.1346249282360077, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On Golden Pond', [-1.7118844985961914, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On Golden Pond', [-1.7118844985961914, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lion in Winter', [-0.5868845582008362, -1.6970655918121338, -0.25192904472351074, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Rain In Spain', [-0.5868845582008362, -0.3220656216144562, -2.83774995803833, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Rain in Spain', [-0.5868845582008362, -0.3220656216144562, -2.69712495803833, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Rainmaker', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3661588475692017, 'reference': 'The Lion in Winter'}

Key: 278725864419127942642152329936850907214
Value: {'question': "What was Rambo's first name?", 'responses': [('John', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'John'}

Key: 85869267802298993410756370187650443255
Value: {'question': 'When did field hockey become an Olympic event for men?', 'responses': [('1928', [0.0, 0.0, 0.0, -1.8047446012496948, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, 0.0, 0.0, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, 0.0, 0.0, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, 0.0, 0.0, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, 0.0, 0.0, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, 0.0, 0.0, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, 0.0, 0.0, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, 0.0, 0.0, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, 0.0, 0.0, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1908', [0.0, 0.0, 0.0, -0.1797446459531784, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1928', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': '1908'}

Key: 185938705173884662883175228723545755087
Value: {'question': 'How was Eleanor Gough McKay better known?', 'responses': [('Lady Eleanor', [-2.7550811767578125, -3.078972339630127, -0.63846355676651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As Evie', [-1.0050811767578125, -2.289419174194336, -1.6302080154418945], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As The Lady', [-1.0050811767578125, -3.164419174194336, -1.9788836240768433], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As a woman', [-1.0050811767578125, -2.164419174194336, -4.319795608520508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As "Mother', [-1.0050811767578125, -3.414419174194336, -2.915825605392456], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As Mrs Claus', [-1.0050811767578125, -3.289419174194336, -3.933898448944092], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('by her nom', [-5.0050811767578125, -0.25192904472351074, -4.142198085784912], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nell Gwyn', [-5.1300811767578125, 0.0, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mrs G', [-3.7550811767578125, -3.03836989402771, -0.9233475923538208], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As E M', [-1.0050811767578125, -2.289419174194336, -3.1927080154418945], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lady Eleanor', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Billie Holiday'}

Key: 12178998692012168207006137033546165754
Value: {'question': "Who invented the world's first data-processing machine?", 'responses': [('Alan Turing', [-2.3312065601348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Babbage', [-1.5812065601348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grace Hopper', [-2.9562065601348877, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ENIAC (', [-4.081206321716309, 0.0, -2.6102561950683594], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John V Mau', [-1.4562065601348877, -2.4762582778930664, -1.6878526210784912], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Vincent At', [-1.4562065601348877, -1.7262582778930664, -0.0658353641629219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Atanas', [-1.4562065601348877, -2.6012582778930664, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Turing', [-2.3312065601348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Babbage', [-1.5812065601348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Babbage', [-1.5812065601348877, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alan Turing', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Herman Hollerith'}

Key: 204259996249613136442955025609385934000
Value: {'question': 'Bill Cosby had a professional trial in which sport?', 'responses': [('Basketball', [-0.6622065305709839, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('American football', [-2.6622066497802734, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.6622065305709839, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.6622065305709839, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hockey', [-3.9122066497802734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.6622065305709839, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baseball', [-4.287206649780273, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.6622065305709839, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.6622065305709839, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tennis', [-3.6622066497802734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Basketball', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Football'}

Key: 282449423796511387633461918111034307300
Value: {'question': 'What was the first film Alfred Hitchcock made in Hollywood?', 'responses': [('The Ring', [-0.4789884090423584, -2.529118061065674], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-4.3539886474609375, -3.0017333030700684], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [-1.8539884090423584, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shadow of', [-3.6039884090423584, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blackmail', [-2.9789884090423584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blackmail', [-2.9789884090423584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The', [-0.4789884090423584, -2.029118061065674], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shadow of', [-3.6039884090423584, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The man', [-0.4789884090423584, -2.029118061065674], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rebecca', [-1.8539884090423584, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Ring', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Rebecca'}

Key: 4880715053561720504408497545400860964
Value: {'question': 'What is the most common street name in the UK?', 'responses': [('Street', [-3.0959858894348145, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Road', [-2.2834858894348145, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Road', [-2.2834858894348145, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green', [-4.1584858894348145, -0.08743999898433685], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'Road", [-4.1584858894348145, -2.8317437171936035], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lad', [-3.3459858894348145, -0.1069083958864212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King', [-4.5334858894348145, -0.30291953682899475], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baker', [-4.0959858894348145, -0.12835051119327545], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('White', [-3.3459858894348145, -0.4964454174041748], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James', [-4.7209858894348145, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Street', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'High Street'}

Key: 208462672554613777630099941397748986938
Value: {'question': 'Bujumbura international airport is in which country?', 'responses': [('Burundi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burundi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burundi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burundi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burundi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burundi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burundi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burundi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burundi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burundi', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Burundi', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Burundi'}

Key: 303663367586435306717335923570443997394
Value: {'question': 'The painting The Scream was stolen form which city in 1994?', 'responses': [('Oslo', [-0.14903001487255096, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oslo', [-0.14903001487255096, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oslo', [-0.14903001487255096, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oslo', [-0.14903001487255096, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oslo', [-0.14903001487255096, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [-2.2740299701690674, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oslo', [-0.14903001487255096, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oslo', [-0.14903001487255096, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oslo', [-0.14903001487255096, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oslo', [-0.14903001487255096, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oslo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Oslo'}

Key: 81390183862369871452528568460064824847
Value: {'question': "What was Paul Newman's first movie?", 'responses': [('The Silver Chalice', [-0.8344869613647461, -0.1902991682291031, 0.0, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Silver Chalice', [-0.8344869613647461, -0.1902991682291031, 0.0, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somebody Up There Likes Me', [-0.6782369613647461, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Silver Chalice', [-0.8344869613647461, -0.1902991682291031, 0.0, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somebody Up There Likes Me', [-0.6782369613647461, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Silver Chalice (', [-0.8344869613647461, -0.1902991682291031, 0.0, 0.0, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somebody Up There Likes Me', [-0.6782369613647461, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Somebody Up There Likes Me', [-0.6782369613647461, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Silver Chalice (', [-0.8344869613647461, -0.1902991682291031, 0.0, 0.0, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A star is born', [-4.082777976989746, -1.5525009632110596, 0.0, -0.13458658754825592, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Silver Chalice', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'The Silver Chalice'}

Key: 210874943450525756495701046974298471107
Value: {'question': '"Which 60s song starts, ""You\'ve got a lot of nerve?"""', 'responses': [('Yesterday', [-5.1234846115112305, -0.42582130432128906], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('All I', [-4.6234846115112305, -2.649686574935913], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Day', [-4.3734846115112305, -1.6925852298736572], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beatles', [-0.9984844326972961, -1.2988351583480835], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yellow Submarine', [-4.9984846115112305, -0.16972702741622925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('It must', [-3.7484843730926514, -2.860074043273926], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("You'", [-2.1234843730926514, -0.5768617987632751], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pretty Vacant', [-4.1234846115112305, -1.0200474262237549], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('You can', [-2.1234843730926514, -2.95186185836792], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Who', [-0.9984844326972961, -1.4238351583480835], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Yesterday', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Positively 4th Street'}

Key: 47471822183570900882140274765738120158
Value: {'question': 'Which University of Wisconsin has the highest enrolment figure?', 'responses': [('Madison', [-0.5496084690093994, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madison', [-0.5496084690093994, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('University of', [-1.7996084690093994, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eau Claire', [-3.7996084690093994, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madison', [-0.5496084690093994, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madison', [-0.5496084690093994, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oshkosh', [-3.0496084690093994, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('University of', [-1.7996084690093994, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madison', [-0.5496084690093994, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('UW-', [-2.7996084690093994, -0.6934251189231873], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Madison', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'Madison'}

Key: 82160915327743001091656256964529737284
Value: {'question': 'What was the day job that Boris Yeltsin started out with?', 'responses': [('A vodka', [-1.8995811939239502, -4.558921813964844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A lorry', [-1.8995811939239502, -4.058921813964844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Waiter', [-4.274580955505371, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Circus clown', [-4.274580955505371, -0.7112796902656555], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A milk', [-1.8995811939239502, -0.9339219331741333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beer distributor', [-4.149580955505371, -3.231637716293335], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Circus clown', [-4.274580955505371, -0.7112796902656555], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Teacher', [-3.14958119392395, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Plumber', [-3.89958119392395, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Taxi driver', [-2.89958119392395, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A vodka', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Builder'}

Key: 233683539661567174869013593053533895335
Value: {'question': 'How old was Harry Stevens when he married at the Caravilla Retirement Home, Wisconsin in 1984?', 'responses': [('97', [0.0, -1.2248057126998901, -2.143587827682495, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('102', [0.0, -0.47480571269989014, -0.1602240949869156, -1.951672077178955], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('110', [0.0, -0.47480571269989014, -1.9102240800857544, -1.2595257759094238], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('103', [0.0, -0.47480571269989014, -0.1602240949869156, -1.951672077178955], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('112', [0.0, -0.47480571269989014, -1.9102240800857544, -1.7595257759094238], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('96', [0.0, -1.2248057126998901, -2.268587827682495, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('102', [0.0, -0.47480571269989014, -0.1602240949869156, -1.951672077178955], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('92', [0.0, -1.2248057126998901, -2.268587827682495, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('103', [0.0, -0.47480571269989014, -0.1602240949869156, -1.951672077178955], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('112', [0.0, -0.47480571269989014, -1.9102240800857544, -1.7595257759094238], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '97', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460896, 'reference': '104'}

Key: 123172509466711841080002711069655407923
Value: {'question': "What is Diane Keaton's real name?", 'responses': [('Diane Hall', [-0.05488219112157822, -0.32576701045036316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Hall', [-0.05488219112157822, -0.32576701045036316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Hall', [-0.05488219112157822, -0.32576701045036316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Georgan', [-0.05488219112157822, -4.0757670402526855, -2.091301441192627], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Hall', [-0.05488219112157822, -0.32576701045036316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Hall', [-0.05488219112157822, -0.32576701045036316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Hall', [-0.05488219112157822, -0.32576701045036316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Krets', [-0.05488219112157822, -4.7320170402526855, -2.642937660217285], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Victoria Annent', [-2.929882287979126, -0.43040433526039124, -3.2013959884643555], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diane Hall', [-0.05488219112157822, -0.32576701045036316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Diane Hall', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Diane Hall'}

Key: 202926087916484393272824430966867868864
Value: {'question': 'Which word used to be in the name of The San Francisco Ballet?', 'responses': [('Oakland', [-2.598191738128662, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('City', [-2.848191738128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ballet', [-2.098191738128662, -0.4608161449432373], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oakland', [-2.598191738128662, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('War Memorial', [-3.473191738128662, -2.092637777328491], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The San', [-1.8481918573379517, -2.1984214782714844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Francisco', [-3.973191738128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-3.035691738128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The City', [-1.8481918573379517, -2.4484214782714844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The School', [-1.8481918573379517, -4.823421478271484], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oakland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Opera'}

Key: 219791208908844682107397575960012317257
Value: {'question': 'Which singer has appeared on the cover of Rolling Stone magazine 16 times?', 'responses': [('Elton John', [-2.7340357303619385, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Rolling', [-3.5465357303619385, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-2.7340357303619385, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eminem', [-4.734035491943359, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madonna', [-1.3590357303619385, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madonna', [-1.3590357303619385, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madonna', [-1.3590357303619385, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis Presley', [-2.4215357303619385, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madonna', [-1.3590357303619385, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madonna', [-1.3590357303619385, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Elton John', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Mick Jagger'}

Key: 50892431007147802506158672356011488369
Value: {'question': "What nationality were Mother Teresa's parents?", 'responses': [('Albanian', [-0.29010942578315735, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albanian', [-0.29010942578315735, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albanian', [-0.29010942578315735, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albanian', [-0.29010942578315735, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albanian', [-0.29010942578315735, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albanian', [-0.29010942578315735, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serbian', [-3.415109395980835, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albanian', [-0.29010942578315735, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albanian', [-0.29010942578315735, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albanian', [-0.29010942578315735, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Albanian', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Albanian'}

Key: 165186142128075637268070756257678655602
Value: {'question': "Who had a 60s No 1 hit with I'm Telling You Now?", 'responses': [('Bobby Vee', [-4.063584327697754, -0.4445312023162842, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gerry and the', [-4.501084327697754, -0.6695617437362671, -0.13070476055145264], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Vee', [-4.063584327697754, -0.4445312023162842, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Fortunes', [-0.5635843276977539, -3.829610824584961, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Treme', [-0.5635843276977539, -1.642110824584961, -0.3672420084476471], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Leyton', [-4.626084327697754, -0.618165135383606, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four Tops', [-0.5635843276977539, -2.579610824584961, -0.686606228351593], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New Seek', [-0.5635843276977539, -3.892110824584961, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Sinatra', [-4.751084327697754, -2.6367831230163574, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Searchers', [-0.5635843276977539, -2.392110824584961, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bobby Vee', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Freddie & The Dreamers'}

Key: 168207537000908143749617548974934294132
Value: {'question': 'What are the international registration letters of a vehicle from The Bahamas?', 'responses': [('BA', [-1.8284388780593872, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('B', [-1.0159388780593872, -1.4380217790603638], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BHD', [-1.0159388780593872, -3.813021659851074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BHX', [-1.0159388780593872, -3.031771659851074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BS', [-3.1409387588500977, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('B.', [-1.0159388780593872, -3.000521659851074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BHS', [-1.0159388780593872, -2.063021659851074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BH', [-3.1409387588500977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ABH', [-4.765938758850098, -2.1309831142425537], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('BHN', [-1.0159388780593872, -3.906771659851074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'BA', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'BS'}

Key: 134628507210711012045693514299673862255
Value: {'question': 'Which philosopher wrote Eros and Civilization and One Dimensional Man?', 'responses': [('Erich Fromm', [-1.643242359161377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcuse', [-1.955742359161377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Erich Fromm', [-1.643242359161377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Herbert Marcuse', [-0.768242359161377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Herbert Marcuse', [-0.768242359161377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcuse', [-1.955742359161377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Erich Fromm', [-1.643242359161377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Erich Fromm', [-1.643242359161377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Erich Fromm', [-1.643242359161377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marcuse', [-1.955742359161377, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Erich Fromm', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': 'Herbert Marcuse'}

Key: 269546414328572327939867939862285360430
Value: {'question': 'To ten thousand square miles, what is the area of Pennsylvania?', 'responses': [('50322', [0.0, -1.9013245105743408, -1.1244913339614868, -4.465651035308838, -2.8063864707946777, -2.6566786766052246, -0.22767674922943115], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('13,768', [0.0, -1.7763245105743408, -1.9609469175338745, -0.30910244584083557, -1.2459322214126587, -1.7924284934997559, -2.553982734680176], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('47,036', [0.0, -0.5263245105743408, -1.610363483428955, -0.17248590290546417, -0.8934603333473206, -3.00361967086792, -2.402620792388916], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('51749', [0.0, -1.9013245105743408, -1.6244913339614868, -3.8082520961761475, -2.7955150604248047, -2.665303945541382, -0.3441465198993683], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5,209 sq', [0.0, -1.9013245105743408, -2.3744912147521973, -2.3981051445007324, -1.0959587097167969, -3.414796829223633, -2.4467825889587402], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10,468', [0.0, -1.7763245105743408, -1.3359469175338745, -0.5404806137084961, -2.957127571105957, -2.622730255126953, -2.0876994132995605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('44,049', [0.0, -0.5263245105743408, -2.610363483428955, -0.2141534984111786, -1.0660799741744995, -3.136789083480835, -2.1048669815063477], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('49,400', [0.0, -0.5263245105743408, -2.235363483428955, -0.10869809240102768, -2.653182029724121, -0.9034579396247864, -0.10970135033130646], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('45,000', [0.0, -0.5263245105743408, -2.360363483428955, -0.2181018590927124, -1.067408800125122, -0.17593248188495636, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('43,870', [0.0, -0.5263245105743408, -1.485363483428955, 0.0, -1.5928986072540283, -2.321362018585205, -0.9520853757858276], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '50322', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': '44,820 square miles'}

Key: 186375889241397439379186907742753123603
Value: {'question': 'What are the international registration letters of a vehicle from Sri Lanka?', 'responses': [('LKR', [-1.662689447402954, -1.4763380289077759], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AJA', [-4.475189208984375, -4.530125141143799], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('RS', [-4.850189208984375, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('SU', [-3.350189447402954, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('LKA', [-1.662689447402954, -0.8513380289077759], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('SL', [-1.037689447402954, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('SLA', [-3.975189447402954, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('SL', [-1.037689447402954, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('LKS', [-1.662689447402954, -3.2263379096984863], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('RS', [-4.850189208984375, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'LKR', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'CL'}

Key: 202481057576739259590997652200835961581
Value: {'question': 'Who directed the movie East of Eden?', 'responses': [('Elia Kazan', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elia Kazan', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elia Kazan', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elia Kazan', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elia Kazan', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elia Kazan', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elia Kazan', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elia Kazan', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elia Kazan', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elia Kazan', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Elia Kazan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Elia Kazan'}

Key: 45785714566222652408852648074989640703
Value: {'question': 'In which year did Count Basie die?', 'responses': [('1984', [0.0, 0.0, 0.0, -0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1984', [0.0, 0.0, 0.0, -0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1974', [0.0, 0.0, 0.0, -2.578889846801758, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1984', [0.0, 0.0, 0.0, -0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1984', [0.0, 0.0, 0.0, -0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1984', [0.0, 0.0, 0.0, -0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1984', [0.0, 0.0, 0.0, -0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1984', [0.0, 0.0, 0.0, -0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1984', [0.0, 0.0, 0.0, -0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1984', [0.0, 0.0, 0.0, -0.07888974994421005, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1984', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': '1984'}

Key: 269356168432892138242970657746232389325
Value: {'question': "Which bridge is the subject of Hart Crane's The bridge?", 'responses': [('Brooklyn Bridge', [-0.24131132662296295, -0.3484445810317993, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brooklyn Bridge', [-0.24131132662296295, -0.3484445810317993, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brooklyn Bridge', [-0.24131132662296295, -0.3484445810317993, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Brooklyn Bridge', [-1.7413113117218018, -0.04858732968568802, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Brooklyn Bridge', [-1.7413113117218018, -0.04858732968568802, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Brooklyn Bridge', [-1.7413113117218018, -0.04858732968568802, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Williamsburg Bridge', [-1.7413113117218018, -3.0485873222351074, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Brooklyn Bridge', [-1.7413113117218018, -0.04858732968568802, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brooklyn Bridge', [-0.24131132662296295, -0.3484445810317993, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brooklyn Bridge', [-0.24131132662296295, -0.3484445810317993, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Brooklyn Bridge', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Brooklyn Bridge'}

Key: 97427938700665331815101687777542770353
Value: {'question': 'Who is credited with inventing the Tarzan yodel?', 'responses': [('Paul Robeson', [-2.9295907020568848, -0.7931322455406189, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Edward 'Y", [-3.9295907020568848, -4.320483684539795, -2.843735933303833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The bandleader', [-2.9295907020568848, -4.492168426513672, -0.35421645641326904], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maurice Dehon', [-4.179590702056885, -2.9356043338775635, -3.6541552543640137], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Burns', [-3.8045907020568848, -3.1494526863098145, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('American composer Lou', [-3.9295907020568848, -2.3512356281280518, -4.130807876586914], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard "D', [-3.6795907020568848, -2.482008934020996, -3.942134380340576], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('American musician Glenn', [-3.9295907020568848, -2.7262356281280518, -4.423755645751953], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Mooney', [-4.179590702056885, -4.006345272064209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Dempsey', [-3.3045907020568848, -3.475618839263916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Paul Robeson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Johnny Weissmuller'}

Key: 43151503875619748891758033427482466821
Value: {'question': 'Which musical featured the song How To Handle A Woman?', 'responses': [('West Side', [-3.130403757095337, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Annie', [-4.630403518676758, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Wiz', [-2.380403757095337, -3.3491125106811523], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Roar', [-2.380403757095337, -3.5366125106811523], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Pacific', [-4.317903518676758, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Funny Girl', [-4.630403518676758, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hair', [-1.130403757095337, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tommy', [-4.442903518676758, -0.09937088191509247], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver!', [-3.005403757095337, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grease', [-3.255403757095337, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'West Side', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Camelot'}

Key: 191419383826966883058500154627113486289
Value: {'question': 'In which decade of the 20th century was Alec Baldwin born?', 'responses': [('1953', [0.0, 0.0, 0.0, 0.0, -2.7104060649871826, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, 0.0, -0.39790600538253784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1952', [0.0, 0.0, 0.0, 0.0, -2.6479060649871826, -0.09163712710142136], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, 0.0, -0.39790600538253784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1951', [0.0, 0.0, 0.0, 0.0, -3.4604060649871826, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, 0.0, -0.39790600538253784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, 0.0, 0.0, 0.0, -1.8354060649871826, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, 0.0, -0.39790600538253784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, 0.0, -0.39790600538253784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, 0.0, -0.39790600538253784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1953', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452238, 'reference': '1950s'}

Key: 127453835433634105750906096877879752815
Value: {'question': 'In which state do most Cree Indians live in the USA?', 'responses': [('Manitoba', [-3.0781893730163574, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-1.5781892538070679, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Dakota', [-1.3906892538070679, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-1.5781892538070679, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saskatchewan', [-2.7031893730163574, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.3906892538070679, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-1.5781892538070679, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.3906892538070679, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alberta', [-2.0781893730163574, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-1.5781892538070679, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Manitoba', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Montana'}

Key: 13780724999148049529627504996987084420
Value: {'question': "Bob Dole trained for which profession although he didn't qualify?", 'responses': [('Rodeo Rider', [-4.122081756591797, -3.99334454536438], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dentist', [-1.622081995010376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doctor', [-2.122081995010376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Optometrist', [-3.997081995010376, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dentistry', [-2.747081995010376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rodeo cowboy', [-4.122081756591797, -1.7433445453643799], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dentist', [-1.622081995010376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doctor', [-2.122081995010376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dentist', [-1.622081995010376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-4.622081756591797, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rodeo Rider', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811906, 'reference': 'Doctor'}

Key: 289510939736836620140229512434672231641
Value: {'question': 'Out of 11 series of prime time seasons how many times did Happy days make the Nielsen Top Twenty?', 'responses': [('Three times', [-3.8673081398010254, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.24230802059173584, -2.209888458251953], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.24230802059173584, -2.459888458251953], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zero', [-4.117308139801025, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('None', [-3.9923081398010254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.24230802059173584, -2.209888458251953], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Never', [-3.4923081398010254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.24230802059173584, -2.209888458251953], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.24230802059173584, -2.209888458251953], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nine', [-4.242308139801025, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Three times', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Eight'}

Key: 52934876827790617934442944759286783307
Value: {'question': 'Who wrote the novel Watership Down?', 'responses': [('Richard Adams', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Adams', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Adams', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Adams', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Adams', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Adams', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Adams', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Adams', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Adams', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Adams', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Richard Adams', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Richard Adams'}

Key: 229540826719529934227727015663235877316
Value: {'question': 'Who was the Prime Minister of Australia from 1983 - 1991?', 'responses': [('Bob Hawke', [-0.16972702741622925, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hawke', [-0.16972702741622925, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hawke', [-0.16972702741622925, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hawke', [-0.16972702741622925, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hawke', [-0.16972702741622925, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hawke', [-0.16972702741622925, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm Fraser', [-1.857227087020874, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hawke', [-0.16972702741622925, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Malcolm Fraser', [-1.857227087020874, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hawke', [-0.16972702741622925, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bob Hawke', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Bob Hawke'}

Key: 235240634032653826655777651185889315979
Value: {'question': 'In which decade of the 20th century was James Belushi born?', 'responses': [('1954', [0.0, 0.0, 0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1954', [0.0, 0.0, 0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1954s', [0.0, 0.0, 0.0, 0.0, 0.0, -2.929882287979126], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1954', [0.0, 0.0, 0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1954', [0.0, 0.0, 0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1954', [0.0, 0.0, 0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1954', [0.0, 0.0, 0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1954', [0.0, 0.0, 0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1954', [0.0, 0.0, 0.0, 0.0, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1954s', [0.0, 0.0, 0.0, 0.0, 0.0, -2.929882287979126], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1954', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1950s'}

Key: 69112203450284663765860961127590796062
Value: {'question': 'On which river was the Kariba Dam built?', 'responses': [('Zambezi', [0.0, 0.0, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [0.0, 0.0, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [0.0, 0.0, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [0.0, 0.0, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [0.0, 0.0, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [0.0, 0.0, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [0.0, 0.0, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi River', [0.0, 0.0, 0.0, -2.4639394283294678], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [0.0, 0.0, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zambezi', [0.0, 0.0, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zambezi', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Zambezi'}

Key: 56375898472616528424797679685071188473
Value: {'question': 'Detroit born Diana Earle became famous under which name?', 'responses': [('Diana Ross', [-0.4616903066635132, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diana Ross', [-0.4616903066635132, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diana Ross', [-0.4616903066635132, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madonna', [-3.9616904258728027, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diana Ross', [-0.4616903066635132, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diana Ross', [-0.4616903066635132, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlene Dietrich', [-4.899190425872803, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan Collins', [-4.961690425872803, -1.1689870357513428], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cicely', [-4.899190425872803, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madonna', [-3.9616904258728027, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Diana Ross', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Diana Ross'}

Key: 21609226396037545849353051218546932471
Value: {'question': 'Who wrote God Bless America?', 'responses': [('Irving Berlin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Irving Berlin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Irving Berlin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Irving Berlin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Irving Berlin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Irving Berlin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Irving Berlin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Irving Berlin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Irving Berlin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Irving Berlin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Irving Berlin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Irving Berlin'}

Key: 230599385582484457390301726507427243290
Value: {'question': "What was Sean Penn's first movie?", 'responses': [('The Eagle Has', [-0.7694748044013977, -2.6291730403900146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Last Wave', [-0.7694748044013977, -3.5197980403900146, -3.3659372329711914], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fast Times at', [-1.358708143234253, 0.0, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Graffiti Bridge', [-4.566349983215332, -0.06011725217103958, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The spur', [-0.7694748044013977, -4.269798278808594, -0.25323915481567383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fast Times at', [-1.358708143234253, 0.0, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fast Times At', [-1.358708143234253, 0.0, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Cross of', [-0.7694748044013977, -3.7229230403900146, -0.29683318734169006], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Santa vite', [-4.878849983215332, -3.986448049545288, -1.271468162536621], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Indian Runner', [-0.7694748044013977, -2.4963605403900146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Eagle Has', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Taps'}

Key: 238018651380314596809364587015052907815
Value: {'question': 'Who had and 80s NO 1 with The Tide is High?', 'responses': [('Blondie', [-0.2013152837753296, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blondie', [-0.2013152837753296, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blondie', [-0.2013152837753296, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blondie', [-0.2013152837753296, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pointer Sisters', [-2.646627902984619, -1.297755241394043, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blondie', [-0.2013152837753296, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blondie', [-0.2013152837753296, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blondie', [-0.2013152837753296, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sandie Shaw', [-3.382956027984619, -0.11967968195676804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blondie', [-0.2013152837753296, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Blondie', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Blondie'}

Key: 181608930345714996012337975994988390209
Value: {'question': 'In which Bond film did Britt Ekland appear?', 'responses': [('On Her Majesty', [-0.8899877667427063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On Her Majesty', [-0.8899877667427063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Live and Let', [-1.5149877071380615, -0.1602240949869156, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On Her Majesty', [-0.8899877667427063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Man with', [-2.2649877071380615, -0.7278011441230774, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On Her Majesty', [-0.8899877667427063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On Her Majesty', [-0.8899877667427063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Live and Let', [-1.5149877071380615, -0.1602240949869156, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Live and Let', [-1.5149877071380615, -0.1602240949869156, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldfinger', [-3.0149877071380615, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'On Her Majesty', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'The Man With The Golden Gun'}

Key: 11191691820961488397444918577317352497
Value: {'question': "What is Mick Jagger's middle name?", 'responses': [('Augustus', [-3.5928711891174316, -0.025501256808638573], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basil', [-4.155371189117432, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles', [-1.1553711891174316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philip', [-2.2803711891174316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philip', [-2.2803711891174316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phillip', [-3.8116211891174316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philip', [-2.2803711891174316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles', [-1.1553711891174316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wood', [-4.561621189117432, -0.8615548014640808], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael', [-2.5303711891174316, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Augustus', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Philip'}

Key: 212200945915557897170845847809326794139
Value: {'question': 'Who had a No 1 hit single with Together Forever?', 'responses': [('Rick Astley', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Astley', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Astley', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Astley', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Astley', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Astley', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Astley', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Astley', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Astley', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Astley', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rick Astley', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Rick Astley'}

Key: 108816242759543197294990539292543198218
Value: {'question': 'Boxer Jack Dempsey hailed from which state?', 'responses': [('Missouri', [-0.6407718658447266, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Missouri', [-0.6407718658447266, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Missouri', [-0.6407718658447266, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Missouri', [-0.6407718658447266, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Missouri', [-0.6407718658447266, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Missouri', [-0.6407718658447266, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tennessee', [-4.140771865844727, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Missouri', [-0.6407718658447266, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas', [-3.8282718658447266, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Missouri', [-0.6407718658447266, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Missouri', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Colorado'}

Key: 4283486459158531317824434087906786909
Value: {'question': 'Which British liner was sunk by a German submarine in 1915?', 'responses': [('The Lusitania', [-0.3995083272457123, -0.019309287890791893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.3995083272457123, -0.019309287890791893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.3995083272457123, -0.019309287890791893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.3995083272457123, -0.019309287890791893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lusitania', [-1.3995083570480347, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.3995083272457123, -0.019309287890791893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lusitania', [-1.3995083570480347, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lusitania', [-1.3995083570480347, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.3995083272457123, -0.019309287890791893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lusitania', [-0.3995083272457123, -0.019309287890791893, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Lusitania', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Lusitania'}

Key: 77649467428437118190115555068999828571
Value: {'question': "Which role as 'the other woman' won Glenn Close her first Oscar nomination?", 'responses': [('Sunset Boulevard', [-2.074103355407715, -0.36980506777763367, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10', [-3.261603355407715, -1.324724555015564, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fatal Attraction', [-1.0741033554077148, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10', [-3.261603355407715, -1.324724555015564, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sunset Boulevard', [-2.074103355407715, -0.36980506777763367, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fatal Attraction', [-1.0741033554077148, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alex Forrest', [-4.699103355407715, -1.2556920051574707, -3.0142667293548584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sunset Boulevard (', [-2.074103355407715, -0.36980506777763367, -2.929882287979126], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sunset Boulevard', [-2.074103355407715, -0.36980506777763367, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fatal Attraction', [-1.0741033554077148, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sunset Boulevard', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'Fatal Attraction'}

Key: 77198146142066208743383474193884585051
Value: {'question': 'Who wrote the novel The Godfather?', 'responses': [('Mario Puzo', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mario Puzo', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mario Puzo', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mario Puzo', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mario Puzo', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mario Puzo', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mario Puzo', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mario Puzo', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mario Puzo', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mario Puzo', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mario Puzo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mario Puzo'}

Key: 40934636085503227078321114025474683868
Value: {'question': 'Vehicles from which country use the international registration letter S?', 'responses': [('Slovakia', [-3.227962017059326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [-1.7279621362686157, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [-1.1029621362686157, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [-1.7279621362686157, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Korea', [-1.7279621362686157, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saudi Arabia', [-3.290462017059326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [-1.1029621362686157, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-1.7904621362686157, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-1.7904621362686157, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-1.7904621362686157, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Slovakia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Sweden'}

Key: 51084095234910929314869224733188423078
Value: {'question': 'Jack Sharkey was a world champion in which sport?', 'responses': [('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Boxing', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Boxing'}

Key: 239798413639299535371057097325262564357
Value: {'question': "What was Marilyn Monroe's last film?", 'responses': [("Something's got", [-0.6162817478179932, 0.0, 0.0, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Misfits', [-1.2412817478179932, -0.08129486441612244, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Something's Got", [-0.6162817478179932, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Something's Got", [-0.6162817478179932, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Something's Got", [-0.6162817478179932, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Something's Got", [-0.6162817478179932, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Some Like it Hot', [-1.9912817478179932, -0.09163712710142136, -1.1368709802627563, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Something's Got", [-0.6162817478179932, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Something's Got", [-0.6162817478179932, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Something's got", [-0.6162817478179932, 0.0, 0.0, -2.2378222942352295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Something's got", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'The Misfits'}

Key: 220176549781521480772018858084450267066
Value: {'question': "What was Bix Beiderbecke's principal musical instrument?", 'responses': [('Trumpet', [-0.8939220309257507, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cornet', [-1.6439220905303955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('cornet', [-1.3939220905303955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cornet', [-1.6439220905303955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cornet', [-1.6439220905303955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('cornet', [-1.3939220905303955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cornet', [-1.6439220905303955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('cornet', [-1.3939220905303955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('cornet', [-1.3939220905303955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('cornet', [-1.3939220905303955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Trumpet', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Cornet'}

Key: 281991451325326011541899728857700067276
Value: {'question': 'US-born Adulyadej Bhumibol became king of which Asian country?', 'responses': [('Thailand', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thailand', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thailand', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thailand', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thailand', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thailand', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thailand', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thailand', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thailand', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thailand', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Thailand', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Thailand'}

Key: 315686080387491032123137798435500008461
Value: {'question': 'In 1971 Leonard Bernstein wrote a Mass in whose memory?', 'responses': [('John Kennedy', [-0.5213967561721802, -2.3502066135406494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thomas A', [-4.271396636962891, -0.8617390990257263], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John F', [-0.5213967561721802, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Abraham Lincoln', [-3.2088966369628906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John F', [-0.5213967561721802, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John F', [-0.5213967561721802, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Florence Nightingale', [-4.833896636962891, -0.9314895272254944], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John F', [-0.5213967561721802, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('JFK', [-2.1463966369628906, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Kennedy', [-0.5213967561721802, -2.3502066135406494], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Kennedy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'John F. Kennedy'}

Key: 297919963488301978586355882988797195820
Value: {'question': "Who had a big 50s No 1 with A Big Hunk O' Love?", 'responses': [('Bill Haley and', [-3.828488826751709, -0.22134597599506378, -1.058656930923462], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gene Vincent', [-3.953488826751709, -0.1902991682291031, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jimmy Clanton', [-4.765988826751709, -1.0049062967300415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frankie Avalon', [-3.140988826751709, -1.7601590156555176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jo Stafford', [-3.015988826751709, -0.08631781488656998, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis Presley', [-2.078488826751709, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dinah Washington', [-4.203488826751709, -0.6623854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Shirelles', [-1.9847389459609985, -1.9233031272888184, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fats Domino', [-2.390988826751709, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bobby Vee', [-3.234738826751709, -1.7172577381134033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bill Haley and', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Elvis Presley'}

Key: 198884455413273656265159476125370470433
Value: {'question': 'Whose first hit was Maybellene in 1955?', 'responses': [('Chuck Berry', [-1.2468702793121338, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beatles', [-1.4031202793121338, -1.4932360649108887, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis Prima and', [-4.606245040893555, -0.6892771124839783, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Rock and', [-1.4031202793121338, -2.5713610649108887, -1.9194542169570923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chuck Berry', [-1.2468702793121338, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beatles', [-1.4031202793121338, -1.4932360649108887, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billy Fury', [-2.590620279312134, -3.2613065242767334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Perkins', [-1.4656202793121338, -0.03125589340925217, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Crickets', [-1.4031202793121338, -2.6807360649108887, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Carl Perkins', [-1.4031202793121338, -4.368236064910889, -0.026098154485225677], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chuck Berry', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Chuck Berry'}

Key: 332146904640146812754526283397961486050
Value: {'question': "What goes after Love Will Never Do on Janet Jackson's 1990 hit?", 'responses': [('Me Again', [-2.5113487243652344, -2.761140823364258], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('It?', [-3.6363487243652344, -4.23923921585083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wrong', [-3.9175987243652344, -0.07620414346456528], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('You', [-1.8863487243652344, -0.6412909030914307], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Me', [-2.5113487243652344, -0.886140763759613], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Die!', [-2.3863487243652344, -3.805781364440918], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Let Me', [-3.0113487243652344, -0.5123913288116455], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Die', [-2.3863487243652344, -0.30578136444091797], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Die', [-2.3863487243652344, -0.30578136444091797], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Come Get', [-4.261348724365234, -3.0612244606018066], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Me Again', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Without you'}

Key: 291231035823241193996771781933369346336
Value: {'question': 'Which Gloria co-founded Ms magazine?', 'responses': [('Steinem', [-0.08927041292190552, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steinem', [-0.08927041292190552, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steinem', [-0.08927041292190552, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steinem', [-0.08927041292190552, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steinem', [-0.08927041292190552, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steinem', [-0.08927041292190552, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steinem', [-0.08927041292190552, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steinem', [-0.08927041292190552, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steinem', [-0.08927041292190552, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steinem', [-0.08927041292190552, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Steinem', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Steinem'}

Key: 171768759814904109975364749059026851904
Value: {'question': 'A Fistfull of Dollars was filmed on location in which country?', 'responses': [('Spain', [-1.089697241783142, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-0.5896972417831421, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.089697241783142, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-0.5896972417831421, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-0.5896972417831421, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-0.5896972417831421, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-0.5896972417831421, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-0.5896972417831421, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.089697241783142, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [-2.2146973609924316, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Spain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Italy'}

Key: 83023586782233751118200801951134909548
Value: {'question': 'Which country lies immediately to the south of Estonia?', 'responses': [('Latvia', [-0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latvia', [-0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latvia', [-0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latvia', [-0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latvia', [-0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-2.0176751613616943, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latvia', [-0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latvia', [-0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latvia', [-0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latvia', [-0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Latvia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Latvia'}

Key: 139946713696517423133521717486274900105
Value: {'question': '"Which TV series intro said, ""Return with us now to those thrilling days of yesteryear""?"', 'responses': [('The A', [-0.8317568898200989, -2.1649703979492188], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Columbo', [-3.331756830215454, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The', [-3.831756830215454, -0.8951217532157898], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Avengers', [-0.8317568898200989, -3.2899703979492188], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Happy days', [-3.706756830215454, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Walt', [-0.8317568898200989, -2.7899703979492188], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Young', [-0.8317568898200989, -4.039970397949219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas', [-3.456756830215454, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas', [-3.456756830215454, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I'", [-2.956756830215454, -1.9809229373931885], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The A', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'The Lone Ranger'}

Key: 50073307438036647151609617784167490481
Value: {'question': 'In which year was the University of Alaska Anchorage founded?', 'responses': [('1957', [0.0, 0.0, 0.0, -1.746392011642456, -1.9260547161102295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1977', [0.0, 0.0, 0.0, -1.996392011642456, -0.3989081382751465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.37139198184013367, -0.4833080768585205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1963', [0.0, 0.0, 0.0, -0.37139198184013367, -1.7333080768585205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1956', [0.0, 0.0, 0.0, -1.746392011642456, -2.4885547161102295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.37139198184013367, -0.4833080768585205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.37139198184013367, -0.4833080768585205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1966', [0.0, 0.0, 0.0, -0.37139198184013367, -2.9833080768585205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.37139198184013367, -0.4833080768585205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -0.37139198184013367, -0.4833080768585205, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1957', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': '1954'}

Key: 170715985984229502147104719282890277986
Value: {'question': 'What star sign is shared by peter Gabriel and Stevie Wonder?', 'responses': [('Sagittarius', [-1.3022103309631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sagittarius', [-1.3022103309631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gemini', [-1.4272103309631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aquarius', [-3.0522103309631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sagittarius', [-1.3022103309631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sagittarius', [-1.3022103309631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gemini', [-1.4272103309631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gemini', [-1.4272103309631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virgo', [-2.8647103309631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sagittarius', [-1.3022103309631348, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sagittarius', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Taurus'}

Key: 31195533149352365175312041743822416783
Value: {'question': "What was John Huston's last movie?", 'responses': [('The Dead', [-0.3497212827205658, -0.43856602907180786, -0.2800987958908081], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Prizzi'", [-2.1309711933135986, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Moby Dick', [-2.6465961933135986, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dead', [-0.3497212827205658, -0.43856602907180786, -0.2800987958908081], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Prizzi'", [-2.1309711933135986, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bible', [-0.3497212827205658, -2.688565969467163, -0.15564441680908203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Under the Volcano', [-3.1622211933135986, -0.26525455713272095, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Bible', [-0.3497212827205658, -2.688565969467163, -0.15564441680908203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dead', [-0.3497212827205658, -0.43856602907180786, -0.2800987958908081], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dead (', [-0.3497212827205658, -0.43856602907180786, -2.3894739151000977], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Dead', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'The Dead'}

Key: 165850912133653062240705164070772709297
Value: {'question': 'Who won Super Bowl III?', 'responses': [('The New York Jets', [-1.1131596565246582, -0.4234617352485657, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New York Jets', [-1.1131596565246582, -0.4234617352485657, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Jets', [-1.4881596565246582, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Jets', [-1.4881596565246582, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Jets', [-1.4881596565246582, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Joe Namath'", [-1.6131596565246582, 0.0, 0.0, -1.0898410081863403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Joe Namath'", [-1.6131596565246582, 0.0, 0.0, -1.0898410081863403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Namath and', [-1.6131596565246582, 0.0, 0.0, -1.2148410081863403], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New York Jets', [-1.1131596565246582, -0.4234617352485657, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Miami Dolphins', [-1.1131596565246582, -2.423461675643921, 0.0, -0.040982045233249664], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The New York Jets', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'New York Jets'}

Key: 255507147621021989418671640434438686272
Value: {'question': "What is Marie Osmond's real first name?", 'responses': [('Marie Marie', [-0.26885169744491577, -4.60561466217041], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marie', [-0.26885169744491577, -0.5743647813796997], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maxine', [-4.9563517570495605, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marie Louise', [-0.26885169744491577, -2.26186466217041], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marie', [-0.26885169744491577, -0.5743647813796997], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marie', [-0.26885169744491577, -0.5743647813796997], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marie', [-0.26885169744491577, -0.5743647813796997], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marie', [-0.26885169744491577, -0.5743647813796997], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wanda', [-2.5501017570495605, -0.06498405337333679], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marie', [-0.26885169744491577, -0.5743647813796997], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Marie Marie', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Olive'}

Key: 4145846739913679808852656978781574817
Value: {'question': "Who sang a solo at Prince Charles and Lady Di's wedding?", 'responses': [('Elton John', [-0.8994371294975281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lionel Richie', [-2.211937189102173, -0.13458658754825592, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-0.8994371294975281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Jones', [-3.399437189102173, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul McCartney', [-2.524437189102173, -0.25477543473243713, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Harrison', [-3.086937189102173, -1.9202715158462524, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrea Bocelli', [-3.899437189102173, -0.31220781803131104, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Luciano Pavar', [-3.899437189102173, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bryan Adams', [-4.211936950683594, -0.6623854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-0.8994371294975281, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Elton John', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Kiri Te Kanawa'}

Key: 152169799013741634854446054025992137786
Value: {'question': 'Calabar international airport is in which country?', 'responses': [('Barbados', [-2.8755857944488525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('St Lucia', [-3.6255857944488525, -0.7650189995765686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trinidad &', [-1.8755857944488525, -1.996392011642456], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.9380857348442078, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jamaica', [-1.8130857944488525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.9380857348442078, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.9380857348442078, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.9380857348442078, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cameroon', [-3.7505857944488525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nigeria', [-0.9380857348442078, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Barbados', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769954, 'reference': 'Nigeria'}

Key: 30023043303340947517750281372619386622
Value: {'question': '"Who said, ""A man is only as old as the woman he feels?"""', 'responses': [('Mark Twain', [-2.7468533515930176, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Sinatra', [-3.6218533515930176, -0.03619690611958504, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar Wilde', [-2.3718533515930176, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Hazlitt', [-3.2468533515930176, -4.20969295501709, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Samuel Goldwyn', [-3.3718533515930176, -1.2636499404907227, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Ade', [-2.2468533515930176, -3.9050891399383545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Bukowski', [-2.8718533515930176, -0.6054659485816956, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Groucho Marx', [-2.7468533515930176, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Bernard Shaw', [-2.2468533515930176, -0.5300890803337097, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Whitcomb', [-3.3718533515930176, -2.2216148376464844, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mark Twain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Groucho Marx'}

Key: 333744870734786781278691891973247430342
Value: {'question': "Which country did Thor Heyerdahl's Kon-Tiki set sail from on its journey to Eastern Polynesia?", 'responses': [('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Norway', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Peru'}

Key: 87696865088205860525174516009415401426
Value: {'question': 'Donna Gaines is better known by which name?', 'responses': [('The first Black', [-2.983872175216675, -4.170016288757324, -4.567754745483398], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donna Summer', [-0.6088721752166748, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donna Summer', [-0.6088721752166748, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The woman who', [-2.983872175216675, -4.170016288757324, -1.4097967147827148], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Duchess', [-2.983872175216675, -2.357516288757324, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dawn French', [-3.608872175216675, -0.3088711202144623, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Debbie Gibson', [-5.108872413635254, -1.3750020265579224, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donna Summer', [-0.6088721752166748, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Donna Summer', [-0.6088721752166748, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackie Wilson', [-4.608872413635254, -2.043072462081909, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The first Black', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Donna Summer'}

Key: 57108509568432941131196936500453468601
Value: {'question': 'Which element is named after Pierre and Marie Curie?', 'responses': [('Polonium', [-1.9545652866363525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polonium', [-1.9545652866363525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uranium', [-0.7045652866363525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uranium', [-0.7045652866363525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uranium', [-0.7045652866363525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-1.2045652866363525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Radium', [-1.2045652866363525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uranium', [-0.7045652866363525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uranium', [-0.7045652866363525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polonium', [-1.9545652866363525, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Polonium', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Curium'}

Key: 239666528623359136128181682913320093597
Value: {'question': 'By the end of the 20th century how many times had Meryl Streep been nominated for an Oscar?', 'responses': [('1', [-0.15790003538131714, -0.38457831740379333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nine', [-3.657900094985962, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.15790003538131714, -3.509578227996826], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.15790003538131714, -0.38457831740379333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.15790003538131714, -0.38457831740379333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.15790003538131714, -0.38457831740379333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.15790003538131714, -0.38457831740379333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('7', [-0.15790003538131714, -3.134578227996826], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.15790003538131714, -2.259578227996826], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.15790003538131714, -0.38457831740379333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Nine'}

Key: 188228961733029650354464485324011783739
Value: {'question': 'Both Richard and Karen Carpenter came fro which state?', 'responses': [('California', [-0.18894463777542114, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.18894463777542114, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.18894463777542114, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.18894463777542114, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.18894463777542114, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iowa', [-3.9389445781707764, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.18894463777542114, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.18894463777542114, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-2.5639445781707764, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California', [-0.18894463777542114, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'California', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Connecticut'}

Key: 165182586398515892614367788205765350398
Value: {'question': "What was Mr. Magoo's first name?", 'responses': [('Marvin', [-0.22043249011039734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marvin', [-0.22043249011039734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marvin', [-0.22043249011039734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marvin', [-0.22043249011039734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marvin', [-0.22043249011039734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marvin', [-0.22043249011039734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marvin', [-0.22043249011039734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marvin', [-0.22043249011039734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Timothy', [-4.220432281494141, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marvin', [-0.22043249011039734, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Marvin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Quincy'}

Key: 182085809677959294186320173741173169724
Value: {'question': "Which rock star featured in Marvel's 50th issue of Marvel Premiere in 1979?", 'responses': [('The Who', [-3.5219345092773438, -1.628170371055603, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alice Cooper', [-1.5219345092773438, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iron Maiden', [-1.8969345092773438, -0.4490094482898712, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iron Man', [-1.8969345092773438, -1.1365094184875488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Led Zeppelin', [-3.5219345092773438, -0.10020658373832703, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [-2.0219345092773438, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eddie Van Halen', [-3.8969345092773438, -0.27126747369766235, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("The Who'", [-3.5219345092773438, -1.628170371055603, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alice Cooper', [-1.5219345092773438, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Keith Richards', [-4.334434509277344, -0.08377019315958023, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Who', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Alice Cooper'}

Key: 161179812792393424218899664649084351615
Value: {'question': "Who was runner-up when Jody Scheckter won motor racing's Formula One Championship?", 'responses': [('Jackie Stewart', [-0.9337295293807983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacky I', [-2.558729648590088, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackie Stewart', [-0.9337295293807983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Niki Lauda', [-3.183729648590088, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Niki Lauda', [-3.183729648590088, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacky I', [-2.558729648590088, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackie Stewart', [-0.9337295293807983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackie Stewart', [-0.9337295293807983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackie Stewart', [-0.9337295293807983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Hunt', [-1.6837295293807983, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jackie Stewart', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': 'Gilles Villeneuve'}

Key: 89339138811910315079069926688263045116
Value: {'question': "How many years after men's field hockey became an Olympic sport did the women's game become an Olympic event?", 'responses': [('20', [-0.025056663900613785, -1.2208752632141113, -0.9417335391044617, -0.6002775430679321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('56 years', [-0.025056663900613785, -3.2208752632141113, -2.4606289863586426, -1.5019290447235107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('198', [-0.025056663900613785, -0.9708752632141113, -1.140376329421997, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32 years', [-0.025056663900613785, -1.9708752632141113, -0.50346440076828, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('44', [-0.025056663900613785, -2.3458752632141113, -2.6278953552246094, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('198', [-0.025056663900613785, -0.9708752632141113, -1.140376329421997, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20', [-0.025056663900613785, -1.2208752632141113, -0.9417335391044617, -0.6002775430679321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20', [-0.025056663900613785, -1.2208752632141113, -0.9417335391044617, -0.6002775430679321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20', [-0.025056663900613785, -1.2208752632141113, -0.9417335391044617, -0.6002775430679321], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('32', [-0.025056663900613785, -1.9708752632141113, -0.50346440076828, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '20', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': '72'}

Key: 142668431637548326089369264225446081725
Value: {'question': "In what year of the 1990s was baseball's World Series canceled?", 'responses': [('1994', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1994', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1994', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1994', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1994', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1994', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1994', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1994', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1994', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1994', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1994', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1994'}

Key: 193655233376950766685272748118758974986
Value: {'question': 'Albert Giacometti found fame as what?', 'responses': [('Sculptor', [-0.26277780532836914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sculptor', [-0.26277780532836914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sculptor', [-0.26277780532836914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sculptor', [-0.26277780532836914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sculptor', [-0.26277780532836914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sculptor', [-0.26277780532836914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sculptor', [-0.26277780532836914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sculptor', [-0.26277780532836914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sculptor', [-0.26277780532836914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sculptor', [-0.26277780532836914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sculptor', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Sculptor'}

Key: 81945049420735955800693902123181026844
Value: {'question': 'Who first flew in Friendship 7?', 'responses': [('Alan Shepard', [-1.0219252109527588, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gus Griss', [-1.8344252109527588, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Shepard', [-1.0219252109527588, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Glenn', [-1.7094252109527588, -0.030680447816848755, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Glenn', [-1.7094252109527588, -0.030680447816848755, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Walker', [-3.771925210952759, -1.0166337490081787, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Shepard', [-1.0219252109527588, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gus Griss', [-1.8344252109527588, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gus Griss', [-1.8344252109527588, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Shepard', [-1.0219252109527588, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alan Shepard', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'John Glenn'}

Key: 170046867823802187858397458672112418650
Value: {'question': 'Who had a 50s No 1 with Stagger Lee?', 'responses': [('Lonnie Donne', [-2.7133312225341797, 0.0, -2.5772759914398193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wynonie Harris', [-4.46333122253418, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hank Ballard', [-1.4633311033248901, -1.3465027809143066, -0.49469149112701416], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tommy Steele', [-4.15083122253418, -0.6354928612709045, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eddie Cochran', [-3.9008312225341797, -0.5511496067047119, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ray Price', [-3.5258312225341797, -2.4918670654296875, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jerry Lee Lewis', [-3.2758312225341797, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hank Ballard and', [-1.4633311033248901, -1.3465027809143066, -1.3696914911270142], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hank Locklin', [-1.4633311033248901, -2.9715027809143066, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fats Domino', [-3.2133312225341797, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lonnie Donne', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Lloyd Price'}

Key: 112672072414226560355532815739001793635
Value: {'question': 'Who wrote the novel Gentlemen Prefer Blondes?', 'responses': [('Noel Coward', [-2.3789753913879395, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lawrence Durrell', [-4.1992878913879395, -1.1761949062347412, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anita Loos', [-0.6836628317832947, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anita Loos', [-0.6836628317832947, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Noel Coward', [-2.3789753913879395, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anita Loos', [-0.6836628317832947, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anita Loos', [-0.6836628317832947, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carol Channing', [-2.5899128913879395, -1.1612249612808228, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lauren Graham', [-3.1367878913879395, -2.608471155166626, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Noel Coward', [-2.3789753913879395, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Noel Coward', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Anita Loos'}

Key: 187790572541677863001224959254445159691
Value: {'question': 'Which country does the airline Gulf Air come from?', 'responses': [('Bahrain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bahrain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bahrain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bahrain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bahrain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bahrain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bahrain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bahrain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bahrain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bahrain', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bahrain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Bahrain'}

Key: 105617081463882541251099201005381040748
Value: {'question': "What is Alistair Cooke's real first name?", 'responses': [('George', [-3.272763967514038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alexander', [-2.022763967514038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alfred', [-3.022763967514038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albert', [-3.022763967514038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alexander', [-2.022763967514038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alexander', [-2.022763967514038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albert', [-3.022763967514038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-2.272763967514038, -0.02630021423101425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James', [-3.647763967514038, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-4.335264205932617, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Alfred'}

Key: 299362495068794935963611688868044366704
Value: {'question': 'How is seriously rich Percy Miller better known?', 'responses': [('Trick Daddy', [-3.1394429206848145, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('U$e', [-3.2644429206848145, -3.0093915462493896, -1.5558751821517944], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As Trick Daddy', [-2.9519429206848145, -3.702310562133789, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Master P', [-1.389442801475525, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trick Daddy', [-3.1394429206848145, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Master P', [-1.389442801475525, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Master P', [-1.389442801475525, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as rapper Lil', [-2.2644429206848145, -1.5601880550384521, -1.668260931968689], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Master P', [-1.389442801475525, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as rapper Lil', [-2.2644429206848145, -1.5601880550384521, -1.668260931968689], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Trick Daddy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'Master P'}

Key: 281894299044318702315259370429700204881
Value: {'question': 'How old was Laurel and Hardy producer Hal Roach when he died in 1992?', 'responses': [('99', [0.0, -0.7575989961624146, -2.038376808166504, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('102', [0.0, -0.6325989961624146, 0.0, -1.7721041440963745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('98', [0.0, -0.7575989961624146, -1.913376808166504, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('97', [0.0, -0.7575989961624146, -2.038376808166504, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('100', [0.0, -0.6325989961624146, 0.0, -1.3971041440963745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('101', [0.0, -0.6325989961624146, 0.0, -1.5221041440963745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('98', [0.0, -0.7575989961624146, -1.913376808166504, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('101', [0.0, -0.6325989961624146, 0.0, -1.5221041440963745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('100', [0.0, -0.6325989961624146, 0.0, -1.3971041440963745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('100', [0.0, -0.6325989961624146, 0.0, -1.3971041440963745], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '99', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': '100'}

Key: 113327236306513382406765455874797039839
Value: {'question': 'Who was West German Chancellor from 1969 to 1974? Willy Brandt.', 'responses': [('Willy', [-0.8139370679855347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Willy', [-0.8139370679855347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-1.1889370679855347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Willy', [-0.8139370679855347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Willy', [-0.8139370679855347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brandt', [-1.6889370679855347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Willy', [-0.8139370679855347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-1.1889370679855347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brandt', [-1.6889370679855347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-1.1889370679855347], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Willy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Willy Brandt'}

Key: 40225800409056616985476748393891951215
Value: {'question': 'What sort of Menace was the 1999 Star Wars movie?', 'responses': [('Sequel', [-2.6581084728240967, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Menace II', [-2.7831084728240967, -2.253480911254883], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Attack', [-4.658108711242676, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Phantom', [-2.6581084728240967, -0.3420634865760803], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Comedy', [-2.7831084728240967, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A bomb', [-1.7831084728240967, -4.300001621246338], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Phantom', [-2.6581084728240967, -0.3420634865760803], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sequel', [-2.6581084728240967, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-4.783108711242676, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TriStar', [-4.533108711242676, -4.268863677978516], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sequel', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Phantom'}

Key: 71817138233727822238713241153180880329
Value: {'question': "What was the name of Drew Barrymore's character in E.T.?", 'responses': [('Gertie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gertie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gertie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gertie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gertie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gertie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gertie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gertie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gertie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gertie', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gertie', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Gertie'}

Key: 66712722627410987680494286913552279701
Value: {'question': "Which ER star played opposite Jenny Seagrove in Don' Go Breaking My Heart?", 'responses': [('George Clooney', [-1.0557334423065186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Fleischer', [-4.680733680725098, -2.68511700630188, -0.16301707923412323], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anthony Edwards', [-2.0557334423065186, -0.07655314356088638, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Clooney', [-1.0557334423065186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julianne Moore', [-3.0557334423065186, -0.7575989961624146, -0.5559271574020386], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anthony Edwards', [-2.0557334423065186, -0.07655314356088638, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Clooney', [-1.0557334423065186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anthony Edwards', [-2.0557334423065186, -0.07655314356088638, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anthony LaPag', [-2.0557334423065186, -2.6078031063079834, -0.09163712710142136], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Laura Innes', [-2.4932334423065186, -1.6355336904525757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George Clooney', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Anthony Edwards'}

Key: 216745686482692594155631173616953611891
Value: {'question': 'Who played Rick Deckard in Blade Runner?', 'responses': [('Harrison Ford', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harrison Ford', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harrison Ford', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harrison Ford', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harrison Ford', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harrison Ford', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harrison Ford', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harrison Ford', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harrison Ford', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harrison Ford', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Harrison Ford', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Harrison Ford'}

Key: 17549429990929525351732243611014992798
Value: {'question': 'What was the fourth Alien film called?', 'responses': [('Aliens', [-0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aliens', [-0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aliens', [-0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alien3', [-1.1368709802627563, -3.077625274658203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alien:', [-1.1368709802627563, -2.452625274658203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aliens', [-0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alien3', [-1.1368709802627563, -3.077625274658203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alien', [-1.1368709802627563, -0.4526253044605255], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aliens', [-0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aliens', [-0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Aliens', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Alien Resurrection'}

Key: 21691653664650320913757443568567712993
Value: {'question': 'What number Star Trek movie was called The Wrath of Khan?', 'responses': [('II', [-1.401362419128418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Second', [-3.838862419128418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Wrath', [-2.526362419128418, -0.23751579225063324], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('II', [-1.401362419128418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('IV', [-4.151362419128418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wrath of', [-3.088862419128418, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.7763624787330627, -2.652008533477783], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.7763624787330627, -0.15200841426849365], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('II', [-1.401362419128418, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.7763624787330627, -2.652008533477783], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'II', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'II'}

Key: 242289166362874295043113962111224735506
Value: {'question': "In Stepmom who played Susan Sarandon's daughter?", 'responses': [('Joan Allen', [-3.8682894706726074, -0.28115010261535645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julia Roberts', [-0.3214145004749298, -0.05657599866390228, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julia Roberts', [-0.3214145004749298, -0.05657599866390228, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julia Roberts', [-0.3214145004749298, -0.05657599866390228, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julia Roberts', [-0.3214145004749298, -0.05657599866390228, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cameron Diaz', [-4.055789470672607, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julia Roberts', [-0.3214145004749298, -0.05657599866390228, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julia Roberts', [-0.3214145004749298, -0.05657599866390228, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reese Witherspoon', [-4.962039470672607, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julia Roberts', [-0.3214145004749298, -0.05657599866390228, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joan Allen', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Julia Roberts'}

Key: 150428517065830597524745907832760590281
Value: {'question': 'Which King did Leonardo Di Caprio play in The Man in the Iron Mask?', 'responses': [('Louis 1', [0.0, -1.762406826019287, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis XIV', [0.0, -0.7624068260192871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis XIV', [0.0, -0.7624068260192871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis XVI', [0.0, -2.137406826019287, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis 1', [0.0, -1.762406826019287, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis the', [0.0, -2.199906826019287, -0.7259262204170227], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis XIV', [0.0, -0.7624068260192871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis XIV', [0.0, -0.7624068260192871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis XIII', [0.0, -3.512406826019287, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louis XIV', [0.0, -0.7624068260192871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Louis 1', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Louis XIV'}

Key: 295643693858911217862470475290673182943
Value: {'question': 'Which role did Rupert Everett play in The Madness of King George?', 'responses': [('George III', [-2.1269383430480957, -0.32937824726104736], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lord Chamberlain', [-2.5019383430480957, -2.9889094829559326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duke of', [-4.251938343048096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dr.', [-4.876938343048096, -0.5208176374435425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prime Minister', [-3.6269383430480957, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Churchill', [-3.5019383430480957, -1.5203925371170044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward Walpole', [-4.501938343048096, -3.715380907058716], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King George', [-1.8769383430480957, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Actor', [-5.251938343048096, -0.4814832806587219], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George III', [-2.1269383430480957, -0.32937824726104736], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'George III', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'The Prince of Wales'}

Key: 73610240357117605940195782163836993930
Value: {'question': 'Which UK pop singer an environmental campaigner appeared in Dune?', 'responses': [('Sting', [-0.8831195831298828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seal', [-3.539369583129883, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seal', [-3.539369583129883, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seal', [-3.539369583129883, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seal', [-3.539369583129883, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Annie Lennox', [-3.195619583129883, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sting', [-0.8831195831298828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Duran Duran', [-3.414369583129883, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sting', [-0.8831195831298828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emma B', [-5.008119583129883, -0.30635571479797363], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sting', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456562, 'reference': 'Sting'}

Key: 196131573440271804709652049062560032367
Value: {'question': "What was Stanley Kubrick's final movie?", 'responses': [('Eyes Wide Shut', [0.0, -0.20718736946582794, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eyes Wide Shut', [0.0, -0.20718736946582794, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eyes wide shut', [0.0, -1.6759374141693115, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eyes Wide Shut', [0.0, -0.20718736946582794, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eyes Wide Shut', [0.0, -0.20718736946582794, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eyes Wide Shut', [0.0, -0.20718736946582794, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eyes Wide Shut', [0.0, -0.20718736946582794, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eyes Wide Shut', [0.0, -0.20718736946582794, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eyes wide shut', [0.0, -1.6759374141693115, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eyes Wide Shut', [0.0, -0.20718736946582794, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Eyes Wide Shut', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Eyes Wide Shut'}

Key: 166500404825891461644417460614166577692
Value: {'question': 'Who tries to save the world from virtual reality in The Matrix?', 'responses': [('Neo', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neo', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Keanu', [-0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Keanu', [-0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neo', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neo', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Keanu', [-0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Keanu', [-0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neo', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neo', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Neo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'Keanu Reeves'}

Key: 261710804790718277867182367907897376435
Value: {'question': 'Which decade does Michael J Fox go back to in Back to the Future?', 'responses': [('1955', [0.0, 0.0, 0.0, 0.0, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1955', [0.0, 0.0, 0.0, 0.0, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [0.0, 0.0, 0.0, 0.0, -2.1269280910491943, -0.35195186734199524], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1955', [0.0, 0.0, 0.0, 0.0, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1955', [0.0, 0.0, 0.0, 0.0, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1955', [0.0, 0.0, 0.0, 0.0, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1955', [0.0, 0.0, 0.0, 0.0, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1955', [0.0, 0.0, 0.0, 0.0, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1955', [0.0, 0.0, 0.0, 0.0, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1955', [0.0, 0.0, 0.0, 0.0, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1955', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '50s'}

Key: 317622592767519276577338897350788357155
Value: {'question': 'In which 90s movie did Al Pacino play retired Colonel Frank Slade?', 'responses': [('Scent of', [-1.041504144668579, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heat', [-0.8540042042732239, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heat', [-0.8540042042732239, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scent of', [-1.041504144668579, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scent Of', [-1.041504144668579, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scent of', [-1.041504144668579, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heat', [-0.8540042042732239, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heat', [-0.8540042042732239, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scent Of', [-1.041504144668579, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Any Given', [-2.854004144668579, -0.09726862609386444], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Scent of', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'Scent of a Woman'}

Key: 325980877520291486242131834750672632656
Value: {'question': "What is the name of Kate Winslet's character in Titanic?", 'responses': [('Rose DeWitt', [0.0, -0.9319053888320923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose DeWitt', [0.0, -0.9319053888320923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose', [0.0, -0.8069053888320923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose', [0.0, -0.8069053888320923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose', [0.0, -0.8069053888320923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose DeWitt', [0.0, -0.9319053888320923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose DeWitt', [0.0, -0.9319053888320923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose', [0.0, -0.8069053888320923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose', [0.0, -0.8069053888320923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rose', [0.0, -0.8069053888320923], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rose DeWitt', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Rose'}

Key: 92985015874449180425795180660553788346
Value: {'question': 'Which spin-off from a 60s sitcom was a 1999 movie with Jeff Daniels and Christopher Lloyd?', 'responses': [('The Adams family', [-0.600575864315033, -1.3368542194366455, -2.8708205223083496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Adams Family', [-0.600575864315033, -1.3368542194366455, -0.05832047387957573, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Adams Family', [-0.600575864315033, -1.3368542194366455, -0.05832047387957573, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Adams Family', [-0.600575864315033, -1.3368542194366455, -0.05832047387957573, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Get A Life', [-3.6943259239196777, -2.0491719245910645, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Munsters', [-0.600575864315033, -3.9462292194366455, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Paper Chase', [-0.600575864315033, -3.4774792194366455, -0.17388273775577545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Brady Bunch movie', [-0.600575864315033, -4.243103981018066, 0.0, -2.6867337226867676], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jeffersons', [-0.600575864315033, -3.2118542194366455, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Adams Family', [-0.600575864315033, -1.3368542194366455, -0.05832047387957573, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Adams family', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'My Favorite Martian'}

Key: 114756432498256713599972782088276326752
Value: {'question': 'Who played the title role in Emma?', 'responses': [('Gwyneth Paltrow', [-0.07207804173231125, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gwyneth Paltrow', [-0.07207804173231125, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gwyneth Paltrow', [-0.07207804173231125, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gwyneth Paltrow', [-0.07207804173231125, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gwyneth Paltrow', [-0.07207804173231125, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gwyneth Paltrow', [-0.07207804173231125, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kate Winslet', [-2.665827989578247, -0.38403087854385376, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gwyneth Paltrow', [-0.07207804173231125, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gwyneth Paltrow', [-0.07207804173231125, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gwyneth Paltrow', [-0.07207804173231125, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gwyneth Paltrow', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Gwyneth Paltrow'}

Key: 189907583713144618905831775450298272673
Value: {'question': 'Who played Batman immediately before George Clooney?', 'responses': [('Adam West', [-0.3484445810317993, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Keaton', [-1.2234445810317993, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adam West', [-0.3484445810317993, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Keaton', [-1.2234445810317993, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adam West', [-0.3484445810317993, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adam West', [-0.3484445810317993, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adam West', [-0.3484445810317993, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adam West', [-0.3484445810317993, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adam West', [-0.3484445810317993, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Adam West', [-0.3484445810317993, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Adam West', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Val Kilmer'}

Key: 187468325251867411957553100088526504170
Value: {'question': 'Who played the young Obi-Wan Kenobi in the Star Wars prequel?', 'responses': [('Ewan McGregor', [-1.1878091096878052, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jake Lloyd', [-0.8753091096878052, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liam Neeson', [-1.9378091096878052, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hayden Christensen', [-2.6253089904785156, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hayden Christensen', [-2.6253089904785156, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hayden Christensen', [-2.6253089904785156, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ewan McGregor', [-1.1878091096878052, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ewan McGregor', [-1.1878091096878052, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ewan McGregor', [-1.1878091096878052, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ewan McGregor', [-1.1878091096878052, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ewan McGregor', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Ewan McGregor'}

Key: 328209616556782288084450138720187413066
Value: {'question': "Who played Drew Barrymore's stepmother in Ever After?", 'responses': [('Anjelica', [-0.1506633162498474, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anjelica', [-0.1506633162498474, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anjelica', [-0.1506633162498474, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anjelica', [-0.1506633162498474, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anjelica', [-0.1506633162498474, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anjelica', [-0.1506633162498474, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Saunders', [-3.231107711791992, -1.9199193716049194, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anjelica', [-0.1506633162498474, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anjelica', [-0.1506633162498474, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anjelica', [-0.1506633162498474, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Anjelica', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Angelica Houston'}

Key: 43605144375313321515175418528726437685
Value: {'question': 'In which 1998 film did Bruce Willis lead a team to confront a deadly threat from outer space?', 'responses': [('Armageddon', [-0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Armageddon', [-0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Armageddon', [-0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Armageddon', [-0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Armageddon', [-0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sixth', [-1.857227087020874, -0.9112222790718079], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The sixth', [-1.857227087020874, -1.629972219467163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Armageddon', [-0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Armageddon', [-0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The sixth', [-1.857227087020874, -1.629972219467163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Armageddon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Armageddon'}

Key: 33623024960800581802473435754186640481
Value: {'question': 'Which 1968 sci fi classic was based on The Sentinel by Arthur C Clarke?', 'responses': [('2001: A Space Odyssey', [0.0, 0.0, 0.0, 0.0, 0.0, -0.21162623167037964, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2001: A Space Odyssey', [0.0, 0.0, 0.0, 0.0, 0.0, -0.21162623167037964, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2001: A Space Odyssey', [0.0, 0.0, 0.0, 0.0, 0.0, -0.21162623167037964, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2001: A Space Odyssey', [0.0, 0.0, 0.0, 0.0, 0.0, -0.21162623167037964, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2001: A Space Odyssey', [0.0, 0.0, 0.0, 0.0, 0.0, -0.21162623167037964, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2001 A Space Odyssey', [0.0, 0.0, 0.0, 0.0, 0.0, -1.8366262912750244, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2001: A Space Odyssey', [0.0, 0.0, 0.0, 0.0, 0.0, -0.21162623167037964, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2001: A Space Odyssey', [0.0, 0.0, 0.0, 0.0, 0.0, -0.21162623167037964, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2001: A Space Odyssey', [0.0, 0.0, 0.0, 0.0, 0.0, -0.21162623167037964, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2001: A Space Odyssey', [0.0, 0.0, 0.0, 0.0, 0.0, -0.21162623167037964, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '2001: A Space Odyssey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '2001: A Space Odyssey'}

Key: 223463642758681694372278554573457352204
Value: {'question': 'Which tough guy played Mr. Freeze in Batman & Robin?', 'responses': [('Arnold Schwarzenegger', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schwarzenegger', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schwarzenegger', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schwarzenegger', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schwarzenegger', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schwarzenegger', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schwarzenegger', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schwarzenegger', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schwarzenegger', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arnold Schwarzenegger', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Arnold Schwarzenegger', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Arnold Schwarzenegger'}

Key: 337608962903051198314881304607806716574
Value: {'question': 'What was the subtitle of Terminator 2?', 'responses': [('Judgement Day', [-0.5490548014640808, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judgment Day', [-0.8615548014640808, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judgement Day', [-0.5490548014640808, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judgement Day', [-0.5490548014640808, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judgement Day', [-0.5490548014640808, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judgement Day', [-0.5490548014640808, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judgment Day', [-0.8615548014640808, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judgement Day', [-0.5490548014640808, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judgement Day', [-0.5490548014640808, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judgment Day', [-0.8615548014640808, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Judgement Day', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Judgment Day'}

Key: 228056680509541983262368041752734823254
Value: {'question': 'Which 1996 film has its climax on 4th of July?', 'responses': [('Independence Day', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Independence Day', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Independence Day', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Independence Day', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Independence Day', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Independence Day', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Independence Day', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Independence Day', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Independence Day', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Independence Day', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Independence Day', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Independence Day'}

Key: 70183611092462625504751158032354387276
Value: {'question': 'Which Apollo mission was filmed in 1995 with Tom Hanks?', 'responses': [('Apollo 13', [-0.04398319125175476, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo 13', [-0.04398319125175476, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo 13', [-0.04398319125175476, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo 13', [-0.04398319125175476, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo 13', [-0.04398319125175476, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo 13', [-0.04398319125175476, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo 13', [-0.04398319125175476, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo 13', [-0.04398319125175476, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo 13', [-0.04398319125175476, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apollo 13', [-0.04398319125175476, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Apollo 13', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '13'}

Key: 332287310110225563575141991066223264575
Value: {'question': 'In which film did Susan Sarandon play Sister Helen Prejean?', 'responses': [('Dead Man Walking', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dead Man Walking', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dead Man Walking', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dead Man Walking', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dead Man Walking', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dead Man Walking', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dead Man Walking', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dead Man Walking', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dead Man Walking', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dead Man Walking', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dead Man Walking', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Dead Man Walking'}

Key: 87254972157957206372176169808066499765
Value: {'question': 'In which city does the action of the 1998 movie Godzilla take place?', 'responses': [('Tokyo', [-0.4044155180454254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tokyo', [-0.4044155180454254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tokyo', [-0.4044155180454254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('San Francisco', [-1.529415488243103, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('San Francisco', [-1.529415488243103, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tokyo', [-0.4044155180454254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tokyo', [-0.4044155180454254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tokyo', [-0.4044155180454254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('San Francisco', [-1.529415488243103, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tokyo', [-0.4044155180454254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tokyo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'New York'}

Key: 253452678135608341231499706465184694999
Value: {'question': 'Which star of Cheers co-starred with ?Whoopi Goldberg in Made in America?', 'responses': [('Kirstie Alley', [-0.8878976702690125, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ted Danson', [-2.5753977298736572, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Clooney', [-2.0128977298736572, -0.6013230681419373, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shelley Long', [-2.5128977298736572, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shelley Long', [-2.5128977298736572, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirstie Alley', [-0.8878976702690125, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Ratzen', [-2.0753977298736572, -1.2976350784301758, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Travolta', [-2.0753977298736572, -2.297635078430176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ted Danson', [-2.5753977298736572, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Wendt', [-2.0128977298736572, -0.9763230681419373, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kirstie Alley', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Ted Danson'}

Key: 8237082938672322435683940865800872205
Value: {'question': "What was Pierce Brosnan's first outing as 007?", 'responses': [('The World is', [-1.8044487237930298, -1.7574026584625244, -0.4981345236301422], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('GoldenEye', [-0.3044486939907074, -0.7671788334846497, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('GoldenEye (', [-0.3044486939907074, -0.7671788334846497, -2.6949362754821777], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('GoldenEye', [-0.3044486939907074, -0.7671788334846497, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Living Day', [-1.8044487237930298, -0.5855276584625244, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('GoldenEye', [-0.3044486939907074, -0.7671788334846497, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldeneye (', [-0.3044486939907074, -0.9546788334846497, -2.6367831230163574], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('GoldenEye', [-0.3044486939907074, -0.7671788334846497, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldeneye', [-0.3044486939907074, -0.9546788334846497, -0.07428312301635742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goldeneye', [-0.3044486939907074, -0.9546788334846497, -0.07428312301635742], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The World is', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Goldeneye'}

Key: 198726266686190165897742310444306167190
Value: {'question': 'Which The Bridges of Madison County star became a father again aged 65?', 'responses': [('Clint Eastwood', [-0.10633727163076401, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.10633727163076401, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.10633727163076401, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.10633727163076401, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.10633727163076401, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.10633727163076401, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.10633727163076401, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.10633727163076401, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.10633727163076401, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meryl Stre', [-2.293837308883667, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Clint Eastwood', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Clint Eastwood'}

Key: 282950720004043841509076220715150686784
Value: {'question': 'Who was the star of the dark thriller 8mm?', 'responses': [('Val Kilmer', [-3.2694997787475586, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Keanu Reeves', [-4.144499778747559, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Malkovich', [-1.9335623979568481, -1.7579591274261475, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Carrad', [-1.9335623979568481, -4.586083889007568, -0.15314295887947083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Cusack', [-1.9335623979568481, -0.9767090678215027, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elijah Wood', [-4.491179466247559, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Milla Jovo', [-3.0898122787475586, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Weller', [-3.0194997787475586, -1.8030381202697754, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Drew Barrymore', [-3.5429372787475586, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sean Young', [-3.1991872787475586, -1.6898545026779175, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Val Kilmer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Nicolas Cage'}

Key: 265332770202717366798820082181776293508
Value: {'question': "Where was the 1990s version of Dickens' Great Expectations set?", 'responses': [('London', [-1.3081001043319702, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Orleans', [-2.6831002235412598, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Caribbean', [-2.8081002235412598, -3.5780279636383057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-1.3081001043319702, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-2.6831002235412598, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Caribbean', [-2.8081002235412598, -3.5780279636383057], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London', [-1.3081001043319702, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [-4.43310022354126, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-2.4331002235412598, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.6831002235412598, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'London', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'New York'}

Key: 185279539205307421717151512386098978699
Value: {'question': 'Which important US building has its roof ripped off in Superman II?', 'responses': [('The Pentagon', [-0.2829858064651489, -1.0203943252563477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The US Capitol', [-0.2829858064651489, -3.7703943252563477, -0.17667822539806366], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Empire State', [-0.2829858064651489, -1.6453943252563477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The White House', [-0.2829858064651489, -1.0203943252563477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pentagon', [-0.2829858064651489, -1.0203943252563477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pentagon', [-0.2829858064651489, -1.0203943252563477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Statue of', [-0.2829858064651489, -3.3953943252563477, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The White House', [-0.2829858064651489, -1.0203943252563477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pentagon', [-0.2829858064651489, -1.0203943252563477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Statue of Liberty', [-3.6579856872558594, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Pentagon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': 'The White House'}

Key: 114228372157625305180276912944118691408
Value: {'question': 'What is the name of the Darth Vader-to-be in the Star Wars Prequel, Episode 1?', 'responses': [('Anakin Skywalker', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anakin Skywalker', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Darth Maul', [-1.9637140035629272, -0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anakin Skywalker', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anakin Skywalker', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anakin Skywalker', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anakin Skywalker', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anakin Skywalker', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anakin Skywalker', [-0.15121398866176605, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Darth Maul', [-1.9637140035629272, -0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Anakin Skywalker', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Anakin Skywalker'}

Key: 264177295590952410517296692709597814276
Value: {'question': 'What was the first sequel to Star Wars?', 'responses': [('The Empire Strikes Back', [-0.14998379349708557, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Empire Strikes Back', [-0.14998379349708557, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Empire Strikes Back', [-0.14998379349708557, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Return of the Jedi', [-2.3999838829040527, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Empire Strikes Back', [-0.14998379349708557, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Empire Strikes Back', [-0.14998379349708557, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Empire Strikes Back', [-0.14998379349708557, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Empire Strikes Back', [-0.14998379349708557, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Empire Strikes Back', [-0.14998379349708557, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Empire Strikes Back', [-0.14998379349708557, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Empire Strikes Back', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'The Empire strikes Back'}

Key: 320681789524951896241786175444319975164
Value: {'question': 'Who did Jane Fonda play in the 60s movie of the same name where she repeatedly lost her clothes.', 'responses': [('Barbare', [-1.389432668685913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Breezy', [-2.389432668685913, -2.3368477821350098], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lily Tom', [-3.545682668685913, -1.8224033117294312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lily', [-3.545682668685913, -0.6817783117294312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hannah "', [-4.920682907104492, -4.230007648468018], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sunday driver', [-4.873807907104492, -4.799340724945068], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The secretary', [-2.826932668685913, -2.4247395992279053], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbare', [-1.389432668685913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lily', [-3.545682668685913, -0.6817783117294312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sue Baker', [-4.748807907104492, -4.084941387176514], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Barbare', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Barbarella'}

Key: 302498487721249032623334095362889309399
Value: {'question': 'Which veteran actress Katharine was the first actress to win four Oscars?', 'responses': [('Hepburn', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hepburn', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hepburn', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hepburn', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hepburn', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hepburn', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hepburn', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hepburn', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hepburn', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hepburn', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hepburn', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Hepburn'}

Key: 41105070668939039451209138467326773278
Value: {'question': 'Who won his second Oscar in successive years for Forrest Gump?', 'responses': [('Tom Hanks', [-0.11282224208116531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Hanks', [-0.11282224208116531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robin Williams', [-2.2378222942352295, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Hanks', [-0.11282224208116531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Hanks', [-0.11282224208116531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Hanks', [-0.11282224208116531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Hanks', [-0.11282224208116531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Hanks', [-0.11282224208116531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robin Williams', [-2.2378222942352295, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Hanks', [-0.11282224208116531, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tom Hanks', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Tom Hanks'}

Key: 91695437821779318451357915856929947950
Value: {'question': 'Who won his second Oscar for the role of Raymond in Rain Man?', 'responses': [('Dustin Hoffman', [-0.3304581940174103, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dustin Hoffman', [-0.3304581940174103, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dustin Hoffman', [-0.3304581940174103, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dustin Hoffman', [-0.3304581940174103, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dustin Hoffman', [-0.3304581940174103, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dustin Hoffman', [-0.3304581940174103, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dustin Hoffman', [-0.3304581940174103, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dustin Hoffman', [-0.3304581940174103, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dustin Hoffman', [-0.3304581940174103, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dustin Hoffman', [-0.3304581940174103, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dustin Hoffman', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Dustin Hoffman'}

Key: 77328584181481519478346793548881665779
Value: {'question': 'In 1997 James Cameron won an Oscar for which blockbuster?', 'responses': [('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Titanic', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Titanic'}

Key: 39864237365415596931480916519064299182
Value: {'question': 'Which Nick won an Oscar for The Wrong Trousers?', 'responses': [('Nick Park', [-0.5648868680000305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nicholas Cage', [-3.2211368083953857, -1.2499749660491943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Berry', [-4.158637046813965, -0.2383444905281067], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nick Park', [-0.5648868680000305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bean', [-4.877387046813965, -0.07031864672899246], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Little', [-4.783637046813965, -0.5616474151611328], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nick Park', [-0.5648868680000305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nick Park', [-0.5648868680000305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nick Park', [-0.5648868680000305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nick Park', [-0.5648868680000305, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nick Park', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452238, 'reference': 'Park'}

Key: 221176952374803424726757592996448226694
Value: {'question': "What is Sean Connery's profession in The Name of the Rose?", 'responses': [('Benedictine', [-1.7411704063415527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monk', [-1.2411704063415527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A medieval', [-1.8661704063415527, -4.014865398406982], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monk', [-1.2411704063415527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Franciscan Friar', [-2.9911704063415527, -2.6420154571533203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Priest', [-2.2411704063415527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monk', [-1.2411704063415527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A priest', [-1.8661704063415527, -2.8898656368255615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friar', [-2.9911704063415527, -0.0721268504858017], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Priest', [-2.2411704063415527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Benedictine', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Friar'}

Key: 97729615097484328382694373239654302847
Value: {'question': 'In which film did Jodie Foster play FBI agent Clarice Starling?', 'responses': [('The Silence of the Lambs', [-0.38687101006507874, -0.1602240949869156, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The silence of the lambs', [-0.38687101006507874, -1.9102240800857544, 0.0, 0.0, -0.2131100296974182, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The silence of the lambs', [-0.38687101006507874, -1.9102240800857544, 0.0, 0.0, -0.2131100296974182, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Silence of the Lambs', [-0.38687101006507874, -0.1602240949869156, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The silence of the lambs', [-0.38687101006507874, -1.9102240800857544, 0.0, 0.0, -0.2131100296974182, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Silence of the Lambs', [-1.1368709802627563, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Silence of the Lambs', [-1.1368709802627563, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Silence of the Lambs', [-0.38687101006507874, -0.1602240949869156, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Silence of the Lambs', [-0.38687101006507874, -0.1602240949869156, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Silence of the Lambs', [-0.38687101006507874, -0.1602240949869156, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Silence of the Lambs', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'The Silence of the Lambs'}

Key: 284859708905623643813352771683409228478
Value: {'question': 'Which Julie won an Oscar for Darling in 1965 and was Oscar nominated in 19987 for Afterglow?', 'responses': [('Harris', [-4.046805381774902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Smith', [-4.296805381774902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Davis', [-2.1718051433563232], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julie', [-1.2968051433563232], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fos', [-3.2968051433563232], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fos', [-3.2968051433563232], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Davis', [-2.1718051433563232], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hepburn', [-3.1093051433563232], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('', [-4.171805381774902], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stre', [-3.5468051433563232], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Harris', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Christie'}

Key: 227176858869485859394093126693115289087
Value: {'question': 'Which musical set in gangland New York won 11 Oscars in 1961?', 'responses': [('West Side Story', [-0.9330731630325317, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.9330731630325317, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Side Story', [-0.9330731630325317, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On the Waterfront', [-0.7455731630325317, -0.1902991682291031, -0.14567852020263672], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver!', [-3.558073043823242, -0.28115010261535645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On the Waterfront', [-0.7455731630325317, -0.1902991682291031, -0.14567852020263672], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On the Waterfront', [-0.7455731630325317, -0.1902991682291031, -0.14567852020263672], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On The Waterfront', [-0.7455731630325317, -1.752799153327942, -0.16491271555423737], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On the Waterfront', [-0.7455731630325317, -0.1902991682291031, -0.14567852020263672], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On the Waterfront', [-0.7455731630325317, -0.1902991682291031, -0.14567852020263672], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'West Side Story', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'West Side Story'}

Key: 114242359327886832244775676329127622795
Value: {'question': 'Who did Ali McGraw marry after they had made The Getaway together?', 'responses': [('Robert Evans', [-2.263118267059326, -1.019162893295288, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve McQueen', [-1.1381182670593262, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve McQueen', [-1.1381182670593262, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve McQueen', [-1.1381182670593262, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve McQueen', [-1.1381182670593262, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dustin Hoffman', [-4.356868267059326, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Wagner', [-2.263118267059326, -0.7066629528999329, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Benjamin', [-2.888118267059326, -2.7747743129730225, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tony Bill', [-2.544368267059326, -2.0933468341827393, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gregory Peck', [-4.497493267059326, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert Evans', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Steve McQueen'}

Key: 158542073633833427431319176531484940121
Value: {'question': '"Who uttered the famous line ""Frankly my dear I don\'t give a damn?"', 'responses': [('Clark Gable', [-0.6931471824645996, 0.0, -0.23262198269367218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhett Butler', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhett Butler', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clark Gable in', [-0.6931471824645996, 0.0, -1.7326220273971558], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clark Gable in', [-0.6931471824645996, 0.0, -1.7326220273971558], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhett Butler', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clark Gable', [-0.6931471824645996, 0.0, -0.23262198269367218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhett Butler', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clark Gable', [-0.6931471824645996, 0.0, -0.23262198269367218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rhett Butler', [-0.6931471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Clark Gable', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6931471805599453, 'reference': 'Clark Gable'}

Key: 65015954137964043507022133711262227413
Value: {'question': 'Whose voice did Marni Nixon dub in the classic My Fair Lady?', 'responses': [('Audrey Hepburn', [-0.8525373339653015, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julie Andrews', [-1.9150373935699463, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Audrey Hepburn', [-0.8525373339653015, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rex Harrison', [-0.8525373339653015, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rex Harrison', [-0.8525373339653015, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Audrey Hepburn', [-0.8525373339653015, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rex Harrison', [-0.8525373339653015, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rex Harrison', [-0.8525373339653015, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Audrey Hepburn', [-0.8525373339653015, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julie Andrews', [-1.9150373935699463, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Audrey Hepburn', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0549201679861442, 'reference': 'Audrey Hepburn'}

Key: 24032128516376479137206661530743368499
Value: {'question': "Who was jailed for her 'obscene' stage play Sex?", 'responses': [('Gwen Watford', [-4.591468334197998, -1.7182965278625488, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jean Marsh', [-1.6227182149887085, -4.00518798828125, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virginia Woolf', [-4.778968334197998, -0.45003998279571533, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jean Brodie', [-1.6227182149887085, -3.013000726699829, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billie Whitelaw', [-3.122718334197998, -0.06196761503815651, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vivien Leigh', [-1.9352182149887085, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sarah Siddons', [-3.247718334197998, -3.7391059398651123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wendy Toye', [-3.841468334197998, -0.5621272325515747, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marlene Dietrich', [-2.810218334197998, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vivien Leigh', [-1.9352182149887085, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gwen Watford', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Mae West'}

Key: 303127760348751136317226383492636013787
Value: {'question': "Which 1997 movie equaled Ben Hur's record 11 Oscars?", 'responses': [('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Titanic', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Titanic', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Titanic'}

Key: 89926833213951374173735906098396641982
Value: {'question': 'Who won an Oscar wearing an eye patch in True Grit?', 'responses': [('Dennis Hopper', [-4.416503429412842, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wayne', [-0.3852534890174866, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kim Basinger', [-3.135253429412842, -2.052966833114624, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wayne', [-0.3852534890174866, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Matt Dillon', [-4.385253429412842, -0.48119568824768066, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wayne', [-0.3852534890174866, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wayne', [-0.3852534890174866, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirk Douglas', [-4.072753429412842, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kim Basinger', [-3.135253429412842, -2.052966833114624, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wayne', [-0.3852534890174866, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dennis Hopper', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'John Wayne'}

Key: 239164277383087509450644894003938671425
Value: {'question': 'In which film did David Niven play James Bond?', 'responses': [('Casino Royale', [-0.48153531551361084, 0.0, -0.07713093608617783], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Casino Royale', [-0.48153531551361084, 0.0, -0.07713093608617783], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Casino Royale', [-0.48153531551361084, 0.0, -0.07713093608617783], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Casino Royale (', [-0.48153531551361084, 0.0, -2.6005685329437256], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Casino Royale', [-0.48153531551361084, 0.0, -0.07713093608617783], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pink Panther', [-1.8565353155136108, -0.803394079208374, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Never Say Never', [-2.5440354347229004, -0.6776442527770996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Man with', [-1.8565353155136108, -0.740894079208374, -0.7368749380111694], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Never say never', [-2.5440354347229004, -0.7088942527770996, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Casino Royale', [-0.48153531551361084, 0.0, -0.07713093608617783], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Casino Royale', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Casino Royale'}

Key: 253652993986233941159915199400822039140
Value: {'question': 'Which Emma won an Oscar for her screenplay of Sense and Sensibility?', 'responses': [('Black', [-4.944978713989258, -0.13880977034568787], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Streep', [-3.569978713989258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bronte', [-0.9449788331985474, -0.16222497820854187], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Emma Thompson', [-3.694978713989258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bronte', [-0.9449788331985474, -0.16222497820854187], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bronte', [-0.9449788331985474, -0.16222497820854187], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winslet', [-3.819978713989258, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bronte', [-0.9449788331985474, -0.16222497820854187], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bronte', [-0.9449788331985474, -0.16222497820854187], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thompson', [-0.9449788331985474, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Black', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Thompson'}

Key: 36117051741350234294570486159229524779
Value: {'question': 'Which film with Ralph Fiennes won Anthony Minghella an Oscar?', 'responses': [('The English Patient', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The English Patient', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The English Patient', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The English Patient', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The English Patient', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The English Patient', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The English Patient', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The English Patient', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The English Patient', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The English Patient', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The English Patient', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'The English Patient'}

Key: 169084790928370794864641164682500563031
Value: {'question': 'I Could Go on Singing was the last film of which screen legend?', 'responses': [('Peter Sellers', [-2.4533584117889404, -1.218366026878357, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bing Crosby', [-4.0783586502075195, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gene Kelly', [-3.5783584117889404, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bette Davis', [-3.0783584117889404, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth Taylor', [-2.5783584117889404, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julie Andrews', [-3.2033584117889404, -0.04858732968568802, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jean Harlow', [-4.2033586502075195, -3.020988702774048, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Niven', [-3.3283584117889404, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth Taylor', [-2.5783584117889404, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rex Harrison', [-3.9533584117889404, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Peter Sellers', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Judy Garland'}

Key: 29973632090934052580955094140580523625
Value: {'question': "Which British actor's autobiography was called What's It All About?", 'responses': [('Billy Connolly', [-3.6055333614349365, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul McCartney', [-3.9180333614349365, -0.5130090713500977, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Alda', [-3.3555333614349365, -2.205939292907715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Peter O'", [-2.8555333614349365, -0.9280704855918884, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Sellers', [-2.8555333614349365, -0.9905704855918884, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [-3.2305333614349365, -1.3307123184204102, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve Coogan', [-3.4805333614349365, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Jones', [-3.9180333614349365, -0.7213869690895081, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Rickman', [-3.3555333614349365, -0.8934392929077148, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roger Moore', [-3.6680333614349365, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Billy Connolly', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Michael Cane'}

Key: 75564614994824879741341336398470756346
Value: {'question': 'Judi Dench won an Oscar as which Queen in Shakespeare in Love?', 'responses': [('Queen Elizabeth', [-0.17465414106845856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Elizabeth', [-0.17465414106845856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Elizabeth', [-0.17465414106845856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viola', [-3.237154245376587, -0.14687328040599823], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth I', [-2.112154245376587, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Elizabeth', [-0.17465414106845856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth I', [-2.112154245376587, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Elizabeth', [-0.17465414106845856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Queen Elizabeth', [-0.17465414106845856, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth', [-2.112154245376587, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Queen Elizabeth', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Elizabeth I'}

Key: 26507606358581027997581789582641896901
Value: {'question': 'Who won the Best Actor and Best Director Oscar for Dances With Wolves?', 'responses': [('Kevin Costner', [0.0, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kevin Costner', [0.0, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kevin Costner', [0.0, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kevin Costner', [0.0, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kevin Costner', [0.0, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kevin Costner', [0.0, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kevin Costner', [0.0, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kevin Costner', [0.0, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kevin Costner', [0.0, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kevin Costner', [0.0, 0.0, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kevin Costner', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Kevin Costner'}

Key: 102128529623197556417845873354133774818
Value: {'question': 'Which Jessica was the then oldest Oscar winner for Driving Miss Daisy?', 'responses': [('Lange', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lange', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lange', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lange', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lange', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lange', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lange', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lange', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lange', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lange', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lange', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Tandy'}

Key: 146358072976275546502633027163841582090
Value: {'question': 'Who was the first actress to receive four Oscars?', 'responses': [('Ingrid Bergman', [-1.1091833114624023, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katharine Hepburn', [-1.1091833114624023, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ingrid Bergman', [-1.1091833114624023, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meryl Stre', [-2.4216833114624023, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katharine Hepburn', [-1.1091833114624023, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katharine Hepburn', [-1.1091833114624023, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ingrid Bergman', [-1.1091833114624023, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ingrid Bergman', [-1.1091833114624023, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katharine Hepburn', [-1.1091833114624023, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ingrid Bergman', [-1.1091833114624023, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ingrid Bergman', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'Katharine Hepburn'}

Key: 315367666545292611087001255311943005372
Value: {'question': 'In the 70s which gangster film won an Oscar as did its sequel?', 'responses': [('The Godfather', [-0.5268001556396484, -0.2131100296974182, -0.40481996536254883], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Godfather', [-0.5268001556396484, -0.2131100296974182, -0.40481996536254883], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goodfellas', [-2.6518001556396484, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bonnie and Clyde', [-2.5268001556396484, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mean Streets', [-2.1518001556396484, -0.16972702741622925, -0.536649227142334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scarface', [-2.2768001556396484, 0.0, -3.5875585079193115], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Godfather', [-0.5268001556396484, -0.2131100296974182, -0.40481996536254883], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mean streets (', [-2.1518001556396484, -1.857227087020874, -3.047640323638916], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goodfellas', [-2.6518001556396484, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scarface', [-2.2768001556396484, 0.0, -0.3375585675239563], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Godfather', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576458, 'reference': 'The Godfather'}

Key: 319507718151974519870935866782538713614
Value: {'question': 'Geoffrey Rush won an Oscar for Shine, as what type of musician?', 'responses': [('Composer', [-3.185810089111328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Conductor', [-3.685810089111328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Violinist', [-1.3108100891113281, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Composer', [-3.185810089111328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Actor', [-4.060810089111328, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clarinet', [-4.310810089111328, -0.9576303362846375], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Violinist', [-1.3108100891113281, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Composer', [-3.185810089111328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Composer', [-3.185810089111328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Violinist', [-1.3108100891113281, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Composer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Pianist'}

Key: 222873378786122491790410676528344001999
Value: {'question': 'For which film about a Scottish hero did Mel Gibson win his first Oscars for Best Picture and Best Director?', 'responses': [('Braveheart', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Braveheart', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Braveheart', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Braveheart', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Braveheart', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Braveheart', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Braveheart', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Braveheart', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Braveheart', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Braveheart', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Braveheart', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Braveheart'}

Key: 250393204917180910466455365221920901439
Value: {'question': 'Who got her first big break in Grease 2?', 'responses': [('Jeff Conaway', [-3.7731711864471436, -0.03287896513938904, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michelle Pfeiffer', [-1.4606711864471436, -0.04170333594083786, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stockard Channing', [-0.6481712460517883, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michelle Pfeiffer', [-1.4606711864471436, -0.04170333594083786, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stockard Channing', [-0.6481712460517883, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Preston', [-2.2731711864471436, -0.15412969887256622, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kelly Preston', [-2.2731711864471436, -0.15412969887256622, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michelle Pfeiffer', [-1.4606711864471436, -0.04170333594083786, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michelle Pfeiffer', [-1.4606711864471436, -0.04170333594083786, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Didi Conn', [-3.0231711864471436, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jeff Conaway', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': 'Michelle Pfeiffer'}

Key: 228644694517853043715450857235491396773
Value: {'question': "Who played Charlie Chaplin in Richard Attenborough's 1992 film?", 'responses': [('Robert Downey Sr', [-0.26148930191993713, 0.0, -3.063703775405884], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Downey', [-0.26148930191993713, 0.0, -3.313703775405884], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Downey Jr', [-0.26148930191993713, 0.0, -0.43870386481285095], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charlie Chaplin', [-1.8864892721176147, 0.0, -0.04631420224905014], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Downey Jr', [-0.26148930191993713, 0.0, -0.43870386481285095], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Downey Jr', [-0.26148930191993713, 0.0, -0.43870386481285095], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Downey Jr', [-0.26148930191993713, 0.0, -0.43870386481285095], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Downey J', [-0.26148930191993713, 0.0, -1.6887038946151733], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Downey Jr', [-0.26148930191993713, 0.0, -0.43870386481285095], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Downey Jr', [-0.26148930191993713, 0.0, -0.43870386481285095], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Robert Downey Sr', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Robert Downey Jr'}

Key: 263063963969486152023531007900433953384
Value: {'question': 'Which star of Gypsy and West Side Story married Robert Wagner twice?', 'responses': [('Natalie Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Wood', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Natalie Wood', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Natalie Wood'}

Key: 230481410914765137708934977944400302320
Value: {'question': 'Which lyricist who has worked with Elton John and Andrew Lloyd Webber won an award for A Whole New World from Aladdin?', 'responses': [('Tim Rice', [-0.05444979667663574, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Rice', [-0.05444979667663574, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Rice', [-0.05444979667663574, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Rice', [-0.05444979667663574, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Rice', [-0.05444979667663574, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Rice', [-0.05444979667663574, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Rice', [-0.05444979667663574, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Rice', [-0.05444979667663574, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Rice', [-0.05444979667663574, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Rice', [-0.05444979667663574, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tim Rice', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Tim Rice'}

Key: 35800684554702776638601991533470003619
Value: {'question': 'Raindrops Keep Falling On My Head was an Oscar winner from which movie with Robert Redford & Paul Newman?', 'responses': [('Butch Cassidy and The Sundance Kid', [0.0, 0.0, -0.680269718170166, -2.0176751613616943, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Butch Cassidy And The Sundance Kid', [0.0, 0.0, -1.680269718170166, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Butch Cassidy And The Sundance Kid', [0.0, 0.0, -1.680269718170166, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Butch Cassidy & The Sundance Kid', [0.0, 0.0, -1.180269718170166, -0.38687101006507874, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Butch Cassidy & The Sundance Kid', [0.0, 0.0, -1.180269718170166, -0.38687101006507874, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Butch Cassidy And The Sundance Kid', [0.0, 0.0, -1.680269718170166, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Butch Cassidy & The Sundance Kid', [0.0, 0.0, -1.180269718170166, -0.38687101006507874, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Butch Cassidy And The Sundance Kid', [0.0, 0.0, -1.680269718170166, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Butch Cassidy and the Sundance Kid', [0.0, 0.0, -0.680269718170166, -0.14267508685588837, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Butch Cassidy and the Sundance Kid', [0.0, 0.0, -0.680269718170166, -0.14267508685588837, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Butch Cassidy and The Sundance Kid', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Butch Cassidy and the Sundance Kid'}

Key: 215523095804057018287175369905776468383
Value: {'question': 'The multi-Oscar winning The Deer Hunter was about steelworkers who went to fight where?', 'responses': [('Vietnam', [-0.12715817987918854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vietnam', [-0.12715817987918854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vietnam', [-0.12715817987918854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vietnam', [-0.12715817987918854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vietnam', [-0.12715817987918854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vietnam', [-0.12715817987918854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vietnam', [-0.12715817987918854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vietnam', [-0.12715817987918854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vietnam', [-0.12715817987918854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vietnam', [-0.12715817987918854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Vietnam', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Vietnam'}

Key: 227207148528915284416503193455483773526
Value: {'question': 'Which red-haired actress had the Margarita cocktail named after her as her real name was Margarita Cansino?', 'responses': [('Rita Hayworth', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rita Hayworth', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rita Hayworth', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rita Hayworth', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rita Hayworth', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rita Hayworth', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rita Hayworth', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rita Hayworth', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rita Hayworth', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rita Hayworth', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rita Hayworth', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Rita Hayworth'}

Key: 204834951315269255227672256584450983570
Value: {'question': 'Who wrote the lyrics for the song form Notting Hill sung by Elvis Costello?', 'responses': [('Steve Division', [-4.50162410736084, -4.351433753967285], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mike McCartney', [-4.34537410736084, -4.1221089363098145], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kirsty', [-3.68912410736084, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nick Lowe', [-1.6266239881515503, -0.21644209325313568], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Hugh', [-4.81412410736084, -4.406562805175781], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sting', [-3.75162410736084, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hugh Wheeler', [-2.59537410736084, -3.308100938796997], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Thomson', [-2.06412410736084, -4.43359899520874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul McCartney', [-2.12662410736084, -0.27762570977211], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mick Jagger', [-3.68912410736084, -1.1790062189102173], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Steve Division', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Herbert Kretzmer'}

Key: 186335519046111616002128583454937018295
Value: {'question': 'In what year does Demolition Man take place?', 'responses': [('2032', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2032', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2032', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2032', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2032', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2032', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2032', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2032', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2032', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2032', [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '2032', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '2032'}

Key: 289237682560058761284691342022687291952
Value: {'question': 'Who played a character based on Bob Fosse in a 1979 Oscar winning film?', 'responses': [('Jessica Tandy', [-2.912384271621704, -2.4069128036499023, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liza Minnelli', [-0.4436342120170593, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Caine', [-2.068634271621704, -0.25693586468696594, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liza Minnelli', [-0.4436342120170593, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liza Minnelli', [-0.4436342120170593, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liza Minnelli', [-0.4436342120170593, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liza Minnelli', [-0.4436342120170593, 0.0, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jessica Lange', [-2.912384271621704, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liza Minelli', [-0.4436342120170593, 0.0, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jessica Lange', [-2.912384271621704, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jessica Tandy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452238, 'reference': 'Roy Scheider'}

Key: 15025509451898016297304562203388356682
Value: {'question': 'Where in Europe was much of Evita filmed?', 'responses': [('Spain', [-1.0037610530853271, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-1.1287610530853271, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.0037610530853271, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-1.1287610530853271, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.0037610530853271, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-1.0037610530853271, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South America', [-3.941261053085327, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madrid', [-3.128761053085327, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-1.1287610530853271, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-1.1287610530853271, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Spain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'Hungary'}

Key: 41370411310778542368329170865707767684
Value: {'question': 'What was the name of the butler in The Rocky Horror Picture Show?', 'responses': [('Riff Raff', [-0.22049905359745026, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Riff Raff', [-0.22049905359745026, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank N Furter', [-1.845499038696289, -0.7949058413505554, -0.06993623077869415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Riff Raff', [-0.22049905359745026, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Riff Raff', [-0.22049905359745026, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank N Furter', [-1.845499038696289, -0.7949058413505554, -0.06993623077869415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Riff Raff', [-0.22049905359745026, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Riff Raff', [-0.22049905359745026, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Riff Raff', [-0.22049905359745026, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Riff Raff', [-0.22049905359745026, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Riff Raff', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Riff Raff'}

Key: 118052892956750476522028071660716068990
Value: {'question': 'What was the real first name of the silent Marx Brother?', 'responses': [('Julius', [-1.1445738077163696, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julius', [-1.1445738077163696, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph', [-4.01957368850708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eugene', [-3.58207368850708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur', [-2.20707368850708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward', [-4.51957368850708, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mortimer', [-2.51957368850708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leonard', [-3.14457368850708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julius', [-1.1445738077163696, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leopold', [-3.20707368850708, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Julius', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Adolph'}

Key: 219328424507175971359795992293418960642
Value: {'question': "What was Steve Martin's first film?", 'responses': [('The Jerk', [-0.07428312301635742, -0.018720725551247597, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jerk', [-0.07428312301635742, -0.018720725551247597, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great Sport', [-0.07428312301635742, -3.9874706268310547, -2.8182196617126465, -2.0763137340545654], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jerk', [-0.07428312301635742, -0.018720725551247597, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jerk', [-0.07428312301635742, -0.018720725551247597, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jerk', [-0.07428312301635742, -0.018720725551247597, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jerk', [-0.07428312301635742, -0.018720725551247597, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jerk', [-0.07428312301635742, -0.018720725551247597, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jerk', [-0.07428312301635742, -0.018720725551247597, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Jerk', [-0.07428312301635742, -0.018720725551247597, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Jerk', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'The Jerk'}

Key: 54489354640956350161910488901817791685
Value: {'question': 'Which film tells of the exploits of singer Deco Duffe?', 'responses': [('The Life', [-0.9894564151763916, -4.692815780639648], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Great', [-0.9894564151763916, -2.9428157806396484], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Commit', [-0.9894564151763916, -0.8803156614303589], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I'", [-3.8644564151763916, -1.206348180770874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Commit', [-0.9894564151763916, -0.8803156614303589], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Buddy', [-0.9894564151763916, -2.6928157806396484], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Swinging', [-3.1144564151763916, -0.8603919744491577], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Chorus', [-2.7394564151763916, -2.5742015838623047], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fame', [-3.3644564151763916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dirty Dancing', [-3.7394564151763916, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Life', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'The Commitments'}

Key: 148954039744391421530162159140254797123
Value: {'question': 'In which category was Mrs. Doubtfire Oscar-nominated?', 'responses': [('Best Actor', [-0.06196761503815651, -1.1650246381759644], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Comedy/', [-2.811967611312866, -2.004666566848755], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Comedy', [-2.811967611312866, -0.5046665072441101], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Best Actor', [-0.06196761503815651, -1.1650246381759644], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Best actress', [-0.06196761503815651, -3.915024757385254], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Best Screen', [-0.06196761503815651, -4.665024757385254], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Best Actress', [-0.06196761503815651, -2.540024757385254], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Best actress', [-0.06196761503815651, -3.915024757385254], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Best Original', [-0.06196761503815651, -3.165024757385254], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Best Actor', [-0.06196761503815651, -1.1650246381759644], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Best Actor', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811906, 'reference': 'Best Makeup'}

Key: 105745054481154126672594710796948828513
Value: {'question': 'Which musical was Victor Fleming making the same time as he was making Gone With the Wind?', 'responses': [('Showboat', [-1.3350697755813599, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Showboat', [-1.3350697755813599, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.5850697755813599, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Show Boat', [-1.3350697755813599, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anything Goes', [-4.08506965637207, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Show Boat', [-1.3350697755813599, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma!', [-1.5850697755813599, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Show Boat', [-1.3350697755813599, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Meet Me', [-4.83506965637207, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-1.5850697755813599, -0.575939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Showboat', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'The Wizard of Oz'}

Key: 317450646200840117427415519713091593819
Value: {'question': 'Which Club featured in cabaret?', 'responses': [('The Pink Panther', [-0.2714356780052185, -3.899980306625366, -0.4297868311405182], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Crazy Gang', [-0.2714356780052185, -1.8999803066253662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Moulin Rouge', [-3.1464357376098633, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Moulin Rouge', [-3.1464357376098633, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Crazy Gang', [-0.2714356780052185, -1.8999803066253662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West End', [-4.146435737609863, 0.0, -0.24801413714885712], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Crazy Gang', [-4.271435737609863, -0.22787097096443176, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Moulin Rouge', [-3.1464357376098633, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Les Boules', [-3.8964357376098633, -3.1407370567321777, -1.3356248140335083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pink Panther', [-0.2714356780052185, -3.899980306625366, -0.4297868311405182], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Pink Panther', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811906, 'reference': 'Kit Kat'}

Key: 183656743817973493486538853172702689018
Value: {'question': '"""The corn is as high as an elephant\'s eye is in which musical?"', 'responses': [('Wizard of', [-4.493895530700684, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma', [-2.4938955307006836, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sound', [-0.9938955307006836, -1.099674105644226], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Showboat', [-3.9313955307006836, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greenslee', [-4.743895530700684, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The', [-2.1813955307006836, -0.9719460010528564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alice in', [-4.493895530700684, -1.1368709802627563], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Wizard', [-0.9938955307006836, -1.474674105644226], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sound', [-0.9938955307006836, -1.099674105644226], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("It'", [-4.806395530700684, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wizard of', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Oklahoma'}

Key: 180449023479141146544775233220159678149
Value: {'question': 'What was the name of the orphanage where The Blues Brothers were brought up?', 'responses': [('The Home for Wayward', [-0.6609188318252563, -1.563711166381836, -0.6588897109031677, -0.17344503104686737, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The House of Blues', [-0.6609188318252563, -1.438711166381836, -0.1602240949869156, -1.7588410377502441, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('House of the Good Shepherd', [-3.035918712615967, 0.0, -1.2153183221817017, -1.4351387023925781, -0.08129486441612244], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("St Paul's Orphan", [-2.067168712615967, -3.7018635272979736, -0.3233112096786499, 0.0, -1.444994330406189], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('House of the Blues', [-3.035918712615967, 0.0, -1.2153183221817017, -1.4351387023925781, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("The Little Flower Children'", [-0.6609188318252563, -3.376211166381836, -1.2018378973007202, -2.3352482318878174, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Home of the Innoc', [-0.6609188318252563, -1.563711166381836, -1.9088897705078125, -0.03577728569507599, -2.0075764656066895], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The House of Blues', [-0.6609188318252563, -1.438711166381836, -0.1602240949869156, -1.7588410377502441, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("St Monica's", [-2.067168712615967, -4.9674882888793945, 0.0, 0.0, -0.3369077444076538], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Little Sisters of the', [-0.6609188318252563, -3.376211166381836, -0.5690253973007202, -0.2014133334159851, -0.18686267733573914], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Home for Wayward', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Saint Helen of the Blessed Shroud'}

Key: 3078236127318307187906917959366386931
Value: {'question': 'On which film was Three Men and a Baby based?', 'responses': [('Roman Holiday', [-3.917560577392578, -0.051641397178173065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Apartment', [-0.5425606966018677, -1.7125601768493652, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roman Holiday', [-3.917560577392578, -0.051641397178173065, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Odd Couple', [-0.5425606966018677, -2.8688101768493652, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Long Goodbye', [-0.5425606966018677, -4.400060176849365, -0.960112452507019], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Parent Trap', [-0.5425606966018677, -3.0406851768493652, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("It's", [-2.417560577392578, -0.4179159998893738, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("It's", [-2.417560577392578, -0.4179159998893738, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Italian Job', [-0.5425606966018677, -2.3688101768493652, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Apartment', [-0.5425606966018677, -1.7125601768493652, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Roman Holiday', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Trois Hommes et un Couffin'}

Key: 260585621014218516631619705258016043645
Value: {'question': 'What was Xanadu in the title of the film?', 'responses': [('Roller-sk', [-3.7429823875427246, -2.1793901920318604, -0.4396715760231018], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The city where', [-2.1179823875427246, -2.935126781463623, -2.116464853286743], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A theme park', [-0.49298229813575745, -2.0025787353515625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('An ancient city', [-2.3679823875427246, -2.7461702823638916, -1.9120019674301147], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A roller-', [-0.49298229813575745, -2.0025787353515625, -1.0716103315353394], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('a city', [-2.6179823875427246, -2.8426873683929443, -1.4456164836883545], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The name of', [-2.1179823875427246, -1.4351266622543335, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('a floating restaurant', [-2.6179823875427246, -4.342687606811523, -1.45619797706604], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roller Disco', [-3.7429823875427246, -1.5543901920318604, -0.04969615116715431], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The first song', [-2.1179823875427246, -2.560126781463623, -4.049165725708008], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Roller-sk', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Roller disco'}

Key: 204010116900303679044900376755149652496
Value: {'question': 'Whose poems returned to the bestsellers list after Four Weddings and a Funeral?', 'responses': [('PG Wode', [-2.3690505027770996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('W.H', [-2.4628005027770996, -0.3273595869541168, -0.5835072994232178], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jane Austen', [-2.0565505027770996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('W. Somerset', [-2.4628005027770996, -0.3273595869541168, -2.3960072994232178], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jane Austen', [-2.0565505027770996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('P G W', [-4.4159255027771, -1.3132617473602295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('E. M', [-3.2128005027770996, -0.20442330837249756, -1.1063796281814575], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jane Austen', [-2.0565505027770996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anthony Powell', [-3.5565505027770996, -0.45119455456733704, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('W.H', [-2.4628005027770996, -0.3273595869541168, -0.5835072994232178], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'PG Wode', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696344, 'reference': 'W. H. Auden'}

Key: 154984775672685409967745727000541886035
Value: {'question': "Who was the voice of O'Malley in The Aristocats?", 'responses': [('Phil Harris', [-0.6479976177215576, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Harris', [-0.6479976177215576, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Harris', [-0.6479976177215576, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dick Van Dyke', [-3.8179194927215576, -0.08538275212049484, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Harris', [-0.6479976177215576, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Harris', [-0.6479976177215576, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edan Henderson', [-3.8784663677215576, -0.690331220626831, -1.649619221687317], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Harris', [-0.6479976177215576, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dom De Lu', [-3.6411616802215576, 0.0, -2.578889846801758], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Harris', [-0.6479976177215576, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Phil Harris', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Phil Harris'}

Key: 201416143322518266619751984725151616523
Value: {'question': "What was the name of Bob Fosse's character in All That Jazz?", 'responses': [('Chicago', [-3.4424562454223633, -0.3241741955280304], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Gideon', [-0.6299563646316528, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Gideon', [-0.6299563646316528, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Gideon', [-0.6299563646316528, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Gideon', [-0.6299563646316528, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Gideon', [-0.6299563646316528, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Gideon', [-0.6299563646316528, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-3.4424562454223633, -0.3241741955280304], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Gideon', [-0.6299563646316528, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dan', [-3.9737062454223633, -0.2663373649120331], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chicago', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Joe Gideon'}

Key: 123802339789078927649646885341711851194
Value: {'question': 'How old was Macaulay Culkin when he was cast for his role in Home Alone?', 'responses': [('9', [-0.06993623077869415, -1.5371891260147095, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8 years', [-0.06993623077869415, -1.1621891260147095, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8', [-0.06993623077869415, -1.1621891260147095, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10', [-0.06993623077869415, -2.66218900680542, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('7 years', [-0.06993623077869415, -1.1621891260147095, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.06993623077869415, -2.41218900680542, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8 years', [-0.06993623077869415, -1.1621891260147095, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.06993623077869415, -2.41218900680542, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.06993623077869415, -1.5371891260147095, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8', [-0.06993623077869415, -1.1621891260147095, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '9', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460894, 'reference': 'Nine'}

Key: 187570266386640701389117600716438135419
Value: {'question': 'In which 70s musical did Paul Michael Glaser star?', 'responses': [('Grease', [-0.7608579397201538, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rocky Horror', [-2.8858580589294434, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grease', [-0.7608579397201538, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grease', [-0.7608579397201538, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sgt.', [-3.5108580589294434, -0.890923798084259], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jesus Christ', [-2.3858580589294434, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Smokey and', [-4.104608058929443, -0.12760286033153534], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rocky', [-2.8858580589294434, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saturday Night', [-2.1358580589294434, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saturday Night', [-2.1358580589294434, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Grease', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Fiddler on the Roof'}

Key: 280209013005884035689445745099840918698
Value: {'question': '"In Private ""Benjamin, what is the name of ""Benjamin\'s captain?"', 'responses': [('Billy', [-4.070765495300293, -1.1481691598892212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thomas Jefferson', [-4.195765495300293, -1.350417137145996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lieutenant Dan', [-2.820765733718872, -1.9270511865615845], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('J.', [-4.070765495300293, -0.2823457419872284], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr.', [-2.070765733718872, -0.17691117525100708], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cpl', [-4.320765495300293, -0.9793812036514282], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Benjamin Franklin', [-2.820765733718872, -1.6468627452850342], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain Mac', [-2.695765733718872, -4.227268695831299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thomas', [-4.195765495300293, -0.7254171371459961], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ensign Pulver', [-4.070765495300293, -0.949317216873169], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Billy', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Lewis'}

Key: 145472408998455709585230623307245518783
Value: {'question': 'How many different hats does Madonna wear in Evita?', 'responses': [('4', [-0.22046013176441193, -2.0286078453063965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three', [-3.0954601764678955, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.22046013176441193, -1.1536078453063965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.22046013176441193, -2.5286078453063965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.22046013176441193, -1.7786078453063965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.22046013176441193, -2.0286078453063965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.22046013176441193, -2.0286078453063965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.22046013176441193, -1.1536078453063965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.22046013176441193, -1.1536078453063965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.22046013176441193, -1.1536078453063965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '4', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': '39'}

Key: 189535401650905105383119959334717030269
Value: {'question': 'A Little Night Music was based on which non-musical film?', 'responses': [('Rosmers', [-4.65577507019043, -0.2467574179172516], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pleasure', [-2.187025308609009, -2.5107498168945312], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Month', [-2.358900308609009, -3.4266445636749268], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fanny', [-1.1245253086090088, -0.6587026715278625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Woman', [-2.358900308609009, -1.8172695636749268], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fanny and', [-1.1245253086090088, -0.7837026715278625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three Coins', [-4.15577507019043, -0.3376745581626892], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Some Like', [-3.577650308609009, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Smiles of', [-1.9682753086090088, -0.29683318734169006], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Phantom', [-2.187025308609009, -1.8974686861038208], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rosmers', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Smiles of a Summer Night'}

Key: 128120896960106829861439850252321422148
Value: {'question': "What was the name of the high school in Porky's?", 'responses': [('Lincoln High', [-4.609879493713379, -0.06337224692106247, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pork Chop', [-2.6098792552948, -1.3554264307022095, -1.443774938583374], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Springwood', [-4.422379493713379, -0.2722019851207733, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pork Chop', [-2.6098792552948, -1.3554264307022095, -1.443774938583374], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Porkapaloo', [-1.6723792552947998, -3.697132110595703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("O'Malley", [-4.672379493713379, -0.8075123429298401, -1.853429913520813], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mount Palomar', [-4.359879493713379, -4.687148094177246, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastern High School', [-4.672379493713379, -0.32666444778442383, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Porky'", [-1.6723792552947998, -0.5096321105957031, -0.2802042067050934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eastern State', [-4.672379493713379, -2.826664447784424, -0.21972815692424774], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lincoln High', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Angel Beach'}

Key: 306571902059663887524771622283464045848
Value: {'question': "Who was Louise Lasser's husband when she stared with him in What's Up Tiger Lily?", 'responses': [('Alan Alda', [-0.5163207054138184, -0.7088942527770996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Allen', [-3.3014769554138184, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Arkin', [-0.5163207054138184, -0.6776442527770996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Arkin', [-0.5163207054138184, -0.6776442527770996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Alda', [-0.5163207054138184, -0.7088942527770996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Alda', [-0.5163207054138184, -0.7088942527770996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Alda', [-0.5163207054138184, -0.7088942527770996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Arkin', [-0.5163207054138184, -0.6776442527770996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Simon', [-4.223107814788818, -1.7943358421325684, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alan Alda', [-0.5163207054138184, -0.7088942527770996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alan Alda', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Woody Allen'}

Key: 60371733084682440262970951788377883040
Value: {'question': "What was Tootsie's name before he turned into Tootsie?", 'responses': [('Walter', [-2.883974552154541, -0.1859167367219925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mortimer', [-3.946474552154541, -0.6583226323127747], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bert', [-3.258974552154541, -0.3218316435813904], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter', [-2.883974552154541, -0.1859167367219925], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oscar', [-1.633974552154541, -0.2329246997833252], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ernest', [-4.196474552154541, -0.5892127752304077], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charlie', [-3.946474552154541, -0.07090272009372711], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dorothy', [-2.758974552154541, -0.45715516805648804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dorothy', [-2.758974552154541, -0.45715516805648804], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tinky', [-4.383974552154541, -3.6839280128479004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Walter', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Michael Dorsey'}

Key: 77797582147596325628533789907354060750
Value: {'question': 'What was the first sequel to The Pink Panther called?', 'responses': [('The Return of the Pink Panther', [-0.5850321650505066, -0.6931471824645996, -0.12692804634571075, -0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Return of the Pink Panther', [-0.5850321650505066, -0.6931471824645996, -0.12692804634571075, -0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Revenge of the Pink Panther', [-1.3350322246551514, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pink Panther Strikes Again', [-0.5850321650505066, -0.6931471824645996, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Return of The Pink Panther', [-0.5850321650505066, -0.6931471824645996, -0.12692804634571075, -2.753335475921631, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Return of the Pink Panther', [-0.5850321650505066, -0.6931471824645996, -0.12692804634571075, -0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Shot in the Dark', [-2.4600322246551514, -0.20718736946582794, -0.2383444905281067, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Return of the Pink Panther', [-0.5850321650505066, -0.6931471824645996, -0.12692804634571075, -0.0658353641629219, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pink Panther Strikes Again', [-0.5850321650505066, -0.6931471824645996, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Revenge of the Pink Panther', [-1.3350322246551514, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Return of the Pink Panther', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'A Shot in the Dark'}

Key: 73225257939495704655048165106614440557
Value: {'question': 'Who played the title role in the film version of Jesus Christ Superstar?', 'responses': [('Carl Anderson', [-0.5231232643127441, -0.344296395778656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ted Neeley', [-0.8981232643127441, 0.0, -0.06339149177074432], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ted Neeley', [-0.8981232643127441, 0.0, -0.06339149177074432], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ted Neeley', [-0.8981232643127441, 0.0, -0.06339149177074432], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Anderson', [-0.5231232643127441, -0.344296395778656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Davis', [-0.5231232643127441, -3.328671455383301, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ted Neeley', [-0.8981232643127441, 0.0, -0.06339149177074432], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ted Neeley', [-0.8981232643127441, 0.0, -0.06339149177074432], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ted Neeley', [-0.8981232643127441, 0.0, -0.06339149177074432], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Anderson', [-0.5231232643127441, -0.344296395778656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Carl Anderson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Ted Neely'}

Key: 27839636998395338742518966904857908957
Value: {'question': 'What was the name of the sax player in New York New York who fell for Francine?', 'responses': [('Nick Fal', [-4.618664741516113, -1.06754469871521], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul An', [-3.4936647415161133, -1.4296033382415771], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rusty Draper', [-4.595227241516113, -4.1001129150390625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frankie Val', [-4.517102241516113, -0.2294861227273941], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nick De', [-4.618664741516113, -2.73160719871521], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joey', [-3.4155397415161133, -0.9343634843826294], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cy Coleman', [-3.8999147415161133, -0.2981507480144501], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johnny', [-3.1655397415161133], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Johnny Fontaine', [-3.1655397415161133, -1.6453064680099487], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tony Bennett', [-3.0561647415161133, -1.0561602115631104], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nick Fal', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Jimmy'}

Key: 221770813689904716062768582204101177145
Value: {'question': 'Who was the leader of the band that appeared in The Brady Bunch Movie?', 'responses': [('John Stamos', [-1.993971824645996, -0.13936534523963928, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Tork', [-3.618971824645996, -0.9073226451873779, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Williams', [-2.431471824645996, -0.233070969581604, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beach Boys', [-1.618971824645996, -2.781231641769409, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Weird Al Yank', [-2.181471824645996, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Williams', [-2.431471824645996, -0.233070969581604, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Feinstein', [-4.056471824645996, -4.936136722564697, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lisa Kudrow', [-4.243971824645996, -1.4072083234786987, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robbie Rotten', [-4.368971824645996, -1.3248778581619263, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Pantoliano', [-3.931471824645996, -2.5174319744110107, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Stamos', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Davy Jones'}

Key: 148318741951055189822991020259775177902
Value: {'question': '"In which film was chorus girl Peggy Sawyer told to ""come back a star?"""', 'responses': [('"42nd Street', [-2.7313389778137207, -0.051373958587646484, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('42nd Street', [-0.8563390374183655, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Singin' in the", [-3.2313389778137207, 0.0, -0.11282224208116531, -0.1902991682291031, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("''42nd Street", [-3.9188389778137207, -0.023245446383953094, 0.0, 0.0, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('42nd Street', [-0.8563390374183655, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('42nd Street', [-0.8563390374183655, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('42nd Street', [-0.8563390374183655, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"42nd Street', [-2.7313389778137207, -0.051373958587646484, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Annie Get Your Gun', [-2.2938389778137207, -0.8359143733978271, -0.12692804634571075, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Singing in the Rain', [-2.3563389778137207, -0.11282224208116531, 0.0, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '"42nd Street', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': '42nd Street'}

Key: 171371433861023078220846744234994852978
Value: {'question': 'What are the last lines of My Fair Lady?', 'responses': [("I've grown accustomed to", [-1.5953811407089233, -0.20641660690307617, -0.432855486869812, -0.11967968195676804, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The rain in Spain falls mainly', [-3.157881259918213, 0.0, 0.0, 0.0, -0.40441542863845825, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('With a little bit of luck', [-1.3453811407089233, 0.0, -0.39380598068237305, -1.30759596824646, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('With a little luck I could', [-1.3453811407089233, 0.0, -0.39380598068237305, -0.6825960278511047, -2.4185709953308105, -3.223484754562378], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('With a little bit of luck', [-1.3453811407089233, 0.0, -0.39380598068237305, -1.30759596824646, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('With a little luck and a', [-1.3453811407089233, 0.0, -0.39380598068237305, -0.6825960278511047, -0.9185709357261658, -0.10406550765037537], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('With a little luck and a', [-1.3453811407089233, 0.0, -0.39380598068237305, -0.6825960278511047, -0.9185709357261658, -0.10406550765037537], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I'm going to make", [-1.5953811407089233, -0.20641660690307617, -1.432855486869812, -1.3907393217086792, 0.0, -1.050544023513794], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Good night and good luck', [-4.345381259918213, -0.8973807096481323, -2.795466184616089, -0.41229450702667236, 0.0, -0.4160032868385315], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('With a smile and a sparkle', [-1.3453811407089233, 0.0, -1.954352855682373, -0.06993623077869415, 0.0, -3.12028431892395], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "I've grown accustomed to", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Where the devil are my slippers?'}

Key: 325472350702379115449469852761439239274
Value: {'question': 'In The Muppet Movie what was the name of the restaurant Doc Hopper wanted to open?', 'responses': [('Hot Dog Delight', [-4.671144962310791, -1.6292028427124023, -4.694891452789307], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Waldorf and', [-0.796144962310791, -4.503647327423096, -5.039323329925537], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Trash Heap', [-0.796144962310791, -3.4411473274230957, -0.3457332253456116], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Swedish Massage', [-5.046144962310791, -1.4135154485702515, -0.12676644325256348], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Muppet', [-0.796144962310791, -1.4411473274230957, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("The Dragon'", [-0.796144962310791, -4.691147327423096, -1.182076096534729], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hoppers Diner', [-3.296144962310791, -0.24107390642166138, -1.5885863304138184], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweetums', [-3.796144962310791, -0.08113472908735275, -0.2743665277957916], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Chicken and', [-0.796144962310791, -3.1286473274230957, -3.213271379470825], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Muppet House', [-3.046144962310791, -0.07888974994421005, -1.8083229064941406], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hot Dog Delight', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': "Frogs' Legs"}

Key: 77462341406499062308085732292674081406
Value: {'question': 'Who directed The Cable Guy?', 'responses': [('Ben Stiller', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ben Stiller', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ben Stiller', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ben Stiller', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ben Stiller', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ben Stiller', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ben Stiller', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ben Stiller', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ben Stiller', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ben Stiller', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ben Stiller', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Ben Stiller'}

Key: 210175818371129858337329789453112029886
Value: {'question': 'What type of drug is Sherman Klump trying to perfect in The Nutty Professor?', 'responses': [('A drug', [-1.1335415840148926, -1.37972891330719], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Memory Loss', [-5.071041584014893, -4.113950252532959], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A weight', [-1.1335415840148926, -2.1297287940979004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Love', [-2.2585415840148926, -2.8374054431915283], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A serum', [-1.1335415840148926, -3.8797287940979004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The In', [-2.2585415840148926, -3.3374054431915283], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A drug', [-1.1335415840148926, -1.37972891330719], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Human', [-2.2585415840148926, -4.712405204772949], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A diet', [-1.1335415840148926, -3.7547287940979004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Viagra', [-2.8835415840148926, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A drug', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Weight loss'}

Key: 325245700567819931633985959866413936345
Value: {'question': 'Which First Lady had to give evidence over the Whitewater scandal?', 'responses': [('Hillary Clinton', [0.0, -0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Rodham', [0.0, -2.929882287979126, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Rodham', [0.0, -2.929882287979126, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [0.0, -0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [0.0, -0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [0.0, -0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [0.0, -0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Rodham', [0.0, -2.929882287979126, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [0.0, -0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hillary Clinton', [0.0, -0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hillary Clinton', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Hillary Clinton'}

Key: 31796960568925491802146723485739012976
Value: {'question': '"About which British politician did Francois Mitterrand say, ""She has the mouth of Marilyn Monroe and the eyes of Caligula?"""', 'responses': [('Margaret Thatcher', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Margaret Thatcher', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Margaret Thatcher'}

Key: 163492136525924455836053948349936550175
Value: {'question': 'Nigel Short was the youngest champion in which game in 1984?', 'responses': [('Chess', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chess', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chess', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chess', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chess', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chess', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chess', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chess', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chess', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chess', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chess', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Chess'}

Key: 132939346923630479577184929159064910495
Value: {'question': "What did Woody Allen call his son as a tribute to Louis 'Satchmo' Armstrong?", 'responses': [('Alphonse', [-3.2604470252990723, -0.14163072407245636], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody Allen', [-2.2604470252990723, -1.6624125242233276], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Woody', [-2.2604470252990723, -1.4124125242233276], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sebastian', [-3.1354470252990723, -0.08801546692848206], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackson', [-4.510447025299072, -0.13900677859783173], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miracle', [-2.7604470252990723, -0.49483978748321533], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ronan O', [-1.9479470252990723, -3.0527138710021973], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ziggy', [-2.6979470252990723, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackson', [-4.510447025299072, -0.13900677859783173], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Quincy', [-2.5729470252990723, -0.08995520323514938], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Alphonse', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Satchel'}

Key: 48384002321327424543030701456515682865
Value: {'question': 'Which princess took out an injunction against a photographer after he tried to take photographs of her?', 'responses': [('Sarah Ferguson', [-2.812516689300537, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Camilla Parker', [-3.562516689300537, -0.5239095091819763], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Princess Diana', [-1.062516689300537, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kate Middleton', [-2.562516689300537, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kate Middleton', [-2.562516689300537, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zara Phillips', [-4.687516689300537, -0.4908851087093353], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diana,', [-1.062516689300537, -1.2334452867507935], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Princess Diana', [-1.062516689300537, -0.08958839625120163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diana', [-1.062516689300537, -0.6084452867507935], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diana,', [-1.062516689300537, -1.2334452867507935], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sarah Ferguson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Princess Diana'}

Key: 209531180515739489230267095206735113186
Value: {'question': 'In which decade did Berry Gordy set up Tamla Motown?', 'responses': [('1950s', [-0.07888974994421005, 0.0, 0.0, -0.1797446459531784, 0.0, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [-0.07888974994421005, 0.0, 0.0, -0.1797446459531784, 0.0, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [-0.07888974994421005, 0.0, 0.0, -0.1797446459531784, 0.0, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [-0.07888974994421005, 0.0, 0.0, -0.1797446459531784, 0.0, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [-0.07888974994421005, 0.0, 0.0, -0.1797446459531784, 0.0, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [-0.07888974994421005, 0.0, 0.0, -0.1797446459531784, 0.0, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [-0.07888974994421005, 0.0, 0.0, -0.1797446459531784, 0.0, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1950s', [-0.07888974994421005, 0.0, 0.0, -0.1797446459531784, 0.0, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [-0.07888974994421005, 0.0, 0.0, -1.8047446012496948, 0.0, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [-0.07888974994421005, 0.0, 0.0, -1.8047446012496948, 0.0, -0.14267508685588837, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1950s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': '1950s'}

Key: 102795219783475430944384241670962281077
Value: {'question': 'In 1984 how was the baby who received the heart of a baboon known?', 'responses': [('The Baby from Bristol', [-2.1578280925750732, -1.4297782182693481, -2.4091079235076904, -1.03096342086792], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Fifi', [-0.34532803297042847, -0.26719236373901367, -1.339718222618103, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Terry Fox's", [-4.251577854156494, -0.6029750108718872, -2.33876633644104, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Fifi', [-0.34532803297042847, -0.26719236373901367, -1.339718222618103, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Fae', [-0.34532803297042847, -0.26719236373901367, -1.370968222618103, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Fifi', [-0.34532803297042847, -0.26719236373901367, -1.339718222618103, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Folabi', [-0.34532803297042847, -3.9683642387390137, -1.5605581998825073, -2.000789165496826], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Jane Doe', [-0.34532803297042847, -4.442973613739014, -0.8615548014640808, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Fifi', [-0.34532803297042847, -0.26719236373901367, -1.339718222618103, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Fae', [-0.34532803297042847, -0.26719236373901367, -1.370968222618103, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Baby from Bristol', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Baby Fae'}

Key: 180325797710918572039218322643333996032
Value: {'question': 'What was the name of NATO spokesman in the 1999 Kosovo crisis?', 'responses': [('Lord Robertson', [-3.1557931900024414, -0.11927875876426697, -0.0944129079580307], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Slobodan', [-3.8432931900024414, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Robertson', [-2.1557931900024414, -0.15436877310276031, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paddy Ashdown', [-4.280793190002441, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jamie Shea', [-1.8432930707931519, -0.8123563528060913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Robertson', [-2.1557931900024414, -0.15436877310276031, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brent Scow', [-3.1557931900024414, -0.029295900836586952, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jamie Shea', [-1.8432930707931519, -0.8123563528060913, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'Mister Sof", [-4.093293190002441, -4.536465644836426, -2.456732749938965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Miles', [-3.5620431900024414, -3.517874002456665, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Lord Robertson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Jamie Shea'}

Key: 72600932305370345966526742466598130776
Value: {'question': 'Which daughter of the last Tsar of Russia was said to have escaped to America?', 'responses': [('Anastasia', [-0.2992839515209198, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maria Pavlov', [-3.049283981323242, -4.136798858642578], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anastasia', [-0.2992839515209198, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anastasia', [-0.2992839515209198, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anastasia', [-0.2992839515209198, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Princess X', [-3.924283981323242, -2.1246767044067383], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anastasia', [-0.2992839515209198, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grand Duchess', [-3.674283981323242, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anastasia', [-0.2992839515209198, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grand Duchess', [-3.674283981323242, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Anastasia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452238, 'reference': 'Anastasia'}

Key: 321052014583718480451199098373628441391
Value: {'question': "Which soul singer is Whitney Houston's god mother?", 'responses': [('Aretha Franklin', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aretha Franklin', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aretha Franklin', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aretha Franklin', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aretha Franklin', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aretha Franklin', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aretha Franklin', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aretha Franklin', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aretha Franklin', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aretha Franklin', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Aretha Franklin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Aretha Franklin'}

Key: 255947787937869339888356035527867597424
Value: {'question': 'Which Russian-born American wrote I, Robot?', 'responses': [('Isaac Asimov', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Isaac Asimov', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Isaac Asimov', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Isaac Asimov', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Isaac Asimov', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Isaac Asimov', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Isaac Asimov', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Isaac Asimov', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Isaac Asimov', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Isaac Asimov', [0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Isaac Asimov', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Isaac Asimov'}

Key: 52210197809789199168257965349722513156
Value: {'question': 'In which state were Bonnie & Clyde killed?', 'responses': [('Louisiana', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louisiana', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louisiana', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louisiana', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louisiana', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louisiana', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louisiana', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Texas', [-2.1269280910491943, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louisiana', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louisiana', [-0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Louisiana', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Louisiana'}

Key: 202889245356546833317931683492514561564
Value: {'question': "Which Biblical name does Boris Becker's older son have?", 'responses': [('Amadeus', [-0.4944998621940613, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amadeus', [-0.4944998621940613, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Noah', [-1.838249921798706, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amadeus', [-0.4944998621940613, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amadeus', [-0.4944998621940613, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amadeus', [-0.4944998621940613, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julian', [-4.494499683380127, -0.06839607656002045], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amadeus', [-0.4944998621940613, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amadeus', [-0.4944998621940613, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Amadeus', [-0.4944998621940613, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Amadeus', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Noah'}

Key: 325860951992907331616374662376650684763
Value: {'question': 'President Kennedy was shot on 22nd November; what day was Lee Harvey Oswald shot?', 'responses': [('Monday,', [-2.845379114151001, -3.3219728469848633], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.22037912905216217, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.22037912905216217, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.22037912905216217, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.22037912905216217, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monday', [-2.845379114151001, -0.19697274267673492], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.22037912905216217, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.22037912905216217, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.22037912905216217, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Friday', [-2.220379114151001, -0.34127315878868103], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Monday,', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530173, 'reference': '24th November'}

Key: 169520609381042843672840789833721832055
Value: {'question': 'Who founded General Motors in 1908?', 'responses': [('William Durant', [-0.042999111115932465, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William C.', [-0.042999111115932465, -1.0537006855010986, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William C.', [-0.042999111115932465, -1.0537006855010986, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Durant', [-0.042999111115932465, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William C Durant', [-0.042999111115932465, -1.0537006855010986, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William C.', [-0.042999111115932465, -1.0537006855010986, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Durant', [-0.042999111115932465, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Durant', [-0.042999111115932465, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Durant', [-0.042999111115932465, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Durant', [-0.042999111115932465, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'William Durant', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6730116670092565, 'reference': 'William C. Durant'}

Key: 232905607558176523323887837170306440513
Value: {'question': 'Nicoletta Mantovani hit the headlines through her relationship with which big figure in the entertainment world?', 'responses': [('Elvis Presley', [-2.647952079772949, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Redford', [-4.772952079772949, -2.132736921310425, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mick Jagger', [-2.397952079772949, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cliff Richard', [-3.272952079772949, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis Presley', [-2.647952079772949, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Sinatra', [-2.397952079772949, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mick Jagger', [-2.397952079772949, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-2.772952079772949, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Andrew', [-3.397952079772949, -2.1802306175231934, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Caine', [-2.647952079772949, -1.6663199663162231, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Elvis Presley', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Luciano Pavarotti'}

Key: 155224192864816856224091244927983277599
Value: {'question': "What was Clive Sinclair's personal transport vehicle called?", 'responses': [('Sinclair C5', [-2.31072735786438, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The C5', [-2.18572735786438, -0.133630633354187, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C5', [-0.3107272982597351, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sinclair C', [-2.18572735786438, -2.8211307525634766, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C5', [-0.3107272982597351, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C5', [-0.3107272982597351, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C5', [-0.3107272982597351, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The C5', [-2.18572735786438, -0.133630633354187, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C5', [-0.3107272982597351, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('C5', [-0.3107272982597351, 0.0, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sinclair C5', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'C5'}

Key: 4947125544153837775681272616730273010
Value: {'question': '"Who designed Posh ""Spice Victoria Adam\'s wedding dress?"', 'responses': [('David Emanuel', [-2.6345953941345215, -0.220712348818779, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Christian Lacroix', [-3.1970953941345215, -0.4477556049823761, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Posh Spice', [-3.9470953941345215, 0.0, -0.836235523223877], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Philip Treacy', [-4.5720953941345215, -0.16653209924697876, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary Katrant', [-4.6970953941345215, -0.06824131309986115, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vivienne Westwood', [-2.3220953941345215, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stewart Parvin', [-4.2595953941345215, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vivienne Westwood', [-2.3220953941345215, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vera Wang', [-2.7595953941345215, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Posh Spice', [-3.9470953941345215, 0.0, -0.836235523223877], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'David Emanuel', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Vera Wang'}

Key: 17314847289257738914080123710145556038
Value: {'question': "Who is Julian Lennon's step-mother?", 'responses': [('Jackie Mason', [-3.526339292526245, -0.5982946157455444, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cynthia Lennon', [-1.7138392925262451, -0.13458658754825592, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cynthia Lennon', [-1.7138392925262451, -0.13458658754825592, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heather Mills', [-1.1513392925262451, 0.0, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cynthia Lennon', [-1.7138392925262451, -0.13458658754825592, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cynthia Lennon', [-1.7138392925262451, -0.13458658754825592, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbara Bach', [-3.495089292526245, -0.1745929718017578, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heather Mills', [-1.1513392925262451, 0.0, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cynthia Powell', [-1.7138392925262451, -2.0720865726470947, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yoko Ono', [-2.307589292526245, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jackie Mason', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Yoko Ono'}

Key: 26349305663868088313543887387713615319
Value: {'question': 'Which American contralto was the first black singe to appear at the Metropolitan Opera?', 'responses': [('Marian Anderson', [-0.2131100296974182, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leontyne', [-1.6506099700927734, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marian Anderson', [-0.2131100296974182, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marian Anderson', [-0.2131100296974182, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leontyne', [-1.6506099700927734, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marian Anderson', [-0.2131100296974182, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marian Anderson', [-0.2131100296974182, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leontyne', [-1.6506099700927734, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marian Anderson', [-0.2131100296974182, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marian Anderson', [-0.2131100296974182, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Marian Anderson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Marian Anderson'}

Key: 168006272161212598969369884791283888527
Value: {'question': 'Which American was the first ever person to retain an Olympic springboard diving title?', 'responses': [('Greg Lougan', [-0.8973503708839417, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bruce Kimball', [-3.678600311279297, -0.044334154576063156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greg Lougan', [-0.8973503708839417, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leta Ste', [-3.709850311279297, -0.7604005932807922, -4.174765586853027], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Dolan', [-2.991100311279297, -0.5526595115661621, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greg Lougan', [-0.8973503708839417, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mike McFarlane', [-3.803600311279297, -4.539480209350586, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greg Lougan', [-0.8973503708839417, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jim Rulon', [-4.116100311279297, -4.479203701019287, -4.6807756423950195], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greg Lougan', [-0.8973503708839417, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Greg Lougan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Greg Louganis'}

Key: 325556372889957446891858965537473062517
Value: {'question': 'Which university did Tony Blair and Bill Clinton both attend in their younger days?', 'responses': [('Oxford', [-0.10382623225450516, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oxford', [-0.10382623225450516, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oxford University', [-0.10382623225450516, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oxford', [-0.10382623225450516, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oxford', [-0.10382623225450516, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oxford', [-0.10382623225450516, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oxford', [-0.10382623225450516, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oxford', [-0.10382623225450516, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The University', [-3.6038262844085693, -0.3248025178909302], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oxford', [-0.10382623225450516, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oxford', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Oxford'}

Key: 170635822384294003643770792123315834435
Value: {'question': "What is the name of Paul and Linda McCartney's only son?", 'responses': [('James McCartney', [-0.07317254692316055, -1.375507116317749], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James', [-0.07317254692316055, -0.500507116317749], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James', [-0.07317254692316055, -0.500507116317749], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sean', [-2.6512975692749023, -0.23443260788917542], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sean', [-2.6512975692749023, -0.23443260788917542], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James', [-0.07317254692316055, -0.500507116317749], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sean', [-2.6512975692749023, -0.23443260788917542], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James', [-0.07317254692316055, -0.500507116317749], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James', [-0.07317254692316055, -0.500507116317749], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James McCartney', [-0.07317254692316055, -1.375507116317749], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'James McCartney', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'James'}

Key: 237655547208995733478566976179920250825
Value: {'question': "Who won the first men's US Tennis Open, in 1968?", 'responses': [('Arthur Ashe', [-0.26460039615631104, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur Ashe', [-0.26460039615631104, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur Ashe', [-0.26460039615631104, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur Ashe', [-0.26460039615631104, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan Smith', [-2.9521002769470215, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur Ashe', [-0.26460039615631104, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan Smith', [-2.9521002769470215, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur Ashe', [-0.26460039615631104, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur Ashe', [-0.26460039615631104, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stan Smith', [-2.9521002769470215, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Arthur Ashe', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Arthur Ash'}

Key: 173183814157306526658842925321924657389
Value: {'question': 'Timothy McVeigh was convicted for which bombing?', 'responses': [('Oklahoma City bombing', [-0.42447182536125183, -0.12971262633800507, -1.036892056465149], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma City', [-0.42447182536125183, -0.12971262633800507, -0.9118920564651489], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Oklahoma City', [-1.1744718551635742, -0.13410340249538422, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Oklahoma City', [-1.1744718551635742, -0.13410340249538422, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The bombing of', [-1.1744718551635742, -3.134103298187256, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Oklahoma City', [-1.1744718551635742, -0.13410340249538422, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Oklahoma City', [-1.1744718551635742, -0.13410340249538422, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma City Bomb', [-0.42447182536125183, -0.12971262633800507, -1.411892056465149], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Oklahoma City', [-1.1744718551635742, -0.13410340249538422, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oklahoma City', [-0.42447182536125183, -0.12971262633800507, -0.9118920564651489], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oklahoma City bombing', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Oklahoma'}

Key: 269938088440111803315532937198413817249
Value: {'question': "Who was Oliver North's secretary during the Irangate scandal?", 'responses': [('Fawn Hall', [-2.4070539474487305, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oliver North', [-3.7664289474487305, -0.044600971043109894, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cathy Masters', [-4.0008039474487305, -3.640010356903076, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sandra Byrd', [-3.7820539474487305, -2.412351608276367, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fawn Hall', [-2.4070539474487305, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paula Cowan', [-3.0398664474487305, -4.9615478515625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lt. Col', [-3.0554914474487305, -0.7740664482116699, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Betsy DeVos', [-1.46174156665802, -1.5740320682525635, -0.624311089515686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Collette Roche', [-3.4851789474487305, -1.6069930791854858, -1.8434866666793823], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wendy Hall', [-4.5008039474487305, -4.527832508087158, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Fawn Hall', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Fawn Hall'}

Key: 321898976469547762041421625554647057301
Value: {'question': 'Which singer married director Blake Edwards?', 'responses': [('Julie Andrews', [-0.6576858162879944, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julie Andrews', [-0.6576858162879944, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julie Andrews', [-0.6576858162879944, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julie Andrews', [-0.6576858162879944, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Cole', [-2.0951857566833496, -0.266189843416214, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Liza Minnelli', [-2.8139357566833496, 0.0, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mia Farrow', [-2.9076857566833496, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Cole', [-2.0951857566833496, -0.266189843416214, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Cole', [-2.0951857566833496, -0.266189843416214, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Cole', [-2.0951857566833496, -0.266189843416214, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Julie Andrews', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.193549604098133, 'reference': 'Julie Andrews'}

Key: 23416820262417583760068163831553487891
Value: {'question': '"What relation was ""Waldorf Astor, who became a British member of Parliament, to US millionaire John Jacob Astor?"', 'responses': [('He was', [-1.4261754751205444, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His grandfather', [-1.8011754751205444, -3.238142728805542], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uncle', [-3.676175594329834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('brother', [-4.301175594329834, -0.22781972587108612], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His daughter', [-1.8011754751205444, -2.488142728805542], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("John'", [-3.051175594329834, -2.5142667293548584], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grandson', [-3.051175594329834, -0.3396430015563965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He was', [-1.4261754751205444, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brother', [-3.676175594329834, -0.18170738220214844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Astor'", [-2.426175594329834, -0.6254702806472778], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'He was', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Great-grandson'}

Key: 287655203014152477533881091786678730790
Value: {'question': 'For which movie did Meryl Streep win her first Oscar?', 'responses': [('Kramer Vs Kramer', [-0.10020658373832703, -1.6004126071929932, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kramer vs Kramer', [-0.10020658373832703, -0.22541262209415436, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kramer vs Kramer', [-0.10020658373832703, -0.22541262209415436, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kramer vs Kramer', [-0.10020658373832703, -0.22541262209415436, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Sophie's Choice", [-2.3502066135406494, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kramer vs Kramer', [-0.10020658373832703, -0.22541262209415436, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kramer Vs Kramer', [-0.10020658373832703, -1.6004126071929932, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kramer vs Kramer', [-0.10020658373832703, -0.22541262209415436, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kramer vs Kramer', [-0.10020658373832703, -0.22541262209415436, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kramer vs Kramer', [-0.10020658373832703, -0.22541262209415436, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kramer Vs Kramer', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Kramer v Kramer'}

Key: 83251823196172088637741456047728799425
Value: {'question': 'In the 1990s Babrak Karmal and Sultan Ali Keshtmond have been Prime Minister in which country?', 'responses': [('Afghanistan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Afghanistan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Afghanistan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Afghanistan'}

Key: 310150541651470983838829199520552430926
Value: {'question': 'Which 60s pop band made an unsuccessful movie called Head?', 'responses': [('Cream', [-4.370248794555664, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Move', [-0.24524860084056854, -1.4701366424560547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Move', [-0.24524860084056854, -1.4701366424560547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Small', [-0.24524860084056854, -2.7201366424560547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The K', [-0.24524860084056854, -2.2201366424560547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Moody', [-0.24524860084056854, -3.2826366424560547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Mon', [-0.24524860084056854, -3.0326366424560547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Move', [-0.24524860084056854, -1.4701366424560547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Move', [-0.24524860084056854, -1.4701366424560547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Who', [-0.24524860084056854, -2.5326366424560547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Cream', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'The Monkees'}

Key: 335270327357796359625077896974769544855
Value: {'question': "Who was Anne Sullivan's most famous pupil?", 'responses': [('Helen Keller', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Keller', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Keller', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Keller', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Keller', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Keller', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Keller', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Keller', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Keller', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helen Keller', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Helen Keller', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Helen Keller'}

Key: 338315974601515749813223307304969326264
Value: {'question': 'Which actress was voted Miss Burbank 1948?', 'responses': [('Betty Grable', [-2.8908581733703613, -0.11426478624343872, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jayne Mansfield', [-3.1408581733703613, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Betty Grable', [-2.8908581733703613, -0.11426478624343872, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Audrey Hepburn', [-3.2658581733703613, -0.29683318734169006, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barbara Eden', [-3.2658581733703613, -1.186612606048584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('June Allyson', [-3.4533581733703613, -0.7600945234298706, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Linda Darnell', [-3.5783581733703613, -0.47590145468711853, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jean Rogers', [-4.078358173370361, -4.719464302062988, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Audrey Hepburn', [-3.2658581733703613, -0.29683318734169006, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Debbie Reynolds', [-2.5783581733703613, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Betty Grable', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Debbie Reynolds'}

Key: 171471614484850875796315861373692198782
Value: {'question': 'Which state did Amelia Earhart land in on her first solo Pacific flight?', 'responses': [('Hawaii', [-0.35810190439224243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.35810190439224243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.35810190439224243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.35810190439224243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.35810190439224243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oakland', [-3.9206018447875977, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.35810190439224243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.35810190439224243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.35810190439224243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hawaii', [-0.35810190439224243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hawaii', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'California'}

Key: 41834023845926712253541657933464951261
Value: {'question': "What is Billy Ocean's real name?", 'responses': [("Brian O'", [-3.40632700920105, -2.3535566329956055, -0.042023666203022], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brian Leslie Ly', [-3.40632700920105, -2.3769941329956055, -2.409111976623535], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Odom', [-1.0625770092010498, -2.6071417331695557, -2.8487255573272705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanley Roderick Brown', [-4.031327247619629, -1.429612159729004, -1.6825438737869263], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carlton Harris', [-4.562577247619629, -2.357816219329834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Brian O'", [-3.40632700920105, -2.3535566329956055, -0.042023666203022], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Holland', [-1.0625770092010498, -1.8337042331695557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Douglas Smith', [-3.25007700920105, -4.171908378601074, -0.024726316332817078], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Brown', [-1.0625770092010498, -1.9626104831695557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William John Smith', [-2.31257700920105, -3.106093406677246, -2.07580304145813], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Brian O'", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Leslie Charles'}

Key: 288122910941368490514903327420254554614
Value: {'question': 'How was writer William Sydney Porter better known?', 'responses': [('as O Henry', [-3.3167014122009277, 0.0, -1.2234445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('O. Henry', [-0.31670141220092773, -0.15121398866176605, -0.10633727163076401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('O. Henry', [-0.31670141220092773, -0.15121398866176605, -0.10633727163076401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-3.3167014122009277, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('O Henry', [-0.31670141220092773, -1.9637140035629272, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('O. Henry', [-0.31670141220092773, -0.15121398866176605, -0.10633727163076401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('O. Henry', [-0.31670141220092773, -0.15121398866176605, -0.10633727163076401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As O Henry', [-2.1917014122009277, 0.0, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('O. Henry', [-0.31670141220092773, -0.15121398866176605, -0.10633727163076401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('O. Henry', [-0.31670141220092773, -0.15121398866176605, -0.10633727163076401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'as O Henry', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'O Henry'}

Key: 329539156412617336792131196673579364095
Value: {'question': 'What was The Zaire River called before 27th October 1971.', 'responses': [('Congo River', [-0.9844462275505066, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stanleyville', [-2.0469462871551514, -1.546006441116333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kasai', [-3.7969462871551514, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo River', [-0.9844462275505066, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo River', [-0.9844462275505066, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo River', [-0.9844462275505066, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo', [-0.9844462275505066, -2.4639394283294678], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congo River', [-0.9844462275505066, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lual', [-2.7344462871551514, -0.06785587221384048], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Congo', [-1.7344462871551514, -0.2158222645521164], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Congo River', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Congo'}

Key: 331440046920512197905990010844362406057
Value: {'question': 'What was the profession of Thomas Eakins?', 'responses': [('Artist', [-1.1731857061386108, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portrait painter', [-3.1731858253479004, -0.3814072012901306], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sculptor', [-2.7981858253479004, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Artist', [-1.1731857061386108, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painter', [-0.6731857061386108, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Artist', [-1.1731857061386108, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painter', [-0.6731857061386108, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painter', [-0.6731857061386108, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painter', [-0.6731857061386108, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Painter', [-0.6731857061386108, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Artist', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Photographer'}

Key: 66268026034936829824078134689256288742
Value: {'question': 'Who is credited with the discovery of galaxies outside of our own?', 'responses': [('William Herschel', [-1.2027965784072876, -0.07694662362337112, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwin Hubble', [-0.7027965784072876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwin Hubble', [-0.7027965784072876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albert Einstein', [-3.952796459197998, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwin Hubble', [-0.7027965784072876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwin Hubble', [-0.7027965784072876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Albert Einstein', [-3.952796459197998, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwin Hubble', [-0.7027965784072876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwin Hubble', [-0.7027965784072876, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir William Herschel', [-2.202796459197998, -0.5221627950668335, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'William Herschel', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9502705392332347, 'reference': 'Edwin Hubble'}

Key: 71868458253933655521658586228279295449
Value: {'question': 'Who was the defending champion when Andre Agassi first won Wimbledon singles?', 'responses': [('Pete Sampras', [-0.6343401074409485, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John McEn', [-4.009340286254883, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goran Ivan', [-2.6343400478363037, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boris Becker', [-1.1343400478363037, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goran Ivan', [-2.6343400478363037, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goran Ivan', [-2.6343400478363037, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pete Sampras', [-0.6343401074409485, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boris Becker', [-1.1343400478363037, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pete Sampras', [-0.6343401074409485, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pete Sampras', [-0.6343401074409485, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pete Sampras', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336676, 'reference': 'Michael Stich'}

Key: 104507988384667782134313023419214433031
Value: {'question': 'Boukhalef International airport is in which country?', 'responses': [('Algeria', [-0.7504291534423828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Algeria', [-0.7504291534423828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Algeria', [-0.7504291534423828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mauritania', [-3.500429153442383, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-1.3754291534423828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Algeria', [-0.7504291534423828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-1.3754291534423828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Libya', [-2.875429153442383, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Algeria', [-0.7504291534423828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Morocco', [-1.3754291534423828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Algeria', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'Morocco'}

Key: 32557469158195409416239679837317727306
Value: {'question': 'What was the 70s No 1 hit for Hamilton, Joe Frank, & Reynolds?', 'responses': [("Don't", [-1.6330535411834717, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweet Sweetback', [-3.1760222911834717, -4.2261810302734375, -1.7871677875518799], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Indian Reservation', [-3.7971160411834717, -0.061035625636577606, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Don't", [-1.6330535411834717, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I'm", [-1.3596160411834717, -0.06217532604932785, -0.68410724401474], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I've", [-1.3596160411834717, -0.06217532604932785, -2.1841073036193848], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Don't", [-1.6330535411834717, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("(I'", [-4.027585029602051, -0.43305835127830505, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Night\n(', [-3.8322722911834717, -4.116951942443848, -1.4503600597381592], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweet Home Alabama', [-3.1760222911834717, -1.8707125186920166, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "Don't", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': "Fallin' In Love"}

Key: 309363786471570465181037268111983449375
Value: {'question': 'In what year was the Kellogg Company set up to manufacture cornflakes?', 'responses': [('1936', [0.0, 0.0, -0.1602240949869156, -0.7442947626113892, -1.9984033107757568, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1936', [0.0, 0.0, -0.1602240949869156, -0.7442947626113892, -1.9984033107757568, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1894', [0.0, 0.0, -1.9102240800857544, -0.08893945813179016, -0.2613677680492401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1906', [0.0, 0.0, -0.1602240949869156, -1.1192947626113892, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1927', [0.0, 0.0, -0.1602240949869156, -1.8692947626113892, -2.759334087371826, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1930', [0.0, 0.0, -0.1602240949869156, -0.7442947626113892, -2.373403310775757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1937', [0.0, 0.0, -0.1602240949869156, -0.7442947626113892, -0.8734032511711121, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1935', [0.0, 0.0, -0.1602240949869156, -0.7442947626113892, -1.3734033107757568, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1935', [0.0, 0.0, -0.1602240949869156, -0.7442947626113892, -1.3734033107757568, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1937', [0.0, 0.0, -0.1602240949869156, -0.7442947626113892, -0.8734032511711121, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1936', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': '1906'}

Key: 336715717915000900592404811239340628996
Value: {'question': 'Which wartime classic was the title of a 1980 film with Hanna Schygulla & Mel Ferrer?', 'responses': [('The Counterfeiters', [-0.27245473861694336, -3.7409920692443848, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Tin Drum', [-0.27245473861694336, -1.6511484384536743, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The third man', [-0.27245473861694336, -4.436792850494385, -0.17632471024990082, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Counterfeiters', [-0.27245473861694336, -3.7409920692443848, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('400', [-3.4287047386169434, -1.1548974514007568, -0.0502343475818634, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Blue Angel', [-0.27245473861694336, -1.5417734384536743, -0.042999111115932465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Red Shoes', [-0.27245473861694336, -3.1980233192443848, -0.3359677493572235, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dr Strangelove', [-4.647454738616943, -1.3756582736968994, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Third Man', [-0.27245473861694336, -3.0964608192443848, -0.3438727855682373, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Tin Drum', [-0.27245473861694336, -1.6511484384536743, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Counterfeiters', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580782, 'reference': 'Lili Marlene'}

Key: 62495010653218093309240316326376026091
Value: {'question': "Who was the voice of Matt Dillon for 11 years on radio's Gunsmoke?", 'responses': [('Dennis Weaver', [-1.6274240016937256, -0.05744180828332901, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard McNear', [-0.5961740016937256, -0.10534736514091492, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Dehner', [-3.5336740016937256, -1.1140929460525513, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Weaver', [-1.6274240016937256, -0.05744180828332901, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard McNear', [-0.5961740016937256, -0.10534736514091492, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Weaver', [-1.6274240016937256, -0.05744180828332901, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard McNear', [-0.5961740016937256, -0.10534736514091492, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard McNear', [-0.5961740016937256, -0.10534736514091492, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Weaver', [-1.6274240016937256, -0.05744180828332901, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Howard McNear', [-0.5961740016937256, -0.10534736514091492, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dennis Weaver', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'William Conrad'}

Key: 117900720178276935698711479560991417140
Value: {'question': 'Which country does the airline Ladeco come from?', 'responses': [('Belgium', [-3.181736469268799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Finland', [-4.306736469268799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-3.931736469268799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Portugal', [-3.931736469268799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.9317365884780884, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-4.431736469268799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [-3.681736469268799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.9317365884780884, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-4.431736469268799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-4.056736469268799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Belgium', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Chile'}

Key: 259625322963410700602225188248589059764
Value: {'question': 'Where was the UN Atomic Energy Agency based when it was set up in 1957?', 'responses': [('Vienna', [-0.31556886434555054, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vienna', [-0.31556886434555054, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Geneva', [-2.0655689239501953, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vienna', [-0.31556886434555054, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vienna', [-0.31556886434555054, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vienna', [-0.31556886434555054, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vienna,', [-0.31556886434555054, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vienna,', [-0.31556886434555054, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vienna,', [-0.31556886434555054, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Geneva', [-2.0655689239501953, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Vienna', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Vienna'}

Key: 60629320452672436016608020035388870792
Value: {'question': 'Oran international airport is in which country?', 'responses': [('Canada', [-4.683207035064697, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-2.6207070350646973, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.6207069158554077, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.6207069158554077, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.6207069158554077, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.6207069158554077, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.6207069158554077, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-0.6207069158554077, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Greece', [-4.683207035064697, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scotland', [-2.6207070350646973, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Canada', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Algeria'}

Key: 255942825779501195380024550482669368262
Value: {'question': 'Where did Johnny Ace die in 1954?', 'responses': [('The USA', [-3.2613682746887207, -3.867912769317627, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('From a drug', [-3.0113682746887207, -0.53904789686203, -2.104771614074707], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His home', [-3.2613682746887207, -1.1654808521270752, -1.3838704824447632], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('At the age', [-2.7613682746887207, -0.55287104845047, -0.4671415090560913], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Orleans', [-3.0113682746887207, -0.9740769863128662, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In a hotel', [-1.3863681554794312, -0.3252639174461365, -3.6232359409332275], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In the arms', [-1.3863681554794312, -2.8252639770507812, -1.9534072875976562], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hollywood Hills', [-3.2613682746887207, -3.867912769317627, -0.6255831718444824], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('California, USA', [-4.511368274688721, -2.929882287979126, -0.5478490591049194], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('On stage', [-2.6363682746887207, -1.0812475681304932, -0.7186800241470337], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The USA', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Houston, Texas'}

Key: 119163438388852055842444583457134493451
Value: {'question': "Who was the first chemist to be Britain's Prime Minister?", 'responses': [('Neville Chamberlain', [-2.5129051208496094, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Gladstone', [-1.5129050016403198, -0.266189843416214, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Pitt', [-1.5129050016403198, -1.4536898136138916, -0.6325989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Lloyd George', [-2.7629051208496094, -0.5926234126091003, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Gladstone', [-1.5129050016403198, -0.266189843416214, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joseph Chamberlain', [-4.075405120849609, -0.14490070939064026, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-2.5129051208496094, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harold Wilson', [-1.7629050016403198, -0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Anthony Eden', [-2.4504051208496094, -2.5351569652557373, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-2.5129051208496094, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Neville Chamberlain', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Margaret Thatcher'}

Key: 135166597190952416504194103824740667351
Value: {'question': 'In which Olympics was taekwondo a demonstration sport?', 'responses': [('Los Angeles', [-2.0307469367980957, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.7807468771934509, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.7807468771934509, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.7807468771934509, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seoul', [-1.7807469367980957, -1.6229137182235718], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seoul', [-1.7807469367980957, -1.6229137182235718], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.7807468771934509, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montreal', [-3.7807469367980957, -1.3194701671600342], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barcelona', [-2.6557469367980957, -0.4523109495639801], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seoul', [-1.7807469367980957, -1.6229137182235718], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Los Angeles', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Seoul 1988'}

Key: 85028205956939662526047378572174572198
Value: {'question': "What was Jimi Hendrix's middle name?", 'responses': [('Haze', [-2.930532455444336, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haze', [-2.930532455444336, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roy', [-3.868032455444336, -0.06820624321699142], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gill-', [-4.758657455444336, -2.6858696937561035], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jey', [-2.993032455444336, -0.6080074310302734], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James', [-1.1492825746536255, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hendrix', [-3.305532455444336, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Haze', [-2.930532455444336, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John', [-2.211782455444336, -0.06018145754933357], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mitchell', [-4.524282455444336, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Haze', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Marshall'}

Key: 143741592224336726267103817791345003945
Value: {'question': 'Who was buried in Milan under the name of Maria Maggi to discourage grave robbers?', 'responses': [('Marie Antoinette', [-4.409891605377197, -0.1313406527042389, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ludovico Ari', [-3.7848916053771973, 0.0, -1.3059531450271606], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon Bonaparte', [-2.8473916053771973, -0.7575989961624146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Napoleon Bonaparte', [-2.8473916053771973, -0.7575989961624146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leonardo da Vinci', [-1.2223916053771973, -0.6325989961624146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leonardo da Vinci', [-1.2223916053771973, -0.6325989961624146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Leonardo da Vinci', [-1.2223916053771973, -0.6325989961624146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Victor Emanuel II', [-4.972391605377197, -2.293837308883667, -0.3507578372955322], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pope John Paul', [-2.4098916053771973, -1.0973248481750488, -0.3925756514072418], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maria Christina of', [-2.7223916053771973, -4.005105972290039, -0.1859920620918274], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Marie Antoinette', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Eva Peron'}

Key: 274533762081982072575555224263897274317
Value: {'question': 'In which month of the year did Bing Crosby record White Christmas?', 'responses': [('December', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('December', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('December', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('December', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('December', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('December', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('December', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('December', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('December', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('December', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'December', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'May'}

Key: 161288586210112925782760926903996992826
Value: {'question': 'Which country does the airline Transkei Airways come from?', 'responses': [('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Africa', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'South Africa', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'South Africa'}

Key: 248298359565829739155095134954214631362
Value: {'question': "What was the last name of Judy in radio's A Date With Judy series?", 'responses': [('Garland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Garland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Garland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Garland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Garland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Garland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Garland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Garland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Garland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Garland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Garland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Foster'}

Key: 329474642626989132883201110425627467405
Value: {'question': 'Which hit starting with the word Rock took over NO 1 from Rock The Boat?', 'responses': [('The River', [-2.1813342571258545, -3.8414626121520996, -0.5349305272102356], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("You're", [-3.3063342571258545, -1.4923588037490845, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("It's", [-3.4313342571258545, -0.12778133153915405, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Love On The', [-3.8063342571258545, -4.074883937835693, -1.3278121948242188], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rock Lobster', [-1.8063342571258545, -2.4139578342437744, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("I'm", [-2.6813342571258545, -1.7510570287704468, -0.21570360660552979], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Can't", [-4.556334495544434, -0.06993623077869415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rock Me Amadeus', [-1.8063342571258545, -2.1639578342437744, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sound of', [-2.1813342571258545, -3.9664626121520996, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Chain by', [-2.1813342571258545, -4.0289626121521, -1.4532818794250488], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The River', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Rock Your Baby'}

Key: 70380848091981966600310080728621269963
Value: {'question': 'In the 1940s, the University of North Carolina was founded at Charlotte and where else?', 'responses': [('Greensboro', [-2.446855306625366, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Durham', [-1.6968553066253662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Durham', [-1.6968553066253662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Durham', [-1.6968553066253662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wilmington', [-2.321855306625366, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Durham', [-1.6968553066253662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Durham', [-1.6968553066253662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Durham', [-1.6968553066253662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chapel Hill', [-1.6968553066253662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chapel Hill', [-1.6968553066253662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Greensboro', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452238, 'reference': 'Wilmington'}

Key: 148076672663207501490728420663531716372
Value: {'question': 'Which country was the first to make catalytic converters compulsory?', 'responses': [('Japan', [-1.7066800594329834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-3.7066800594329834, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United Kingdom', [-3.7066800594329834, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.8316800594329834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Britain', [-4.0816802978515625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-1.7066800594329834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-1.7066800594329834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United Kingdom', [-3.7066800594329834, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.8316800594329834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-2.0816800594329834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Japan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': 'Switzerland'}

Key: 256725196856039360407448324499567363633
Value: {'question': 'Christa McAuliffe died in an accident in what type of vehicle in 1986?', 'responses': [('Space Shuttle', [-0.9310124516487122, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shuttle', [-0.5560124516487122, -0.16723468899726868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shuttlecraft', [-0.5560124516487122, -2.4172346591949463], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shuttle', [-0.5560124516487122], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shuttle', [-0.5560124516487122, -0.16723468899726868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shuttle craft', [-0.5560124516487122, -3.6672346591949463], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shuttle', [-0.5560124516487122, -0.16723468899726868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shuttle', [-0.5560124516487122, -0.16723468899726868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shuttle', [-0.5560124516487122, -0.16723468899726868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Space Shuttle', [-0.9310124516487122, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Space Shuttle', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Space Shuttle'}

Key: 262398821103117889445867771332276522890
Value: {'question': "Who was Benazir Bhutto's Father who was executed in 1988?", 'responses': [('Zulfiqar Ali Bhutto', [-1.0812405347824097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zulfiqar Ali Bhutto', [-1.0812405347824097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zulfiqar Ali Bhutto', [-1.0812405347824097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zulfiqar Ali Bhutto', [-1.0812405347824097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zulfiqar Ali Bhutto', [-1.0812405347824097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zulfikar Ali Bhutto', [-0.5812405347824097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zulfiqar Ali Bhutto', [-1.0812405347824097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zulfiqar Ali Bhutto', [-1.0812405347824097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zulfikar Ali Bhutto', [-0.5812405347824097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zulfiqar Ali Bhutto', [-1.0812405347824097, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zulfiqar Ali Bhutto', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Zulfiqar Ali Bhutto'}

Key: 305484298774464484857298624555523540935
Value: {'question': 'Which form of death penalty was abolished by Francois Mitterrand?', 'responses': [('guillotine', [-4.6683478355407715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Death by', [-2.9183478355407715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hanging', [-1.9183478355407715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The gu', [-1.7933478355407715, -0.8754269480705261], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The death', [-1.7933478355407715, -1.375427007675171], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Public Be', [-2.6683478355407715, -2.9775547981262207], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capital punishment', [-2.7933478355407715, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guillotine', [-3.4183478355407715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The firing', [-1.7933478355407715, -1.750427007675171], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hanging', [-1.9183478355407715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'guillotine', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Guillotine'}

Key: 319551707397308643261038003988738458570
Value: {'question': 'Which capital city was the scene of a major summit between Reagan and Gorbachev in 1986?', 'responses': [('Reykjavik', [-0.14903001487255096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reykjavik', [-0.14903001487255096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reykjavik', [-0.14903001487255096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Moscow', [-2.2740299701690674, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reykjavik', [-0.14903001487255096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reykjavik', [-0.14903001487255096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reykjavik', [-0.14903001487255096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-3.3365299701690674, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reykjavik', [-0.14903001487255096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reykjavik', [-0.14903001487255096, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Reykjavik', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Reykjavik'}

Key: 223604225908724688145720529388376992393
Value: {'question': 'Which drink did the Coca Cola Company launch in 1982?', 'responses': [('Fresca', [-3.374887704849243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coca Cola', [-2.499887704849243, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diet Coke', [-1.6248877048492432, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diet Coke', [-1.6248877048492432, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fanta', [-0.9998877048492432, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coke Zero', [-1.9998877048492432, -0.6661235094070435], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Diet Coke', [-1.6248877048492432, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vanilla Coke', [-3.874887704849243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Coke', [-1.9998877048492432, -2.291123390197754], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mello Y', [-3.624887704849243, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Fresca', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Diet Coke'}

Key: 208584853391160779710432592353970448313
Value: {'question': 'Which telescope was launched into space on board a space shuttle in 1990?', 'responses': [('Hubble Space', [-0.023245446383953094, -1.3887994289398193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hubble', [-0.023245446383953094, -0.5137993693351746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hubble', [-0.023245446383953094, -0.5137993693351746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hubble', [-0.023245446383953094, -0.5137993693351746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hubble', [-0.023245446383953094, -0.5137993693351746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hubble Telescope', [-0.023245446383953094, -2.5137994289398193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hubble', [-0.023245446383953094, -0.5137993693351746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hubble', [-0.023245446383953094, -0.5137993693351746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hubble', [-0.023245446383953094, -0.5137993693351746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hubble', [-0.023245446383953094, -0.5137993693351746], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hubble Space', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Hubble'}

Key: 326062299852693153930969218388873564239
Value: {'question': 'Jonas Salk developed the Salk vaccine against which disease?', 'responses': [('Polio', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polio', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polio', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polio', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polio', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polio', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polio', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polio', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polio', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polio', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Polio', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Polio'}

Key: 329231220526407622271448657333781847658
Value: {'question': "Which of London's four airports is the only one to be connected to the city Underground system?", 'responses': [('Heathrow', [-0.27976542711257935, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gatwick', [-2.2797653675079346, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London City', [-2.7797653675079346, -0.34127315878868103], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stansted', [-2.5297653675079346, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heathrow Airport', [-0.27976542711257935, -2.578889846801758], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heathrow Airport', [-0.27976542711257935, -2.578889846801758], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heathrow', [-0.27976542711257935, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heathrow', [-0.27976542711257935, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heathrow', [-0.27976542711257935, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heathrow', [-0.27976542711257935, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Heathrow', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Heathrow'}

Key: 182498414748692358216795450981508535096
Value: {'question': "Who constructed the world's first laser?", 'responses': [('Theodor Maiman', [-4.136285305023193, -0.12550166249275208, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theodore Maiman', [-0.5425354242324829, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theodore Maiman', [-0.5425354242324829, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theodore Maiman', [-0.5425354242324829, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Hard Townes', [-1.730035424232483, -1.4486006498336792, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ma Xiaoguang', [-4.073785305023193, -4.660059452056885, -0.9044806957244873, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theodor Haensch', [-4.136285305023193, -3.9380016326904297, -1.0461466312408447, -0.07694662362337112], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theodore Maiman', [-0.5425354242324829, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Theodore Maiman', [-0.5425354242324829, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles Townes', [-1.730035424232483, -1.3861006498336792, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Theodor Maiman', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Theodore Maiman'}

Key: 151914392449578191217087387735604449889
Value: {'question': 'Which Wisconsin salesman developed a safety razor in 1901?', 'responses': [('King Camp Gillette', [-0.1111384853720665, -0.3304581940174103, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Edward Schick', [-2.9861385822296143, -2.862725257873535, -0.5808005928993225], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King Camp', [-0.1111384853720665, -0.3304581940174103, -3.167999029159546], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King Camp Gillette', [-0.1111384853720665, -0.3304581940174103, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King Camp Gillette', [-0.1111384853720665, -0.3304581940174103, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King Camp Gillette', [-0.1111384853720665, -0.3304581940174103, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King C Gillette', [-0.1111384853720665, -1.267958164215088, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King C Gillette', [-0.1111384853720665, -1.267958164215088, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King Camp Gillette', [-0.1111384853720665, -0.3304581940174103, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('King C Gillette', [-0.1111384853720665, -1.267958164215088, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'King Camp Gillette', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'King Camp Gillette'}

Key: 15869744046363345333476097423707150725
Value: {'question': 'In which country were Daewoo cars originally produced?', 'responses': [('South Korea', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Korea', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Korea', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Korea', [-1.9102240800857544, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Korea', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Korea', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Korea', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Korea', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Korea', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Korea', [-0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'South Korea', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Korea'}

Key: 201887235250827897194204386092113749560
Value: {'question': 'Which toy company did Ruth and Elliot Handler found?', 'responses': [('Mattel', [-0.10020658373832703, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mattel', [-0.10020658373832703, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mattel', [-0.10020658373832703, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mattel', [-0.10020658373832703, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mattel', [-0.10020658373832703, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mattel', [-0.10020658373832703, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mattel', [-0.10020658373832703, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mattel', [-0.10020658373832703, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mattel', [-0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mattel', [-0.10020658373832703, -0.023245446383953094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mattel', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mattel'}

Key: 133754548180558721487628136531590185807
Value: {'question': 'Which country was the first in the world to introduce a driving test?', 'responses': [('Sweden', [-2.2994682788848877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Finland', [-2.9244682788848877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-2.1744682788848877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-2.0494682788848877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Britain', [-3.6744682788848877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The USA', [-3.0494682788848877, -1.3310599327087402], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [-4.174468040466309, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-2.1744682788848877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-2.7994682788848877, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The United', [-3.0494682788848877, -1.2060599327087402], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sweden', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'France'}

Key: 240972820016251059564681071530491015769
Value: {'question': 'Who launched the short-lived Skytrain air service?', 'responses': [('Air France', [-2.680515766143799, -2.117006540298462, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('British Airways', [-2.055515766143799, -0.13431468605995178, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [-3.555515766143799, -0.8393741846084595, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Cameron', [-3.555515766143799, -3.40187406539917, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freddie Mills', [-4.055515766143799, -2.346600294113159, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Richard Branson', [-1.5555158853530884, -1.2086759805679321, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Queen', [-3.430515766143799, -2.1446805000305176, -0.02630021423101425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Air New Zealand', [-2.680515766143799, -1.554506540298462, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Freddie L', [-1.5555158853530884, -1.5836759805679321, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Air Atlanta', [-2.680515766143799, -3.429506540298462, -0.4220471680164337], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Air France', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Freddie Laker'}

Key: 13549402312418002259682224193209724424
Value: {'question': 'What did Guinness adopt as its trademark in the 60s?', 'responses': [('the leaping', [-3.1077232360839844, -2.7897133827209473], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Harp'", [-1.7327231168746948, -4.731466293334961], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A red', [-1.6077231168746948, -2.266554832458496], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harp logo', [-1.7327231168746948, -1.8564660549163818], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guinness Dra', [-4.732723236083984, -1.1866257190704346], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The harp', [-0.9827231168746948, -1.6335612535476685], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A horse', [-1.6077231168746948, -4.016554832458496], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A Harp', [-1.6077231168746948, -1.8915549516677856], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harp', [-1.7327231168746948, -0.4814661145210266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harp-', [-1.7327231168746948, -4.606466293334961], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'the leaping', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Harp'}

Key: 268893001681810598115742168952153354336
Value: {'question': 'Which city was the HQ of the European Space program?', 'responses': [('Darmstadt', [-2.876821279525757, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Noordwijk', [-3.376821279525757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.3768211901187897, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.3768211901187897, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.3768211901187897, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.3768211901187897, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.3768211901187897, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.3768211901187897, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.3768211901187897, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-0.3768211901187897, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Darmstadt', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Paris'}

Key: 89060831432589057358628575798076035349
Value: {'question': 'Which Andre built the first factory to mass-produce rubber tires?', 'responses': [('Michelin', [-0.6213974356651306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Citroen', [-3.4338974952697754, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michelin', [-0.6213974356651306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Citroën', [-3.7463974952697754, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michelin', [-0.6213974356651306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michelin', [-0.6213974356651306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michelin', [-0.6213974356651306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Du Pont', [-3.3713974952697754, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michelin', [-0.6213974356651306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michelin', [-0.6213974356651306, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michelin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Michelin'}

Key: 148047066664573156282032007456576563529
Value: {'question': 'Which film actor became mayor of Carmel, California in 1986?', 'responses': [('Clint Eastwood', [-0.29941728711128235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burt Reynolds', [-2.26816725730896, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.29941728711128235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve Martin', [-3.23691725730896, -0.3672420084476471, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.29941728711128235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Burt Reynolds', [-2.26816725730896, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.29941728711128235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.29941728711128235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.29941728711128235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clint Eastwood', [-0.29941728711128235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Clint Eastwood', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Clint Eastwood'}

Key: 271502103849758023917745283265835484049
Value: {'question': 'Which pop artist died in New York in1987?', 'responses': [('John Lennon', [-2.431506395339966, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Lennon', [-2.431506395339966, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jim Morrison', [-4.181506156921387, -0.17592337727546692, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Freddie Mercury', [-3.556506395339966, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [-2.056506395339966, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Jackson', [-1.5565063953399658, -0.2450537085533142, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [-2.056506395339966, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andy Warhol', [-2.494006395339966, -0.0658353641629219, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Debbie Harry', [-3.244006395339966, -0.29683318734169006, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('David Bowie', [-2.056506395339966, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Lennon', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Andy Warhol'}

Key: 63916178816301068472885286564253698916
Value: {'question': 'How did James F Fixx, promoter of jogging for good health, die in 1984?', 'responses': [('Stroke', [-3.8180766105651855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('By running', [-3.5680766105651855, -2.145218849182129], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Of heart', [-2.9430766105651855, -2.3037290573120117], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He fell', [-1.943076729774475, -3.369180917739868], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Died from', [-3.1930766105651855, -2.4936304092407227], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In a', [-2.8180766105651855, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Died of', [-3.1930766105651855, -0.3686303496360779], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In a', [-2.8180766105651855, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In a', [-2.8180766105651855, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stabbed', [-4.8180766105651855, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Stroke', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Heart attack while jogging'}

Key: 164053435054591980446194284226533299556
Value: {'question': 'How was Jean Claude Duvalier known before he ws exiled in 1986?', 'responses': [('Baby Doc', [-0.666934072971344, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Doc', [-0.666934072971344, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Doc', [-0.666934072971344, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Doc', [-0.666934072971344, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Doc', [-0.666934072971344, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Baby Doc', [-3.354434013366699, -0.1685200035572052, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Voodoo King', [-3.854434013366699, -0.7262330651283264, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('President of Haiti', [-2.479434013366699, -1.8961673974990845, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Doc', [-0.666934072971344, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baby Doc', [-0.666934072971344, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Baby Doc', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Baby Doc'}

Key: 176910447068242012073403155113658499671
Value: {'question': "Where did teenager Matthias Rust land his plane in 1987 much to the surprise of the country's authorities?", 'responses': [('East Berlin', [-2.257200241088867, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-2.507200241088867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('East Germany', [-2.257200241088867, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In the', [-2.632200241088867, -0.7835720777511597], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-2.507200241088867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-2.882200241088867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Moscow', [-2.882200241088867, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Moscow', [-2.882200241088867, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('East Berlin', [-2.257200241088867, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-3.382200241088867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'East Berlin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Red Square'}

Key: 285793604104453248081932467492742642835
Value: {'question': 'From which UK airport did Virgin Atlantic flights first depart for New York-Newark?', 'responses': [('Gatwick', [-1.4655810594558716, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London Heathrow', [-0.5905810594558716, -0.6569452881813049], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London Heathrow', [-0.5905810594558716, -0.6569452881813049], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London-', [-0.5905810594558716, -1.7819452285766602], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London Heathrow', [-0.5905810594558716, -0.6569452881813049], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London Heathrow', [-0.5905810594558716, -0.6569452881813049], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heathrow', [-1.9655810594558716, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London Gatwick', [-0.5905810594558716, -1.4069452285766602], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London Heathrow', [-0.5905810594558716, -0.6569452881813049], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('London Heathrow', [-0.5905810594558716, -0.6569452881813049], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gatwick', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'London Gatwick'}

Key: 68504276647289369342832913425865801777
Value: {'question': 'Great Briton fought which country over the Falkland Islands?', 'responses': [('Argentina', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Argentina', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Argentina'}

Key: 120834462118685814951894473932833859009
Value: {'question': "Which oil tanker disastrously ran aground off 'Brittany in 1987?", 'responses': [('Exxon Valdez', [-1.4570350646972656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Ex', [-1.4570350646972656, -3.970539093017578], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sea', [-1.4570350646972656, -3.470539093017578], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prestige', [-2.5195350646972656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Exxon Valdez', [-1.4570350646972656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prestige', [-2.5195350646972656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Erika', [-2.9570350646972656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Erika', [-2.9570350646972656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Braer', [-3.4570350646972656, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'Amo", [-3.2070350646972656, -0.8344805836677551], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Exxon Valdez', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Amoco Cadiz'}

Key: 205332753703916370580343576658257048372
Value: {'question': 'Where did the US side of the Band Aid concert take place?', 'responses': [('Wembley Stadium', [-0.12786588072776794, -0.170610710978508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wembley Stadium', [-0.12786588072776794, -0.170610710978508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wembley Stadium', [-0.12786588072776794, -0.170610710978508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wembley Stadium', [-0.12786588072776794, -0.170610710978508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wembley', [-0.12786588072776794, -2.5456106662750244], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wembley Stadium', [-0.12786588072776794, -0.170610710978508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wembley Stadium', [-0.12786588072776794, -0.170610710978508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wembley Stadium', [-0.12786588072776794, -0.170610710978508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wembley Stadium', [-0.12786588072776794, -0.170610710978508], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The London', [-3.002865791320801, -3.1945905685424805], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wembley Stadium', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Philadelphia'}

Key: 270206471935126555821990297447015986816
Value: {'question': 'Natan Sharansky was released from prison in the USSR to begin a new life where?', 'responses': [('Israel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Israel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Israel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Israel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Israel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Israel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Israel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Israel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Israel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Israel', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Israel', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Israel'}

Key: 300527651218167474785104222006865282896
Value: {'question': 'Which country celebrated its bicentenary in 1988?', 'responses': [('France', [-1.1747671365737915, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [-3.237267017364502, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-2.362267017364502, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brazil', [-2.737267017364502, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-2.549767017364502, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brazil', [-2.737267017364502, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-2.862267017364502, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The USA', [-2.737267017364502, -1.7747068405151367], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.1747671365737915, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.1747671365737915, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'France', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Australia'}

Key: 125162587401965415105127135911202448882
Value: {'question': 'The mother of which Monkee invented typewriter correction fluid?', 'responses': [('Tom', [-4.385143280029297, -0.7716395854949951], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter T', [-1.6351433992385864, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tommy James', [-3.072643280029297, -0.5781758427619934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Davy Jones', [-2.760143280029297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Davy Jones', [-2.760143280029297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter T', [-1.6351433992385864, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Davy Jones', [-2.760143280029297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mike Nes', [-2.322643280029297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Micky', [-1.3226433992385864, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Bel', [-3.947643280029297, -4.733118057250977], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tom', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Mike Nesmith'}

Key: 140287369401777447542802624179630706865
Value: {'question': 'What type of aircraft is the Hawker Siddley Harrier?', 'responses': [('Fighter plane', [-2.140171766281128, -2.8145663738250732], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jet-', [-0.7651717662811279, -1.9470100402832031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jet fighter', [-0.7651717662811279, -1.0720100402832031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jet powered', [-0.7651717662811279, -3.447010040283203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jet-', [-0.7651717662811279, -1.9470100402832031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jet/', [-0.7651717662811279, -3.072010040283203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jet', [-0.7651717662811279, -1.4470100402832031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jet fighter', [-0.7651717662811279, -1.0720100402832031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fighter-', [-2.140171766281128, -1.9395663738250732], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jet fighter', [-0.7651717662811279, -1.0720100402832031], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Fighter plane', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Jump Jet'}

Key: 132991566339119708941516639836814375096
Value: {'question': 'What does Volkswagen actually mean?', 'responses': [('A Beetle', [-2.818904399871826, -1.2103391885757446], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("People'", [-0.881404459476471, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('German Beetle', [-3.006404399871826, -3.1224138736724854], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beetle', [-2.006404399871826, -0.18371973931789398], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The people', [-2.256404399871826, -1.0642757415771484], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Volkswagen', [-2.506404399871826, -1.1688460111618042], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("People'", [-0.881404459476471, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Volkswagen is', [-2.506404399871826, -1.6688460111618042], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beetle', [-2.006404399871826, -0.18371973931789398], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golden Carriage', [-4.568904399871826, -1.9521416425704956], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'A Beetle', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3138340331927467, 'reference': "People's car"}

Key: 232549032678699577698777886460260745814
Value: {'question': 'What does the Transalaska Pipeline System transport?', 'responses': [('Oil', [-0.44991248846054077, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Crude oil', [-1.4499125480651855, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oil', [-0.44991248846054077, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oil', [-0.44991248846054077, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Crude oil', [-1.4499125480651855, -0.25192904472351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oil', [-0.44991248846054077, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oil', [-0.44991248846054077, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oil', [-0.44991248846054077, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oil', [-0.44991248846054077, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oil', [-0.44991248846054077, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Oil', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Oil'}

Key: 139418239160738967608913947937848975977
Value: {'question': "What was the name of the world's first nuclear-powered submarine?", 'responses': [('USS Nautilus', [-1.327642560005188, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Nautilus', [-1.265142560005188, -0.7040066123008728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-1.265142560005188, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-1.265142560005188, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-1.265142560005188, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The USS', [-1.265142560005188, -0.9540066123008728], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USS Nautilus', [-1.327642560005188, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-4.671392440795898], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-4.671392440795898], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nautilus', [-1.265142560005188, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'USS Nautilus', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Nautilus'}

Key: 214067868039500396032741023631135567101
Value: {'question': 'Which American company pioneered electric ignition in motor cars?', 'responses': [('Thomas Edison', [-3.7447454929351807, -0.17091712355613708, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Motors', [-0.7447454333305359, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Motors', [-0.7447454333305359, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Motors', [-0.7447454333305359, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Motors', [-0.7447454333305359, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Motors', [-0.7447454333305359, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Motors', [-0.7447454333305359, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Motors', [-0.7447454333305359, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('General Motors', [-0.7447454333305359, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Delco', [-1.8697454929351807, 0.0, -0.43095138669013977], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Thomas Edison', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Cadillac'}

Key: 303603702185635148901841328257663678260
Value: {'question': "Who invented the world's first photocopier?", 'responses': [('Joseph Altsch', [-3.7400662899017334, -2.512054920196533, -1.7807080745697021], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Irving Paul', [-4.740066051483154, -4.439438819885254, -1.861594319343567], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chester Carlson', [-0.8338162302970886, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve Sasson', [-2.8338162899017334, -0.1214543953537941, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edwin Land', [-4.177566051483154, -0.04570977762341499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chester Carlson', [-0.8338162302970886, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur L.', [-2.7088162899017334, -2.5963196754455566, -0.009383858181536198], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chester Carlson', [-0.8338162302970886, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve Sasson', [-2.8338162899017334, -0.1214543953537941, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steve Sasson', [-2.8338162899017334, -0.1214543953537941, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joseph Altsch', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Chester Carlson'}

Key: 24535251163495992724400548826423017937
Value: {'question': 'Where were the 2002 Winter Olympic Games held?', 'responses': [('Salt Lake City,', [0.0, 0.0, 0.0, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Salt Lake City', [0.0, 0.0, 0.0, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Salt Lake City,', [0.0, 0.0, 0.0, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Salt Lake City,', [0.0, 0.0, 0.0, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Salt Lake City', [0.0, 0.0, 0.0, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Salt Lake City,', [0.0, 0.0, 0.0, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Salt Lake City,', [0.0, 0.0, 0.0, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Salt Lake City,', [0.0, 0.0, 0.0, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Salt Lake City,', [0.0, 0.0, 0.0, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Salt Lake City', [0.0, 0.0, 0.0, -1.0537006855010986], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Salt Lake City,', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Salt Lake City'}

Key: 32033749047356253772945564427037878686
Value: {'question': '"Who wrote the line, ""Do not go gentle into that good night?"', 'responses': [('Dylan Thomas', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dylan Thomas', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dylan Thomas', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dylan Thomas', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dylan Thomas', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dylan Thomas', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dylan Thomas', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dylan Thomas', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dylan Thomas', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dylan Thomas', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dylan Thomas', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Dylan Thomas'}

Key: 244198789637400961504539150958997511078
Value: {'question': "What is Jennifer Jason Leigh's real name?", 'responses': [('Jennifer Ann Leigh', [-0.047493528574705124, -3.118161201477051, -0.2606115937232971], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Leigh Berman', [-0.047493528574705124, -1.6181612014770508, -2.5043652057647705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Lee', [-0.047493528574705124, -3.118161201477051, -0.8848080039024353], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Michelle Leigh', [-0.047493528574705124, -3.868161201477051, -0.21038618683815002], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Jo Leigh', [-0.047493528574705124, -4.493161201477051, -0.606518566608429], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Lynn Leigh', [-0.047493528574705124, -1.8681612014770508, -0.40156859159469604], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Jill Lynn', [-0.047493528574705124, -3.743161201477051, -3.6194474697113037], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Joanna Leigh', [-0.047493528574705124, -4.993161201477051, -0.26113781332969666], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Leigh Hayden', [-0.047493528574705124, -1.6181612014770508, -4.180146217346191], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jennifer Jean Leigh', [-0.047493528574705124, -3.868161201477051, -0.2779543101787567], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jennifer Ann Leigh', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Jennifer Morrow'}

Key: 340041741919517294091195074017190874682
Value: {'question': "Which musical instrument was found in Bonnie & Clyde's car after they were shot?", 'responses': [('Accordion', [-3.8202013969421387, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Banjo', [-2.1952013969421387, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Piano', [-2.8202013969421387, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Banjo', [-2.1952013969421387, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saxophone', [-3.1952013969421387, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('An accordion', [-4.070201396942139, -0.5438088178634644], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A trumpet', [-1.6952013969421387, -2.0871245861053467], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mandolin', [-3.6952013969421387, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trumpet', [-2.3202013969421387, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Piano', [-2.8202013969421387, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Accordion', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460894, 'reference': 'Saxophone'}

Key: 271444826377972471033099994899650534109
Value: {'question': "Which album was said to have reflected the end of Bob Dylan's marriage?", 'responses': [('Desire', [-1.9735620021820068, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Desire', [-1.9735620021820068, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blonde on', [-2.723562002182007, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blonde on', [-2.723562002182007, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blood on', [-0.7235620617866516, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blood On', [-0.7235620617866516, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blonde on', [-2.723562002182007, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Desire', [-1.9735620021820068, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blood on', [-0.7235620617866516, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Blonde on', [-2.723562002182007, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Desire', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Blood On The Tracks'}

Key: 158947779538049016774406259412476570203
Value: {'question': 'What was the only Fleetwood Mac track to top the singles charts in the 70s?', 'responses': [('Say You', [-3.3530259132385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dreams', [-0.8530259132385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dreams', [-0.8530259132385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Don'", [-2.7905259132385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Don'", [-2.7905259132385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dreams', [-0.8530259132385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dreams', [-0.8530259132385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dreams', [-0.8530259132385254, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Green', [-2.8530259132385254, -2.1996657848358154], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Go Your', [-2.1030259132385254, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Say You', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Dreams'}

Key: 203864952913730795607385640244329997984
Value: {'question': 'Who was the defending champion when Billie Jean King first won Wimbledon singles?', 'responses': [('Margaret Court', [-0.34203383326530457, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-0.34203383326530457, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-0.34203383326530457, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Christine Truman', [-4.279533863067627, -0.15344618260860443, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-0.34203383326530457, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martina Navrat', [-4.529533863067627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-0.34203383326530457, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Court', [-0.34203383326530457, -0.10633727163076401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marjorie Reynolds', [-4.654533863067627, -4.698606491088867, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Althea Gibson', [-4.654533863067627, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Margaret Court', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Margaret Smith'}

Key: 209962417578858343299242730141661398454
Value: {'question': "In which country did Argentina first win soccer's World Cup?", 'responses': [('Uruguay', [-2.1843557357788086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-2.9343557357788086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('England', [-3.1218557357788086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-2.0593557357788086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brazil', [-1.9343557357788086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-1.6843557357788086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Argentina', [-1.6843557357788086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-2.0593557357788086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-2.0593557357788086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-3.0593557357788086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Uruguay', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816237, 'reference': 'Argentina (1978)'}

Key: 103162540735576030031993141496314474369
Value: {'question': 'To the nearest million, what was the population of the USA in 1910?', 'responses': [('90 million', [0.0, -0.4415723383426666, -1.1509175300598145, -1.0592479705810547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('76,', [0.0, -1.8165723085403442, -1.8687330484390259, -1.126900553703308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90,', [0.0, -0.4415723383426666, -1.1509175300598145, -1.0592479705810547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('95 million', [0.0, -0.4415723383426666, -2.1509175300598145, -1.0086390972137451], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('94,', [0.0, -0.4415723383426666, -2.5259175300598145, -0.9935174584388733], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('93.', [0.0, -0.4415723383426666, -2.1509175300598145, -2.221297025680542], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('75 million', [0.0, -1.8165723085403442, -1.8687330484390259, -0.9486583471298218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('75', [0.0, -1.8165723085403442, -1.8687330484390259, -1.4486583471298218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('76 million', [0.0, -1.8165723085403442, -1.8687330484390259, -1.001900553703308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('90', [0.0, -0.4415723383426666, -1.1509175300598145, -1.4342479705810547], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '90 million', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': '92'}

Key: 172748567273161507058362409742227576612
Value: {'question': "In Chaplin's The Great Dictator, which country did the dictator rule?", 'responses': [('Ethiopia', [-0.7089443206787109, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nazi Germany', [-3.677694320678711, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.7089443206787109, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.7089443206787109, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-1.896444320678711, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.7089443206787109, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The fictional', [-2.552694320678711, -0.7516103386878967], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.7089443206787109, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fascist', [-2.927694320678711, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-3.958944320678711, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ethiopia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Tomania'}

Key: 121580366418766607733479785793706217557
Value: {'question': "What is Joan Collin's middle name?", 'responses': [('Le Blanc', [-4.297723770141602, -3.3374266624450684], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Louise', [-3.0477237701416016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jane', [-4.297723770141602, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan', [-2.5477237701416016, -0.23528289794921875], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marie', [-1.5477237701416016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret', [-3.6727237701416016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joan', [-2.5477237701416016, -0.23528289794921875], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Suzanne', [-4.422723770141602, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jane', [-4.297723770141602, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth', [-2.4227237701416016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Le Blanc', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Henrietta'}

Key: 312625180708612690268320320962803650130
Value: {'question': 'What was the Aristocrat record label renamed?', 'responses': [('Arista', [-2.170133352279663, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Island', [-3.420133352279663, -0.825939416885376], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Decca', [-1.545133352279663, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polydor', [-1.920133352279663, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('EMI', [-2.545133352279663, -0.22561165690422058], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Capitol', [-4.170133590698242, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('EMI Records', [-2.545133352279663, -2.475611686706543], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arista', [-2.170133352279663, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polydor', [-1.920133352279663, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Polydor', [-1.920133352279663, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Arista', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Chess'}

Key: 177071293758493749151477742803285346190
Value: {'question': 'Which President wrote Why England Slept about the rise of Fascism?', 'responses': [('Stanley Baldwin', [-3.5230069160461426, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-1.523006796836853, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-0.523006796836853, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harold Wilson', [-3.8980069160461426, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-1.523006796836853, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-0.523006796836853, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neville Chamberlain', [-1.523006796836853, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George VI', [-3.5230069160461426, -1.7175095081329346], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Churchill', [-3.5230069160461426, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winston Churchill', [-0.523006796836853, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Stanley Baldwin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'John F. Kennedy'}

Key: 301695355906794314843404882513336705631
Value: {'question': 'Where was the first H bomb exploded in 1952?', 'responses': [('Bikini Ato', [-0.8272301554679871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('In the', [-3.702230215072632, -0.22367651760578156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Micronesia', [-5.014729976654053, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nevada', [-2.202230215072632, -0.18006232380867004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pacific Ocean', [-1.9522302150726318, -0.2612628638744354], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Enewe', [-4.077229976654053, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bikini Ato', [-0.8272301554679871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bikini Ato', [-0.8272301554679871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bikini Ato', [-0.8272301554679871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Trinity,', [-4.077229976654053, -1.8960039615631104], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bikini Ato', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Eniwetok'}

Key: 73522471173233785770718354801008303400
Value: {'question': 'Queen Alia international airport is in which country?', 'responses': [('Jordan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jordan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jordan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jordan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jordan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jordan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jordan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jordan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jordan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jordan', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jordan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Jordan'}

Key: 13691939877648652533529070933004970118
Value: {'question': '"Which hairdresser said, """"The only place where success comes before work is in the dictionary?"""', 'responses': [('J. Peter', [-4.157563209533691, -0.16430692374706268, -2.5328049659729004], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vidal Sassoon', [-1.4466257095336914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Anthony', [-2.2776803970336914, -3.7579822540283203, -0.0664215013384819], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vidal Sassoon', [-1.4466257095336914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vince Lombardi', [-3.4192819595336914, -0.04712718725204468, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vidal Sassoon', [-1.4466257095336914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Vidal Sassoon', [-1.4466257095336914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Anne Louise', [-3.6575632095336914, -2.7470250129699707, -0.852552592754364], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-2.2776803970336914, -0.023607254028320312, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mark Twain', [-2.2776803970336914, -0.023607254028320312, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'J. Peter', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Vidal Sassoon'}

Key: 179534610400720808466058207976091834597
Value: {'question': 'Which space probe sent pictures from Mars in 1965?', 'responses': [('Mariner 4', [0.0, -0.05488219112157822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mariner 4', [0.0, -0.05488219112157822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mariner 4', [0.0, -0.05488219112157822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mariner 4', [0.0, -0.05488219112157822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mariner 4', [0.0, -0.05488219112157822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mariner 4', [0.0, -0.05488219112157822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mariner 4', [0.0, -0.05488219112157822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mariner 4', [0.0, -0.05488219112157822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mariner 4', [0.0, -0.05488219112157822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mariner 4', [0.0, -0.05488219112157822, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mariner 4', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Mariner 4'}

Key: 30778550499340156167147691146467662161
Value: {'question': 'Which villain was played by Burgess Meredith in the 1960s Batman TV series?', 'responses': [('The Penguin', [-0.4981345236301422, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Penguin', [-0.9356344938278198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Penguin', [-0.4981345236301422, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Penguin', [-0.9356344938278198, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Penguin', [-0.4981345236301422, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Penguin', [-0.4981345236301422, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Penguin', [-0.4981345236301422, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Penguin', [-0.4981345236301422, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Penguin', [-0.4981345236301422, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Penguin', [-0.4981345236301422, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Penguin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'The Penguin'}

Key: 164021696257011541932381079147879581017
Value: {'question': 'What was the name of the US army airplane which flew a record 150 hours non-stop in 1929?', 'responses': [('Spirit of', [-1.2780301570892334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Spirit', [-4.528029918670654, -0.3691418468952179], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winnie', [-2.4655301570892334, -0.44498324394226074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Spirit', [-0.6530300974845886, -0.13963772356510162], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winnie', [-2.4655301570892334, -0.44498324394226074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Spirit', [-0.6530300974845886, -0.13963772356510162], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spirit of', [-1.2780301570892334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Spirit', [-0.6530300974845886, -0.13963772356510162], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Spirit', [-0.6530300974845886, -0.13963772356510162], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winnie', [-2.4655301570892334, -0.44498324394226074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Spirit of', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Question Mark'}

Key: 165479804169759470689897756798116002109
Value: {'question': 'In what year did regular Boeing 707 flights begin across he Atlantic?', 'responses': [('1958', [0.0, 0.0, 0.0, -0.3484445810317993, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, -0.3484445810317993, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1965', [0.0, 0.0, 0.0, -1.2234445810317993, -2.543013572692871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1968', [0.0, 0.0, 0.0, -1.2234445810317993, -1.793013572692871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, -0.3484445810317993, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1959', [0.0, 0.0, 0.0, -0.3484445810317993, -2.1269280910491943, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1961', [0.0, 0.0, 0.0, -1.2234445810317993, -2.168013572692871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, -0.3484445810317993, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1958', [0.0, 0.0, 0.0, -0.3484445810317993, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1969', [0.0, 0.0, 0.0, -1.2234445810317993, -1.793013572692871, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1958', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': '1958'}

Key: 138431761950689316923073777284698075018
Value: {'question': 'Who became Queen of the Netherlands in 1980?', 'responses': [('Beatrix', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beatrix', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beatrix', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beatrix', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beatrix', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beatrix', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beatrix', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beatrix', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beatrix', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beatrix', [-0.05488219112157822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Beatrix', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Beatrix'}

Key: 295431497803165947199535858833778507103
Value: {'question': "How many Billboard solo NO 1's did ex-Beatle Ringo Starr have?", 'responses': [('1', [-0.12416727840900421, -1.5561742782592773], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.12416727840900421, -1.5561742782592773], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Two', [-3.8741672039031982, -0.07525128126144409], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('5', [-0.12416727840900421, -1.9311742782592773], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Three', [-3.6241672039031982, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.12416727840900421, -2.0561742782592773], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.12416727840900421, -2.3061742782592773], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('None', [-3.9991672039031982, -0.05908667668700218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.12416727840900421, -2.3061742782592773], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('2', [-0.12416727840900421, -2.0561742782592773], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Two'}

Key: 198374782469822928840295736452155853455
Value: {'question': 'In what year did the New York subway open?', 'responses': [('1864', [0.0, 0.0, -0.8981232643127441, -0.5862850546836853, -2.172722339630127, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1904', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1868', [0.0, 0.0, -0.8981232643127441, -0.5862850546836853, -1.5477224588394165, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1868', [0.0, 0.0, -0.8981232643127441, -0.5862850546836853, -1.5477224588394165, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1904', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1865', [0.0, 0.0, -0.8981232643127441, -0.5862850546836853, -1.6727224588394165, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1878', [0.0, 0.0, -0.8981232643127441, -2.33628511428833, -0.9659333825111389, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1897', [0.0, 0.0, -0.8981232643127441, -1.96128511428833, -0.8230317234992981, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1860', [0.0, 0.0, -0.8981232643127441, -0.5862850546836853, -2.047722339630127, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1904', [0.0, 0.0, -0.5231232643127441, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1864', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': '1903'}

Key: 103086552946191907837813397110272184202
Value: {'question': 'Which country does the airline Aero Lloyd come from?', 'responses': [('Denmark', [-3.803028106689453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Austria', [-3.178028106689453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [-2.803028106689453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-1.5530279874801636, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [-2.803028106689453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Belgium', [-2.803028106689453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Czech Republic', [-3.303028106689453, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-1.5530279874801636, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-2.928028106689453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-2.928028106689453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Denmark', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Germany'}

Key: 263061688619474496410951423835753741155
Value: {'question': 'In which decade was the Benjamin Franklin suspension bridge opened?', 'responses': [('1830', [0.0, 0.0, -0.6931471824645996, -2.3042445182800293, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970', [0.0, 0.0, -0.6931471824645996, -1.5672264099121094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('19th Century', [0.0, 0.0, -0.6931471824645996, -0.44222643971443176, -1.4580200910568237], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1920', [0.0, 0.0, -0.6931471824645996, -3.3172264099121094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1970', [0.0, 0.0, -0.6931471824645996, -1.5672264099121094, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('19th century', [0.0, 0.0, -0.6931471824645996, -0.44222643971443176, -0.9580200910568237], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1800', [0.0, 0.0, -0.6931471824645996, -0.6792443990707397, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('19th', [0.0, 0.0, -0.6931471824645996, -0.44222643971443176, -0.9580200910568237], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('19th', [0.0, 0.0, -0.6931471824645996, -0.44222643971443176, -0.9580200910568237], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1800', [0.0, 0.0, -0.6931471824645996, -0.6792443990707397, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1830', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0549201679861442, 'reference': '1920s'}

Key: 66171474945493815875983697303104858634
Value: {'question': 'How many prisoners were left in Alcatraz just before it closed?', 'responses': [('34', [-0.07433769106864929, -0.5961388945579529, -1.4027879238128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('38', [-0.07433769106864929, -0.5961388945579529, -1.4027879238128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('15', [-0.07433769106864929, -1.8461389541625977, -1.2839313745498657], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('39', [-0.07433769106864929, -0.5961388945579529, -3.027787923812866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('37', [-0.07433769106864929, -0.5961388945579529, -2.277787923812866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('30', [-0.07433769106864929, -0.5961388945579529, -3.027787923812866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('36', [-0.07433769106864929, -0.5961388945579529, -2.527787923812866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('20', [-0.07433769106864929, -2.0961389541625977, -1.9386814832687378], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('36', [-0.07433769106864929, -0.5961388945579529, -2.527787923812866], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('0', [-0.07433769106864929, -2.9711389541625977, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '34', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': '27'}

Key: 336126749186991229667118494727232226698
Value: {'question': 'What was the name of the first weather satellite?', 'responses': [('TIROS', [-0.16626079380512238, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TIROS', [-0.16626079380512238, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiros', [-2.3537607192993164, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TIROS', [-0.16626079380512238, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TIROS', [-0.16626079380512238, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nimbus', [-3.1662607192993164, -0.7056537866592407], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TIROS', [-0.16626079380512238, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TIROS', [-0.16626079380512238, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TIROS', [-0.16626079380512238, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TIROS', [-0.16626079380512238, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'TIROS', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Tiros'}

Key: 25353824891011681473186818164551108853
Value: {'question': 'Who directed the movie Trading Places?', 'responses': [('John Landis', [-0.017059607431292534, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [-0.017059607431292534, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [-0.017059607431292534, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [-0.017059607431292534, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [-0.017059607431292534, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [-0.017059607431292534, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [-0.017059607431292534, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [-0.017059607431292534, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [-0.017059607431292534, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [-0.017059607431292534, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Landis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'John Landis'}

Key: 166893863828398255644212177377329027340
Value: {'question': 'Where in Australia was swashbuckling Errol Flynn born?', 'responses': [('Hobart', [-1.3741949796676636, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ballarat', [-4.523609161376953, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katoomba', [-1.2960699796676636, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hobart', [-1.3741949796676636, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hobart', [-1.3741949796676636, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tasmania', [-3.323413848876953, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Melbourne', [-1.8585699796676636, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katoomba', [-1.2960699796676636, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sydney', [-2.733570098876953, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Katoomba', [-1.2960699796676636, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Hobart', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Hobart'}

Key: 148805099390960865751897862975254697444
Value: {'question': 'Vehicles from which country use the international registration letters KWT?', 'responses': [('Kuwait', [-0.047410424798727036, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kuwait', [-0.047410424798727036, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kuwait', [-0.047410424798727036, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kuwait', [-0.047410424798727036, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kuwait', [-0.047410424798727036, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kuwait', [-0.047410424798727036, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kuwait', [-0.047410424798727036, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kuwait', [-0.047410424798727036, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kuwait', [-0.047410424798727036, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kuwait', [-0.047410424798727036, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kuwait', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Kuwait'}

Key: 85780583131883978765215052589600050146
Value: {'question': 'At what weight did boxer Chris Eubank win the WBO title in 1990?', 'responses': [('Middleweight', [-1.2072334289550781, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('16', [-0.8322334289550781, 0.0, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Super-middle', [-1.9572334289550781, -1.0445725917816162, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Super-middle', [-1.9572334289550781, -1.0445725917816162, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Middleweight', [-1.2072334289550781, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Super middleweight', [-1.9572334289550781, -0.919572651386261, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Light-middle', [-2.082233428955078, -0.39190974831581116, -0.7329026460647583], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Light-wel', [-2.082233428955078, -0.39190974831581116, -2.3579025268554688], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('16', [-0.8322334289550781, 0.0, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Middleweight', [-1.2072334289550781, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Middleweight', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': 'Middleweight'}

Key: 135328099895807459464536524940664111191
Value: {'question': "Who featured with Bobby Brown on the No 1 She Ain't Worth It?", 'responses': [('TLC', [-4.120223522186279, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mary J', [-3.5577235221862793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Usher', [-2.7452235221862793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pink', [-4.370223522186279, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('R Kelly', [-4.557723522186279, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monica', [-2.4327235221862793, -0.12993071973323822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Janet Jackson', [-2.5577235221862793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Whitney Houston', [-2.2452235221862793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Usher', [-2.7452235221862793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Whitney Houston', [-2.2452235221862793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'TLC', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Glenn Medeiros'}

Key: 311397697750265081691940590246470991022
Value: {'question': "What was Elvis Presley's first album which did not have his name in the title?", 'responses': [('All the', [-4.758170127868652, -3.2145884037017822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis', [-0.7581698894500732, -1.06020987033844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Loving you', [-3.3831698894500732, -1.458064317703247], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis Presley', [-0.7581698894500732, -1.18520987033844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The sun', [-3.7581698894500732, -4.343527793884277], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis Presley', [-0.7581698894500732, -1.18520987033844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis is', [-0.7581698894500732, -1.93520987033844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis Presley', [-0.7581698894500732, -1.18520987033844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('His first', [-3.0081698894500732, -0.6947034597396851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elvis', [-0.7581698894500732, -1.06020987033844], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'All the', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'King Creole'}

Key: 126905189170574227133192727299836977253
Value: {'question': "Where was golf's 1977 US Open held?", 'responses': [('Medinah Country Club', [-4.741604804992676, 0.0, -0.5003539323806763, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Congressional Country Club,', [-4.054104804992676, -0.16511911153793335, 0.0, -0.6809290647506714], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winged Foot Golf', [-2.554105043411255, 0.0, 0.0, -0.9613695740699768], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baltusrol,', [-1.8666050434112549, 0.0, 0.0, -1.7720253467559814], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winged Foot', [-2.554105043411255, 0.0, 0.0, -0.9613695740699768], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oakland Hills, Michigan', [-2.616605043411255, -0.1912800669670105, -1.6580637693405151, -0.14765623211860657], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baltusrol Golf', [-1.8666050434112549, 0.0, 0.0, -0.6470254063606262], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Atlanta, Georgia', [-2.616605043411255, -1.5019290447235107, -0.12692804634571075, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hazeltine National', [-2.179105043411255, 0.0, 0.0, -0.39099130034446716], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baltusrol Golf', [-1.8666050434112549, 0.0, 0.0, -0.6470254063606262], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Medinah Country Club', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Tulsa Oklahoma'}

Key: 212871343366460029027924546792960183612
Value: {'question': 'Who shared world amateur baseball championship with USA in1973?', 'responses': [('Japan', [-1.0815781354904175, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-1.0815781354904175, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('India', [-3.206578254699707, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-1.0815781354904175, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-1.0815781354904175, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Israel', [-4.331578254699707, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cuba', [-1.9565781354904175, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Japan', [-1.0815781354904175, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-4.706578254699707, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [-2.456578254699707, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Japan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Cuba'}

Key: 238998039711462988941959458404931326807
Value: {'question': 'Who lost the first Super Bowl of the 70s?', 'responses': [('Baltimore Colts', [-2.4378795623779297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('AFL', [-4.18787956237793, -0.7646396160125732], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miami Dolphins', [-2.8128795623779297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas City', [-1.5628794431686401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dolphins', [-4.75037956237793, -0.17214435338974], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas City', [-1.5628794431686401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas City', [-1.5628794431686401, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Bay', [-2.6878795623779297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Bay', [-2.6878795623779297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baltimore Colts', [-2.4378795623779297, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Baltimore Colts', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576458, 'reference': 'Minnesota Vikings'}

Key: 330975739663749733734793054362025791023
Value: {'question': 'How many times did the New York Yankees win the World Series in the 1970s?', 'responses': [('3', [-0.33503785729408264, -0.779080331325531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.33503785729408264, -0.779080331325531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.33503785729408264, -2.904080390930176], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.33503785729408264, -0.779080331325531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.33503785729408264, -2.904080390930176], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.33503785729408264, -2.904080390930176], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.33503785729408264, -0.779080331325531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('3', [-0.33503785729408264, -0.779080331325531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.33503785729408264, -2.404080390930176], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Twice', [-2.96003794670105, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '3', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Twice'}

Key: 103193408195479314113977427874208279536
Value: {'question': 'Which team in the 80s won the Super Bowl by the biggest margin?', 'responses': [('Denver Broncos', [-3.1020216941833496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Chicago', [-1.8520218133926392, -2.9011762142181396], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oakland Raiders', [-3.6020216941833496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-2.2270216941833496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('San Francisco', [-1.9770218133926392, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh Steelers', [-2.2270216941833496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steelers', [-4.35202169418335, -0.4238678514957428], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh Steelers', [-2.2270216941833496, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Washington', [-1.8520218133926392, -2.1511762142181396], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Washington', [-1.8520218133926392, -2.1511762142181396], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Denver Broncos', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816237, 'reference': 'Chicago Bears'}

Key: 281899175404477485512154621241910025350
Value: {'question': 'Where did Maurice Green set his 9.79 seconds for the 100m in 1999?', 'responses': [('Indianapolis', [-4.366185665130615, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Birmingham', [-2.7411856651306152, -0.19693593680858612], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Birmingham', [-2.7411856651306152, -0.19693593680858612], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athens', [-2.6161856651306152, -0.27253425121307373], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Manchester', [-3.8661856651306152, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-4.366185665130615, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Beijing', [-4.366185665130615, -0.21610186994075775], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Birmingham,', [-2.7411856651306152, -1.8219358921051025], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Atlanta', [-2.6161856651306152, -0.35386788845062256], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Commonwealth Games', [-4.491185665130615, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Indianapolis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Athens'}

Key: 9260526978972570865366853195707412660
Value: {'question': "Who won baseball's first World Series of the 50s?", 'responses': [('New York Yankees', [-1.0450398921966553, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Yankees', [-1.0450398921966553, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New York', [-1.4200398921966553, -0.5259854793548584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Yankees', [-1.0450398921966553, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago Cubs', [-4.170040130615234, -0.5231232643127441, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Brooklyn Dodgers', [-1.4200398921966553, -1.6509854793548584, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Yankees', [-1.0450398921966553, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Yankees', [-1.0450398921966553, 0.0, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Brooklyn Dodgers', [-1.5450398921966553, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-1.0450398921966553, 0.0, -1.9102240800857544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'New York Yankees', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'New York Yankees'}

Key: 76696660137813821373329611674012181395
Value: {'question': "Who was Jermaine O'Neal playing against when he made his debut in 1996?", 'responses': [('Michael Jordan', [-1.1767091751098633, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Jordan', [-1.1767091751098633, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Jordan', [-1.1767091751098633, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stephon Mar', [-4.551709175109863, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kevin Garnett', [-3.5517091751098633, -0.042999111115932465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shaquille O', [-2.0517091751098633, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Patrick Ewing', [-3.8017091751098633, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tim Duncan', [-3.5517091751098633, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kevin Garnett', [-3.5517091751098633, -0.042999111115932465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Jordan', [-1.1767091751098633, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michael Jordan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Denver Nuggets'}

Key: 232371170008372081739682738037344831244
Value: {'question': 'Who was the second American to win the Indianapolis 500 four times?', 'responses': [('Tony Hulman', [-3.5395655632019043, -1.2412663698196411, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Unser', [-0.7270656228065491, 0.0, -0.3613583445549011], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Unser', [-0.7270656228065491, 0.0, -0.3613583445549011], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Mears', [-2.2270655632019043, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Mears', [-2.2270655632019043, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Unser', [-0.7270656228065491, 0.0, -0.3613583445549011], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Unser', [-0.7270656228065491, 0.0, -0.3613583445549011], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Unser', [-0.7270656228065491, 0.0, -0.3613583445549011], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Mears', [-2.2270655632019043, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Unser', [-0.7270656228065491, 0.0, -0.3613583445549011], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tony Hulman', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Al Unser Sr'}

Key: 62482119036697370457225247817473935780
Value: {'question': 'Who was the Super Bowl MVP in 1979 and 1980.', 'responses': [('Terry Bradshaw', [-1.4550588130950928, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jim Plunk', [-4.017558574676514, -0.6284412145614624, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fran Tarkenton', [-3.3300588130950928, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Riggins', [-2.8925588130950928, -0.394102543592453, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Theis', [-0.705058753490448, -1.9637140035629272, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Montana', [-0.705058753490448, -0.15121398866176605, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Montana', [-0.705058753490448, -0.15121398866176605, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Montana', [-0.705058753490448, -0.15121398866176605, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Terry Bradshaw', [-1.4550588130950928, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lynn Swanner', [-3.7050588130950928, -2.492567777633667, -3.353999137878418], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Terry Bradshaw', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Terry Bradshaw'}

Key: 336745664345863159277535175914178444379
Value: {'question': 'In 1978 US Masters, who was leading Gary Player by seven strokes, only to lose by a single stroke?', 'responses': [('Larry Nelson', [-4.4922709465026855, -1.094851016998291, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-1.367270827293396, -0.2383444905281067, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-1.367270827293396, -0.2383444905281067, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fuzzy Zoeller', [-3.0547709465026855, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-1.367270827293396, -0.2383444905281067, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-1.367270827293396, -0.2383444905281067, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nick Faldo', [-3.4297709465026855, -0.42870065569877625, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Nicklaus', [-1.304770827293396, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seve Ball', [-1.867270827293396, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hubert Green', [-3.6172709465026855, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Larry Nelson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': 'Hubert Green'}

Key: 16524462196219491627223124610629417498
Value: {'question': 'Where were the first World Athletics Championships held?', 'responses': [('Rome,', [-3.04964280128479, -1.1665229797363281], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-2.04964280128479, -0.2632221579551697], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helsinki', [-1.67464280128479, -0.8012612462043762], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-2.04964280128479, -0.2632221579551697], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oslo', [-3.29964280128479, -0.9353110790252686], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-3.86214280128479, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-2.04964280128479, -0.2632221579551697], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-3.67464280128479, -0.07045131176710129], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helsinki', [-1.67464280128479, -2.8012611865997314], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Helsinki,', [-1.67464280128479, -0.8012612462043762], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Rome,', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Helsinki'}

Key: 117034495656792588447626870932164925828
Value: {'question': 'Which was the first team to win three Super Bowls?', 'responses': [('San Francisco', [-3.426508903503418, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New England Patriots', [-1.676508903503418, -0.6623854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-2.176508903503418, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh Steelers', [-1.301508903503418, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New England', [-1.301508903503418, -1.1348483562469482, -0.7912852764129639], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-2.176508903503418, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-2.176508903503418, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-1.676508903503418, -0.7248854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Green Bay Packers', [-2.676508903503418, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New York', [-1.301508903503418, -1.1348483562469482, -0.6037852764129639], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'San Francisco', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Pittsburgh Steelers'}

Key: 322271443634731391355336914261455732135
Value: {'question': 'Who was the first MVP in a Super Bowl to be on the losing side?', 'responses': [('Bart Starr', [-3.409562349319458, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Brady', [-3.034562349319458, -0.13886164128780365, -0.06669709831476212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Brady', [-3.034562349319458, -0.13886164128780365, -0.06669709831476212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Montana', [-1.784562349319458, -0.5962975025177002, -0.11760086566209793], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nick Lowrey', [-4.784562110900879, -1.0172127485275269, -2.8495359420776367], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Montana', [-1.784562349319458, -0.5962975025177002, -0.11760086566209793], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Brady', [-3.034562349319458, -0.13886164128780365, -0.06669709831476212], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dan Marino', [-2.909562349319458, 0.0, -0.06820624321699142], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dan Marino', [-2.909562349319458, 0.0, -0.06820624321699142], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Montana', [-1.784562349319458, -0.5962975025177002, -0.11760086566209793], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bart Starr', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': 'Chuck Howley'}

Key: 190322512199524369613410353597196295507
Value: {'question': 'Who won the Princess Cup in 1997 with Monica Seles?', 'responses': [('Steffi Graf', [-1.2640072107315063, 0.0, -0.13458658754825592], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-1.8890072107315063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arantxa', [-2.639007091522217, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lindsay Davenport', [-2.889007091522217, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monica Seles', [-4.951507091522217, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Martina Hingis', [-1.3890072107315063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-1.2640072107315063, 0.0, -0.13458658754825592], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-1.2640072107315063, 0.0, -0.13458658754825592], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Serena Williams', [-1.8890072107315063, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-1.2640072107315063, 0.0, -0.13458658754825592], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Steffi Graf', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Anna Kournikova'}

Key: 175880592537738514867825319401554559017
Value: {'question': 'Which team has not won a World Series since Babe Ruth stopped pitching for them?', 'responses': [('Yankees', [-2.592042922973633, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Yankees', [-2.217042922973633, -1.8255081176757812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yankees', [-2.592042922973633, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red Sox', [-3.092042922973633, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-1.8420429229736328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Yankees', [-2.217042922973633, -1.8255081176757812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Yankees', [-2.217042922973633, -1.8255081176757812], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago White', [-2.342042922973633, -0.6931471824645996], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston Red', [-1.4670429229736328, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('St Louis', [-2.967042922973633, -0.22541262209415436], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Yankees', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Boston Red Sox'}

Key: 195275451375786855733901167173037039610
Value: {'question': "Who skippered Stars & Stripes in the America's Cup in 1987 and 1988?", 'responses': [('Dennis Conner', [-0.4413798451423645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Koste', [-1.3788797855377197, -2.0865302085876465, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Conner', [-0.4413798451423645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Conner', [-0.4413798451423645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ted Turner', [-2.2538797855377197, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Conner', [-0.4413798451423645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Conner', [-0.4413798451423645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Conner', [-0.4413798451423645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Conner', [-0.4413798451423645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Conner', [-0.4413798451423645, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dennis Conner', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Dennis Conner'}

Key: 218113379401761367899430262318473895091
Value: {'question': 'Who did Martina Navratilova beat to win her ninth Wimbledon title?', 'responses': [('Chris Evert', [-1.4209482669830322, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pam Shriver', [-2.2959482669830322, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chris Evert', [-1.4209482669830322, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.608448326587677, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chris Evert', [-1.4209482669830322, 0.0, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.608448326587677, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.608448326587677, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.608448326587677, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.608448326587677, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.608448326587677, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chris Evert', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Zina Garrison'}

Key: 201004223603426252278315360177587488517
Value: {'question': 'Who captained the US Ryder Cup team in 1991?', 'responses': [('Raymond Floyd', [-3.662257194519043, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Raymond Floyd', [-3.662257194519043, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Nicklaus', [-2.662257194519043, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Nicklaus', [-2.662257194519043, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Corey Pavin', [-3.943507194519043, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nick Faldo', [-3.849757194519043, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Curtis Strange', [-1.537257194519043, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lanny Wad', [-2.537257194519043, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hal Sutton', [-2.349757194519043, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Curtis Strange', [-1.537257194519043, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Raymond Floyd', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8866967846580784, 'reference': 'Dave Stockton'}

Key: 197938879278252553426952732445245599223
Value: {'question': 'Which team in the 70s won the Super Bowl by the biggest margin?', 'responses': [('Dallas Cowboys', [-1.399419903755188, 0.0, -0.1811685711145401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miami Dolphins', [-2.1494197845458984, 0.0, -0.1352994590997696], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-3.3994197845458984, -0.42870065569877625, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh Steelers', [-1.399419903755188, 0.0, -0.2630438506603241], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Miami Dolphins', [-2.1494197845458984, 0.0, -0.1352994590997696], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-1.399419903755188, 0.0, -0.1811685711145401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Giants', [-3.3994197845458984, -0.42870065569877625, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-1.399419903755188, 0.0, -0.1811685711145401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh Steelers', [-1.399419903755188, 0.0, -0.2630438506603241], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Oakland Raiders', [-2.7744197845458984, 0.0, -0.2273429036140442], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dallas Cowboys', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576455, 'reference': 'Oakland Raiders'}

Key: 88324603933427428870337447309579617023
Value: {'question': 'Who was the winner of the last Open at Carnoustie before Paul Lawrie?', 'responses': [('Nick Faldo', [-2.1717164516448975, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Oosterhuis', [-3.5467164516448975, -2.147888422012329, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-1.1717164516448975, -0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seve Ball', [-3.1717164516448975, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nick Faldo', [-2.1717164516448975, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-1.1717164516448975, -0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Alliss', [-3.5467164516448975, -2.741638422012329, -0.0944129079580307], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ernie Els', [-3.5467164516448975, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bernhard Langer', [-3.9217164516448975, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Watson', [-1.1717164516448975, -0.16972702741622925, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nick Faldo', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Tom Watson'}

Key: 230983176763754124986983117756329011600
Value: {'question': 'In what years did John Henry win the Arlington Million?', 'responses': [('1980 and 19', [0.0, 0.0, 0.0, -0.8250590562820435, -1.6814101934432983, -1.1340605020523071, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1981, 19', [0.0, 0.0, 0.0, -0.8250590562820435, -1.5564101934432983, -0.8280566930770874, -0.1095343679189682, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1990 and 19', [0.0, 0.0, 0.0, -1.8250590562820435, -1.7670073509216309, -1.0742052793502808, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1976 & 19', [0.0, 0.0, 0.0, -1.0750590562820435, -2.1593973636627197, -2.6244561672210693, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1981, 19', [0.0, 0.0, 0.0, -0.8250590562820435, -1.5564101934432983, -0.8280566930770874, -0.1095343679189682, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980-198', [0.0, 0.0, 0.0, -0.8250590562820435, -1.6814101934432983, -2.0090603828430176, -0.38687101006507874, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980-82', [0.0, 0.0, 0.0, -0.8250590562820435, -1.6814101934432983, -2.0090603828430176, -1.1368709802627563, -1.524280071258545, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1978, 19', [0.0, 0.0, 0.0, -1.0750590562820435, -0.9093973636627197, -0.8336324691772461, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1985 and 19', [0.0, 0.0, 0.0, -0.8250590562820435, -2.556410312652588, -1.0809487104415894, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1981 and 19', [0.0, 0.0, 0.0, -0.8250590562820435, -1.5564101934432983, -1.0780566930770874, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1980 and 19', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460891, 'reference': '1981 & 1984'}

Key: 241229886222537183988924929896782956559
Value: {'question': 'Who was the first president of the National Football League?', 'responses': [('Walter Camp', [-3.2994303703308105, -0.16808892786502838, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('<strong>Walter', [-4.9713053703308105, -1.4654908180236816, -3.4218404293060303], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Veeck', [-4.8463053703308105, -0.10263946652412415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Halas', [-2.3013834953308105, -0.12325379252433777, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Sullivan', [-1.8658366203308105, -5.104190349578857, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judge James Na', [-3.4869303703308105, -2.8346691131591797, -0.9171632528305054], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jim Thorpe', [-2.0963053703308105, -0.17978698015213013, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('H. Wayne', [-3.7447428703308105, -0.2943733334541321, -2.524696111679077], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James J.', [-1.8658366203308105, -2.6422762870788574, -0.14751841127872467], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arthur Naff', [-1.4791178703308105, -2.9197568893432617, -4.6827239990234375], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Walter Camp', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Jim Thorpe'}

Key: 37318679025409566930014838655588302427
Value: {'question': 'Who rode Affirmed for each race when he won the Triple Crown?', 'responses': [('Laffit', [-2.6699423789978027, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ron Turcotte', [-0.6699423789978027, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ron Turcotte', [-0.6699423789978027, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Shoemaker', [-2.3886923789978027, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jorge Velasquez', [-3.8261923789978027, -0.29553109407424927, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ron Turcotte', [-0.6699423789978027, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ron Turcotte', [-0.6699423789978027, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sandy Hawley', [-4.326192378997803, -0.3676426410675049, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eddie Maple', [-2.1386923789978027, -0.7545257210731506, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ron Turcotte', [-0.6699423789978027, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Laffit', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Steve Cauthen'}

Key: 18009145889508325264904348788008210219
Value: {'question': 'Which team lost the most Super Bowls in the 1970s?', 'responses': [('San Francisco', [-2.8601877689361572, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Washington', [-2.9851877689361572, -3.167999029159546], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.6101877689361572, -0.7575989961624146], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pittsburgh', [-1.7351877689361572, -2.316171169281006], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Buffalo Bills', [-3.3601877689361572, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh Steelers', [-2.4851877689361572, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The New', [-1.7351877689361572, -2.066171169281006], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kansas City', [-2.9851877689361572, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-2.2351877689361572, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Cowboys', [-2.2351877689361572, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'San Francisco', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Minnesota Vikings'}

Key: 289547074211961044319734477150422962075
Value: {'question': "Who won the first all American French Open Men's Singles final for almost 40 years in the 90s?", 'responses': [('Pete Sampras', [-0.5922481417655945, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pete Sampras', [-0.5922481417655945, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andre Agassi', [-1.0922482013702393, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andre Agassi', [-1.0922482013702393, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pete Sampras', [-0.5922481417655945, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andre Agassi', [-1.0922482013702393, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andre Agassi', [-1.0922482013702393, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andre Agassi', [-1.0922482013702393, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pete Sampras', [-0.5922481417655945, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Chang', [-2.7172482013702393, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Pete Sampras', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9433483923290391, 'reference': 'Jim Courier'}

Key: 221165412302682533076593940058690641698
Value: {'question': 'What was the first British-trained horse to run in the Kentucky Derby?', 'responses': [('Fair Trial', [-4.552460193634033, -1.3105186223983765], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Archer', [-4.396210193634033, -0.07729613780975342], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nijinsky', [-2.333710193634033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pilgrim', [-2.583710193634033, -3.9458746910095215], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nijinsky', [-2.333710193634033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('War Admiral', [-3.364960193634033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wond', [-3.708710193634033, -3.3382325172424316], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nijinsky', [-2.333710193634033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Arkle', [-4.614960193634033, -0.07056829333305359], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ferdinand', [-4.146210193634033, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Fair Trial', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Bold Arrangement'}

Key: 94131650306798227510609056510408173596
Value: {'question': 'In which sport did Eric Navet of France become a 1990 world champion?', 'responses': [('Karate', [-3.796010732650757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Handball', [-3.546010732650757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judo', [-2.671010732650757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Modern Pent', [-3.296010732650757, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wrestling', [-3.671010732650757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Karate', [-3.796010732650757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Water-', [-3.796010732650757, -2.646496534347534], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athletics', [-4.546010971069336, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-3.296010732650757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judo', [-2.671010732650757, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Karate', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Show Jumping'}

Key: 12738808816982080556437214379110433647
Value: {'question': "Who won baseball's first World Series of the 70s?", 'responses': [('Atlanta Braves', [-4.235752582550049, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cincinnati Reds', [-1.6107527017593384, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Mets', [-2.235752582550049, 0.0, -1.4061501026153564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Chicago Cubs', [-4.360752582550049, -4.416753768920898, -0.5490548014640808], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Atlanta Braves', [-4.235752582550049, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pittsburgh Pirates', [-2.610752582550049, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cincinnati Reds', [-1.6107527017593384, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Atlanta Braves', [-4.235752582550049, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cincinnati Reds', [-1.6107527017593384, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York Yankees', [-2.235752582550049, 0.0, -0.28115010261535645], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Atlanta Braves', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Baltimore Orioles'}

Key: 305801853624917904533196094049768209526
Value: {'question': 'What was the original name of the Kansas City Chiefs?', 'responses': [('The Dallas Texans', [-0.6586675047874451, -0.6675563454627991, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Eagles', [-0.6586675047874451, -1.7925562858581543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dallas Texans', [-0.6586675047874451, -0.6675563454627991, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Texans', [-0.8461675047874451, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dallas Texans', [-0.6586675047874451, -0.6675563454627991, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Dallas Texans', [-3.72116756439209, -0.36419156193733215, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dallas Texans', [-0.6586675047874451, -0.6675563454627991, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Texans', [-0.8461675047874451, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Texans', [-0.8461675047874451, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas Texans', [-0.8461675047874451, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Dallas Texans', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Dallas Texans'}

Key: 131595769018040571669709684888689529757
Value: {'question': 'Who was Super Bowl MVP the year after Joe Namath won it?', 'responses': [('Terry Bradshaw', [-1.3884282112121582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bert Jones', [-4.638428211212158, -0.04785178601741791, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bart Starr', [-3.263428211212158, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Blanda', [-2.825928211212158, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Dempsey', [-2.513428211212158, -0.3911253809928894, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roger Staubach', [-3.263428211212158, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Terry Bradshaw', [-1.3884282112121582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roger Staubach', [-3.263428211212158, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Terry Bradshaw', [-1.3884282112121582, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bart Starr', [-3.263428211212158, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Terry Bradshaw', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6957425341696346, 'reference': 'Len Dawson'}

Key: 28351019371075181270563147820729224333
Value: {'question': 'In 1952 who was the then oldest boxer to become world champoion?', 'responses': [('Willie Pep', [-3.5860354900360107, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eddie Machen', [-4.96103572845459, -1.2692008018493652, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Sharkey', [-2.2110354900360107, -0.42552340030670166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gene Tunney', [-3.2110354900360107, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Louis', [-2.2110354900360107, -0.12583661079406738, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Sharkey', [-2.2110354900360107, -0.42552340030670166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry Jackson', [-3.3360354900360107, -4.051413059234619, -0.06993623077869415], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Johnson', [-2.2110354900360107, -1.9255234003067017, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Dempsey', [-2.2110354900360107, -1.8005234003067017, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charley Burley', [-3.3360354900360107, -0.0987093597650528, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Willie Pep', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Jersey Joe Walcott'}

Key: 129978699131845570719693708544195011835
Value: {'question': 'In 1988 who won the tennis Grand Slam and Olympic gold?', 'responses': [('Steffi Graf', [-0.2421337068080902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.2421337068080902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.2421337068080902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boris Becker', [-2.679633617401123, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.2421337068080902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.2421337068080902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.2421337068080902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.2421337068080902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Monica Seles', [-2.554633617401123, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Steffi Graf', [-0.2421337068080902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Steffi Graf', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Steffi Graf'}

Key: 198220171208146173994186143867636178559
Value: {'question': 'How was Walker Smith Robinson better known?', 'responses': [('By his screen', [-3.4440622329711914, -0.39069485664367676, -3.7296855449676514], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As W S', [-0.9440621137619019, -4.270252227783203, -1.0498640537261963], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walker Texas Ranger', [-2.8190622329711914, -2.9694418907165527, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Cat', [-2.8190622329711914, -4.258247375488281, -0.3548319339752197], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as a comic', [-1.8190621137619019, -1.6839755773544312, -3.557343006134033], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('W.S', [-4.944062232971191, -0.4469946324825287, -0.48671531677246094], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Big Daddy', [-4.569062232971191, -1.5276802778244019, -0.07946817576885223], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A famous', [-4.569062232971191, -3.5088438987731934, -4.266021728515625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("As 'Pop", [-0.9440621137619019, -2.645252227783203, -4.878883361816406], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As Sir Winston', [-0.9440621137619019, -4.395252227783203, -3.5379533767700195], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'By his screen', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Sugar Ray Robinson'}

Key: 303325633871435601091937774295823875292
Value: {'question': 'What is the nickname of record-breaking sprinter Maurice Greene?', 'responses': [("'The", [-4.153141975402832, -0.7302069067955017], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Flash', [-1.840641736984253, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Flash', [-0.9031417965888977, -0.4987468123435974], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rocket man', [-2.653141736984253, -2.188779830932617], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Flash', [-0.9031417965888977, -0.4987468123435974], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Flash', [-0.9031417965888977, -0.4987468123435974], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Beast', [-0.9031417965888977, -2.608121871948242], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Super Mario', [-2.715641736984253, -2.246506929397583], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Flash', [-0.9031417965888977, -0.4987468123435974], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Flash', [-1.840641736984253, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "'The", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Kansas Cannonball'}

Key: 278087529406919232010799219752257010
Value: {'question': 'Who was the first boxer to twice regain the world heavyweight title?', 'responses': [('Joe Louis', [-0.75562983751297, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Louis', [-0.75562983751297, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Louis', [-0.75562983751297, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rocky Marciano', [-3.130629777908325, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Muhammad Ali', [-2.630629777908325, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Johnson', [-1.6306297779083252, -0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rocky Marciano', [-3.130629777908325, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Louis', [-0.75562983751297, -0.1797446459531784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Evander Holy', [-3.880629777908325, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Evander Holy', [-3.880629777908325, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joe Louis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Muhammad Ali'}

Key: 138645393244588561288542504118276589486
Value: {'question': 'Peter Nichol became the first Brit in 25 years to win the British open in which sport?', 'responses': [('Golf', [-0.1639150083065033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golf', [-0.1639150083065033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golf', [-0.1639150083065033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golf', [-0.1639150083065033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golf', [-0.1639150083065033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golf', [-0.1639150083065033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golf', [-0.1639150083065033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('golf', [-3.288914918899536, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golf', [-0.1639150083065033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Golf', [-0.1639150083065033, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Golf', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Squash'}

Key: 330222778227092354519763136075232456023
Value: {'question': 'Which Robin was the first yachtsman to sail non-stop around the world?', 'responses': [('Elliot', [-4.180181503295898, -0.1305174082517624], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chichester', [-3.2426815032958984, -0.03364565595984459], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Scott', [-4.555181503295898, -2.736029863357544], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Scott', [-2.3676815032958984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cock Robin', [-4.930181503295898, -0.03262723237276077], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hood', [-1.367681622505188, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robin Knox', [-1.992681622505188, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bothwell', [-5.086431503295898, -4.397468566894531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sir Robin', [-2.4926815032958984, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bullock', [-3.9301815032958984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Elliot', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Knox-Johnson'}

Key: 331659568930086475499326063001344132861
Value: {'question': 'Warren Beatty was offered full college scholarships in which sport?', 'responses': [('Basketball', [-1.3148831129074097, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Football', [-1.1898831129074097, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-1.3148831129074097, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-1.3148831129074097, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Football', [-1.1898831129074097, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baseball', [-1.5648831129074097, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baseball', [-1.5648831129074097, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-1.3148831129074097, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Football', [-1.1898831129074097, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-1.3148831129074097, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Basketball', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0296530140645734, 'reference': 'Football'}

Key: 331755238524072910421816176010529319453
Value: {'question': 'Billy Crystal had a full college scholarship in which sport?', 'responses': [('Basketball', [-1.4612886905670166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice Hockey', [-2.7112886905670166, -0.4748053252696991], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hockey', [-2.4612886905670166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice Hockey', [-2.7112886905670166, -0.4748053252696991], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wrestling', [-3.8362886905670166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baseball', [-1.4612886905670166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hockey', [-2.4612886905670166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baseball', [-1.4612886905670166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-1.4612886905670166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Football', [-1.4612886905670166, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Basketball', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221112, 'reference': 'Baseball'}

Key: 98834076931636173954416061157569690662
Value: {'question': "Who beat Jim Brown's rushing yards total of 12,312 yards in the 1980s?", 'responses': [('Marcus Allen', [-3.2250680923461914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Sanders', [-1.7250680923461914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Payton', [-1.4750680923461914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Sanders', [-1.7250680923461914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Walter Payton', [-1.4750680923461914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Sanders', [-1.7250680923461914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eric Dickerson', [-1.2875680923461914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eric Dickerson', [-1.2875680923461914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Barry Sanders', [-1.7250680923461914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eric Dickerson', [-1.2875680923461914, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Marcus Allen', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336676, 'reference': 'Walter Payton'}

Key: 85692490926485478728673981756173550643
Value: {'question': 'Who fought George Foreman in the Rumble In The Jungle?', 'responses': [('Muhammed Ali', [-2.9682090282440186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Muhammad Ali', [-0.09320893883705139, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Muhammad Ali', [-0.09320893883705139, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Muhammed Ali', [-2.9682090282440186, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Muhammad Ali', [-0.09320893883705139, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Muhammad Ali', [-0.09320893883705139, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Muhammad Ali', [-0.09320893883705139, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Muhammad Ali', [-0.09320893883705139, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Muhammad Ali', [-0.09320893883705139, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Muhammad Ali', [-0.09320893883705139, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Muhammed Ali', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Muhammad Ali'}

Key: 153941343596325106271285002816179579539
Value: {'question': "What was Hank Aaron's first Major League team?", 'responses': [('Milwaukee Braves', [-0.27517983317375183, -0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Milwaukee Braves', [-0.27517983317375183, -0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston Braves', [-1.6501798629760742, -0.3648648262023926, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Milwaukee Braves', [-0.27517983317375183, -0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boston Red Sox', [-1.6501798629760742, -1.3648648262023926, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Atlanta Braves', [-3.025179862976074, -0.4481292963027954, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Milwaukee Braves', [-0.27517983317375183, -0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Milwaukee Braves', [-0.27517983317375183, -0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Milwaukee Braves', [-0.27517983317375183, -0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Milwaukee Braves', [-0.27517983317375183, -0.2868669927120209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Milwaukee Braves', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Milwaukee Braves'}

Key: 172742117483467521266757162287810320907
Value: {'question': 'Which country does marathon man Abel Anton come form?', 'responses': [('Ethiopia', [-0.8072803020477295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-2.0572803020477295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Russia', [-4.057280540466309, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.8072803020477295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kenya', [-2.0572803020477295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.8072803020477295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.8072803020477295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eritrea', [-1.8072803020477295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Eritrea', [-1.8072803020477295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ethiopia', [-0.8072803020477295, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ethiopia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2206072645530175, 'reference': 'Spain'}

Key: 290548565170821000403593463777816781652
Value: {'question': "Which was Hideo Nomo's first US baseball team?", 'responses': [('San Diego', [-4.212205410003662, -0.4509372115135193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Los Angeles', [-0.8372052907943726, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Atlanta', [-2.462205410003662, -3.458970308303833], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Los Angeles', [-0.8372052907943726, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dodgers', [-1.9622052907943726, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dodgers', [-2.462205410003662, -0.9589703679084778], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Los Angeles', [-0.8372052907943726, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dodgers', [-1.9622052907943726, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dodgers', [-1.9622052907943726, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.337205410003662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'San Diego', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4184836619456564, 'reference': 'Los Angeles Dodgers'}

Key: 248666283169023747577259498646741254659
Value: {'question': 'With which track and field even was Geoff Capes particularly associated?', 'responses': [('World Championships', [-2.6598165035247803, -1.6038317680358887, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Shot Put', [-0.5973165035247803, -2.3610310554504395, -0.1167193353176117], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Commonwealth Games', [-0.5973165035247803, -2.8610310554504395, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Shot Put', [-0.5973165035247803, -2.3610310554504395, -0.1167193353176117], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Commonwealth Games', [-4.284816741943359, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The world record', [-0.5973165035247803, -4.1735310554504395, -1.3278430700302124], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The World Indoor', [-0.5973165035247803, -1.861031174659729, -2.458381414413452], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Shot Put', [-1.8473165035247803, -1.132702112197876, -0.07888974994421005], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The mile', [-0.5973165035247803, -4.4235310554504395, -0.3011889159679413], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Weightlifting', [-4.034816741943359, -0.8314995765686035, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'World Championships', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Shot'}

Key: 62185354600724211534436225774581209282
Value: {'question': 'Which country does tennis player Marcelo Rios come from?', 'responses': [('Chile', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Chile', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Chile'}

Key: 147978324248250655459764857852834896897
Value: {'question': 'Where was the Rumble in the Ali v Foreman fight in Zaire in 1974?', 'responses': [('Kinshasa,', [-0.14293180406093597, -2.0176751613616943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kinshasa', [-0.14293180406093597, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zaire,', [-2.2679316997528076, -2.5320377349853516], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kinshasa', [-0.14293180406093597, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zaire,', [-2.2679316997528076, -2.5320377349853516], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kinshasa', [-0.14293180406093597, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kinshasa', [-0.14293180406093597, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kinshasa', [-0.14293180406093597, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kinshasa', [-0.14293180406093597, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Kinshasa', [-0.14293180406093597, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Kinshasa,', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Jungle'}

Key: 237282018864544870832845495282792378768
Value: {'question': 'How many people are there in an official tug of war team?', 'responses': [('8', [-0.4607420563697815, -1.7971349954605103], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Six', [-2.8357419967651367, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Six', [-2.8357419967651367, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Two', [-2.4607419967651367, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.4607420563697815, -0.6721349954605103], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.4607420563697815, -2.4221348762512207], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1', [-0.4607420563697815, -0.6721349954605103], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('6', [-0.4607420563697815, -2.4221348762512207], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.4607420563697815, -2.6721348762512207], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Two', [-2.4607419967651367, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '8', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4708084763221114, 'reference': 'Eight'}

Key: 318060304098331524766392179667281800090
Value: {'question': "In which month is horse racing's Melbourne Cup held?", 'responses': [('November', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('November', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('November', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('November', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('November', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('November', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('November', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('November', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('November', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('November', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'November', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'November'}

Key: 281268714118744401631006372451901571615
Value: {'question': 'The Curragh is in which country?', 'responses': [('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ireland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Ireland'}

Key: 134280264788492911147917475270092452170
Value: {'question': 'Which country hosts the Belmont and Preakness Stakes?', 'responses': [('USA', [-0.5487690567970276, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-1.2987689971923828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-1.2987689971923828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5487690567970276, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5487690567970276, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5487690567970276, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5487690567970276, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-0.5487690567970276, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The United', [-2.798768997192383, -0.7870526313781738], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-1.2987689971923828, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'USA', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'United States'}

Key: 203801858801004146453408049755739957645
Value: {'question': 'In which decade did Joe Montana retire from football?', 'responses': [('1990s', [0.0, -0.12031828612089157, 0.0, -0.38687101006507874, 0.0, -0.2868669927120209], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1990s', [0.0, -0.12031828612089157, 0.0, -0.38687101006507874, 0.0, -0.2868669927120209], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1990s', [0.0, -0.12031828612089157, 0.0, -0.38687101006507874, 0.0, -0.2868669927120209], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1990', [0.0, -0.12031828612089157, 0.0, -0.38687101006507874, 0.0, -1.9118670225143433], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1990s', [0.0, -0.12031828612089157, 0.0, -0.38687101006507874, 0.0, -0.2868669927120209], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980s', [0.0, -0.12031828612089157, 0.0, -1.1368709802627563, -0.07525128126144409, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980s', [0.0, -0.12031828612089157, 0.0, -1.1368709802627563, -0.07525128126144409, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1990s', [0.0, -0.12031828612089157, 0.0, -0.38687101006507874, 0.0, -0.2868669927120209], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1990s', [0.0, -0.12031828612089157, 0.0, -0.38687101006507874, 0.0, -0.2868669927120209], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1980s', [0.0, -0.12031828612089157, 0.0, -1.1368709802627563, -0.07525128126144409, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1990s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': '1990s'}

Key: 266667224556859986960792813250589865160
Value: {'question': 'Which African country does Nick Price come from?', 'responses': [('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Zimbabwe', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Zimbabwe', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Zimbabwe'}

Key: 277538706125987972319598088148931543629
Value: {'question': 'What position did football great Jim Brown play?', 'responses': [('Running back', [-0.38636866211891174, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Halfback', [-2.386368751525879, -0.5603389739990234, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Half back', [-2.386368751525879, -1.6853389739990234, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Running Back', [-0.38636866211891174, -0.9740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Running Back', [-0.38636866211891174, -0.9740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Full Back', [-1.6363686323165894, -1.830018162727356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Full back', [-1.6363686323165894, -1.080018162727356, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Running back', [-0.38636866211891174, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Running back', [-0.38636866211891174, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Running back', [-0.38636866211891174, -0.4740769863128662, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Running back', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Fullback'}

Key: 213888781590511206443070497151115979023
Value: {'question': "What is Magic Johnson's real first name?", 'responses': [('Earvin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Earvin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Earvin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Earvin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Earvin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Earvin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Earvin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Earvin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Earvin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Earvin', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Earvin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Earvin'}

Key: 143238619243889367625402629563471131607
Value: {'question': 'In baseball, when a team is pitching how many players do they have on the field?', 'responses': [('1', [-0.4073793590068817, -1.998139500617981], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.4073793590068817, -0.24813953042030334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.4073793590068817, -0.24813953042030334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.4073793590068817, -0.24813953042030334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.4073793590068817, -0.24813953042030334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.4073793590068817, -0.24813953042030334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.4073793590068817, -0.24813953042030334], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Four', [-3.157379388809204, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('7', [-0.4073793590068817, -3.3731396198272705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('4', [-0.4073793590068817, -2.9981396198272705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Nine'}

Key: 42796397213873231760936194863163044015
Value: {'question': 'Which golf tournament presents its winner with a green jacket?', 'responses': [('The Masters', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Masters', [-0.575939416885376, -0.22296692430973053], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Masters', [-0.575939416885376, -0.22296692430973053], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Masters', [-0.575939416885376, -0.22296692430973053], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Masters', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Masters', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Masters', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Masters', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Masters', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Masters', [-0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Masters', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'The Masters'}

Key: 46893786599587171999578854739336196663
Value: {'question': "In which jumping event did Carl Lewis win Olympic gold's?", 'responses': [('Triple Jump', [-2.5756607055664062, -0.6931471824645996, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Long Jump', [-0.3256607949733734, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The long jump', [-3.2006607055664062, -0.637850284576416, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Long Jump', [-0.3256607949733734, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('10', [-1.8256608247756958, 0.0, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Long jump', [-0.3256607949733734, -0.575939416885376, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The triple jump', [-3.2006607055664062, -2.262850284576416, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The 1', [-3.2006607055664062, -1.387850284576416, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Long Jump', [-0.3256607949733734, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Long Jump', [-0.3256607949733734, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Triple Jump', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Long Jump'}

Key: 137705293171962593306522348690399197821
Value: {'question': 'In football, what position is WR?', 'responses': [('Wide Receiver', [0.0, -0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wide receiver', [0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wide Receiver', [0.0, -0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wide Receiver', [0.0, -0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wide receiver', [0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wide Receiver', [0.0, -0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wide Receiver', [0.0, -0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wide Receiver', [0.0, -0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wide receiver', [0.0, -0.825939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Wide Receiver', [0.0, -0.575939416885376, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wide Receiver', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Wide receiver'}

Key: 236947419722591729154953033378301583841
Value: {'question': 'The Vince Lombardi Trophy is awarded to winners of what?', 'responses': [('The NFL Super', [-0.636651337146759, -2.0864272117614746, -0.735874593257904], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Super Bowl', [-1.5116512775421143, -0.22541262209415436, -0.04398319125175476], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Super Bowl', [-0.636651337146759, -0.21142719686031342, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Superbowl', [-0.636651337146759, -0.21142719686031342, -1.7014133930206299], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Super Bowl', [-0.636651337146759, -0.21142719686031342, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Super Bowl', [-0.636651337146759, -0.21142719686031342, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('American Football', [-1.6366512775421143, -0.6325989961624146, -0.12420844286680222], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Super Bowl', [-0.636651337146759, -0.21142719686031342, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The National Football', [-0.636651337146759, -2.7114272117614746, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Super Bowl', [-1.5116512775421143, -0.22541262209415436, -0.04398319125175476], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The NFL Super', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Super Bowl'}

Key: 182213494526013717999671734192092086938
Value: {'question': 'What was the nationality of the athletes killed at the 1972 Munich Olympics?', 'responses': [('Israeli', [-2.0506432056427, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Germany', [-2.4256432056427, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Israel', [-1.3006432056427002, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('All of', [-3.3006432056427, -1.7072962522506714], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('German', [-2.4256432056427, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Israel', [-1.3006432056427002, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-2.4256432056427, -2.913918972015381], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('East Germany', [-4.675642967224121, -0.42870065569877625], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('West Germany', [-2.4256432056427, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('All nationalities', [-3.3006432056427, -2.832296371459961], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Israeli', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6434177197931796, 'reference': 'Israeli'}

Key: 267854090829711662484835267261822325143
Value: {'question': 'The Prix du Jockey-Club is held at which race course?', 'responses': [('Longchamp', [-1.0583624839782715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paris', [-2.1833624839782715, -0.27470678091049194], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Longchamp', [-1.0583624839782715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chantilly', [-0.9333624839782715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Longchamp', [-1.0583624839782715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chantilly', [-0.9333624839782715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Longchamp', [-1.0583624839782715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Aintree', [-2.7458624839782715, -0.4509372115135193], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chantilly', [-0.9333624839782715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chantilly', [-0.9333624839782715, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Longchamp', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1935496040981333, 'reference': 'Chantilly'}

Key: 306804109414301843774225250311911697836
Value: {'question': 'In which decade did the Super Bowl begin?', 'responses': [('1960s', [0.0, 0.0, 0.0, 0.0, -0.22695089876651764, -0.2945805788040161], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1967', [0.0, 0.0, 0.0, 0.0, -2.3519508838653564, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, 0.0, -0.22695089876651764, -0.2945805788040161], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1967', [0.0, 0.0, 0.0, 0.0, -2.3519508838653564, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, 0.0, -0.22695089876651764, -0.2945805788040161], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, 0.0, -0.22695089876651764, -0.2945805788040161], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1967', [0.0, 0.0, 0.0, 0.0, -2.3519508838653564, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("1960'", [0.0, 0.0, 0.0, 0.0, -0.22695089876651764, -2.4195804595947266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, 0.0, -0.22695089876651764, -0.2945805788040161], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('1960s', [0.0, 0.0, 0.0, 0.0, -0.22695089876651764, -0.2945805788040161], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '1960s', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': '1960s'}

Key: 94839716790140267119861132395425400878
Value: {'question': 'In which country is Flemington park race course?', 'responses': [('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Australia', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Australia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Melbourne, Australia'}

Key: 159197091293303366076912821953450127585
Value: {'question': "Who won golf's US Amateur Championship for the first time i n1994?", 'responses': [('Tiger Woods', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger Woods', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger Woods', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger Woods', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger Woods', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger Woods', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger Woods', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger Woods', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger Woods', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger Woods', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tiger Woods', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Tiger Woods'}

Key: 191101493061839301172481563132000105923
Value: {'question': 'In which sport was Richard Upton found positive in a drugs test in 1998?', 'responses': [('Cycling', [-1.2289800643920898, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tennis', [-3.47898006439209, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Football', [-3.22898006439209, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Football', [-3.22898006439209, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cricket', [-1.9789800643920898, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cycling', [-1.2289800643920898, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athletics', [-1.2289800643920898, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cycling', [-1.2289800643920898, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cricket', [-1.9789800643920898, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Athletics', [-1.2289800643920898, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Cycling', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576458, 'reference': 'Swimming'}

Key: 164789621184829129852643781441222270574
Value: {'question': "Which European won tennis's 1989 Men's Singles at the US Open?", 'responses': [('Goran Ivan', [-2.4263226985931396, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ivan Lendl', [-2.0513226985931396, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Stich', [-2.3013226985931396, -1.1368709802627563, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boris Becker', [-0.7388226985931396, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael Chang', [-2.3013226985931396, -0.38687101006507874, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Goran Ivan', [-2.4263226985931396, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boris Becker', [-0.7388226985931396, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boris Becker', [-0.7388226985931396, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boris Becker', [-0.7388226985931396, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boris Becker', [-0.7388226985931396, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Goran Ivan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Boris Becker'}

Key: 227409234082738125959022123933896733451
Value: {'question': "In which sport's globalization plan includes the ' Dream Team,' playing in the McDonald's Classic and the Three-on-Three Challenge?", 'responses': [('Basketball', [-0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-0.10020658373832703, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Basketball', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Basket ball'}

Key: 264849576797566099324207665568743929878
Value: {'question': 'Which country does boxer Vitali Klitschko come from?', 'responses': [('Ukraine', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ukraine', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ukraine', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ukraine', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ukraine', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ukraine', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ukraine', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ukraine', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ukraine', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ukraine', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ukraine', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Ukraine'}

Key: 70155709989807445691433023907403245846
Value: {'question': 'In which state did Michael Jordan play college basketball?', 'responses': [('North Carolina', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('North Carolina', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'North Carolina', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'North Carolina'}

Key: 337850802429543905386656014067372992628
Value: {'question': 'With which university did Magic Johnson win the 1979 NCAA title?', 'responses': [('Michigan State', [0.0, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michigan State', [0.0, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michigan', [0.0, -1.2234445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michigan', [0.0, -1.2234445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michigan State', [0.0, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michigan State', [0.0, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michigan State', [0.0, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michigan', [0.0, -1.2234445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michigan', [0.0, -1.2234445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michigan', [0.0, -1.2234445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michigan State', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Michigan State'}

Key: 81815677430705526712779627470429456889
Value: {'question': "Who won golf's US Open in 1994 and 1997?", 'responses': [('Ernie Els', [-0.9484364986419678, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ernie Els', [-0.9484364986419678, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ernie Els', [-0.9484364986419678, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger Woods', [-0.9796864986419678, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ernie Els', [-0.9484364986419678, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tiger Woods', [-0.9796864986419678, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Justin Rose', [-4.417186737060547, -2.293837308883667, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ernie Els', [-0.9484364986419678, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lee Trevino', [-3.2921864986419678, -1.45516836643219, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ernie Els', [-0.9484364986419678, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ernie Els', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Ernie Els'}

Key: 26969865137456732977408806542524488671
Value: {'question': 'What has been won by Australia II and America 3?', 'responses': [("America's Cup", [-0.4056011438369751, -0.09492291510105133, 0.0, -0.10020658373832703, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("America's cup", [-0.4056011438369751, -0.09492291510105133, 0.0, -2.3502066135406494, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("The America's Cup", [-1.280601143836975, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("The America's Cup", [-1.280601143836975, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("The America's Cup", [-1.280601143836975, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("America's cup", [-0.4056011438369751, -0.09492291510105133, 0.0, -2.3502066135406494, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("America's Cup", [-0.4056011438369751, -0.09492291510105133, 0.0, -0.10020658373832703, -0.029750416055321693], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("America's Cup", [-0.4056011438369751, -0.09492291510105133, 0.0, -0.10020658373832703], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("The America's Cup", [-1.280601143836975, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("The America's Cup", [-1.280601143836975, 0.0, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': "America's Cup", 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': "America's Cup"}

Key: 108219427020871970073230258708895023430
Value: {'question': 'Which university did Cheryl Miller attend?', 'responses': [('UCLA', [-0.6215441226959229, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('UCLA', [-0.6215441226959229, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('UCLA', [-0.6215441226959229, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('UCLA', [-0.6215441226959229, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('UCLA', [-0.6215441226959229, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('UCLA', [-0.6215441226959229, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('University of', [-2.934044122695923, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USC', [-1.3715441226959229, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('University of', [-2.934044122695923, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('UCLA', [-0.6215441226959229, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'UCLA', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'University of Southern California'}

Key: 69682133347804917447730383007280697891
Value: {'question': 'At which sport did Keanu Reeves excel while at high school?', 'responses': [('Skateboarding', [-3.497492790222168, -0.08893945813179016], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-2.122492790222168, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-2.872492790222168, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-2.122492790222168, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Football', [-1.8724926710128784, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rugby', [-2.997492790222168, -0.07694662362337112], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Soccer', [-3.497492790222168, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice Hockey', [-2.497492790222168, -0.798916220664978], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rugby', [-2.997492790222168, -0.07694662362337112], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Basketball', [-2.122492790222168, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Skateboarding', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Hockey'}

Key: 158417888834632315215368831939899366445
Value: {'question': 'In Hockey, who did Maurice Rocket Richard play for?', 'responses': [('Montreal Canadiens', [-0.18358570337295532, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montreal Canadiens', [-0.18358570337295532, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montreal Canadiens', [-0.18358570337295532, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montreal Canadiens', [-0.18358570337295532, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montreal Canadians', [-0.18358570337295532, -1.8047446012496948], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canadiens', [-2.3085856437683105, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montreal Canadiens', [-0.18358570337295532, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Montreal', [-2.6835856437683105, -0.1602240949869156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montreal Canadiens', [-0.18358570337295532, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Montreal Canadiens', [-0.18358570337295532, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Montreal Canadiens', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Montreal Canadians'}

Key: 249664259220904497254094204992356220449
Value: {'question': 'Golf star Vijay Singh comes form where?', 'responses': [('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fiji', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Fiji', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Fiji'}

Key: 147650887310624183758798861410052632578
Value: {'question': 'Kirk Douglas supplemented his acting earnings in his early years as what type of professional sportsman?', 'responses': [('Wrestling', [-2.619067430496216, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bodybuilder', [-3.369067430496216, -0.2465055286884308], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxer', [-2.369067430496216, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Baseball player', [-2.369067430496216, -1.2733074426651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horse trainer', [-3.619067430496216, -1.7366946935653687], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horse trainer', [-3.619067430496216, -1.7366946935653687], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxer', [-2.369067430496216, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Footballer', [-2.619067430496216, -1.0139224529266357], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A stunt', [-3.744067430496216, -3.533362865447998], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice skater', [-2.869067430496216, -1.6103155612945557], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wrestling', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Wrestler'}

Key: 138909720601431789085840690404165718068
Value: {'question': '"""The early days of which sport featured the Renshaw twins, the Baddeley twins and the Doherty brothers?"', 'responses': [('Wrestling', [-2.549367666244507, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Motor Racing', [-4.799367904663086, -1.2879643440246582], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tennis', [-3.799367666244507, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Football', [-2.424367666244507, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rugby', [-1.4243676662445068, -1.3375910520553589], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boxing', [-1.2993676662445068, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hurling', [-4.049367904663086, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rugby', [-1.4243676662445068, -1.3375910520553589], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cycling', [-3.049367666244507, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gymnastics', [-3.799367666244507, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Wrestling', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Tennis'}

Key: 334638704812464586974851369114933838488
Value: {'question': 'Who was known as the Manassa Mauler?', 'responses': [('Frank Gotch', [-3.2663984298706055, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John L.', [-1.5163984298706055, -0.2500094771385193, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Johnson', [-0.8913984298706055, -1.0360190868377686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rocky Marciano', [-4.8913984298706055, -0.592131495475769, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Dempsey', [-0.8913984298706055, -0.5985191464424133, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Johnson', [-0.8913984298706055, -1.0360190868377686, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Dixon', [-3.4538984298706055, -1.6646525859832764, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Dempsey', [-0.8913984298706055, -0.5985191464424133, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Dempsey', [-0.8913984298706055, -0.5985191464424133, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jack Dempsey', [-0.8913984298706055, -0.5985191464424133, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Frank Gotch', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Jack Dempsey'}

Key: 57661429586288227697164133605965572845
Value: {'question': 'Arturo Marino Benitez international airport is in which country?', 'responses': [('Mexico', [-1.5085676908493042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [-1.5085676908493042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nicaragua', [-3.2585678100585938, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Panama', [-2.7585678100585938, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-3.0085678100585938, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Costa Rica', [-3.3835678100585938, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [-1.5085676908493042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nicaragua', [-3.2585678100585938, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mexico', [-1.5085676908493042, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chile', [-3.7585678100585938, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mexico', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341, 'reference': 'Chile'}

Key: 280810684752683127078360616903426544384
Value: {'question': "What was Jane Russell's real first name?", 'responses': [('Joan', [-3.8725228309631348, -0.08587735891342163], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jean', [-2.3100228309631348, -0.13196726143360138], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jane Ann', [-2.0600228309631348, -2.3746516704559326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jean', [-2.3100228309631348, -0.13196726143360138], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucille', [-3.6225228309631348, -0.08865988254547119], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Virginia', [-2.8725228309631348, -0.14707355201244354], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gladys', [-3.5600228309631348, -0.109225332736969], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jane Arden', [-2.0600228309631348, -3.2496516704559326], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Betty', [-3.8100228309631348, -0.543550968170166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Genevieve', [-3.5600228309631348, -0.024726316332817078], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Joan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Ernestine'}

Key: 9411539260775456576850312183199353748
Value: {'question': 'The Fabulous Cullinan diamond was cut into how many separate gems?', 'responses': [('9', [-0.13172955811023712, -0.27470678091049194, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.13172955811023712, -0.27470678091049194, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.13172955811023712, -0.27470678091049194, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.13172955811023712, -0.27470678091049194, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.13172955811023712, -0.27470678091049194, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('12', [-0.13172955811023712, -1.7747068405151367, -1.8932384252548218], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.13172955811023712, -0.27470678091049194, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.13172955811023712, -0.27470678091049194, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('8', [-0.13172955811023712, -2.6497068405151367, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('9', [-0.13172955811023712, -0.27470678091049194, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '9', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': '105'}

Key: 49718065208314033972916511428834232053
Value: {'question': 'Which singer-songwriter was born on the same day as actor Billy Dee Williams?', 'responses': [('Bob Dylan', [-3.3839032649993896, -0.06993623077869415, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Neil Sedaka', [-3.6339032649993896, -1.2943768501281738, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Stevie Wonder', [-1.8839032649993896, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-2.7589032649993896, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Waits', [-4.008903503417969, -0.4329126179218292, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Lennon', [-3.0089032649993896, -0.38629406690597534, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Jackson', [-4.383903503417969, -0.6809130311012268, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billy Joel', [-2.3839032649993896, -0.2642517387866974, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-2.7589032649993896, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Taylor', [-3.6339032649993896, -0.16401071846485138, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Bob Dylan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Merle Haggard'}

Key: 171649523443204063368277074502733567320
Value: {'question': "John and Mary Evans of Alaska grew the world's biggest what?", 'responses': [('Cauliflower', [-3.871180534362793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweet corn', [-4.246180534362793, -1.0462243556976318], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cabbage', [-4.746180534362793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Potato', [-2.621180534362793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tomato', [-2.746180534362793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Potatoes', [-2.371180534362793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Potato', [-2.621180534362793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Onion', [-4.621180534362793, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pumpkin', [-1.3711806535720825, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Marijuana plant', [-4.371180534362793, -0.784700870513916], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Cauliflower', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Broccoli'}

Key: 248076498157269735110184287053512184145
Value: {'question': 'Where is the University of New Hampshire located?', 'responses': [('In New', [-3.1879220008850098, -1.818066120147705], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-2.3129220008850098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Durham', [-0.4379219710826874, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Durham', [-0.4379219710826874, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Durham', [-0.4379219710826874, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Durham', [-0.4379219710826874, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-2.3129220008850098, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Manchester', [-3.0629220008850098, -0.38687101006507874], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Durham', [-0.4379219710826874, -0.3484445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Durham,', [-0.4379219710826874, -1.2234445810317993], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'In New', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.0888999753452235, 'reference': 'Durham'}

Key: 100329377691171493427153095281654883727
Value: {'question': 'What is the biggest studio in Hollywood called?', 'responses': [('The sound stage', [-0.6098940372467041, -2.318045139312744, -0.428050696849823], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Grauman'", [-3.422394037246704, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Grauman'", [-3.422394037246704, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The El Capitan', [-0.6098940372467041, -2.505545139312744, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Backlot', [-3.859894037246704, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sound Stage', [-4.734893798828125, -0.6574497222900391, -0.2895251512527466], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sunset Gower', [-3.234894037246704, -2.088277816772461, -0.5457854866981506], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Cinera', [-0.6098940372467041, -4.130545139312744, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Sound Stage', [-0.6098940372467041, -3.255545139312744, -0.30347344279289246], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Chinese', [-0.6098940372467041, -1.5055451393127441, -1.5260977745056152], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The sound stage', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Universal City'}

Key: 198153072727586035123228699904272768438
Value: {'question': 'Who was the first person to win the Indianapolis 500 six times?', 'responses': [('Al Unser', [-0.5674449801445007, 0.0, -0.35871049761772156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Unser', [-0.5674449801445007, 0.0, -0.35871049761772156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Unser', [-0.5674449801445007, 0.0, -0.35871049761772156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Unser', [-0.5674449801445007, 0.0, -0.35871049761772156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Unser Sr', [-0.5674449801445007, 0.0, -1.608710527420044], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Unser', [-0.5674449801445007, 0.0, -0.35871049761772156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A.J', [-1.1924450397491455, 0.0, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Al Unser', [-0.5674449801445007, 0.0, -0.35871049761772156], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A.J', [-1.1924450397491455, 0.0, -0.15121398866176605], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rick Mears', [-2.4424450397491455, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Al Unser', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8018185525433372, 'reference': 'Al Unser'}

Key: 236971883402614271965502916522628682343
Value: {'question': 'Gunn-toting Wyatt Earp survived to what age?', 'responses': [('77', [0.0, -1.2695198059082031, -2.308445453643799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('82', [0.0, -0.8945198059082031, -1.8104994297027588, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('82', [0.0, -0.8945198059082031, -1.8104994297027588, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('92', [0.0, -1.6445198059082031, -1.4160866737365723, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('79', [0.0, -1.2695198059082031, -2.433445453643799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('63', [0.0, -2.144519805908203, -2.4004697799682617, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('82', [0.0, -0.8945198059082031, -1.8104994297027588, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('85', [0.0, -0.8945198059082031, -2.185499429702759, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('87', [0.0, -0.8945198059082031, -2.435499429702759, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('77', [0.0, -1.2695198059082031, -2.308445453643799, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': '77', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': '80'}

Key: 337270963459139023667718922905906971634
Value: {'question': 'Which sporting world championship has been held at the Kuusinski and Kitka Rivers in Finland?', 'responses': [('Biathlon World', [-1.349205732345581, 0.0, -2.1269280910491943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Biathlon World', [-1.349205732345581, 0.0, -2.1269280910491943], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Biathlon', [-1.349205732345581, 0.0, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Biathlon', [-1.349205732345581, 0.0, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('biathlon', [-4.22420597076416, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Biathlon', [-1.349205732345581, 0.0, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ice Hockey World', [-1.599205732345581, -0.38687101006507874, -1.6004126071929932], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Winter Olympic Games', [-3.099205732345581, -2.3148975372314453, -0.042999111115932465], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('biathlon', [-4.22420597076416, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cross-Country', [-3.724205732345581, -0.9885329604148865, -1.5019290447235107], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Biathlon World', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Fly Fishing'}

Key: 269928298063065929128821501385096055742
Value: {'question': 'Which country does the airline Tower Air come from?', 'responses': [('Estonia', [-4.279669284820557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-2.7796692848205566, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sweden', [-2.9046692848205566, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jamaica', [-4.029669284820557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Finland', [-3.1546692848205566, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('United States', [-2.5296692848205566, -0.12692804634571075], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Iceland', [-2.7796692848205566, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-2.2796692848205566, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Estonia', [-4.279669284820557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Latvia', [-4.779669284820557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Estonia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'USA'}

Key: 148728510007872545989010506579796295775
Value: {'question': 'In which country is the Bendorf bridge?', 'responses': [('Germany', [-0.07525128126144409, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.07525128126144409, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.07525128126144409, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.07525128126144409, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.07525128126144409, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.07525128126144409, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.07525128126144409, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.07525128126144409, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-0.07525128126144409, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-3.450251340866089, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Germany', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Germany'}

Key: 87332636957186703649602669270430412204
Value: {'question': 'Which pop singer blamed his cocaine addiction of the break0-up of his relationship with Victoria principal?', 'responses': [('Michael Jackson', [-1.3320976495742798, -0.11409548670053482, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Phil Collins', [-3.9570975303649902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Clayder', [-4.70709753036499, -4.598268985748291, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Jones', [-3.8945975303649902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Travolta', [-4.39459753036499, -1.2312103509902954, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Andre', [-3.5195975303649902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robbie Williams', [-3.5195975303649902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Jones', [-3.8945975303649902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Michael', [-2.2070975303649902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('George Michael', [-2.2070975303649902, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michael Jackson', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Andy Gibb'}

Key: 151886936779815498359933381621193934532
Value: {'question': 'Who had a 70s No 1 hit with The Night Chicago Died?', 'responses': [('The Young', [-0.4505718946456909, -3.67225980758667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roxette', [-2.1159772872924805, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roxette', [-2.1159772872924805, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Pussy', [-0.4505718946456909, -3.95350980758667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicago', [-3.5691022872924805, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Orchestra Man', [-3.3503522872924805, -2.228456974029541], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Four', [-0.4505718946456909, -4.23475980758667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Shadows', [-0.4505718946456909, -2.96913480758667], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Roxette', [-2.1159772872924805, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Se', [-3.7878522872924805, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Young', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Paper Lace'}

Key: 83330953693616641408572934751514264270
Value: {'question': "What was Bob Hoskins' profession when he worked in the circus?", 'responses': [('Tightrope', [-3.112945079803467, -0.35665443539619446], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Knife throw', [-3.987945079803467, -0.4978691339492798], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horsebreaker', [-4.362945079803467, -4.3151445388793945], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Horse trainer', [-4.362945079803467, -0.6901446580886841], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('clown', [-2.862945079803467, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clown', [-0.737945020198822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clown', [-0.737945020198822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clown', [-0.737945020198822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clown', [-0.737945020198822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Clown', [-0.737945020198822, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Tightrope', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2275294114572126, 'reference': 'Fire-eater'}

Key: 198271966375293162861266744288612996121
Value: {'question': 'Which state was Peggy Lee born in?', 'responses': [('Virginia', [-4.351221084594727, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.3512213230133057, -0.5359290838241577], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-2.3512213230133057, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-3.2262213230133057, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-2.3512213230133057, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('South Dakota', [-3.6012213230133057, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-1.7262213230133057, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Minnesota', [-1.7262213230133057, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New York', [-2.3512213230133057, -0.5359290838241577], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ohio', [-3.2262213230133057, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Virginia', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.7480673485460896, 'reference': 'North Dakota'}

Key: 10957344310002426858067734376658983474
Value: {'question': 'Who was the last man to win Wimbledon and the French open singles in the same year?', 'responses': [('Novak Djokovic', [-3.771637439727783, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rod Laver', [-2.146637439727783, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pete Sampras', [-2.771637439727783, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rod Laver', [-2.146637439727783, 0.0, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Björn Borg', [-3.521637439727783, 0.0, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bjorn Borg', [-0.771637499332428, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pete Sampras', [-2.771637439727783, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bjorn Borg', [-0.771637499332428, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Novak Djokovic', [-3.771637439727783, 0.0, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andre Agassi', [-3.646637439727783, 0.0, -0.05488219112157822], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Novak Djokovic', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5571130980576455, 'reference': 'Bjorn Borg'}

Key: 227267753193239038858779307971675028342
Value: {'question': 'Who directed the movie The Blues Brothers?', 'responses': [('John Landis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Landis', [0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Landis', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'John Landis'}

Key: 6428670790609827943755268478474834508
Value: {'question': 'In which country did the first Mickey Mouse comic appear?', 'responses': [('Switzerland', [-3.9883153438568115, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The USA', [-3.6133153438568115, -0.8952239155769348], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-1.7383153438568115, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('UK', [-3.8633153438568115, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Canada', [-3.7383153438568115, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Spain', [-3.1133153438568115, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('France', [-1.7383153438568115, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Italy', [-2.7383153438568115, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ireland', [-3.8633153438568115, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('USA', [-1.7383153438568115, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Switzerland', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Italy'}

Key: 44349373518703127046717757288685484009
Value: {'question': 'What was the name of the island off Iceland which appeared in 1963 as a result of an underwater volcano?', 'responses': [('Surtsey', [-0.43845537304878235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Island', [-3.93845534324646, -2.3373193740844727, -1.161309003829956], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surtsey', [-0.43845537304878235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Heimaey', [-2.00095534324646, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surtsey', [-0.43845537304878235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surtsey', [-0.43845537304878235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Grœn', [-4.282205581665039, -4.574574947357178, -0.1834728866815567], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surtsey', [-0.43845537304878235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surtsey', [-0.43845537304878235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Surtsey', [-0.43845537304878235, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Surtsey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Surtsey'}

Key: 282327355977515101137548137496409601892
Value: {'question': 'Which band has featured Gregg Rolie, David Brown and Autlan de Bavarro?', 'responses': [('Santana', [-0.6623854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Journey', [-0.7248854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Santana', [-0.6623854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Santana', [-0.6623854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Journey', [-0.7248854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Journey', [-0.7248854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Santana', [-0.6623854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Santana', [-0.6623854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Santana', [-0.6623854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Santana', [-0.6623854041099548, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Santana', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Santana'}

Key: 186051485402733843985002405404115720713
Value: {'question': "Which US soap actress's real name is Patsy Mclenny?", 'responses': [('Susan Lucci', [-0.15758003294467926, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Lucci', [-0.15758003294467926, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Victoria Rowell', [-3.3450801372528076, -0.778545618057251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Lucci', [-0.15758003294467926, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Deidre', [-4.4700798988342285, -0.11282224208116531, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Lucci', [-0.15758003294467926, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Lucci', [-0.15758003294467926, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Victoria Principal', [-3.3450801372528076, -0.809795618057251, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Lucci', [-0.15758003294467926, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Susan Lucci', [-0.15758003294467926, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Susan Lucci', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Morgan Fairchild'}

Key: 304988485982258477793344331521292882547
Value: {'question': 'In which state is the Creighton University?', 'responses': [('Nebraska', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nebraska', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nebraska', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nebraska', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nebraska', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nebraska', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nebraska', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nebraska', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nebraska', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nebraska', [0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Nebraska', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': -0.0, 'reference': 'Nebraska'}

Key: 230456419367550201943755539953367248875
Value: {'question': "In England, who was Princess Diana referring to when she said her marriage was ' a bit crowded?'", 'responses': [('Charles,', [-1.3569514751434326, -1.7004002332687378], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Charles', [-0.7319514751434326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles', [-1.3569514751434326, -0.8254002332687378], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andrew Parker', [-4.356951713562012, -0.3836163878440857], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Charles', [-0.7319514751434326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles', [-1.3569514751434326, -0.8254002332687378], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Charles', [-0.7319514751434326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Camilla Parker', [-2.1069514751434326, -0.11282224208116531], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Prince Charles', [-0.7319514751434326, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Charles', [-1.3569514751434326, -0.8254002332687378], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Charles,', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.639031859650177, 'reference': 'Camilla Parker Bowles'}

Key: 157235410033900389020007942846092853991
Value: {'question': "What is Brad Pitt's real first name?", 'responses': [('William', [0.0, -0.1352994590997696], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [0.0, -0.1352994590997696], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [0.0, -0.1352994590997696], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [0.0, -0.1352994590997696], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Bradley', [0.0, -2.7602994441986084], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [0.0, -0.1352994590997696], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [0.0, -0.1352994590997696], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [0.0, -0.1352994590997696], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [0.0, -0.1352994590997696], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William', [0.0, -0.1352994590997696], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'William', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'William'}

Key: 309961636013258014255949321551447903261
Value: {'question': "Which label was responsible for John Lennon's final album made in his lifetime?", 'responses': [('Apple', [-0.024726316332817078, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apple', [-0.024726316332817078, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apple Records', [-0.024726316332817078, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apple Records', [-0.024726316332817078, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apple', [-0.024726316332817078, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apple Records', [-0.024726316332817078, -1.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apple', [-0.024726316332817078, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apple', [-0.024726316332817078, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apple', [-0.024726316332817078, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Apple', [-0.024726316332817078, -0.3132617473602295], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Apple', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'Geffen'}

Key: 263806864828504506233210154933547725485
Value: {'question': "What was Elton John's first album to enter the US charts at No 1?", 'responses': [('Empty Sky', [-3.115915298461914, -0.0777130275964737, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tumbleweed Connection', [-0.7409152388572693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-1.365915298461914, 0.0, -0.06851919740438461], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elton John', [-1.365915298461914, 0.0, -0.06851919740438461], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tumbleweed Connection', [-0.7409152388572693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tumbleweed Connection', [-0.7409152388572693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Captain Fantastic And', [-3.115915298461914, -0.18495334684848785, -1.206009864807129], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Honky Chateau', [-3.865915298461914, 0.0, -0.2523590922355652], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tumbleweed Connection', [-0.7409152388572693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tumbleweed Connection', [-0.7409152388572693, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Empty Sky', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.3592367006650063, 'reference': 'Captain Fantastic And The Brown Dirt Cowboy'}

Key: 105910983535360493194459950100989565802
Value: {'question': 'In which state was Quincy Jones born?', 'responses': [('New Jersey', [-4.469076156616211, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-0.5940762162208557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-0.5940762162208557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Nebraska', [-4.344076156616211, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-0.5940762162208557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Colorado', [-4.281576156616211, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-0.5940762162208557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-0.5940762162208557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-0.5940762162208557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Illinois', [-0.5940762162208557, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'New Jersey', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.9404479886553263, 'reference': 'Illinois'}

Key: 316395541208723622690875121710806549450
Value: {'question': 'Which country does the airline Norontair come form?', 'responses': [('Norway', [-1.090674638748169, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-4.59067440032959, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Turkey', [-4.96567440032959, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Poland', [-3.965674638748169, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hungary', [-5.09067440032959, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Norway', [-1.090674638748169, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Switzerland', [-4.59067440032959, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Faro', [-3.340674638748169, -2.5464229583740234], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('New Zealand', [-3.715674638748169, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Germany', [-4.59067440032959, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Norway', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Canada'}

Key: 134469453818261135512786073406363584177
Value: {'question': 'Which incident escalated US involvement in Vietnam?', 'responses': [('Gulf of Tonkin', [-1.823861002922058, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('the Gulf of Ton', [-2.6988608837127686, -0.7065978646278381, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gulf of Tonkin', [-1.823861002922058, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Gulf of Ton', [-0.3238609731197357, -0.5303474068641663, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gulf of Tonkin', [-1.823861002922058, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Gulf of Ton', [-0.3238609731197357, -0.5303474068641663, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gulf of Tonkin', [-1.823861002922058, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Gulf of Tonkin', [-1.823861002922058, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Gulf of Ton', [-0.3238609731197357, -0.5303474068641663, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Tet Offensive', [-0.3238609731197357, -2.0303473472595215, -0.12692804634571075, -0.1352994590997696], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Gulf of Tonkin', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Tonkin Gulf incident'}

Key: 244508560399973847885237130539639556570
Value: {'question': "What was Michael Jackson's last UK No 1 of the 80s?", 'responses': [('Thriller', [-2.2292017936706543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-2.2292017936706543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Man In', [-1.7292017936706543, -0.8981232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Man in', [-1.7292017936706543, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Man in', [-1.7292017936706543, -0.5231232643127441], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-2.2292017936706543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Billie Jean', [-2.4792017936706543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Smooth Criminal', [-2.3542017936706543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Thriller', [-2.2292017936706543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Smooth Criminal', [-2.3542017936706543, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Thriller', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.2798542258336674, 'reference': "I Just Can't Stop Loving You"}

Key: 91890469489576364949001443651356772006
Value: {'question': 'What are the international registration letters of a vehicle from Tanzania?', 'responses': [('TZA', [-0.6398041248321533, -1.281214714050293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TZA', [-0.6398041248321533, -1.281214714050293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TAZ', [-0.6398041248321533, -1.406214714050293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TA', [-3.3898041248321533, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('T', [-0.6398041248321533, -2.031214714050293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TZA', [-0.6398041248321533, -1.281214714050293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TZN', [-0.6398041248321533, -2.031214714050293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('U', [-3.3898041248321533, -2.114865303039551], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ZNZ', [-3.2648041248321533, -2.783170223236084], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('TAZ', [-0.6398041248321533, -1.406214714050293], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'TZA', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.1682824501765625, 'reference': 'EAT'}

Key: 280610426993973249908097775284504930937
Value: {'question': "The world's biggest what was made in Seymour, Wisconsin in August 1989?", 'responses': [('T-', [-4.391559600830078, -0.127467080950737], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('inflatable sofa', [-4.516559600830078, -4.461766242980957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Watermelon', [-2.2665598392486572, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Egg', [-4.141559600830078, -0.02630021423101425], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Watermelon', [-2.2665598392486572, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Giant strawberry', [-3.7665598392486572, -4.813802242279053], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Inflatable', [-3.3915598392486572, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Chicken', [-4.391559600830078, -0.2994197607040405], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Pumpkin', [-3.7665598392486572, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("World'", [-3.3915598392486572, -0.06196761503815651], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'T-', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Hamburger'}

Key: 63567587927252453906942712649894490179
Value: {'question': 'Who designed the New York pink skyscraper with the Chippendale-style cabinet top?', 'responses': [('John Jacob Astor', [-2.546600341796875, -2.1610331535339355, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daniel Burnham', [-3.859100341796875, -0.5502076745033264, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry Bacon', [-3.734100341796875, -2.6397693157196045, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert A.', [-2.796600341796875, -0.8903526067733765, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Lloyd Wright', [-1.4841002225875854, -0.23739826679229736, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Lloyd Wright', [-1.4841002225875854, -0.23739826679229736, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Lloyd Wright', [-1.4841002225875854, -0.23739826679229736, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Edward Durrell', [-4.046600341796875, -1.102811574935913, -0.11583097279071808], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry J.', [-3.734100341796875, -1.6866443157196045, -0.04044583439826965], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Frank Loyd', [-1.4841002225875854, -2.799898147583008, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'John Jacob Astor', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Philip Johnson'}

Key: 149794788433938685377565138036509401304
Value: {'question': 'Who was the original host of The Price Is Right?', 'responses': [('Jim Nabors', [-3.848712921142578, -2.485842704772949, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Cullen', [-1.0049628019332886, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Barker', [-0.7237128019332886, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Cullen', [-1.0049628019332886, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Cullen', [-1.0049628019332886, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Barker', [-0.7237128019332886, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Barker', [-0.7237128019332886, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Barker', [-0.7237128019332886, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Barker', [-0.7237128019332886, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Barker', [-0.7237128019332886, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Jim Nabors', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.8979457248567797, 'reference': 'Bill Cullen'}

Key: 285011348988318057457911232683490938913
Value: {'question': 'Which member of the Maverick clan was played by a future 007?', 'responses': [('Ethan', [-4.147039890289307, -0.21097415685653687], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rooster', [-2.1470398902893066, -0.188959538936615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Maverick', [-3.0220398902893066, -0.2984142005443573], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Doc Holliday', [-4.147039890289307, -1.2857356071472168], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Red', [-3.1470398902893066, -0.11745629459619522], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James', [-3.1470398902893066, -2.1074068546295166], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rooster Cog', [-2.1470398902893066, -1.9389595985412598], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rooster Cog', [-2.1470398902893066, -1.9389595985412598], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hot Rod', [-4.772039890289307, -0.193722203373909], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Uncle Billy', [-4.147039890289307, -0.6233729124069214], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Ethan', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Beau (Roger Moore)'}

Key: 137157863899483437372586810643332655
Value: {'question': 'What did the Inspector have on his car sticker in Sledge Hammer?', 'responses': [('a shark', [-4.524229526519775, -4.885954856872559, -0.18709009885787964], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Do not speed', [-4.899229526519775, -0.71855628490448, -4.647125720977783], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Police', [-2.3992295265197754, -3.520401954650879, -0.3602830171585083], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('A picture of', [-2.1492295265197754, -1.2909225225448608, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"Get the', [-1.6492295265197754, -4.3643798828125, -3.126577377319336], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('F-U', [-5.024229526519775, -2.2712862491607666, -1.5906026363372803], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Lone Ranger', [-2.3992295265197754, -2.645401954650879, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('"The force', [-1.6492295265197754, -2.6143798828125, -3.527418613433838], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("'I love", [-1.5242295265197754, -1.3826448917388916, -2.0153374671936035], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He had a', [-4.274229526519775, -1.6937811374664307, -0.40186023712158203], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'a shark', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'I Love Violence'}

Key: 157176637277642199825776180330005178417
Value: {'question': 'Who hosted the early series of The Pink Panther cartoons?', 'responses': [('Peter Sellers', [-1.0892279148101807, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jacques Sernas', [-4.089227676391602, -3.6800365447998047, -0.2117711305618286], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Hugh O'", [-3.9642279148101807, -3.5522735118865967, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Sellers', [-1.0892279148101807, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hope', [-3.2454779148101807, -0.4790973961353302, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Sellers', [-1.0892279148101807, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Clampett', [-3.2454779148101807, -3.322847366333008, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bob Hope', [-3.2454779148101807, -0.4790973961353302, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Art Carney', [-4.651727676391602, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Peter Sellers', [-1.0892279148101807, -0.0944129079580307, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Peter Sellers', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.6094379124341003, 'reference': 'Lenny Schulz'}

Key: 109098803912868725175936433570131906032
Value: {'question': 'Pee Wee Herman made his TV debut on which show?', 'responses': [('Sesame Street', [-2.3344554901123047, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("Pee Wee'", [-2.2719554901123047, -0.12692804634571075, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Red Skelton', [-0.9594553709030151, -4.679882049560547, -0.06011725217103958], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Johnny Carson', [-0.9594553709030151, -3.304882287979126, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saturday Night Live', [-1.5844553709030151, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sesame Street', [-2.3344554901123047, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Carol Burnett', [-0.9594553709030151, -2.679882287979126, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dating Game', [-0.9594553709030151, -3.929882287979126, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Happy Days', [-3.8344554901123047, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Garry Moore', [-0.9594553709030151, -4.711132049560547, -0.5716362595558167], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sesame Street', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'The Gong Show'}

Key: 239844042240372548432173912437912901178
Value: {'question': "In Makin' It, who was the John Travolta-type character?", 'responses': [('Sylvester Stallone', [-4.451976299285889, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Cruise', [-2.9519762992858887, -0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jamie Lee Curtis', [-4.451976299285889, -0.632909893989563, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tony Lo Bianco', [-3.8269762992858887, -2.9278950691223145, -0.23481933772563934], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Cruise', [-2.9519762992858887, -0.03804141283035278, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bruce Dern', [-3.2019762992858887, -1.101520299911499, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Bill Murray', [-4.201976299285889, -0.46457213163375854, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Danny Aiello', [-3.2019762992858887, -1.2462137937545776, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert De Niro', [-2.4519762992858887, -0.2915520966053009, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dennis Quaid', [-3.4519762992858887, -0.925094723701477, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Sylvester Stallone', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Billy Manucci'}

Key: 10948018251610463235818722790905848958
Value: {'question': 'Which Hollywood star starred in the 50s show My Three Sons?', 'responses': [('Fred MacMurray', [-0.7088942527770996, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fred MacMurray', [-0.7088942527770996, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Shatner', [-0.6776442527770996, -0.20892725884914398, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fred MacMurray', [-0.7088942527770996, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fred MacMurray', [-0.7088942527770996, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fred MacMurray', [-0.7088942527770996, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fred MacMurray', [-0.7088942527770996, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('William Shatner', [-0.6776442527770996, -0.20892725884914398, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fred MacMurray', [-0.7088942527770996, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Fred MacMurray', [-0.7088942527770996, 0.0, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Fred MacMurray', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.5004024235381879, 'reference': 'Fred MacMurray'}

Key: 42287356845762814992426857047265935850
Value: {'question': 'The actor who played Jack Geller in Friends was married once to which superstar?', 'responses': [('Britney Spears', [-4.984321117401123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Julia Roberts', [-2.859321117401123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robin Williams', [-4.796821117401123, -0.49923744797706604], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ali Mac', [-4.796821117401123, -0.6623854041099548], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Reese Witherspoon', [-4.171821117401123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cindy Crawford', [-2.484321117401123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Portman', [-2.234321117401123, -0.5622249245643616], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Madonna', [-2.046821117401123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Cindy Crawford', [-2.484321117401123, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Natalie Portman', [-2.234321117401123, -0.5622249245643616], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Britney Spears', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Elliott Gould married Barbra Streisand'}

Key: 252051514540535410722009284447816917504
Value: {'question': 'Who guested in Happy Days where his daughter was playing Jenny Piccalo?', 'responses': [('Susan Olsen (', [-4.464964389801025, -3.1183502674102783, -3.0485873222351074], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Travolta', [-2.7149643898010254, -0.8158026337623596, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ron Howard', [-2.3399643898010254, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Travolta', [-2.7149643898010254, -0.8158026337623596, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Henry Winkler', [-1.9649642705917358, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Betty Buckley', [-4.714964389801025, -1.8811736106872559, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Sally Field', [-4.089964389801025, -0.6335039138793945, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tony Danza', [-3.4649643898010254, -1.455597996711731, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andy Griffith', [-4.089964389801025, -0.24217993021011353, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Rickles', [-3.7149643898010254, -0.7189344763755798, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Susan Olsen (', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.163955656882057, 'reference': 'Phil Silvers'}

Key: 186119782738173792213566128390837910390
Value: {'question': 'The Flying Nun was based on which book?', 'responses': [('The Story of Saint', [-0.3109983503818512, -2.884530544281006, -0.0944129079580307, -3.2920029163360596], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Little Princess', [-0.3109983503818512, -2.009530544281006, -2.9513840675354004, -0.1797446459531784], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The story of a', [-0.3109983503818512, -3.259530544281006, 0.0, -2.05867338180542], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Virgin in the', [-0.3109983503818512, -3.509530544281006, -3.128624439239502, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mother of Jesus', [-4.810998439788818, -2.5884506702423096, -3.124037504196167, -0.1303042620420456], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Little Monk', [-0.3109983503818512, -2.009530544281006, -4.1232590675354, -0.3873807191848755], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("The Nun's", [-0.3109983503818512, -2.634530544281006, -0.13977280259132385, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ("The Nun's", [-0.3109983503818512, -2.634530544281006, -0.13977280259132385, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Secret Life of', [-0.3109983503818512, -3.259530544281006, -1.3952511548995972, -0.17467015981674194], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('My Sister Eileen', [-4.560998439788818, -0.5908694267272949, -0.18642935156822205, -0.2014133334159851], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The Story of Saint', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'The Fifteenth Pelican'}

Key: 103123884345512594221817095665582608231
Value: {'question': 'The older Smothers Brother played what musical instrument?', 'responses': [('The accordion', [-3.869290828704834, -2.96273136138916], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Piano', [-1.869290828704834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-1.119290828704834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harmonica', [-2.994290828704834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Piano', [-1.869290828704834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-1.119290828704834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Guitar', [-1.119290828704834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saxophone', [-2.369290828704834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Banjo', [-2.119290828704834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Flute', [-4.369290828704834, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'The accordion', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.8343719702816235, 'reference': 'Guitar'}

Key: 204333084446997503474946007455115643692
Value: {'question': "In the TV sitcom Adam's Rib, who played the Spencer Tracy Film role?", 'responses': [('Eva Marie Saint', [-2.537461280822754, -0.29683318734169006, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucille Ball', [-1.162461280822754, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucille Ball', [-1.162461280822754, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elizabeth Montgomery', [-2.787461280822754, -0.7575989961624146, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Forster', [-3.849961280822754, -2.9500789642333984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('James Garner', [-4.162461280822754, -0.22534868121147156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Lucille Ball', [-1.162461280822754, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('June Allyson', [-4.443711280822754, -0.2492401897907257, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Robert Mitchum', [-3.849961280822754, -3.2000789642333984, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rita Rudner', [-4.506211280822754, -4.110386848449707, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Eva Marie Saint', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Ken Howard'}

Key: 198735268662816051071828316595443251001
Value: {'question': 'What was the first sitcom where Mickey Rooney was not called Mickey?', 'responses': [('Father Knows Best', [-0.9735837578773499, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Father Knows Best', [-0.9735837578773499, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('I love Lucy', [-4.348583698272705, -1.9637140035629272, -0.08377019315958023], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Life and', [-1.161083698272705, -4.806290149688721, -1.2460734844207764], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mickey McGuire', [-2.036083698272705, -2.1863503456115723, -0.09498416632413864], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Father Knows Best', [-0.9735837578773499, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Hardy Boys', [-1.161083698272705, -3.5562901496887207, -0.20718736946582794], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Father Knows Best', [-0.9735837578773499, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Father Knows Best', [-0.9735837578773499, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Andy Hardy Movies', [-3.348583698272705, -0.027972843497991562, -4.089341640472412], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Father Knows Best', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'One of The Boys'}

Key: 211670600925645925457484789410106940416
Value: {'question': 'Which character did Tom Hanks play in early episodes of Family Ties?', 'responses': [('Michael D', [-1.4717562198638916, -4.2284626960754395], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alex P', [-1.0967562198638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jeff', [-3.5967562198638916, -4.009215831756592], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Elliot', [-3.1592562198638916, -0.7104020118713379], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alex P', [-1.0967562198638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rusty Long', [-4.0030059814453125, -4.606832027435303], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alex P', [-1.0967562198638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alex P', [-1.0967562198638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alex P', [-1.0967562198638916, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael S', [-1.4717562198638916, -1.44721257686615], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Michael D', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.4978661367769952, 'reference': 'Ned Keaton'}

Key: 326919764435529266644193034342173957107
Value: {'question': '"Before it was made famous by Pigmeat of Rowan and Martin\'s Laugh In fame, who first said, ""Here comes the judge""?"', 'responses': [('Groucho Marx', [-2.4351751804351807, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Wayne', [-3.4351751804351807, -0.570702314376831, -0.03804141283035278], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jackie Gleason', [-4.560174942016602, -0.07428312301635742, -0.03597624972462654], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judge Smails', [-1.8101751804351807, -1.2936724424362183, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judge Smails', [-1.8101751804351807, -1.2936724424362183, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judge Joe Brown', [-1.8101751804351807, -2.949922561645508, -0.20466232299804688], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Abbott and Costello', [-4.185174942016602, -0.1602240949869156, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Tom Keene', [-3.6851751804351807, -4.516922950744629, -0.11641007661819458], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judge Smails', [-1.8101751804351807, -1.2936724424362183, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Judge Ben Jones', [-1.8101751804351807, -4.356172561645508, -2.692142963409424], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Groucho Marx', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.9730014063936128, 'reference': 'Sammy Davis Jr'}

Key: 193977056324796808800805115982966544177
Value: {'question': 'Which member of The A Team played Clubber Lang in Rocky III?', 'responses': [('Mr T', [-0.08893945813179016, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr T', [-0.08893945813179016, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr T', [-0.08893945813179016, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr T', [-0.08893945813179016, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr T', [-0.08893945813179016, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr T', [-0.08893945813179016, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr T', [-0.08893945813179016, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr T', [-0.08893945813179016, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Carl Weathers', [-2.4639394283294678, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mr T', [-0.08893945813179016, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mr T', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.3250829733914482, 'reference': 'Mr. T'}

Key: 202186192647663281292502469016584723438
Value: {'question': 'Peter Faulk received his first Emmy for a performance on which show?', 'responses': [('Saturday Night', [-3.715116024017334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('All in', [-3.090116024017334, -0.10633727163076401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('All in', [-3.090116024017334, -0.10633727163076401], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas', [-3.090116024017334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Cosby', [-1.090116024017334, -1.4068089723587036], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Seinfeld', [-3.090116024017334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Taxi', [-3.590116024017334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Hill Street', [-3.590116024017334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('ER', [-3.840116024017334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dallas', [-3.090116024017334, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Saturday Night', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'The Dick Powell Show'}

Key: 310241120197325607838731367742391394625
Value: {'question': 'In Top Cat, who was the voice of Choo Choo?', 'responses': [('Don Messick', [-2.1984519958496094, -0.05009171739220619, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daws Butler', [-1.260952115058899, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daws Butler', [-1.260952115058899, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Messick', [-2.1984519958496094, -0.05009171739220619, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Allen Swift', [-2.6203269958496094, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Daws Butler', [-1.260952115058899, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Don Messick', [-2.1984519958496094, -0.05009171739220619, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Rob Paulsen', [-4.269741058349609, -1.829281210899353, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel Blanc', [-1.635952115058899, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Mel Blanc', [-1.635952115058899, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Don Messick', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 1.5047882836811908, 'reference': 'Marvin Kaplan'}

Key: 272255033175438087895076703338209628494
Value: {'question': 'Who played Leroy Johnson in the movie Fame and on TV?', 'responses': [('Paul J.', [-3.851076126098633, -4.375100612640381, -0.8207410573959351], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Alfonso Ribeiro', [-4.257326126098633, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Michael X.', [-3.640138626098633, -4.831078052520752, -0.43354660272598267], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Richard Cren', [-4.132326126098633, -2.611335039138794, -0.3970034718513489], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Paul Satter', [-3.851076126098633, -4.070413112640381, -2.3820362091064453], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jaleel', [-4.304201126098633, -0.40326812863349915, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Joe Grif', [-4.030763626098633, -2.545633316040039, -0.5887018442153931], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Harry Anderson', [-4.116701126098633, -2.898195743560791, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Raul Julia', [-3.866701126098633, -0.29683318734169006, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Jason Gedrick', [-4.647951126098633, -1.4631644487380981, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Paul J.', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.3025850929940455, 'reference': 'Gene Anthony Ray'}

Key: 2342725967226852326141306355715904079
Value: {'question': '"Who did Mrs. Thatcher describe as ""a man we can do business with?"""', 'responses': [('Mikhail Gorbachev', [-1.9683871269226074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('John Major', [-3.5933871269226074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Queen', [-3.4683871269226074, -2.140369415283203, -0.14267508685588837], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saddam Hussein', [-1.7183871269226074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Saddam Hussein', [-1.7183871269226074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Ronald Reagan', [-1.7183871269226074, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Yasser A', [-4.093387126922607, -0.11967968195676804, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Boris Yeltsin', [-4.343387126922607, -0.08893945813179016, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Margaret Thatcher', [-2.4683871269226074, 0.0, -0.12434277683496475], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('President Reagan', [-2.9683871269226074, -0.6939684152603149, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Mikhail Gorbachev', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Gorbachev'}

Key: 114357790474231783169522431537596840120
Value: {'question': 'How is Tenzin Gyatso better known?', 'responses': [('Dalai Lama', [-1.6766570806503296, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dalai Lama', [-1.6766570806503296, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dalai Lama', [-1.0516570806503296, -0.28115010261535645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dalai Lama', [-1.0516570806503296, -0.28115010261535645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('The Dalai Lama', [-1.0516570806503296, -0.28115010261535645, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dalai Lama', [-1.6766570806503296, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As the', [-1.0516570806503296, -0.10020658373832703, -0.9740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Dalai Lama', [-1.6766570806503296, 0.0, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As the Dalai', [-1.0516570806503296, -0.10020658373832703, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As the Dalai', [-1.0516570806503296, -0.10020658373832703, -0.4740769863128662], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'Dalai Lama', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 0.6108643020548934, 'reference': 'The Dali Lama'}

Key: 279389484012146502914728007071854239925
Value: {'question': 'How was Nguyen that Tan better known?', 'responses': [('She was known', [-3.411562204360962, -0.2076568454504013, -1.6771224737167358], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Her alias ‘', [-4.286561965942383, -4.362006664276123, -4.643162727355957], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('He wrote the', [-2.411562204360962, -4.2125630378723145, -0.5947423577308655], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Agent Orange', [-5.036561965942383, -0.12247510999441147, 0.0], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('She was the', [-3.411562204360962, -0.2076568454504013, -1.6771224737167358], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as a singer', [-1.661562204360962, -1.5274323225021362, -2.7072975635528564], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('by his alias', [-3.536562204360962, -0.811448872089386, -3.260361909866333], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('Her daughter is', [-4.286561965942383, -4.237006664276123, -1.6278324127197266], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('as Agent Orange', [-1.661562204360962, -4.902432441711426, -0.04858732968568802], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)), ('As the first', [-1.161562204360962, -1.2762377262115479, -2.876526117324829], tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16))], 'most_likely_answer': {'response': 'She was known', 'embedding': tensor([ 0.2676, -0.1201,  0.7500,  ..., -2.7812,  0.2119, -0.7656],
       dtype=torch.bfloat16)}, 'entropy': 2.0253262207700677, 'reference': 'Ho Chi Minh'}
>>>>>>> 811d839 (new run)

